{
  "version": 3,
  "sources": ["../../../../data/mods/glacemons/moves.ts"],
  "sourcesContent": ["export const Moves: { [moveid: string]: ModdedMoveData; } = {\r\n\tworryseed: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tpp: 15,\r\n\t\tflags: { protect: 1, mirror: 1, allyanim: 1, metronome: 1 },\r\n\t\tonTryImmunity(target) {\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tonTryHit(target) {\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst oldAbility = pokemon.setAbility('insomnia');\r\n\t\t\tif (oldAbility && !pokemon.getAbility().flags['cantsuppress'] && pokemon.ability !== 'truant') {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Insomnia', '[from] move: Worry Seed');\r\n\t\t\t\tif (pokemon.status === 'slp') {\r\n\t\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\treturn oldAbility as false | null;\r\n\t\t},\r\n\t},\r\n\tmilkdrink: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\trecover: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\troost: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tshoreup: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tslackoff: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tsoftboiled: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tlunarblessing: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tpebblestorm: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Pebble Storm\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Power Gem\", target);\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t},\r\n\t\tonModifyPriority(priority, source, target, move) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"If the current weather is Sandstorm, this move has its priority increased by 1.\",\r\n\t\tshortDesc: \"User on Sandstorm: +1 priority.\",\r\n\t},\r\n\tsalvestrike: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Salve Strike\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Aromatherapy\", source);\r\n\t\t\tthis.add('-anim', source, \"Double-Edge\", target);\r\n\t\t},\r\n      basePowerCallback(pokemon, target, move) {\r\n      \tif (pokemon.status && pokemon.status !== 'slp', 'frz') {\r\n         \tthis.debug('BP boosted from status condition');\r\n            return move.basePower * 1.5;\r\n         }\r\n         return move.basePower;\r\n      },\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (['', 'slp', 'frz'].includes(pokemon.status)) return false;\r\n\t\t\tpokemon.cureStatus();\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cute\",\r\n\t\tdesc: \"1.5x power if user is statused; heals status.\",\r\n\t\tshortDesc: \"1.5x power if user is statused; heals status.\",\r\n\t},\r\n\ttwister: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 60,\r\n\t\tviable: true,\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tsecondary: null,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t},\r\n\tflameburst: {\r\n\t\tinherit: true,\r\n\t\tviable: true,\r\n\t\tbasePower: 40,\r\n\t\tisNonstandard: null,\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t},\r\n\tovervoltrail: {\r\n\t\tnum: -3,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Overvolt Rail\",\r\n\t\tpp: 10,\r\n\t\tpriority: 1,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\trecoil: [33, 100],\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Zap Cannon\", source);\r\n\t\t\tthis.add('-anim', source, \"Zap Cannon\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.\",\r\n\t\tshortDesc: \"Has 33% recoil. Usually goes first.\",\r\n\t},\r\n\tmentalgymnastics: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Mental Gymnastics\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Revelation Dance\", source);\r\n\t\t\tthis.add('-anim', source, \"Psychic Noise\", target);\r\n\t\t},\r\n\t\toverrideOffensiveStat: 'spd',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tdesc: \"Damage is calculated using the user's Sp. Defense stat as its Sp. Attack, including stat stage changes. Other effects that modify the Sp. Attack stat are used as normal.\",\r\n\t\tshortDesc: \"Uses user's SpD stat as SpA in damage calculation.\",\r\n\t},\r\n\trailgun: {\r\n\t\tnum: -5,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Railgun\",\r\n\t\tpp: 15,\r\n\t\tpriority: -3,\r\n\t\tflags: { protect: 1, failmefirst: 1, nosleeptalk: 1, noassist: 1, failcopycat: 1, failinstruct: 1, bullet: 1 },\r\n\t\tpriorityChargeCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('railgun');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singleturn', pokemon, 'move: Railgun');\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\t// FIXME: onMoveAborted(pokemon) {pokemon.removeVolatile('beakblast')},\r\n\t\tonAfterMove(pokemon) {\r\n\t\t\tpokemon.removeVolatile('railgun');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tdesc: \"If the user is hit by a contact move this turn before it can execute this move, the attacker is paralyzed.\",\r\n\t\tshortDesc: \"Paralyzes on contact with the user before it moves.\",\r\n\r\n\t\tstart: \"  [POKEMON] started charging up its railgun!\",\r\n\t},\r\n\r\n\t// Run It Back\r\n\tencore: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Run It Back\") {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 3;\r\n\t\t\t},\r\n\t\t\tnoCopy: true, // doesn't get copied by Z-Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tlet move: Move | ActiveMove | null = target.lastMove;\r\n\t\t\t\tif (!move || target.volatiles['dynamax']) return false;\r\n\r\n\t\t\t\tif (move.isMax && move.baseMove) move = this.dex.moves.get(move.baseMove);\r\n\t\t\t\tconst moveIndex = target.moves.indexOf(move.id);\r\n\t\t\t\tif (move.isZ || move.flags['failencore'] || !target.moveSlots[moveIndex] || target.moveSlots[moveIndex].pp <= 0) {\r\n\t\t\t\t\t// it failed\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.move = move.id;\r\n\t\t\t\tthis.add('-start', target, 'Encore');\r\n\t\t\t\tif (!this.queue.willMove(target)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonOverrideAction(pokemon, target, move) {\r\n\t\t\t\tif (move.id !== this.effectState.move) return this.effectState.move;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 16,\r\n\t\t\tonResidual(target) {\r\n\t\t\t\tif (!target.moves.includes(this.effectState.move) ||\r\n\t\t\t\t\ttarget.moveSlots[target.moves.indexOf(this.effectState.move)].pp <= 0) {\r\n\t\t\t\t\t// early termination if you run out of PP\r\n\t\t\t\t\ttarget.removeVolatile('encore');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Encore');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tif (!this.effectState.move || !pokemon.hasMove(this.effectState.move)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id !== this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t// Solar Power section\r\n\tmorningsun: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tif (pokemon.hasAbility('solarpower')) factor = 0.667;\r\n\t\t\telse {\r\n\t\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\t\tfactor = 0.667;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\tcase 'hail':\r\n\t\t\t\t\tcase 'snow':\r\n\t\t\t\t\t\tfactor = 0.25;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tmoonlight: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tif (pokemon.hasAbility('solarpower')) factor = 0.667;\r\n\t\t\telse {\r\n\t\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\t\tfactor = 0.667;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\tcase 'hail':\r\n\t\t\t\t\tcase 'snow':\r\n\t\t\t\t\t\tfactor = 0.25;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tsynthesis: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tif (pokemon.hasAbility('solarpower')) factor = 0.667;\r\n\t\t\telse {\r\n\t\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\t\tfactor = 0.667;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\tcase 'hail':\r\n\t\t\t\t\tcase 'snow':\r\n\t\t\t\t\t\tfactor = 0.25;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tgrowth: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather()) || pokemon.hasAbility('solarpower')) move.boosts = { atk: 2, spa: 2 };\r\n\t\t},\r\n\t},\r\n\tweatherball: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (pokemon.hasAbility('solarpower')) move.type = 'Fire';\r\n\t\t\telse {\r\n\t\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\t\tmove.type = 'Water';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'hail':\r\n\t\t\t\t\tcase 'snow':\r\n\t\t\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.hasAbility('solarpower')) move.basePower *= 2;\r\n\t\t\telse {\r\n\t\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'hail':\r\n\t\t\t\t\tcase 'snow':\r\n\t\t\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t},\r\n\t},\r\n\tsolarbeam: {\r\n\t\tinherit: true,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(attacker.effectiveWeather()) || attacker.hasAbility('solarpower')) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', attacker, move.name, defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow'];\r\n\t\t\tif (weakWeathers.includes(pokemon.effectiveWeather()) && !pokemon.hasAbility('solarpower')) {\r\n\t\t\t\tthis.debug('weakened by weather');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsolarblade: {\r\n\t\tinherit: true,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(attacker.effectiveWeather()) || attacker.hasAbility('solarpower')) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', attacker, move.name, defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow'];\r\n\t\t\tif (weakWeathers.includes(pokemon.effectiveWeather()) && !pokemon.hasAbility('solarpower')) {\r\n\t\t\t\tthis.debug('weakened by weather');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tnightslash: {\r\n\t\tinherit: true,\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (target !== source && move.category !== 'Status' && move.totalDamage) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 16, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"Deals an additional 1/16th of the opponents health on a successful hit. Has a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"1st hit: High critical hit ratio. 2nd hit: 1/16 max HP.\",\r\n\t},\r\n\tpsychocut: {\r\n\t\tinherit: true,\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (target !== source && move.category !== 'Status' && move.totalDamage) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 16, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"Deals an additional 1/16th of the opponents health on a successful hit. Has a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"1st hit: High critical hit ratio. 2nd hit: 1/16 max HP.\",\r\n\t},\r\n\tselfrepairing: {\r\n\t\tnum: -6,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Self-Repairing\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, heal: 1, bypasssub: 1 },\r\n\t\theal: [1, 3],\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'selfrepairing',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singlemove', pokemon, 'Self-Repairing');\r\n\t\t\t},\r\n\t\t\tonAfterMoveSecondarySelfPriority: -1,\r\n\t\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\t\tif (move.category === 'Status' && move.id !== 'selfrepairing') {\r\n\t\t\t\t\tthis.heal(pokemon.baseMaxhp / 4);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonBeforeMovePriority: 100,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tthis.debug('removing Self Repairing before attack');\r\n\t\t\tpokemon.removeVolatile('selfrepairing');\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Shift Gear\", source);\r\n\t\t\tthis.add('-anim', source, \"Recover\", source);\r\n\t\t},\r\n\t\trating: 3,\r\n\t\tdesc: \"Heals 33% of HP. When this Pokemon uses a status move, this Pokemon heals 25% of its max HP.\",\r\n\t\tshortDesc: \"Heals 1/3 max HP; 1/4 extra after status move.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allies\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tspectralthief: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 60,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tonHit(target) {\r\n\t\t\ttarget.clearBoosts();\r\n\t\t\tthis.add('-clearboost', target);\r\n\t\t},\r\n\t\tisViable: true,\r\n\t},\r\n\tgravelgrater: {\r\n\t\tnum: -7,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 30,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Hits twice. Lowers the target's Def after each hit.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Gravel Grater\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tmultihit: 2,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Ancient Power\", target);\r\n\t\t\tthis.add('-anim', source, \"Gear Grind\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tmaxMove: { basePower: 100 },\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tflexoff: {\r\n\t\tnum: -8,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Flex Off\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {cantusetwice: 1, snatch: 1, metronome: 1},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tconst targetAtk = target.storedStats.atk;\r\n\t\t\tconst sourceAtk = source.storedStats.atk;\r\n\t\t\tif (sourceAtk >= targetAtk) {\r\n\t\t\t\tthis.boost({ atk: 1, def: 2 }, source);\r\n\t\t\t}\r\n\t\t\telse if (sourceAtk < targetAtk) {\r\n\t\t\t\tthis.boost({ atk: 1, def: 2 }, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bulk Up\", source);\r\n\t\t\tthis.add('-anim', target, \"Bulk Up\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: { boost: { atk: 1 } },\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"The Pok\u00E9mon with the highest Attack stat on the field gets a +1 stat boost to their Attack and +2 stat boost to their Defense. Stat boosts, items and abilities are not taken into account, fails if move was previously used in the same turn.\",\r\n\t\tshortDesc: \"Pok\u00E9mon with highest Attack stat: +1 Atk & +2 Def.\",\r\n\t},\r\n\tionsaw: {\r\n\t\tnum: -9,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 30,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Hits three times. 10% to paralyze the target.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Ion Saw\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { slicing: 1, protect: 1, mirror: 1 },\r\n\t\tmultihit: 3,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Ion Deluge\", source);\r\n\t\t\tthis.add('-anim', source, \"Ion Deluge\", source);\r\n\t\t\tthis.add('-anim', source, \"Ion Deluge\", source);\r\n\t\t\tthis.add('-anim', source, \"Slash\", target);\r\n\t\t\tthis.add('-anim', source, \"Slash\", target);\r\n\t\t\tthis.add('-anim', source, \"Slash\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tmaxMove: { basePower: 100 },\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tlandswrath: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 70,\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t}\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'stealthrock', 'spikes', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'stealthrock', 'spikes', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Land\\'s Wrath', '[of] ' + pokemon);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (pokemon.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] move: Land\\'s Wrath', '[of] ' + pokemon);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t}\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'stealthrock', 'spikes', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'stealthrock', 'spikes', 'gmaxsteelsurge'\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Land\\'s Wrath', '[of] ' + pokemon);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (pokemon.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] move: Land\\'s Wrath', '[of] ' + pokemon);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tshortDesc: \"Free user from hazards/terrain/bind/Leech Seed.\",\r\n\t},\r\n\t// Slate 4\r\n\ttriattack: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 30,\r\n\t\tpp: 10,\r\n\t\tmultihit: 3,\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (move.hit > 3) return;\r\n\t\t\tvar hitEffectiveness;\r\n\t\t\tvar immunity = 0;\r\n\t\t\tswitch (move.hit) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\thitEffectiveness = this.dex.getEffectiveness('Ice', type);\r\n\t\t\t\t\tif (!this.dex.getImmunity('Ice', target)) immunity = -0.5;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\thitEffectiveness = this.dex.getEffectiveness('Fire', type);\r\n\t\t\t\t\tif (!this.dex.getImmunity('Fire', target)) immunity = -0.5;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\thitEffectiveness = this.dex.getEffectiveness('Electric', type);\r\n\t\t\t\t\tif (!this.dex.getImmunity('Electric', target)) immunity = -0.5;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn hitEffectiveness + immunity;\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tswitch (move.hit) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.add('-anim', target, \"Flamethrower\", target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.add('-anim', target, \"Electro Ball\", target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Tri Attack\", target);\r\n\t\t\tthis.add('-anim', target, \"Ice Beam\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tswitch (move.hit) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\ttarget.trySetStatus('frz', source);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\ttarget.trySetStatus('brn', source);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\ttarget.trySetStatus('par', source);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Hits as Ice, Electric, Fire. 10% for freeze/para/burn.\",\r\n\t},\r\n\tsquall: {\r\n\t\tnum: -11,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Squall\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, wind: 1 },\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst boostWeathers = ['sandstorm', 'hail', 'snow'];\r\n\t\t\tif (boostWeathers.includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('boostfrom weather');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"1.5x power if used under Snow or Sandstorm.\",\r\n\t},\r\n\tpetroleumblast: {\r\n\t\tnum: -12,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Petroleum Blast\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },\r\n\t\tvolatileStatus: 'tarshot',\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Tar Shot\", source);\r\n\t\t\tthis.add('-anim', source, \"Dragon Pulse\", target);\r\n\t\t\tthis.add('-anim', source, \"Tar Shot\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Applies Tar Shot to the target. Hits both foes.\",\r\n\t},\r\n\tfirefang: {\r\n\t\tinherit: true,\r\n\t\tpp: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Fire Fang damage boost');\r\n\t\t\t\treturn move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tthis.debug('Fire Fang NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 10,\r\n\t\t\t\tstatus: 'brn',\r\n\t\t\t},\r\n\t\t],\r\n\t\tdesc: \"Power is 1.5x if user moves before the target. Has a 10% chance to burn the target.\",\r\n\t\tshortDesc: \"1.5x power if user moves before target. 10% burn.\",\r\n\t},\r\n\tthunderfang: {\r\n\t\tinherit: true,\r\n\t\tpp: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Thunder Fang damage boost');\r\n\t\t\t\treturn move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tthis.debug('Thunder Fang NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 10,\r\n\t\t\t\tstatus: 'par',\r\n\t\t\t},\r\n\t\t],\r\n\t\tdesc: \"Power is 1.5x if user moves before the target. Has a 10% chance to paralyze the target.\",\r\n\t\tshortDesc: \"1.5x power if user moves before target. 10% para.\",\r\n\t},\r\n\ticefang: {\r\n\t\tinherit: true,\r\n\t\tpp: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Ice Fang damage boost');\r\n\t\t\t\treturn move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tthis.debug('Ice Fang NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 10,\r\n\t\t\t\tstatus: 'frz',\r\n\t\t\t},\r\n\t\t],\r\n\t\tdesc: \"Power is 1.5x if user moves before the target. Has a 10% chance to freeze the target.\",\r\n\t\tshortDesc: \"1.5x power if user moves before target. 10% freeze.\",\r\n\t},\r\n\tpoisonfang: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 65,\r\n\t\tpp: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Poison Fang damage boost');\r\n\t\t\t\treturn move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tthis.debug('Poison Fang NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 10,\r\n\t\t\t\tstatus: 'psn',\r\n\t\t\t},\r\n\t\t],\r\n\t\tdesc: \"Power is 1.5x if user moves before the target. Has a 10% chance to poison the target.\",\r\n\t\tshortDesc: \"1.5x power if user moves before target. 10% poison.\",\r\n\t},\r\n\tfishiousrend: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Fishious Rend damage boost');\r\n\t\t\t\treturn move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tthis.debug('Fishious Rend NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tpp: 20,\r\n\t\tdesc: \"Power is 1.5x if user moves before the target. Has a 30% chance to lower the target's Speed by 1 stage.\",\r\n\t\tshortDesc: \"1.5x power if user moves before target. 30% -1 Spe.\",\r\n\t},\r\n\thyperfang: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Fighting\",\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Hyper Fang damage boost');\r\n\t\t\t\treturn move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tthis.debug('Hyper Fang NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tpp: 20,\r\n\t\tdesc: \"Power is 1.5x if user moves before the target. Has a 30% chance to lower the target's Atk by 1 stage.\",\r\n\t\tshortDesc: \"1.5x power if user moves before target. 30% -1 Atk.\",\r\n\t},\r\n\t// Handling Cursed Branch\r\n\tfling: {\r\n\t\tnum: 374,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Fling\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, allyanim: 1, metronome: 1, noparentalbond: 1 },\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (source.ignoringItem()) return false;\r\n\t\t\tconst item = source.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, source.itemState, source, source, move, item)) return false;\r\n\t\t\tif (!item.fling) return false;\r\n\t\t\tmove.basePower = item.fling.basePower;\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t\tif (item.isBerry) {\r\n\t\t\t\tmove.onHit = function (foe) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, foe, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', foe, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') foe.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) foe.ateBerry = true;\r\n\t\t\t\t};\r\n\t\t\t} else if (item.fling.effect) {\r\n\t\t\t\tmove.onHit = item.fling.effect;\r\n\t\t\t} else {\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\tif (item.fling.status) {\r\n\t\t\t\t\tmove.secondaries.push({ status: item.fling.status });\r\n\t\t\t\t} else if (item.fling.volatileStatus) {\r\n\t\t\t\t\tmove.secondaries.push({ volatileStatus: item.fling.volatileStatus });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsource.addVolatile('fling');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tconst item = pokemon.getItem();\r\n\t\t\t\tpokemon.setItem('');\r\n\t\t\t\tpokemon.lastItem = item.id;\r\n\t\t\t\tpokemon.usedItemThisTurn = true;\r\n\t\t\t\tthis.add('-enditem', pokemon, item.name, '[from] move: Fling');\r\n\t\t\t\tthis.runEvent('AfterUseItem', pokemon, null, null, item);\r\n\t\t\t\tpokemon.removeVolatile('fling');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\tconst item = source.getItem();\r\n\t\t\tif (item.id === 'cursedbranch' && target.addType('Grass')) this.add('-start', target, 'typeadd', 'Grass', '[from] item: Cursed Branch');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\t//Slate 5 starts here\r\n\tsandsearstorm: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 110,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['sunnyday', 'desolateland', 'sandstorm'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\twildboltstorm: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Physical\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['raindance', 'primordialsea', 'snowscape', 'hail'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbleakwindstorm: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 110,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['raindance', 'primordialsea', 'sandstorm'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tspringtidestorm: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Physical\",\r\n\t\tpp: 10,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['sunnyday', 'desolateland', 'snowscape', 'hail'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tatk: -1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tquicksanddrain: {\r\n\t\tnum: -13,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Quicksand Drain\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, heal: 1, metronome: 1 },\r\n\t\tdrain: [1, 3],\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\tmove.drain = [2, 3];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t//\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t//\t\t\tdrain: [2,3]\r\n\t\t//\t\t},\r\n\t\t//no clue if this is needed, so imma comment it out for now\r\n\t\t//\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t//\t\t\tif (!success) {\r\n\t\t//\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t//\t\t\t\treturn this.NOT_FAIL;\r\n\t\t//\t\t\t}\r\n\t\t//\t\t\treturn success;\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Scorching Sands\", target);\r\n\t\t},\r\n\t\tshortDesc: \"Heals 1/3 damage; 2/3 in Sand. 10% chance -1 Spe.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tscythelimbs: {\r\n\t\tnum: -14,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Scythe Limbs\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tmultihit: 2,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonModifyMove(move, pokemon, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tmove.boosts = {atk: 0};\r\n\t\t\t}\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"X-Scissor\", target);\r\n\t\t},\r\n\t\tshortDesc: \"Hits twice; -1 Atk per hit. Ignored if target switches.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tchickendance: {\r\n\t\tnum: -15,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Chicken Dance\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, dance: 1, metronome: 1 },\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t\tspe: 1,\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Revelation Dance\", source);\r\n\t\t\tthis.add('-anim', source, \"Roost\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"Raises the user's Sp. Attack and Speed by 1 stage.\",\r\n\t\tshortDesc: \"Raises the user's Sp. Atk and Speed by 1.\",\r\n\t},\r\n\tchakrabullets: {\r\n\t\tnum: -16,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 20,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Chakra Bullets\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { bullet: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tmultihit: [2, 5],\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Aura Sphere\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (pokemon.boosts.spa > 0) {\r\n\t\t\t\tmove.multihit = [4, 5];\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Hits 2-5 times. If user has >= +1 SpA, hits 4-5 times.\",\r\n\t},\r\n\t// Slate 6\r\n\tburningjealousy: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 75,\r\n\t\tpp: 15,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tlet hasBoost = false;\r\n\t\t\t\tlet i: BoostID;\r\n\t\t\t\tif (!target) return;\r\n\t\t\t\tfor (i in target.boosts) {\r\n\t\t\t\t\tif (target.boosts[i] !== 0) hasBoost = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (hasBoost) {\r\n\t\t\t\t\ttarget.trySetStatus('brn', source, move);\r\n\t\t\t\t\tthis.boost({ spa: 2 }, source, source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Has a 100% chance to burn the target and raise user's Sp. Attack by 2 stages if it had a stat stage raised this turn.\",\r\n\t\tshortDesc: \"If target has stat raise: 100% burn; user: +2 Sp. Atk.\",\r\n\t},\r\n\tbarbbarrage: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 25,\r\n\t\tpp: 20,\r\n\t\tmultihit: [2, 5],\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\treturn basePower;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tdesc: \"Hits two to five times, and has a 10% to poison the target.\",\r\n\t\tshortDesc: \"Hits 2-5 times. 10% chance to poison per hit.\",\r\n\t},\r\n\tinfernalparade: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 25,\r\n\t\tpp: 20,\r\n\t\tmultihit: [2, 5],\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, wind: 1, defrost: 1},\r\n\t\tthawsTarget: true,\r\n\t\tdesc: \"Hits two to five times, and has a 10% to burn the target.\",\r\n\t\tshortDesc: \"Hits 2-5 times. 10% chance to burn per hit.\",\r\n\t},\r\n\teeriespell: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 25,\r\n\t\tpp: 20,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1},\r\n\t\tmultihit: [2, 5],\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\tdesc: \"Hits two to five times, and has a 10% to paralyze the target.\",\r\n\t\tshortDesc: \"Hits 2-5 times. 10% chance to paralyze per hit.\",\r\n\t},\r\n\tsleeptalk: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst moves = [];\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst moveid = moveSlot.id;\r\n\t\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\t\tif (moveid && !move.flags['nosleeptalk'] && !move.flags['charge']) {\r\n\t\t\t\t\tmoves.push(moveid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet randomMove = '';\r\n\t\t\tif (moves.length) randomMove = this.sample(moves);\r\n\t\t\tif (!randomMove) return false;\r\n\t\t\tthis.actions.useMove(randomMove, pokemon);\r\n\t\t},\r\n\t\tdesc: \"(Can now select Rest) One of the user's known moves, besides this move, is selected for use at random. Fails if the user is not asleep. The selected move does not have PP deducted from it, and can currently have 0 PP. This move cannot select Assist, Beak Blast, Belch, Bide, Blazing Torque, Celebrate, Chatter, Combat Torque, Copycat, Dynamax Cannon, Focus Punch, Hold Hands, Magical Torque, Me First, Metronome, Mimic, Mirror Move, Nature Power, Noxious Torque, Shell Trap, Sketch, Sleep Talk, Struggle, Uproar, Wicked Torque, or any two-turn move.\",\r\n\t\tshortDesc: \"User must be asleep. Uses another known move.\",\r\n\t},\r\n\trest: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t\tonTry(pokemon) {\r\n\t\t\tif (pokemon.hp < pokemon.maxhp) return;\r\n\t\t\tthis.add('-fail', pokemon);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (target.status !== 'slp') {\r\n\t\t\t\tif (!target.setStatus('slp', source, move)) return;\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'slp', '[from] move: Rest');\r\n\t\t\t}\r\n\t\t\ttarget.statusState.time = 3;\r\n\t\t\ttarget.statusState.startTime = 3;\r\n\t\t\ttarget.statusState.source = target;\r\n\t\t\tthis.heal(target.maxhp);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t},\r\n\tzephyrblade: {\r\n\t\tnum: -17,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Zephyr Blade\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {slicing: 1, contact: 1, protect: 1, mirror: 1},\r\n\t\tcritRatio: 2,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Air Slash\", target);\r\n\t\t\tthis.add('-anim', source, \"Slash\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"High critical ratio.\",\r\n\t\tshortDesc: \"High critical ratio.\",\r\n\t},\r\n\tfrostnip: {\r\n\t\tnum: -18,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Frostnip\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, metronome: 1, snatch: 1},\r\n\t\tstatus: 'frz',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: {boost: {spa: 1}},\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tdesc: \"Inflicts Frostbite to the target.\",\r\n\t\tshortDesc: \"Inflicts Frostbite to the target.\",\r\n\t},\r\n\tmillstone: {\r\n\t\tnum: -19,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Millstone\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Stone Axe\", target);\r\n\t\t},\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tif (target.volatiles['disable']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'disable',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tdesc: \"If the target has a disabled move, this move's BP is x1.5. After damage, disables the last move used by the target for 2 turns.\",\r\n\t\tshortDesc: \"Afflicts Disable for 2 turns; 1.5x BP vs. disabled foe.\",\r\n\t},\r\n\tdisable: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Millstone\") {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\t// The target hasn't taken its turn, or Cursed Body activated and the move was not used through Dancer or Instruct\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.queue.willMove(pokemon) ||\r\n\t\t\t\t\t(pokemon === this.activePokemon && this.activeMove && !this.activeMove.isExternal)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.effectState.duration--;\r\n\t\t\t\t}\r\n\t\t\t\tif (!pokemon.lastMove) {\r\n\t\t\t\t\tthis.debug(`Pokemon hasn't moved yet`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === pokemon.lastMove.id) {\r\n\t\t\t\t\t\tif (!moveSlot.pp) {\r\n\t\t\t\t\t\t\tthis.debug('Move out of PP');\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (effect.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Disable', pokemon.lastMove.name, '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Disable', pokemon.lastMove.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.move = pokemon.lastMove.id;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 17,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Disable');\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 7,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && move.id === this.effectState.move) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tterablast: {\r\n\t\tinherit: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (source.terastallized || source.hasItem('legendplate')) {\r\n\t\t\t\tthis.attrLastMove('[anim] Tera Blast ' + source.teraType);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon, target) {\r\n\t\t\tif (pokemon.terastallized || pokemon.hasItem('legendplate')) {\r\n\t\t\t\tmove.type = pokemon.teraType;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif ((pokemon.terastallized || pokemon.hasItem('legendplate')) && pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t}\r\n\t\t\tif ((pokemon.terastallized || pokemon.hasItem('legendplate')) && pokemon.teraType === 'Stellar') {\r\n\t\t\t\tmove.self = {boosts: {atk: -1, spa: -1}};\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbondslicingshuriken: {\r\n\t\tnum: -20,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Bond Slicing Shuriken\",\r\n\t\tpp: 1,\r\n\t\tpriority: 0,\r\n\t\tflags: {slicing: 1},\r\n\t\tisZ: \"greniniumz\",\r\n\t\tcritRatio: 2,\r\n\t\tmultihit: 3,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"High critical ratio. Hits 3 times.\",\r\n\t\tshortDesc: \"High critical ratio. Hits 3 times.\",\r\n\t},\r\n\t// Slate 7\r\n\ttriplekick: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 20,\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tdef: -1,\r\n\t\t\t\t},\r\n\t\t\t}, \r\n\t\t],\r\n\t\tdesc: \"20% chance to lower Defense by 1 stage. Hits three times. Power increases to 40 for the second hit and 60 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.\",\r\n\t\tshortDesc: \"3 hits; can miss, but power rises. 20% chance -1 Def.\",\r\n\t},\r\n\ttripleaxel: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow'])) move.accuracy = true;\r\n\t\t},\r\n\t\tdesc: \"Can't miss in Snow. Hits three times. Power increases to 40 for the second hit and 60 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.\",\r\n\t\tshortDesc: \"3 hits; can miss, but power rises. Snow = no miss.\",\r\n\t},\r\n\ttriplearrows: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tflags: {protect: 1, mirror: 1, bypasssub: 1, metronome: 1},\r\n\t\tcritRatio: 1,\r\n\t\tmultihit: 3,\r\n\t\tsecondaries: null,\r\n\t\ttype: \"Grass\",\r\n\t\tdesc: \"Ignores Screens, Substitutes and Burn. Hits three times. Power increases to 40 for the second hit and 60 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.\",\r\n\t\tshortDesc: \"3 hits; can miss, but power rises. Ignores sub/screens.\",\r\n\t},\r\n\ttripledive: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t\tdesc: \"Ignores Burn and power loss in Sun. Can't miss in Sun. Hits three times. Power increases to 40 for the second hit and 60 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.\",\r\n\t\tshortDesc: \"3 hits; can miss, but power rises. Ignores Sun drop.\",\r\n\t},\r\n\tbrainbuster: {\r\n\t\tnum: -21,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Brain Buster\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Zen Headbutt\", target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tdesc: \"Lowers the user's Defense and Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"Lowers the user's Defense and Sp. Def by 1.\",\r\n\t},\r\n\tdragonhammer: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 100,\r\n\t\tpp: 10,\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Lowers the user's Attack by 1 stage.\",\r\n\t\tshortDesc: \"Lowers the user's Atk by 1.\",\r\n\t},\r\n\thammerarm: {\r\n\t\tinherit: true,\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Lowers the user's Attack by 1 stage.\",\r\n\t\tshortDesc: \"Lowers the user's Atk by 1.\",\r\n\t},\r\n\ticehammer: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 100,\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Lowers the user's Attack by 1 stage.\",\r\n\t\tshortDesc: \"Lowers the user's Atk by 1.\",\r\n\t},\r\n\tchillingwater: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tpp: 15,\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\tdesc: \"Has a 30% chance to inflict Frostbite to the target.\",\r\n\t\tshortDesc: \"30% chance to inflict Frostbite to the target.\",\r\n\t},\r\n\tbreezeburn: {\r\n\t\tnum: -22,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Breeze Burn\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Ice Burn\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tdesc: \"Has a 30% chance to inflict Frostbite to the target.\",\r\n\t\tshortDesc: \"30% chance to inflict Frostbite to the target.\",\r\n\t},\r\n\tbreezeshock: {\r\n\t\tnum: -23,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Breeze Shock\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Freeze Shock\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tdesc: \"Has a 30% chance to paralyze the target.\",\r\n\t\tshortDesc: \"30% chance to paralyze the target.\",\r\n\t},\r\n\tsynchronoise: {\r\n\t\tinherit: true,\r\n\t\tpp: 5,\r\n\t\tonTryImmunity(target, source) {},\r\n\t\tonHit(target, source) {\r\n\t\t\tconst types = target.getTypes();\r\n\t\t\tvar type1 = types[0];\r\n\t\t\tvar type2;\r\n\t\t\tif (types.length == 2) type2 = types[1];\r\n\t\t\tif (source.hasType(type1) || !source.setType(type1)) return false;\r\n\t\t\tthis.add('-start', source, 'typechange', type1);\r\n\t\t\tif (type2) {\r\n\t\t\t\tthis.add('-start', source, 'typeadd', type2);\r\n\t\t\t}\t\t\t\r\n\t\t},\r\n\t\tshortDesc: \"Changes user's type to that of the target after hit.\",\r\n\t},\r\n\tcaltrops: {\r\n\t\tnum: -24,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Caltrops\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, mirror: 1, metronome: 1},\r\n\t\tsideCondition: 'gmaxsteelsurge',\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"G-Max Steelsurge\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Sets up sharp steel on the opposing side.\",\r\n\t\tshortDesc: \"Sets up sharp steel on the opposing side.\",\r\n\t},\r\n\tvirulentblast: {\r\n\t\tnum: -25,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Virulent Blast\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sludge Wave\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'tox',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tdesc: \"Has a 20% chance to badly poison the target.\",\r\n\t\tshortDesc: \"20% chance to badly poison the target.\",\r\n\t},\r\n\tsonicboom: {\r\n\t\tinherit: true,\r\n\t\tdamage: null,\r\n\t\tbasePower: 40,\r\n\t\taccuracy: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Priority +1, Sound move.\",\r\n\t\tshortDesc: \"Usually goes first. Sound Move.\",\r\n\t\tname: \"Sonic Boom\",\r\n\t\tpriority: 1,\r\n\t\tisNonstandard: null,\r\n\t\tflags: { sound: 1, protect: 1, mirror: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tswarming: {\r\n\t\tnum: -26,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Swarming\",\r\n\t\tshortDesc: \"Lowers the user's and the target's SpD by one stage.\",\r\n\t\tdesc: \"Lowers the user's and the target's SpD by 1 stage.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bug Buzz\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Smart\",\r\n\t},\r\n\toctazooka: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tpp: 20,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1, pulse: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Has a 100% chance to lower the target's Sp. Defense by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to lower the target's Sp. Def by 1.\",\r\n\t},\r\n\tparaboliccharge: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 75,\r\n\t\tpp: 10,\r\n\t},\r\n\t// Rulebook Embargo\r\n\tembargo: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Rulebook\") {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Embargo');\r\n\t\t\t\tthis.singleEvent('End', pokemon.getItem(), pokemon.itemState, pokemon);\r\n\t\t\t},\r\n\t\t\t// Item suppression implemented in Pokemon.ignoringItem() within sim/pokemon.js\r\n\t\t\tonResidualOrder: 21,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Embargo');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Slate 9\r\n\tdragonrend: {\r\n\t\tnum: -27,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dragon Rend\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t},\r\n\t\t],\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Crunch\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"30% chance to flinch the target.\",\r\n\t},\r\n\timprison: { // WIP\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Imprison');\r\n\t\t\t},\r\n\t\t\tonFoeDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of this.effectState.source.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === 'struggle') continue;\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, 'hidden');\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.maybeDisabled = true;\r\n\t\t\t},\r\n\t\t\tonFoeBeforeMovePriority: 4,\r\n\t\t\tonFoeBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (move.id !== 'struggle' && this.effectState.source.hasMove(move.id) && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.damage(Math.round(target.maxhp / 4), attacker, defender);\r\n\t\t\t\t\tthis.add('cant', attacker, 'move: Imprison', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"WIP\",\r\n\t\tdesc: \"WIP\",\r\n\t},\r\n\tpowderbomb: {\r\n\t\tnum: -28,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Powder Bomb\",\r\n\t\tpp: 10,\r\n\t\tpriority: 2,\r\n\t\tflags: {noassist: 1, failcopycat: 1, powder: 1, bullet: 1},\r\n\t\tvolatileStatus: 'powderbomb',\r\n\t\tcondition: {\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\t\tmove.accuracy = true;\r\n\t\t\t\t\tthis.damage(Math.round(target.maxhp / 4), source, target);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rage Powder\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Covers the target in powder in addition to the damage dealt when it is used. If the Pok\u00E9mon affected by Powder attempts to use a Fire-type move, they take damage equal to 25% of their maximum HP and cannot execute the move (PP is still consumed). If the target Pok\u00E9mon is part Fire-type, inflicts 1/8 of the target's maximum HP as damage per turn. The Powder effect is removed when the affected Pok\u00E9mon switches out.\",\r\n\t\tshortDesc: \"Covers the target in powder. If the Pokemon attempts to use a Fire move, they take 25% of their max HP.\",\r\n\t},\r\n\tmilfleur: {\r\n\t\tnum: -29,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mil Fleur\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1, punch: 1},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.hp > pokemon.maxhp * 2 / 3) {\r\n\t\t\t\tmove.basePower = 20;\r\n\t\t\t\tmove.multihit = [4, 5];\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 3) {\r\n\t\t\t\tmove.basePower = 50;\r\n\t\t\t\tmove.multihit = 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmove.basePower = 120;\r\n\t\t\t\tmove.multihit = 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Fleur Cannon\", target);\r\n\t\t\tthis.add('-anim', source, \"Mega Punch\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Amount of hits and power is determined by how much HP the user has left.\",\r\n\t},\r\n\t// Slate 10\r\n\tskyuppercut: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 95,\r\n\t\taccuracy: 100,\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\tif (target.side.getSideCondition(condition)) {\r\n\t\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"Inflicts 1/8 max HP if hazards are up.\",\r\n\t\tshortDesc: \"Inflicts 1/8 max HP if hazards are up.\",\r\n\t},\r\n\tblackout: {\r\n\t\tnum: -30,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Blackout\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Night Daze\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Lowers the user's SpA and SpD by one afterward.\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\thypnotichorror: {\r\n\t\tnum: -31,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hypnotic Horror\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hypnosis\", target);\r\n\t\t\tthis.add('-anim', source, \"Psycho Boost\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Lowers the user's SpA and SpD by one afterward.\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tsyrupbomb: {\r\n\t\tnum: -32,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Syrup Bomb\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tsideCondition: 'grasspledge',\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sludge Bomb\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Creates a Swamp on the opponent's side of the field.\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tfoulfuture: {\r\n\t\tnum: -34,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Foul Future\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'foulfuture',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'foulfuture',\r\n\t\t\t\t\tname: \"Foul Future\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 120,\r\n\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Poison',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Foul Future');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Poison Jab\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Doom Desire is already in effect for the target's position.\",\r\n\t\tshortDesc: \"Hits two turns after being used.\",\r\n\t},\r\n\trainbowblast: {\r\n\t\tnum: -35,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Rainbow Blast\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dazzling Gleam\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"30% chance to lower target's SpA by 1.\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\trockclimb: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 120,\r\n\t\tpp: 5,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'confusion',\r\n\t\t},\r\n\t\ttype: \"Rock\",\r\n\t\tdesc: \"Has a 10% chance to confuse the target.\",\r\n\t\tshortDesc: \"10% chance to confuse the target.\",\r\n\t},\r\n\tbonfire: {\r\n\t\tnum: -36,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Bonfire',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyBasePowerPriority: 22,\r\n\t\tonModifyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tlet bonfireBP = 0\r\n\t\t\tfor (const ally of attacker.side.pokemon) {\r\n\t\t\t\tfor (const moveSlot of attacker.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.name === 'Bonfire') {\r\n\t\t\t\t\t\tbonfireBP += 20\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmove.basePower += bonfireBP\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Flame Wheel\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tkiblast: {\r\n        num: -37,\r\n        accuracy: 100,\r\n        basePower: 140,\r\n        category: \"Special\",\r\n        name: \"Ki Blast\",\r\n        pp: 5,\r\n        priority: 0,\r\n        flags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n        secondary: null,\r\n        target: \"normal\",\r\n        onAfterHit(target, pokemon, sourceEffect) {\r\n            if (target !== \"normal\") return\r\n            this.useMove(\"Ki Blast\", pokemon, \"self\", sourceEffect);\r\n        },\r\n        type: \"Fighting\",\r\n        contestType: \"Cool\",\r\n    },\r\n};\r\n"],
  "mappings": "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",
  "names": ["target"]
}
