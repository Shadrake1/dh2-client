{
  "version": 3,
  "sources": ["../../../../data/mods/m4asandbox/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\t// SANDBOX CONTENT STARTS HERE\r\n\tconversionz: {\r\n\t\tshortDesc: \"If the Pok\u00E9mon changes its type, the result is permanent. Deletes STAB.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.species.id !== 'porygonzmega') return;\r\n\t\t\tconst type = this.dex.species.get(pokemon.species).types[0];\r\n\t\t\tif (pokemon.hasType(type) || !pokemon.setType(type)) return;\r\n\t\t\tthis.add('-start', pokemon, 'typechange', type);\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (source.species.id !== 'porygonzmega') return;\r\n\t\t\tif (move.id === 'conversion' || move.id === 'conversion2') {\r\n\t\t\t\tthis.add('-ability', source, 'Conversion-Z');\r\n\t\t\t\tconst pokemon = this.dex.species.get(source.species);\r\n\t\t\t\tpokemon.types[0] = source.types[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.stab;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Conversion-Z\",\r\n\t\trating: 5,\r\n\t\tnum: -5000,\r\n\t},\r\n\tgamble: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's Metronome hits five times.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.multihit) return;\r\n\t\t\tif (move.id === 'metronome') {\r\n\t\t\t\tmove.multihit = 5;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Gamble\",\r\n\t\trating: 3,\r\n\t\tnum: -5001,\r\n\t},\r\n\tsecretweapon: {\r\n\t\tshortDesc: \"When this Pok\u00E9mon faints, it restores its teammates' HP, PP and status.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Secret Weapon');\r\n\t\t\tthis.add('-message', `When ${pokemon.name} faints, it will restore the HP, PP and status of its entire team!`);\r\n\t\t\tthis.hint(\"Pok\u00E9mon that have already fainted won't be revived.\");\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Secret Weapon');\r\n\t\t\tthis.add('-message', `${pokemon.name} restored the HP, PP and status of its entire team!`);\r\n\t\t\tfor (const ally of pokemon.side.pokemon) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!ally.fainted && (\r\n\t\t\t\t\t\tally.hp < ally.maxhp ||\r\n\t\t\t\t\t\tally.status ||\r\n\t\t\t\t\t\tally.moveSlots.some(moveSlot => moveSlot.pp < moveSlot.maxpp)\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tally.heal(ally.maxhp);\r\n\t\t\t\t\tally.setStatus('');\r\n\t\t\t\t\tfor (const moveSlot of ally.moveSlots) {\r\n\t\t\t\t\t\tmoveSlot.pp = moveSlot.maxpp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Secret Weapon\",\r\n\t\trating: 5,\r\n\t\tnum: -5002,\r\n\t},\r\n\tamalgam: {\r\n\t\tshortDesc: \"Eats the Steel type, removing it from other Pok\u00E9mon to restore HP by 1/3.\",\r\n\t\tdesc: \"This Pok\u00E9mon eats the Steel type! At every possible opportunity, it removes the Steel type from adjacent Pok\u00E9mon. Each time it does so, its own HP is restored by 1/3.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (!target || target === pokemon) continue;\r\n\t\t\t\tif (target.hasType('Steel') && target.isAdjacent(this.effectState.target)) {\r\n\t\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.types.join('/'), '[from] ability: Amalgam', '[of] ' + pokemon);\r\n\t\t\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]'); // not displaying the healing correctly\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Amalgam\",\r\n\t\trating: 4,\r\n\t\tnum: -5003,\r\n\t},\r\n\tillusion: {\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.illusion = null;\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (!pokemon.side.pokemon[i]) continue;\r\n\t\t\t\tif (!pokemon.side.pokemon[i].fainted) break;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i]) return;\r\n\t\t\tif (pokemon === pokemon.side.pokemon[i]) return;\r\n\t\t\tpokemon.illusion = pokemon.side.pokemon[i];\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.illusion) {\r\n\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityData, target, source, move);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.illusion) {\r\n\t\t\t\tconst oMegaSpecies = this.dex.species.get(pokemon.species.originalMega);\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, pokemon.illusion.item, '[silent]');\r\n\t\t\t\tif (oMegaSpecies.exists || pokemon.species.forme.startsWith('Mega')) {\r\n\t\t\t\t\t// Place volatiles on the Pok\u00E9mon to show its mega-evolved condition and details\r\n\t\t\t\t\tthis.add('-start', pokemon, pokemon.item, '[silent]');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.species.types.join('/'), '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('illusion cleared');\r\n\t\t\t\tpokemon.illusion = null;\r\n\t\t\t\tconst details = pokemon.species.name + (pokemon.level === 100 ? '' : ', L' + pokemon.level) +\r\n\t\t\t\t\t(pokemon.gender === '' ? '' : ', ' + pokemon.gender) + (pokemon.set.shiny ? ', shiny' : '');\r\n\t\t\t\tthis.add('replace', pokemon, details);\r\n\t\t\t\tthis.add('-end', pokemon, 'Illusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.illusion = null;\r\n\t\t},\r\n\t\tisUnbreakable: true,\r\n\t\tname: \"Illusion\",\r\n\t\trating: 4.5,\r\n\t\tnum: 149,\r\n\t},\r\n\tzenmode: { // altered onEnd so a Darmanitan-Zen can Mega Evolve properly\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Darmanitan' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Darmanitan-Zen\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (pokemon.species.isMega) return;\r\n\t\t\tif (pokemon.species.baseSpecies === 'Darmanitan' && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.species.isMega) return;\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitanzen') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (pokemon.species.isMega) return;\r\n\t\t\t\tif (['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\tflowergift: { // removed form dependence and prevented Mega Cherrim from changing form\r\n\t\tdesc: \"If this Pok\u00E9mon is a Cherrim and Sunny Day is active, it changes to Sunshine Form and the Attack and Special Defense of it and its allies are multiplied by 1.5. If this Pok\u00E9mon is a Mega Meganium and Sunny Day is active, the Attack and Special Defense of it and its allies are multiplied by 1.5. If this Pok\u00E9mon is a Cherrim or a Mega Meganium and it is holding Utility Umbrella, it remains in its regular form and the Attack and Special Defense stats of it and its allies are not boosted. If this Pok\u00E9mon is a Cherrim in its Sunshine form and is given Utility Umbrella, it will immediately switch back to its regular form. If this Pok\u00E9mon is a Cherrim holding Utility Umbrella and its item is removed while Sunny Day is active, it will transform into its Sunshine Form. If an ally is holding Utility Umbrella while Cherrim is in its Sunshine Form or Meganium is Mega Evolved, they will not receive the Attack and Special Defense boosts.\",\r\n\t\tshortDesc: \"If user is Cherrim or Mega Meganium and Sunny Day is active: 1.5x ally team Atk and Sp. Def.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tdelete this.effectState.forme;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\t!pokemon.isActive || pokemon.baseSpecies.baseSpecies !== 'Cherrim' ||\r\n\t\t\t\tpokemon.species.isMega || pokemon.transformed\r\n\t\t\t) return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tif (pokemon.species.id !== 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim-Sunshine', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifyAtkPriority: 3,\r\n\t\tonAllyModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\t!this.effectState.target.species.isMega) return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifySpDPriority: 4,\r\n\t\tonAllyModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\t!this.effectState.target.species.isMega) return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flower Gift\",\r\n\t\trating: 1,\r\n\t\tnum: 122,\r\n\t},\r\n\tstancechange: { // added compatibility for non-Falinks Megas (including Aegislash)\r\n\t\tdesc: \"If this Pok\u00E9mon is an Aegislash or holding Falinksite, it changes to Blade Forme or Mega Combat before attempting to use an attacking move, and changes to Shield Forme or Mega Legion before attempting to use King's Shield.\",\r\n\t\tshortDesc: \"Changes to Blade Forme/Combat before attack, Shield Forme/Legion before King's Shield.\",\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (\r\n\t\t\t\t(attacker.species.baseSpecies !== 'Aegislash' && !attacker.species.isMega) || attacker.transformed\r\n\t\t\t) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;\r\n\t\t\tif (attacker.species.baseSpecies === 'Aegislash' && !attacker.species.isMega) {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Falinks-Mega-Legion' : 'Falinks-Mega-Combat');\r\n\t\t\t\tif (attacker.species.falinks !== targetForme) {\r\n\t\t\t\t\tlet baseSpecies = attacker.m.originalSpecies;\r\n\t\t\t\t\tif (attacker.species.baseSpecies === 'Aegislash') {\r\n\t\t\t\t\t\tbaseSpecies = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst species: Species = this.getMixedSpecies(baseSpecies, targetForme);\r\n\t\t\t\t\tspecies.falinks = targetForme;\r\n\t\t\t\t\tattacker.formeChange(species);\r\n\t\t\t\t\tif (targetForme === 'Falinks-Mega-Legion') {\r\n\t\t\t\t\t\tthis.add('-message', `${attacker.name} changed to Legion formation!`);\r\n\t\t\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-message', `${attacker.name} changed to Combat formation!`);\r\n\t\t\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Mega Falinks\r\n\t\t\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Stance Change\",\r\n\t\trating: 4,\r\n\t\tnum: 176,\r\n\t},\r\n\tsos: { // added compatibility for non-Wishiwashi Megas\r\n\t\tdesc: \"If this Pok\u00E9mon is a Wishiwashi that has Mega Evolved, it calls for help and changes form at the end of each full turn it has been on the field, building up to Mega Wishiwashi (School Form) over five turns.\",\r\n\t\tshortDesc: \"More Wishiwashi spawn at the end of each turn.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.species.id === 'wishiwashimega' && pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tthis.add('-message', `Startled by the Mega Evolution, ${pokemon.name}'s school dispersed...`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\t(pokemon.baseSpecies.baseSpecies !== 'Wishiwashi' && !pokemon.species.isMega) || pokemon.transformed || !pokemon.hp || !pokemon.activeTurns ||\r\n\t\t\t\tpokemon.species.id === 'wishiwashi' || pokemon.species.id === 'wishiwashischool' ||\r\n\t\t\t\tpokemon.species.wishiwashi === 'School'\r\n\t\t\t) return;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: SOS');\r\n\t\t\tthis.add('-message', `${pokemon.name} called for help!`);\r\n\t\t\tif (!pokemon.species.wishiwashi) {\r\n\t\t\t\tconst species: Species = this.getMixedSpecies(pokemon.m.originalSpecies, 'Wishiwashi-Mega-1');\r\n\t\t\t\tspecies.wishiwashi = 1;\r\n\t\t\t\tpokemon.formeChange(species, this.effect, true);\r\n\t\t\t} else if (pokemon.species.wishiwashi === 1) {\r\n\t\t\t\tconst species: Species = this.getMixedSpecies(pokemon.m.originalSpecies, 'Wishiwashi-Mega-2');\r\n\t\t\t\tspecies.wishiwashi = 2;\r\n\t\t\t\tpokemon.formeChange(species, this.effect, true);\r\n\t\t\t} else if (pokemon.species.wishiwashi === 2) {\r\n\t\t\t\tconst species: Species = this.getMixedSpecies(pokemon.m.originalSpecies, 'Wishiwashi-Mega-3');\r\n\t\t\t\tspecies.wishiwashi = 3;\r\n\t\t\t\tpokemon.formeChange(species, this.effect, true);\r\n\t\t\t} else if (pokemon.species.wishiwashi === 3) {\r\n\t\t\t\tconst species: Species = this.getMixedSpecies(pokemon.m.originalSpecies, 'Wishiwashi-Mega-4');\r\n\t\t\t\tspecies.wishiwashi = 4;\r\n\t\t\t\tpokemon.formeChange(species, this.effect, true);\r\n\t\t\t} else if (pokemon.species.wishiwashi === 4) {\r\n\t\t\t\tconst species: Species = this.getMixedSpecies(pokemon.m.originalSpecies, 'Wishiwashi-Mega-School');\r\n\t\t\t\tspecies.wishiwashi = 'School';\r\n\t\t\t\tpokemon.formeChange(species, this.effect, true);\r\n\t\t\t}\r\n\t\t\tthis.add('-message', `More of ${pokemon.name}'s friends came together!`);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst species = pokemon.species;\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tif (species.types[1]) {\r\n\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t}\r\n\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"SOS\",\r\n\t\trating: 5,\r\n\t\tnum: -1054,\r\n\t},\r\n\tforgery: { // removed species requirement\r\n\t\tdesc: \"This Pok\u00E9mon inherits the item of the last unfainted Pokemon in its party.\",\r\n\t\tshortDesc: \"Inherits the item of the last party member.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.species.isMega || pokemon.item !== 'zoroarkite') return;\r\n\t\t\tpokemon.addVolatile('forgery');\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!pokemon.side.pokemon[i] || pokemon.side.pokemon[i].fainted ||\r\n\t\t\t\t\t!pokemon.side.pokemon[i].item || this.dex.items.get(pokemon.side.pokemon[i].item).zMove ||\r\n\t\t\t\t\t this.dex.items.get(pokemon.side.pokemon[i].item).megaStone\r\n\t\t\t\t) continue;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i]) return;\r\n\t\t\tif (pokemon === pokemon.side.pokemon[i]) return;\r\n\t\t\tconst forgery = pokemon.side.pokemon[i];\r\n\t\t\tthis.add('-ability', pokemon, 'Forgery');\r\n\t\t\tpokemon.item = forgery.item;\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Zoroarkite became a replica of the ${this.dex.items.get(forgery.item).name} belonging to ${forgery.name}!`);\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.species.isMega) return;\r\n\t\t\tif (!pokemon.item) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Forgery');\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s Zoroarkite returned to normal!`);\r\n\t\t\t\tpokemon.item = 'zoroarkite' as ID;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.species.isMega) return;\r\n\t\t\tif (pokemon.item !== 'zoroarkite') {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Forgery');\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s Zoroarkite returned to normal!`);\r\n\t\t\t\tpokemon.item = 'zoroarkite' as ID;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Forgery\",\r\n\t\trating: 3,\r\n\t\tnum: -1050,\r\n\t},\r\n\t// Sandierbox content by Kero\r\n\tcontaminate: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's Normal-type moves become Poison-type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tmove.contaminateBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.contaminateBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Contaminate\",\r\n\t\trating: 4,\r\n\t\tnum: -6000,\r\n\t},\r\n\t// deleted Buildup and Implode for compatibility :)\r\n\tdefibrillator: {\r\n\t\tdesc: \"When the Pok\u00E9mon uses an Electric-type move, if any members of its party have status conditions, they are cured and affected teammates restore 1/6th of their maximum HP.\",\r\n\t\tshortDesc: \"Electric moves cure ally status and heal cured allies\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tfor (const ally of source.side.pokemon) {\r\n\t\t\t\t\tif (ally.cureStatus()) ally.heal(ally.baseMaxhp / 6);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Defibrillator\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6003,\r\n\t},\r\n\ttetramorph: {\r\n\t\tdesc: \"After using a move, the user's type changes to the type of that move. Multi-Attack will change type as well.\",\r\n\t\tshortDesc: \"User and Multi-Attack's type change to move's type after use.\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Tetramorph');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.name === 'Multi-Attack') {\r\n\t\t\t\tmove.type = pokemon.types[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tetramorph\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6004,\r\n\t},\r\n\tjosefscurse: {\r\n\t\tdesc: 'Golurk summons spirits from the dead, which come to haunt its teammates. On switch in, it applies the \"Trick or Treat\" effect on itself and any allies on the field.',\r\n\t\tshortDesc: \"Applies Trick-or-Treat to itself and allies on switch-in\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.side === pokemon.side) {\r\n\t\t\t\t\tif (target.hasType('Ghost')) continue;\r\n\t\t\t\t\tif (!target.addType('Ghost')) continue;\r\n\t\t\t\t\tthis.add('-start', target, 'typeadd', 'Ghost', '[from] move: Trick-or-Treat');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Josef's Curse\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6005,\r\n\t},\r\n\thighreward: {\r\n\t\tdesc: 'All moves with an accuracy less than 100% get a 20% boost to their base power.',\r\n\t\tshortDesc: \"Boosts inaccurate moves.\",\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.accuracy < 100) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tname: \"High Reward\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6006,\r\n\t},\r\n\tmodify: {\r\n\t\tdesc: 'As soon as this Pok\u00E9mon Mega Evolves/switches in, it gains a random type. All Normal-type moves of this Pok\u00E9mon become that type and gain a 1.25x boost.',\r\n\t\tshortDesc: \"Gain a random type on switch and convert Normal moves to that type with a boost.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst types = [];\r\n\t\t\tfor (const type in this.dex.data.TypeChart) {\r\n\t\t\t\tif (pokemon.hasType(type)) continue;\r\n\t\t\t\ttypes.push(type);\r\n\t\t\t}\r\n\t\t\tconst randomType = this.sample(types);\r\n\t\t\tif (!pokemon.setType(randomType)) return;\r\n\t\t\tthis.add('-start', pokemon, 'typechange', randomType, '[from] ability: Modify');\r\n\t\t},\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = pokemon.types[0];\r\n\t\t\t\tmove.modifyBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.modifyBoosted) return this.chainModify([0x1400, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Modify\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6007,\r\n\t},\r\n\tsacrificialbarrier: { // wh\r\n\t\tdesc: 'As soon as this Pok\u00E9mon uses a move or deals damage (in the case of Volt Switch), the Pok\u00E9mon sets up Reflect and Light Screen, and then explodes. These Reflect and Light Screens last 15 turns.',\r\n\t\tshortDesc: \"Set 15 turn screens after using a move, then explodes.\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (source.side.addSideCondition('reflect') && source.side.addSideCondition('lightscreen')) {\r\n\t\t\t\tsource.side.sideConditions['reflect'].duration = 15;\r\n\t\t\t\tsource.side.sideConditions['lightscreen'].duration = 15;\r\n\t\t\t\tthis.add('-message', `${source.name} put up a sacrificial barrier!`);\r\n\t\t\t}\r\n\t\t\tthis.useMove('explosion', source);\r\n\t\t},\r\n\t\tname: \"Sacrificial Barrier\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6008,\r\n\t},\r\n\tomniscientsentinel: {\r\n\t\tdesc: \"The Pok\u00E9mon's type becomes the type of its first two moveslots. Multi-Attack changes type to match the Pok\u00E9mon's primary type.\",\r\n\t\tshortDesc: \"Type changes to first two move slots; Multi-Attack becomes primary type.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.types[0] = this.dex.moves.get(pokemon.moves[0]).type;\r\n\t\t\tpokemon.types[1] = this.dex.moves.get(pokemon.moves[1]).type;\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.species.types.join('/'), '[from] ability: Omniscient Sentinel');\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.name === 'Multi-Attack') {\r\n\t\t\t\tmove.type = pokemon.types[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Omniscient Sentinel\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6009,\r\n\t},\r\n\trusty: {\r\n\t\tdesc: \"For every turn that the Pok\u00E9mon is on the field, its Speed, Defense and Special Defense fall one stage. Becomes two stages if hit with a Water-type move.\",\r\n\t\tshortDesc: \"-1 DEF, SPD, SPE at end of turn, becomes -2 after hit by Water attack.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\ttarget.addVolatile('rusty');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns && !pokemon.volatiles['rusty']) {\r\n\t\t\t\tthis.boost({def: -1, spd: -1, spe: -1});\r\n\t\t\t} else if (pokemon.activeTurns && pokemon.volatiles['rusty']) {\r\n\t\t\t\tthis.boost({def: -2, spd: -2, spe: -2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Rusted', '[from] ability: Rusty', '[of] ' + pokemon);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Rusty\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6010,\r\n\t},\r\n\tafterburner: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Fire-type move, or is hit by a damaging Fire-type move, its speed is boosted by one stage. If this Pok\u00E9mon becomes burned, it will immediately be cured of its burn status and its speed will be boosted by one stage.\",\r\n\t\tshortDesc: \"+1 Spe on using or being hit by a Fire move or being burned; cures burn.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSetStatus(status, target, source, effect) {\r\n\t\t\tif (!source || source === target) return;\r\n\t\t\tif (status.id === 'brn') {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t\ttarget.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Afterburner\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6011,\r\n\t},\r\n\tfailsafe: {\r\n\t\tdesc: \"The Pok\u00E9mon heals itself by 1/8 when the move it uses fails. [Stomping Tantrum Trigger]\",\r\n\t\tshortDesc: \"Heals for 1/8 max HP when failing a move.\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (source.moveThisTurnResult === false) this.heal(source.maxhp / 8);\r\n\t\t},\r\n\t\tname: \"Fail Safe\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6012,\r\n\t},\r\n\tangelsguidance: {\r\n\t\tdesc: \"When this Pok\u00E9mon deals direct damage to an opponent, changes type to resist the opponent's STAB (for example, normal/fairy type MSilvally attacks an Arctozolt, it becomes a pure Ground type to resist electric). Multi-Attack changes type to match the user's primary type. If Mega Silvally already resists the opponent's primary stab, Angel's Guidance fails.\",\r\n\t\tshortDesc: \"Change type to resist opponent's primary type after damaging them; Multi-Type changes to match.\",\r\n\t\tonFoeDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.ability == \"Angel's Guidance\" || source.ability == \"angelsguidance\") var angel = true;\r\n\t\t\telse var angel = false;\r\n\t\t\tif (!angel) return;\r\n\t\t\tconst possibleTypes = [];\r\n\t\t\tconst enemyType = target.types[0];\r\n\t\t\tfor (const type in this.dex.data.TypeChart) {\r\n\t\t\t\tconst typeCheck = this.dex.data.TypeChart[type].damageTaken[enemyType];\r\n\t\t\t\tif (typeCheck === 2 || typeCheck === 3) {\r\n\t\t\t\t\tpossibleTypes.push(type);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!possibleTypes.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (possibleTypes.includes(source.types[0]) || possibleTypes.includes(source.types[1])) return;\r\n\t\t\tconst randomType = this.sample(possibleTypes);\r\n\r\n\t\t\tif (!source.setType(randomType)) return;\r\n\t\t\tthis.add('-start', source, 'typechange', randomType, \"[from] ability: Angel's Guidance\");\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.name === 'Multi-Attack') {\r\n\t\t\t\tmove.type = pokemon.types[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Angel's Guidance\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6013,\r\n\t},\r\n\tirradiation: {\r\n\t\tdesc: \"If the Pok\u00E9mon successfully lands an attack, opposing Pok\u00E9mon will have their Defense and Special Defense lowered by one at the end of each of the next two turns. This effect does not stack with itself.\",\r\n\t\tshortDesc: \"Lower opponents' defenses at end of turn for two turns after attacking.\",\r\n\t\tonAfterMove(source, target) {\r\n\t\t\ttarget.side.addSideCondition('irradiation');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(targetSide) {\r\n\t\t\t\tthis.add('-sidestart', targetSide, 'Irradiation');\r\n\t\t\t},\r\n\t\t\tonEnd(targetSide) {\r\n\t\t\t\tfor (const pokemon of targetSide.active) {\r\n\t\t\t\t\tif (pokemon) {\r\n\t\t\t\t\t\tthis.boost({def: -1, spd: -1}, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-sideend', targetSide, 'Irradiation');\r\n\t\t\t},\r\n\t\t\tonResidual(side) {\r\n\t\t\t\tfor (const pokemon of side.active) {\r\n\t\t\t\t\tif (pokemon) {\r\n\t\t\t\t\t\tthis.boost({def: -1, spd: -1}, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Irradiation\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6014,\r\n\t},\r\n\tavicebron: {\r\n\t\tdesc: \"The Pok\u00E9mon receives an additional 1.5x boost in base power to physical STAB moves but always moves last in the turn (priority equivalent to Dragon Tail/Teleport).\",\r\n\t\tshortDesc: \"Physical STAB 1.5x boost but always moves last.\",\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.type == pokemon.types[0] || move.type == pokemon.types[1] || pokemon.types[3]) if (move.category == \"Physical\") return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\treturn -6;\r\n\t\t},\r\n\t\tname: \"Avicebron\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6015,\r\n\t},\r\n\trkssystem20: {\r\n\t\tdesc: \"When the Pok\u00E9mon uses a move that is not Multi-Attack (activating before the move takes effect), Multi-Attack's type changes to match the type of the move used. If the Pok\u00E9mon uses Multi-Attack, its type changes to Multi-Attack's current type at the end of the turn. The Pok\u00E9mon's Defense and Special Defense increase by 1.5x when it is the same type as Multi-Attack.\",\r\n\t\tshortDesc: \"MA changes type to last used move; MA changes users type at end of turn; 1.5x defenses if MA and user are same type\",\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (!pokemon.multiType) pokemon.multiType = \"Normal\";\r\n\t\t\tif (pokemon.multiType == pokemon.types[0]) {\r\n\t\t\t\tthis.debug('RKS System 2.0 boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (!pokemon.multiType) pokemon.multiType = \"Normal\";\r\n\t\t\tif (pokemon.multiType == pokemon.types[0]) {\r\n\t\t\t\tthis.debug('RKS System 2.0 boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tsource.multiType = type;\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (!pokemon.multiType) pokemon.multiType = \"Normal\";\r\n\t\t\tif (move.name === 'Multi-Attack') {\r\n\t\t\t\tmove.type = pokemon.multiType;\r\n\t\t\t\tpokemon.addVolatile(\"rkssystem20\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\t// for (const pokemon of side.active) {\r\n\t\t\tif (pokemon.volatiles['rkssystem20']) {\r\n\t\t\t\tpokemon.setType(pokemon.multiType);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.multiType, '[from] ability: RKS System 2.0');\r\n\t\t\t}\r\n\t\t\t// }\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t},\r\n\t\tname: \"RKS System 2.0\",\r\n\t\trating: 3,\r\n\t\tnum: -6016,\r\n\t},\r\n\tkamikaze: {\r\n\t\tdesc: \"When this Pok\u00E9mon's health drops to 1/16th or lower, it will immediately attempt to use Explosion. This ability will not activate if the opposing Pok\u00E9mon is a Ghost type or has the Damp ability.\",\r\n\t\tshortDesc: \"Use Explosion at 1/16 health if possible.\",\r\n\t\tonUpdate(target) {\r\n\t\t\tif (target.hp <= target.maxhp / 16 && !target.kamikaze) {\r\n\t\t\t\tfor (const enemy of target.side.foe.active) {\r\n\t\t\t\t\tif (!target || !this.isAdjacent(enemy, target)) continue;\r\n\t\t\t\t\tif (!enemy.hasType(\"Ghost\") && enemy.ability != \"Damp\") {\r\n\t\t\t\t\t\ttarget.kamikaze = true;\r\n\t\t\t\t\t\tthis.useMove(\"Explosion\", target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Kamikaze\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6017,\r\n\t},\r\n\tinertia: {\r\n\t\tdesc: \"This Pok\u00E9mon takes up to 50% reduced damage from direct attacks, based on how much faster it is than the attacker. Damage Reduced = 25 \u00D7 User's Current Speed / Target's Current Speed.\",\r\n\t\tshortDesc: \"Takes less damage based on how much faster it is than the opponent.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet inertia = Math.floor(25 * target.getStat('spe', false, false) / source.getStat('spe', false, false),);\r\n\t\t\t\tif (inertia > 50) inertia = 50;\r\n\t\t\t\tinertia = (100 - inertia) / 100;\r\n\t\t\t\treturn damage * inertia;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Inertia\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6018,\r\n\t},\r\n\tdeusexmachina: {\r\n\t\tshortDesc: \"Raises the Pok\u00E9mon's most proficient stat when its HP falls to half.\",\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in target.storedStats) {\r\n\t\t\t\t\tif (target.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = target.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: 1}, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Deus Ex Machina\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6019,\r\n\t},\r\n\tspiralpower: {\r\n\t\tdesc: \"Ghost-type moves used by this Pok\u00E9mon and its allies have their type effectiveness against Normal changed to be super effective.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon and its allies' Ghost-type moves are super effective against Normal-types.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Spiral Power');\r\n\t\t\tthis.add('-message', `Ghost-type moves used by ${pokemon.name} and its allies are super effective against Normal-types!`);\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonAllyModifyMove(move) {\r\n\t\t\tif (move.type !== 'Ghost') return;\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Ghost'] = true;\r\n\t\t\t\t(move as any).spiralpowerBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spiral Power\",\r\n\t\trating: 3,\r\n\t\tnum: -6020,\r\n\t},\r\n\tjetengine: {\r\n\t\tdesc: \"Raises the user's Speed by one stage when being hit by a Fire-type move.\",\r\n\t\tshortDesc: \"Speed +1 when hit with Fire-type move.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tif (!this.boost({spe: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Jet Engine');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Jet Engine\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6021,\r\n\t},\r\n\tvigilante: {\r\n\t\tdesc: \"Draws in all Dark-type moves. Instead of being hit by Dark-type moves, it decreases its attacker's SpA and Atk by one stage. Intimidate immunity.\",\r\n\t\tshortDesc: \"Draws in and is immune to Dark moves; decreases attacker's offenses on doing so; Intimidate immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tthis.add('-ability', target, 'Vigilante', 'boost');\r\n\t\t\t\tthis.boost({atk: -1, spa: -1}, source, target, null, true);\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vigilante');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Dark' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Vigilante');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vigilante');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Vigilante\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6022,\r\n\t},\r\n\tbrokendlc: {\r\n\t\tdesc: \"Upon gaining this ability or entering the battle, the Pok\u00E9mon changes type to the target's secondary typing, and so does the type of its Multi-Attack. If the target lacks a secondary typing, the ??? type (completely neutral offensively and defensively) is used.\",\r\n\t\tshortDesc: \"User and Multi-Attack become the target's secondary type on entry; ??? if no secondary.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (target.types[1]) {\r\n\t\t\t\t\tpokemon.setType(target.types[1]);\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', target.types[1], '[from] ability: Broken DLC');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpokemon.setType(\"???\");\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', '???', '[from] ability: Broken DLC');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.name === 'Multi-Attack') {\r\n\t\t\t\tmove.type = pokemon.types[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Broken DLC\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6023,\r\n\t},\r\n\trksoverload: {\r\n\t\tdesc: \"This Pok\u00E9mon's typing is determined by its first move.\",\r\n\t\tshortDesc: \"User's type changes to its first move's type.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.setType(this.dex.moves.get(pokemon.moves[0]).type);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types[0], '[from] ability: RKS Overload');\r\n\t\t},\r\n\t\tname: \"RKS Overload\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6024,\r\n\t},\r\n\ttriggerhappy: {\r\n\t\tdesc: \"This Pok\u00E9mon's self-destructiive move only deal 1/4th damage to the user.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's self-destructiive move only deal 1/4th damage to the user.\",\r\n\t\tonModifyMove(move, target) {\r\n\t\t\tif (move.selfdestruct) {\r\n\t\t\t\tmove.selfdestruct = false;\r\n\t\t\t\tmove.triggered = true;\r\n\t\t\t} else {\r\n\t\t\t\tmove.triggered = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.triggered) {\r\n\t\t\t\tthis.damage(Math.round(source.maxhp / 4), source, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Trigger Happy\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6025,\r\n\t},\r\n\tsuperconductor1: {\r\n\t\tdesc: \"The damage that this Pok\u00E9mon takes from contact moves is halved, but it also takes double damage from Electric-type moves. (Fluffy clone but an Electric weakness instead of a Fire weakness)\",\r\n\t\tshortDesc: \"Half damage from contact moves; double damage from Electric moves.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tlet mod = 1;\r\n\t\t\tif (move.type === 'Electric') mod *= 2;\r\n\t\t\tif (move.flags['contact']) mod /= 2;\r\n\t\t\treturn this.chainModify(mod);\r\n\t\t},\r\n\t\tname: \"Superconductor1\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6026,\r\n\t},\r\n\tmugarkssystem: {\r\n\t\tdesc: \"Whenever the user gets hits by an attack, its type changes in accordance with Conversion 2. Multi-Attack changes type to account for the user's type.\",\r\n\t\tshortDesc: \"Type changes like Conversion2 when hit; Multi-type matches\",\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!target.hp) return;\r\n\t\t\tconst possibleTypes = [];\r\n\t\t\tconst attackType = move.type;\r\n\t\t\tfor (const type in this.dex.data.TypeChart) {\r\n\t\t\t\tif (target.hasType(type)) continue;\r\n\t\t\t\tconst typeCheck = this.dex.data.TypeChart[type].damageTaken[attackType];\r\n\t\t\t\tif (typeCheck === 2 || typeCheck === 3) {\r\n\t\t\t\t\tpossibleTypes.push(type);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!possibleTypes.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconst randomType = this.sample(possibleTypes);\r\n\t\t\tif (\r\n\t\t\t\ttarget.isActive && move.effectType === 'Move' && move.category !== 'Status' &&\r\n\t\t\t\trandomType !== '???' && !target.hasType(randomType)\r\n\t\t\t) {\r\n\t\t\t\tif (!target.setType(randomType)) return false;\r\n\t\t\t\tthis.add('-start', target, 'typechange', randomType, '[from] ability: Color Change');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"MuGa RKS System\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6027,\r\n\t},\r\n\tprotector: {\r\n\t\tdesc: \"When hit by a Dark, Ghost or Bug type move, raises Defense by two stages.\",\r\n\t\tshortDesc: \"+2 DEF when hit by Dark/Ghost/Bug.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Dark' || move.type === 'Ghost' || move.type === 'Bug') {\r\n\t\t\t\tthis.boost({def: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Protector\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6028,\r\n\t},\r\n\tlovingexplosions: {\r\n\t\tdesc: \"This Pokemon's self-KO moves (Self-Destruct, Explosion, Misty Explosion) deal damage with the opponent's Defense or Special Defense halved, depending on if the move is a physical or special attack (physical attack - physical defense, special attack - special defense).\",\r\n\t\tshortDesc: \"This Pokemon's self-destructing moves deal damage with the opponent's defenses halved.\",\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.selfdestruct) return this.chainModify(2);\r\n\t\t},\r\n\t\tname: \"Loving Explosions\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6029,\r\n\t},\r\n\tmechanic: {\r\n\t\tdesc: \"Moves that have a guaranted secondary effects have their power doubled.\",\r\n\t\tshortDesc: \"Moves with 100% chance secondary effects have doubled power.\",\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance = 100) return this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mechanic\",\r\n\t\trating: 4.5,\r\n\t\tnum: -6030,\r\n\t},\r\n\tpounce: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards. If it lands on any type of entry hazard, it lowers the Defense of adjacent opponents.\",\r\n\t\tshortDesc: \"Hazard immunity. Lowers adjacent opponents' Defense by 1 stage if switched in on them.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['gmaxsteelsurge', 'spikes', 'stealthrock', 'stickyweb', 'toxicspikes']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\t\tthis.add('-ability', pokemon, 'Pounce', 'boost');\r\n\t\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.boost({def: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thazardImmune: true,\r\n\t\tname: \"Pounce\",\r\n\t\trating: 4,\r\n\t\tnum: -6031,\r\n\t},\r\n\tresidrain: {\r\n\t\tdesc: \"Every time another Pok\u00E9mon is damaged indirectly, this Pok\u00E9mon's HP is restored by the same amount.\",\r\n\t\tshortDesc: \"Heals from the indirect damage dealt to others.\",\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (effect.effectType !== 'Move' && target !== pokemon && effect.id !== 'leechseed') {\r\n\t\t\t\tpokemon.heal(damage);\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Residrain\",\r\n\t\trating: 4,\r\n\t\tnum: -6032,\r\n\t},\r\n\tresidrainhalf: {\r\n\t\tdesc: \"Every time another Pok\u00E9mon is damaged indirectly, this Pok\u00E9mon's HP is restored by half of the same amount.\",\r\n\t\tshortDesc: \"Heals from half of the indirect damage dealt to others.\",\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (effect.effectType !== 'Move' && target !== pokemon && effect.id !== 'leechseed') {\r\n\t\t\t\tpokemon.heal(damage / 2);\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Residrain (Half)\",\r\n\t\trating: 4,\r\n\t\tnum: -6033,\r\n\t},\r\n\toverflow: {\r\n\t\tdesc: \"When this Pokemon uses a Fire-type move, it receives a 50% damage boost, but loses the Fire type and this boost for 2 turns.\",\r\n\t\tshortDesc: \"1.5x Fire moves; loses Fire type and boost for 2 turns after.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (move.type === \"Fire\" && !pokemon.volatiles['overflow']) {\r\n\t\t\t\tmove.overflow = true;\r\n\t\t\t} else { move.overflow = false; }\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.overflow) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.overflow) {\r\n\t\t\t\tsource.addVolatile('overflow');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonResidualOrder: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Fire\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] ability: Overflow');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"???\" ? \"Fire\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] ability: Overflow');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Overflow\",\r\n\t\trating: 4,\r\n\t\tnum: -6034,\r\n\t},\r\n\tlasttoxin: {\r\n\t\tdesc: \"When this Pokemon brings an opponent to 50% or under using an attacking move, it badly poisons that opponent.\",\r\n\t\tshortDesc: \"Badly poison enemies brought under half health..\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\ttarget.setStatus('tox');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Last Toxin\",\r\n\t\trating: 4,\r\n\t\tnum: -6035,\r\n\t},\r\n\tjunkprocessor: {\r\n\t\tdesc: \"Every time this Pokemon's stats are lowered, heals 20% of its max HP.\",\r\n\t\tshortDesc: \"Heal 1/5 HP on stat drops.\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Junk Processor');\r\n\t\t\t\tthis.heal(target.baseMaxhp / 5, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Junk Processor\",\r\n\t\trating: 4,\r\n\t\tnum: -6036,\r\n\t},\r\n\tdanceofthorns: {\r\n\t\tdesc: \"If this pokemon has it\u2019s stats lowered, it sets a layer of toxic spikes on the opponent\u2019s side of the field.\",\r\n\t\tshortDesc: \"Set Toxic Spikes on stat drops.\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', this.effectState.target, 'Dance of Thorns');\r\n\t\t\t\tthis.effectState.target.side.foe.addSideCondition('toxicspikes');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Dance of Thorns\",\r\n\t\trating: 4,\r\n\t\tnum: -6037,\r\n\t},\r\n\tboobytrap: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards. If it lands on any type of entry hazard, it uses Tar Shot on all active enemy Pokemon.\",\r\n\t\tshortDesc: \"Hazard immunity. Adjacent opponents get Tar Shot if switched in on them.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['gmaxsteelsurge', 'spikes', 'stealthrock', 'stickyweb', 'toxicspikes']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\t\tthis.add('-ability', pokemon, 'Booby Trap', 'boost');\r\n\t\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t\ttarget.addVolatile('tarshot');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thazardImmune: true,\r\n\t\tname: \"Booby Trap\",\r\n\t\trating: 4,\r\n\t\tnum: -6038,\r\n\t},\r\n\twonderseal: {\r\n\t\tdesc: \"All super effective and not very effective moves used on this Pokemon or by this Pokemon fail.\",\r\n\t\tshortDesc: \"All non-neutrally effective moves used on or by this Pokemon fail.\",\r\n\t\tonAnyTryHit(target, source, move) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (source !== pokemon && target !== pokemon) return;\r\n\t\t\tif (target === source || move.category === 'Status' || move.type === '???' || move.id === 'struggle') return;\r\n\t\t\tif (move.id === 'skydrop' && !source.volatiles['skydrop']) return;\r\n\t\t\tthis.debug('Wonder Seal immunity: ' + move.id);\r\n\t\t\tif (target.runEffectiveness(move) !== 0) {\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Wonder Seal', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wonder Seal\",\r\n\t\trating: 4,\r\n\t\tnum: -6039,\r\n\t},\r\n\tpowerplant: {\r\n\t\tdesc: \"This Pokemon heals for 1/4 of its max health upon lowering an enemy's stats.\",\r\n\t\tshortDesc: \"Heal 1/4 on foe stat drop.\",\r\n\t\tonAnyAfterEachBoost(boost, target, source) {\r\n\t\t\tif (!source || source === target || source !== this.effectState.target) return;\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (statsLowered) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Power Plant');\r\n\t\t\t\t\tthis.heal(source.baseMaxhp / 4, source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Power Plant\",\r\n\t\trating: 4,\r\n\t\tnum: -6040,\r\n\t},\r\n\tclimaticchange: {\r\n\t\tdesc: \"Upon using a Water, Fire, or Ice move, this Pokemon changes to that type and sets the corresponding weather.\",\r\n\t\tshortDesc: \"Changes type and weather when using Water/Fire/Ice moves.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type) {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\tcase \"Water\":\r\n\t\t\t\t\tthis.field.setWeather('raindance');\r\n\t\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Climatic Change');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Fire\":\r\n\t\t\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Climatic Change');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Ice\":\r\n\t\t\t\t\tthis.field.setWeather('hail');\r\n\t\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Climatic Change');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Climatic Change\",\r\n\t\trating: 4,\r\n\t\tnum: -6041,\r\n\t},\r\n\tsoulguard: {\r\n\t\tdesc: \"This Pokemon is immune to types it resists.\",\r\n\t\tshortDesc: \"Resistances become immunities.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.category === 'Status' || move.type === '???' || move.id === 'struggle') return;\r\n\t\t\tif (move.id === 'skydrop' && !source.volatiles['skydrop']) return;\r\n\t\t\tthis.debug('Soul Guard immunity: ' + move.id);\r\n\t\t\tif (target.runEffectiveness(move) < 0) {\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Soul Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Soul Guard\",\r\n\t\trating: 4,\r\n\t\tnum: -6042,\r\n\t},\r\n\tevaporate: {\r\n\t\tdesc: \"If the Pokemon or the opponent uses a Water type move, it triggers the Haze effect. Immune to Water.\",\r\n\t\tshortDesc: \"Haze when any Pokemon uses a Water move; Water immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Evaporate');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type === 'Water') {\r\n\t\t\t\tthis.add('-clearallboost');\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tpokemon.clearBoosts();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Evaporate\",\r\n\t\trating: 4,\r\n\t\tnum: -6043,\r\n\t},\r\n\tscavenger: {\r\n\t\tdesc: \"This Pokemon's Dark-type moves have +1 priority\",\r\n\t\tshortDesc: \"+1 Priority to Dark moves.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.type === 'Dark') return priority + 1;\r\n\t\t},\r\n\t\tname: \"Scavenger\",\r\n\t\trating: 4,\r\n\t\tnum: -6044,\r\n\t},\r\n\tindefatigable: {\r\n\t\tdesc: \"If this Pokemon's recharge moves faint an opposing Pokemon, the user doesn't have to recharge.\",\r\n\t\tshortDesc: \"Recharge moves don't recharge if the opponent faints.\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon === source) continue;\r\n\t\t\t\tif (!pokemon.hp) {\r\n\t\t\t\t\tsource.removeVolatile('mustrecharge');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Indefatigable\",\r\n\t\trating: 4,\r\n\t\tnum: -6045,\r\n\t},\r\n\tshortcircuit: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Electric-type attack, damage is calculated using the user's Speed stat. Other effects that modify the Speed stats are used as normal, including stat stage changes.\",\r\n\t\tshortDesc: \"Electric-type attacks use Speed stat in damage calculation.\",\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\t(move as any).useSourceSpeedAsOffensive = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Short Circuit\",\r\n\t\trating: 3.5,\r\n\t\tnum: -6046,\r\n\t},\r\n\tpsychopomp: {\r\n\t\tdesc: \"This Pokemon switches out after knocking out an opposing Pokemon\",\r\n\t\tshortDesc: \"Switches out after KOing an enemy.\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tsource.switchFlag = true;\r\n\t\t\t\tthis.add('-activate', source, 'ability: Psychopomp');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Psychopomp\",\r\n\t\trating: 3.5,\r\n\t\tnum: -6047,\r\n\t},\r\n\tspinaltap: {\r\n\t\tdesc: \"This Pokemon's moves deal 30% more damage, but it takes 1/10 damage after attacking.\",\r\n\t\tshortDesc: \"1.3x power to all moves, takes 1/10 after attacking.\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\treturn this.chainModify([0x14CC, 0x1000]);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (source && source !== target && move && move.category !== 'Status') {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 10, source, source, this.dex.abilities.get('spinaltap'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spinal Tap\",\r\n\t\trating: 3.5,\r\n\t\tnum: -6048,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["species"]
}
