{
  "version": 3,
  "sources": ["../../../../data/mods/m4asandbox/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\r\n\tinherit: 'm4av6',\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['April Fools', 'Mega of the Day!', 'Popular', 'Other Megas', 'Heat!', 'NFE'],\r\n\t},\r\n\t// SANDBOX CONTENT STARTS HERE\r\n\t// MnM4A\r\n\tinit() {\r\n\t\tfor (const i in this.data.Items) {\r\n\t\t\tif (!this.data.Items[i].megaStone) continue;\r\n\t\t\tthis.modData('Items', i).onTakeItem = false;\r\n\t\t\tconst id = this.toID(this.data.Items[i].megaStone);\r\n\t\t\tif (this.modData('FormatsData', id)) this.modData('FormatsData', id).isNonstandard = null;\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\tcanMegaEvo(pokemon) {\r\n\t\tif (pokemon.species.isMega) return null;\r\n\r\n\t\tconst item = pokemon.getItem();\r\n\t\tif (item.megaStone) {\r\n\t\t\tif (item.megaStone === pokemon.baseSpecies.name) return null;\r\n\t\t\telse if (item.name === \"Lycanite\" && pokemon.species.name === \"Lycanroc-Midnight\") return \"Lycanroc-Midnight-Mega\";\r\n\t\t\telse if (item.name === \"Lycanite\" && pokemon.species.name === \"Lycanroc-Dusk\") return \"Lycanroc-Dusk-Mega\";\r\n\t\t\telse if (item.name === \"Slowkinite\" && pokemon.species.name === \"Slowking-Galar\") return \"Slowking-Galar-Mega\";\r\n\t\t\telse if (item.name === \"Gourgeite\" && pokemon.species.name === \"Gourgeist-Small\") return \"Gourgeist-Small-Mega\";\r\n\t\t\telse if (item.name === \"Gourgeite\" && pokemon.species.name === \"Gourgeist-Large\") return \"Gourgeist-Large-Mega\";\r\n\t\t\telse if (item.name === \"Gourgeite\" && pokemon.species.name === \"Gourgeist-Super\") return \"Gourgeist-Super-Mega\";\r\n\t\t\telse if (item.name === \"Reginite\" && pokemon.species.name === \"Regice\") return \"Regice-Mega\";\r\n\t\t\telse if (item.name === \"Reginite\" && pokemon.species.name === \"Registeel\") return \"Registeel-Mega\";\r\n\t\t\telse if (item.name === \"Meowsticite\" && pokemon.species.name === \"Meowstic-F\") return \"Meowstic-F-Mega\";\r\n\t\t\telse if (item.name === \"Sawsbuckite\" && pokemon.species.id === \"sawsbucksummer\") return \"Sawsbuck-Summer-Mega\";\r\n\t\t\telse if (item.name === \"Sawsbuckite\" && pokemon.species.id === \"sawsbuckautumn\") return \"Sawsbuck-Autumn-Mega\";\r\n\t\t\telse if (item.name === \"Sawsbuckite\" && pokemon.species.id === \"sawsbuckwinter\") return \"Sawsbuck-Winter-Mega\";\r\n\t\t\telse if (item.name === \"Toxtricitite\" && pokemon.species.name === \"Toxtricity-Low-Key\") return \"Toxtricity-Low-Key-Mega\";\r\n\t\t\telse return item.megaStone;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\trunMegaEvo(pokemon) {\r\n\t\tif (pokemon.species.isMega) return false;\r\n\t\tif (pokemon.illusion) this.battle.singleEvent('End', this.dex.abilities.get('Illusion'), pokemon.abilityState, pokemon);\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst species: Species = this.getMixedSpecies(pokemon.species, pokemon.canMegaEvo);\r\n\t\tspecies.isMega = true;\r\n\t\tconst side = pokemon.side;\r\n\r\n\t\t// Pok\u00E9mon affected by Sky Drop cannot Mega Evolve. Enforce it here for now.\r\n\t\tfor (const foeActive of side.foe.active) {\r\n\t\t\tif (foeActive.volatiles['skydrop'] && foeActive.volatiles['skydrop'].source === pokemon) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Do we have a proper sprite for it?\r\n\t\tif (this.dex.species.get(pokemon.canMegaEvo!).baseSpecies === pokemon.m.originalSpecies) {\r\n\t\t\tspecies.id = this.dex.species.get(pokemon.canMegaEvo!).id ? this.dex.species.get(pokemon.canMegaEvo!).id : species.id;\r\n\t\t\tspecies.name = this.dex.species.get(pokemon.canMegaEvo!).name ? this.dex.species.get(pokemon.canMegaEvo!).name : species.name;\r\n\t\t\tpokemon.formeChange(species, pokemon.getItem(), true);\r\n\t\t\tthis.add('-start', pokemon, pokemon.getItem(), '[silent]');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.species.types.join('/'), '[silent]');\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tif (species.types[1]) {\r\n\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst oSpecies = pokemon.m.originalSpecies;\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst oMegaSpecies = this.dex.species.get(species.originalMega);\r\n\t\t\tpokemon.formeChange(species, pokemon.getItem(), true);\r\n\t\t\tif (oMegaSpecies.requiredItem) this.add('-start', pokemon, oMegaSpecies.requiredItem, '[silent]');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.species.types.join('/'), '[silent]');\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tif (species.types[1]) {\r\n\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tpokemon.canMegaEvo = null;\r\n\t\treturn true;\r\n\t},\r\n\tgetMixedSpecies(originalForme, megaForme) {\r\n\t\tconst originalSpecies = originalForme;\r\n\t\t// @ts-ignore\r\n\t\tconst deltas = this.getMegaDeltas(this.dex.species.get(megaForme));\r\n\t\t// @ts-ignore\r\n\t\tconst species = this.doGetMixedSpecies(originalSpecies, deltas);\r\n\t\treturn species;\r\n\t},\r\n\tgetMegaDeltas(megaSpecies) {\r\n\t\tconst baseSpecies = this.dex.species.get(megaSpecies.baseSpecies);\r\n\t\tconst deltas: {\r\n\t\t\tability: string,\r\n\t\t\tbaseStats: SparseStatsTable,\r\n\t\t\tweighthg: number,\r\n\t\t\toriginalMega: string,\r\n\t\t\trequiredItem: string | undefined,\r\n\t\t\ttype?: string,\r\n\t\t\tisMega?: boolean,\r\n\t\t} = {\r\n\t\t\tability: megaSpecies.abilities['0'],\r\n\t\t\tbaseStats: {},\r\n\t\t\tweighthg: megaSpecies.weighthg - baseSpecies.weighthg,\r\n\t\t\toriginalMega: megaSpecies.name,\r\n\t\t\trequiredItem: megaSpecies.requiredItem,\r\n\t\t};\r\n\t\tlet statId: StatName;\r\n\t\tfor (statId in megaSpecies.baseStats) {\r\n\t\t\tdeltas.baseStats[statId] = megaSpecies.baseStats[statId] - baseSpecies.baseStats[statId];\r\n\t\t}\r\n\t\tif (megaSpecies.types.length > baseSpecies.types.length) {\r\n\t\t\tdeltas.type = 'type1';\r\n\t\t\tdeltas.type1 = megaSpecies.types[1];\r\n\t\t} else if (megaSpecies.types.length < baseSpecies.types.length) {\r\n\t\t\tdeltas.type = 'mono';\r\n\t\t} else if (megaSpecies.types[0] !== baseSpecies.types[0]) {\r\n\t\t\tdeltas.type = 'type0';\r\n\t\t\tdeltas.type0 = megaSpecies.types[0];\r\n\t\t} else if (megaSpecies.types[1] !== baseSpecies.types[1]) {\r\n\t\t\tdeltas.type = 'type1';\r\n\t\t\tdeltas.type1 = megaSpecies.types[1];\r\n\t\t}\r\n\t\tdeltas.isMega = true;\r\n\t\treturn deltas;\r\n\t},\r\n\tdoGetMixedSpecies(speciesOrForme, deltas) {\r\n\t\tif (!deltas) throw new TypeError(\"Must specify deltas!\");\r\n\t\tconst preMegaForme = this.dex.species.get(speciesOrForme);\r\n\t\tconst species = this.dex.deepClone(preMegaForme);\r\n\t\tspecies.abilities = {'0': deltas.ability};\r\n\t\tif (deltas.type === 'mono') {\r\n\t\t\tspecies.types = [species.types[0]];\r\n\t\t} else if (deltas.type === 'type1') {\r\n\t\t\tif (species.types[0] === deltas.type1) {\r\n\t\t\t\tspecies.types = [deltas.type1];\r\n\t\t\t} else {\r\n\t\t\t\tspecies.types = [species.types[0], deltas.type1];\r\n\t\t\t}\r\n\t\t} else if (deltas.type === 'type0') {\r\n\t\t\tif (species.types[1] === deltas.type0) {\r\n\t\t\t\tspecies.types = [deltas.type0];\r\n\t\t\t} else if (!species.types[1] && species.types[0] !== deltas.type0) {\r\n\t\t\t\t// single-typed Pok\u00E9mon can still have a primary type as their secondary type\r\n\t\t\t\tspecies.types = [species.types[0], deltas.type0];\r\n\t\t\t} else {\r\n\t\t\t\tspecies.types = [deltas.type0, species.types[1]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst baseStats = species.baseStats;\r\n\t\tfor (const statName in baseStats) {\r\n\t\t\tbaseStats[statName] = this.clampIntRange(baseStats[statName] + deltas.baseStats[statName], 1, 255);\r\n\t\t}\r\n\t\tspecies.weighthg = Math.max(1, species.weighthg + deltas.weighthg);\r\n\t\tspecies.originalMega = deltas.originalMega;\r\n\t\tspecies.requiredItem = deltas.requiredItem;\r\n\t\tif (deltas.isMega) species.isMega = true;\r\n\t\tspecies.deltas = deltas; // preserving deltas for potential form change compatibility\r\n\t\treturn species;\r\n\t},\r\n\t},\r\n\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
