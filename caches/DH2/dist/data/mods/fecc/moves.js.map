{
  "version": 3,
  "sources": ["../../../../data/mods/fecc/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: MoveData} = {\r\n\t//fake moves\r\n\tbigassmagnetterrain: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Big Ass Magnet Terrain\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tterrain: 'bigassmagnetterrain',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\t\tif (!pokemon.isAdjacent(this.effectState.target)) return;\r\n\t\t\t\tif (!pokemon.types.includes(\"Electric\")) {\r\n\t\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\t\tif (!pokemon.types.includes(\"Electric\")) {\r\n\t\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Big Ass Magnet Terrain', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Big Ass Magnet Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Big Ass Magnet Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\ttoxicspores: {\r\n\t\tnum: 191,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Toxic Spores\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1},\r\n\t\tsideCondition: 'toxicspores',\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spores');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasType('Poison')) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Toxic Spores', '[of] ' + pokemon);\r\n\t\t\t\t\tpokemon.side.removeSideCondition('toxicspores');\r\n\t\t\t\t} else if (pokemon.hasType('Steel') || pokemon.hasType('Electric') || !pokemon.isGrounded || pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst r = this.random(30);\r\n\t\t\t\t\tif (r < 11) {\r\n\t\t\t\t\t\tpokemon.trySetStatus('slp', pokemon);\r\n\t\t\t\t\t} else if (r < 21) {\r\n\t\t\t\t\t\tpokemon.trySetStatus('par', pokemon);\r\n\t\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\t\tpokemon.trySetStatus('psn', pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Poison\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tgoodvibe: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Good Vibe\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tsidecondition: 'goodvibe',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonSideStart(side, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Good Vibe', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Good Vibe');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 6,\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'move: Good Vibe');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tbadvibe: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Bad Vibe\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tsidecondition: 'badvibe',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonSideStart(side, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Bad Vibe', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Bad Vibe');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 6,\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'move: Bad Vibe');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tcurseofshocking: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Curse Of Shocking\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tvolatileStatus: 'curseofshocking',\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Curse Of Shocking', \"[silent]\");\r\n\t\t\t},\r\n\t\t\tonModifyTypePriority: -2,\r\n\t\t\tonModifyType(move) {\r\n\t\t\t\tif (move.id !== 'struggle') {\r\n\t\t\t\t\tthis.debug('Curse Of Shocking making move type electric');\r\n\t\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tgorilla: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Gorilla\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1},\r\n\t\tvolatileStatus: 'gorilla',\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is going apeshit!`)\r\n\t\t\t\tif (effect && ['Gorillomorphosis'].includes(effect.name)) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Gorilla', this.activeMove!.name, '[from] ability: ' + effect.name, '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Gorilla', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRestart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is still going apeshit!`)\r\n\t\t\t\tif (effect && ['Gorillomorphosis'].includes(effect.name)) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Gorilla', this.activeMove!.name, '[from] ability: ' + effect.name, '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Gorilla', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tthis.debug('Gorilla boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\t\tif (move.category === 'Physical') {\r\n\t\t\t\t\tpokemon.removeVolatile('gorilla');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Gorilla', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tmoisturizer: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Moisturizer\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1},\r\n\t\tvolatileStatus: 'moisturizer',\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is moisturizing itself!`)\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\tif (effect && ['Wet Chain'].includes(effect.name)) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Moisturizer', this.activeMove!.name, '[from] ability: ' + effect.name, '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Moisturizer', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRestart(pokemon, source, effect) {\r\n\t\t\t\tif (this.effectState.layers == 16) return;\r\n\t\t\t\tthis.add('-message', `${pokemon.name} got moistier!`);\r\n\t\t\t\tthis.effectState.layers ++;\r\n\t\t\t\tif (effect && ['Wet Chain'].includes(effect.name)) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Moisturizer', this.activeMove!.name, '[from] ability: ' + effect.name, '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Moisturizer', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 6,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is applying skincare!`);\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 16 * this.effectState.layers);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Moisturizer', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t\r\n\t//vanilla moves\r\n\tragingbull: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Tauros-Paldea-Combat':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tauros-Paldea-Blaze':\r\n\t\t\tcase 'Meowscauros-Paldea-Blaze':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tauros-Paldea-Aqua':\r\n\t\t\tcase 'Grenos-Paldea-Aqua':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\taurawheel: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Type depends on forme. 100% +1 Spe.\",\r\n\t\tonTry: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\t\tcase 'Morform':\r\n\t\t\t\tcase 'Baseball':\r\n\t\t\t\t\tmove.type = 'Normal';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Morform-Rainy':\r\n\t\t\t\tcase 'Watermelon':\r\n\t\t\t\t\tmove.type = 'Water';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Morform-Sunny':\r\n\t\t\t\tcase 'Basketball':\r\n\t\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Morform-Snowy':\r\n\t\t\t\tcase 'Snowball':\r\n\t\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Football':\r\n\t\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Soccerball':\r\n\t\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Tennisball':\r\n\t\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Cricketball':\r\n\t\t\t\t\tmove.type = 'Bug';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Cabbage':\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Plasmaball':\r\n\t\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Crystalball':\r\n\t\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '8ball':\r\n\t\t\t\t\tmove.type = 'Dark';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Gumball':\r\n\t\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Discoball':\r\n\t\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TheMoon':\r\n\t\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Rock':\r\n\t\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Virus':\r\n\t\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Dragonball':\r\n\t\t\t\t\tmove.type = 'Dragon';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tattract: {\r\n\t\tinherit: true,\r\n\t\tonTryImmunity(target, source) {\r\n\t\t\treturn (source.hasAbility(\"pansexual\")) || (target.gender === 'M' && source.gender === 'F') || (target.gender === 'F' && source.gender === 'M');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect.name === 'Pansexual' || source.hasAbility(\"pansexual\")) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Attract', '[from] ability: Pansexual', '[of] ' + source);\r\n\t\t\t\t}  else if (!source.hasAbility(\"pansexual\") && !(pokemon.gender === 'M' && source.gender === 'F') && !(pokemon.gender === 'F' && source.gender === 'M')) {\r\n\t\t\t\t\tthis.debug('incompatible gender');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (!this.runEvent('Attract', pokemon, source)) {\r\n\t\t\t\t\tthis.debug('Attract event failed');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (effect.name === 'Destiny Knot') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Attract', '[from] item: Destiny Knot', '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Attract');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (this.effectState.source && !this.effectState.source.isActive && pokemon.volatiles['attract']) {\r\n\t\t\t\t\tthis.debug('Removing Attract volatile on ' + pokemon);\r\n\t\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 2,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Attract', '[of] ' + this.effectState.source);\r\n\t\t\t\tif (this.randomChance(1, 2)) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'Attract');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Attract', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tstuffcheeks: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (!this.boost({def: 2})) return null;\r\n\t\t\tpokemon.eatItem(true);\r\n\t\t\tif (pokemon.hasAbility('swaloseedlol')) {\r\n\t\t\t\tpokemon.setItem(item);\r\n\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\tthis.add('-item', pokemon, item, '[from] ability: Swaloseed-Lol');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdarkvoid: {\r\n\t\tinherit: true,\r\n\t\tonTry(source, target, move) {\r\n\t\t\tif (source.species.name === 'Darkerupt' || move.hasBounced) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-fail', source, 'move: Dark Void');\r\n\t\t\tthis.hint(\"Only a Pokemon whose form is Darkerupt can use this move.\");\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\thyperspacefury: {\r\n\t\tinherit: true,\r\n\t\tonTry(source) {\r\n\t\t\tif (source.species.name === 'Hooporant-Unbound') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.hint(\"Only a Pokemon whose form is Hooporant Unbound can use this move.\");\r\n\t\t\tif (source.species.name === 'Hooporant') {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', source, 'move: Hyperspace Fury', '[forme]');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-fail', source, 'move: Hyperspace Fury');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tjudgment: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tlet type = pokemon.getTypes()[0];\r\n\t\t\tif (type === \"Bird\") type = \"???\";\r\n\t\t\tif (type === \"Stellar\") type = pokemon.getTypes(false, true)[0];\r\n\t\t\tmove.type = type;\r\n\t\t},\r\n\t},\r\n\tterastarstorm: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (pokemon.species.name === 'Teradoof-Stellar') {\r\n\t\t\t\tmove.type = 'Stellar';\r\n\t\t\t\tif (pokemon.terastallized && pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\t\tmove.category = 'Physical';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.species.name === 'Teradoof-Stellar') {\r\n\t\t\t\tmove.target = 'allAdjacentFoes';\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trapidspin: {\r\n\t\tinherit: true,\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'toxicspores', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'toxicspores', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdefog: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'toxicspores', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tcourtchange: {\r\n\t\tinherit: true,\r\n\t\tonHitField(target, source) {\r\n\t\t\tconst sideConditions = [\r\n\t\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'toxicspores', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t\t];\r\n\t\t\tlet success = false;\r\n\t\t\tif (this.gameType === \"freeforall\") {\r\n\t\t\t\t// random integer from 1-3 inclusive\r\n\t\t\t\tconst offset = this.random(3) + 1;\r\n\t\t\t\t// the list of all sides in counterclockwise order\r\n\t\t\t\tconst sides = [this.sides[0], this.sides[2]!, this.sides[1], this.sides[3]!];\r\n\t\t\t\tconst temp: {[k: number]: typeof source.side.sideConditions} = {0: {}, 1: {}, 2: {}, 3: {}};\r\n\t\t\t\tfor (const side of sides) {\r\n\t\t\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\t\ttemp[side.n][id] = side.sideConditions[id];\r\n\t\t\t\t\t\tdelete side.sideConditions[id];\r\n\t\t\t\t\t\tconst effectName = this.dex.conditions.get(id).name;\r\n\t\t\t\t\t\tthis.add('-sideend', side, effectName, '[silent]');\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\t\tconst sourceSideConditions = temp[sides[i].n];\r\n\t\t\t\t\tconst targetSide = sides[(i + offset) % 4]; // the next side in rotation\r\n\t\t\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\t\t\ttargetSide.sideConditions[id] = sourceSideConditions[id];\r\n\t\t\t\t\t\tconst effectName = this.dex.conditions.get(id).name;\r\n\t\t\t\t\t\tlet layers = sourceSideConditions[id].layers || 1;\r\n\t\t\t\t\t\tfor (; layers > 0; layers--) this.add('-sidestart', targetSide, effectName, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst sourceSideConditions = source.side.sideConditions;\r\n\t\t\t\tconst targetSideConditions = source.side.foe.sideConditions;\r\n\t\t\t\tconst sourceTemp: typeof sourceSideConditions = {};\r\n\t\t\t\tconst targetTemp: typeof targetSideConditions = {};\r\n\t\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\tsourceTemp[id] = sourceSideConditions[id];\r\n\t\t\t\t\tdelete sourceSideConditions[id];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in targetSideConditions) {\r\n\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\ttargetTemp[id] = targetSideConditions[id];\r\n\t\t\t\t\tdelete targetSideConditions[id];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in sourceTemp) {\r\n\t\t\t\t\ttargetSideConditions[id] = sourceTemp[id];\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in targetTemp) {\r\n\t\t\t\t\tsourceSideConditions[id] = targetTemp[id];\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-swapsideconditions');\r\n\t\t\t}\r\n\t\t\tif (!success) return false;\r\n\t\t\tthis.add('-activate', source, 'move: Court Change');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n};"],
  "mappings": "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",
  "names": []
}
