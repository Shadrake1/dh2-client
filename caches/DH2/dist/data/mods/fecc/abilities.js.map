{
  "version": 3,
  "sources": ["../../../../data/mods/fecc/abilities.ts"],
  "sourcesContent": ["import {Pokemon} from '../../../sim/pokemon';\r\nimport {FS} from '../../../lib';\r\nimport {toID} from '../../../sim/dex-data';\r\nimport randbats from '../../random-battles/gen9/teams';\r\nconst randomSets: {[species: string]: RandomTeamsTypes.RandomSpeciesData} = require('../../random-battles/gen9/sets.json');\r\nconst usergroups: {[userid: string]: string} = {};\r\nconst usergroupData = FS('config/usergroups.csv').readIfExistsSync().split('\\n');\r\nfor (const row of usergroupData) {\r\n\tif (!toID(row)) continue;\r\n\r\n\tconst cells = row.split(',');\r\n\tif (cells.length > 3) throw new Error(`Invalid entry when parsing usergroups.csv`);\r\n\tusergroups[toID(cells[0])] = cells[1].trim() || ' ';\r\n}\r\n\r\nexport function getName(name: string): string {\r\n\tconst userid = toID(name);\r\n\tif (!userid) throw new Error('No/Invalid name passed to getSymbol');\r\n\r\n\tconst group = usergroups[userid] || ' ';\r\n\treturn group + name;\r\n}\r\n\r\nexport function deepClone(obj: any): any {\r\n\tif (obj === null || typeof obj !== 'object') return obj;\r\n\tif (Array.isArray(obj)) return obj.map(prop => deepClone(prop));\r\n\tconst clone = Object.create(Object.getPrototypeOf(obj));\r\n\tfor (const key of Object.keys(obj)) {\r\n\t\tclone[key] = deepClone(obj[key]);\r\n\t}\r\n\treturn clone;\r\n}\r\n\r\nexport function deepCopyInto(obj1: any, obj2: any): void {\r\n  if (obj2 === null || typeof obj2 !== 'object') {\r\n    return; // Nothing to copy if obj2 is not an object\r\n  }\r\n\r\n  if (Array.isArray(obj2)) {\r\n    if (!Array.isArray(obj1)) {\r\n      obj1 = []; // Initialize obj1 as an array if it's not already\r\n    }\r\n    // Ensure obj1 has the same length as obj2\r\n    obj1.length = obj2.length;\r\n    for (let i = 0; i < obj2.length; i++) {\r\n      if (typeof obj2[i] === 'object' && obj2[i] !== null) {\r\n        if (typeof obj1[i] !== 'object' || obj1[i] === null) {\r\n          obj1[i] = Array.isArray(obj2[i]) ? [] : Object.create(Object.getPrototypeOf(obj2[i]));\r\n        }\r\n        deepCopyInto(obj1[i], obj2[i]);\r\n      } else {\r\n        obj1[i] = obj2[i];\r\n      }\r\n    }\r\n  } else {\r\n    for (const key of Object.keys(obj2)) {\r\n      if (typeof obj2[key] === 'object' && obj2[key] !== null) {\r\n        if (typeof obj1[key] !== 'object' || obj1[key] === null) {\r\n          obj1[key] = Array.isArray(obj2[key]) ? [] : Object.create(Object.getPrototypeOf(obj2[key]));\r\n        }\r\n        deepCopyInto(obj1[key], obj2[key]);\r\n      } else {\r\n        obj1[key] = obj2[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\t/*\r\n\tplaceholder: {\r\n\t\t\r\n\t\tflags: {},\r\n\t\tname: \"\",\r\n\t\tshortDesc: \"\",\r\n\t},\r\n\t*/\r\n\taimforthehorn: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Aim For The Horn');\r\n\t\t},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif(move.id !== 'struggle') return null;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Aim For The Horn\",\r\n\t\t//shortDesc: \"This Pokemon's moves and their effects have no effect.\",\r\n\t},\r\n\tbongcloud: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.totalFainted) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Bongcloud');\r\n\t\t\t\tconst fallen = Math.min(pokemon.side.totalFainted, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t\tif(pokemon.leveled) return;\r\n\t\t\t\tpokemon.level += 20 * fallen;\r\n\t\t\t\tpokemon.set.level += 20 * fallen;\r\n\t\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t\tconst details = pokemon.species.name + (pokemon.level === 100 ? '' : ', L' + pokemon.level) +\r\n\t\t\t\t\t(pokemon.gender === '' ? '' : ', ' + pokemon.gender) + (pokemon.set.shiny ? ', shiny' : '');\r\n\t\t\t\tthis.add('replace', pokemon, details, '[silent]');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} gained EXP from the fallen and is now at level ${pokemon.level}!`);\r\n\t\t\t\tpokemon.leveled = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\treturn Math.trunc(Math.trunc(2 * pokemon.baseSpecies.baseStats['atk'] + pokemon.set.ivs['atk'] + Math.trunc(pokemon.set.evs['atk'] / 4)) * pokemon.set.level / 100 + 5);\r\n\t\t},\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\treturn Math.trunc(Math.trunc(2 * pokemon.baseSpecies.baseStats['def'] + pokemon.set.ivs['def'] + Math.trunc(pokemon.set.evs['def'] / 4)) * pokemon.set.level / 100 + 5);\r\n\t\t},\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\treturn Math.trunc(Math.trunc(2 * pokemon.baseSpecies.baseStats['spa'] + pokemon.set.ivs['spa'] + Math.trunc(pokemon.set.evs['spa'] / 4)) * pokemon.set.level / 100 + 5);\r\n\t\t},\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\treturn Math.trunc(Math.trunc(2 * pokemon.baseSpecies.baseStats['spd'] + pokemon.set.ivs['spd'] + Math.trunc(pokemon.set.evs['spd'] / 4)) * pokemon.set.level / 100 + 5);\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\treturn Math.trunc(Math.trunc(2 * pokemon.baseSpecies.baseStats['spe'] + pokemon.set.ivs['spe'] + Math.trunc(pokemon.set.evs['spe'] / 4)) * pokemon.set.level / 100 + 5);\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bongcloud\",\r\n\t\t//shortDesc: \"This Pokemon gains 20 levels for each fainted ally, up to 5.\",\r\n\t},\r\n\tjankster: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Jankster', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.addVolatile(\"jankster\");\r\n\t\t\t\t\tthis.add('-message', `${target.name} was slowed down!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Jankster', '[silent]');\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\t\treturn priority - 1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Jankster\",\r\n\t\t//shortDesc: \"On switch-in, this Pokemon lowers opposing Pokemon's priority by 1.\",\r\n\t},\r\n\tbaseballed: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (source.hasType(move.type) && target !== source) {\r\n\t\t\t\tthis.add(`raw|<img src=\"https://i.imgur.com/7KKaKgO.png\" height=\"400\" width=\"400\">`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Baseballed!\",\r\n\t\t//shortDesc: \"This Pokemon is non-grounded, and is immune to its own and the opponent's STABs.\",\r\n\t},\r\n\tgoondrive: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status && !pokemon.volatiles['goondrive']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Goon Drive');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is gooning!`);\r\n\t\t\t\tpokemon.addVolatile('goondrive');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['goondrive'];\r\n\t\t\tthis.add('-end', pokemon, 'Goon Drive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Goon Drive');\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'goondrive' + this.effectState.bestStat, '[silent]');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Goon Drive atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Goon Drive def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Goon Drive spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Goon Drive spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('seriousshowdown')) {\r\n\t\t\t\t\t\tthis.debug('Serious Showdown negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Goon Drive spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Goon Drive\",\r\n\t\t//shortDesc: \"If this Pokemon is statused, its Attack is 1.5x and highest stat is 1.3x, or 1.5x if Speed; ignores burn halving physical damage.\",\r\n\t},\r\n\tperfectfreeze: {\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'hail') return false;\r\n\t\t},\r\n\t\tonModifyAccuracyPriority: -1,\r\n\t\tonModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tif (this.field.isWeather(['hail', 'snow'])) {\r\n\t\t\t\tthis.debug('Perfect Freeze - decreasing accuracy');\r\n\t\t\t\treturn this.chainModify([2731, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Perfect Freeze\",\r\n\t\t//shortDesc: \"This Pokemon's moves have their secondary effect chance doubled.  If Snow is active, this Pokemon's evasiveness is 1.5x.\",\r\n\t},\r\n\timtosper: {\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\t// Imposter does not activate when Skill Swapped or when Neutralizing Gas leaves the field\r\n\t\t\tif (!this.effectState.switchingIn) return;\r\n\t\t\t// copies across in doubles/triples\r\n\t\t\t// (also copies across in multibattle and diagonally in free-for-all,\r\n\t\t\t// but side.foe already takes care of those)\r\n\t\t\tconst target = pokemon.side.foe.active[pokemon.side.foe.active.length - 1 - pokemon.position];\r\n\t\t\tif (target) {\r\n\t\t\t\ttarget.transformInto(pokemon, this.dex.abilities.get('imtosper'));\r\n\t\t\t}\r\n\t\t\tthis.effectState.switchingIn = false;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"Imtosper\",\r\n\t\t//shortDesc: \"On switchin, the opponent transforms into this Pokemon.\",\r\n\t},\r\n\ttrepidsword: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!this.canSwitch(pokemon.side) || pokemon.forceSwitchFlag || pokemon.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.switchFlag = true;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Trepid Sword');\r\n\t\t\tthis.add('-message', \"Oak's words echoed... There's a time and place for everything, but not now.\");\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Trepid Sword\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon switches out.\",\r\n\t},\r\n\tmagicmissile: {\r\n\t\t/*\r\n\t\tNeed to test:\r\n\t\t- any Berry\r\n\t\t- Toxic Orb, Flame Orb or Light Ball (just one they're the same code)\r\n\t\t- White Herb\r\n\t\t- Mental Herb\r\n\t\t- um, I guess making sure Razor Claw or Razor Fang (just one they're the same code) doesn't immediately crash,\r\n\t\tbut it would be basically impossible for them to cause a flinch in a singles context\r\n\t\t(how does this behave with Instruct? maybe you could test with that if you're doing the doubles format Aquatic mentioned)\r\n\t\t*/\r\n\t\tname: \"Magic Missile\",\r\n\t\t//shortDesc: \"If hit by a contact move while holding an item: lose item, apply item Fling effects, attacker loses 1/4 max HP. If hitting a foe with a contact move while not holding an item: steals the foe's item.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Magic Missile', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.isSemiInvulnerable()) return;\r\n\t\t\tif (target.ignoringItem()) return false;\r\n\t\t\tconst item = target.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, target.itemData, target, target, move, item)) return false;\r\n\t\t\tif (item.id && !item.megaStone) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\ttarget.addVolatile('fling');\r\n\t\t\t\tif (item.is\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, source, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', source, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') source.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) source.ateBerry = true;\r\n\t\t\t\t} else if (item.id === 'mentalherb') {\r\n\t\t\t\t\tconst conditions = ['attract', 'taunt', 'encore', 'torment', 'disable', 'healblock'];\r\n\t\t\t\t\tfor (const firstCondition of conditions) {\r\n\t\t\t\t\t\tif (source.volatiles[firstCondition]) {\r\n\t\t\t\t\t\t\tfor (const secondCondition of conditions) {\r\n\t\t\t\t\t\t\t\tsource.removeVolatile(secondCondition);\r\n\t\t\t\t\t\t\t\tif (firstCondition === 'attract' && secondCondition === 'attract') {\r\n\t\t\t\t\t\t\t\t\tthis.add('-end', source, 'move: Attract', '[from] item: Mental Herb');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (item.id === 'whiteherb') {\r\n\t\t\t\t\tlet activate = false;\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tlet i: BoostName;\r\n\t\t\t\t\tfor (i in source.boosts) {\r\n\t\t\t\t\t\tif (source.boosts[i] < 0) {\r\n\t\t\t\t\t\t\tactivate = true;\r\n\t\t\t\t\t\t\tboosts[i] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (activate) {\r\n\t\t\t\t\t\tsource.setBoost(boosts);\r\n\t\t\t\t\t\tthis.add('-clearnegativeboost', source, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (item.fling && item.fling.status) {\r\n\t\t\t\t\t\tsource.trySetStatus(item.fling.status, target);\r\n\t\t\t\t\t} else if (item.fling && item.fling.volatileStatus) {\r\n\t\t\t\t\t\tsource.addVolatile(item.fling.volatileStatus, target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tstinkyveil: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Toxic Chain's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.trySetStatus('tox', source);\r\n\t\t\t}\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('attract', this.effectState.target);\r\n\t\t\t}\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('disable', this.effectState.target);\r\n\t\t\t}\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('encore', this.effectState.target);\r\n\t\t\t}\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('healblock', this.effectState.target);\r\n\t\t\t}\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('taunt', this.effectState.target);\r\n\t\t\t}\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('torment', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stinky Veil\",\r\n\t\t//shortDesc: \"This Pokemon's moves have a 30% chance of causing Toxic, Attract, Disable, Encore, Heal Block, Taunt, and Torment.\",\r\n\t},\r\n\tsecondphase: {\r\n\t\tonDamagePriority: -40,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp && target.species.id == 'zygarb') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Second Phase');\r\n\t\t\t\tthis.add('-message', `But ${target.name} refused.`);\r\n\t\t\t\tthis.effectState.secondPhase = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.species.id == 'zygarb' && this.effectState.secondPhase) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} recycled itself to save the environment!`);\r\n\t\t\t\tpokemon.formeChange('Zygarb-Recycled', this.effect, true);\r\n\t\t\t\tpokemon.addVolatile('fakedynamax');\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1, notransform: 1},\r\n\t\tname: \"Second Phase\",\r\n\t\t//shortDesc: \"Changes to Zygarb-Recycled at 0 or less HP and fully heals user.\",\r\n\t},\r\n\tasonesex: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'As One (Sex)');\r\n\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName('anaconja')}|What the hell? Parasex?`);\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add(`raw|<img src=\"https://i.imgur.com/3QF9UUi.jpeg\" height=\"538\" width=\"720\">`);\r\n\t\t\t\tthis.boost({atk: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.status && source.runStatusImmunity('powder')) {\r\n\t\t\t\tconst r = this.random(100);\r\n\t\t\t\tif (r < 11) {\r\n\t\t\t\t\tsource.setStatus('slp', target);\r\n\t\t\t\t} else if (r < 21) {\r\n\t\t\t\t\tsource.setStatus('par', target);\r\n\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\tsource.setStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp && !source.status && source.runStatusImmunity('powder')) {\r\n\t\t\t\tthis.add(`raw|<img src=\"https://i.imgur.com/COMfOZm.jpeg\" height=\"538\" width=\"720\">`);\r\n\t\t\t\tconst r = this.random(30);\r\n\t\t\t\tif (r < 11) {\r\n\t\t\t\t\tsource.setStatus('slp', target);\r\n\t\t\t\t} else if (r < 21) {\r\n\t\t\t\t\tsource.setStatus('par', target);\r\n\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\tsource.setStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t} else if (!target.status && target.runStatusImmunity('powder')){\r\n\t\t\t\tconst r = this.random(100);\r\n\t\t\t\tif (r < 11) {\r\n\t\t\t\t\tsource.setStatus('slp', target);\r\n\t\t\t\t} else if (r < 21) {\r\n\t\t\t\t\tsource.setStatus('par', target);\r\n\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\tsource.setStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"As One (Sex)\",\r\n\t\t//shortDesc: \"Chilling Neigh effects. This Pokemon's and the opponent's attacks have a 30% chance to Poison/Paralyze/Sleep the target(s). When the user is killed by an attack, the attacker is inflicted with Poison/Paralysis/Sleep.\",\r\n\t},\r\n\tcorruptcouncil: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst dark = Math.min(pokemon.side.pokemon.filter(x => x.types.includes('Dark')).length, 5);\r\n\t\t\tif (dark > 0) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Corrupt Council');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} gained votes from the council!`);\r\n\t\t\t\tthis.add('-start', pokemon, `council: ${dark}`, '[silent]');\r\n\t\t\t\tthis.effectState.dark = dark;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `dark${this.effectState.dark}`, '[silent]');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.dark) {\r\n\t\t\t\tconst powMod = [4096, 4506, 4915, 5325, 5734, 6144];\r\n\t\t\t\tthis.debug(`Supreme Overlord boost: ${powMod[this.effectState.dark]}/4096`);\r\n\t\t\t\treturn this.chainModify([powMod[this.effectState.dark], 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Corrupt Council\",\r\n\t\t//shortDesc: \"This Pokemon's moves have 10% more power for each Dark-type ally, up to 5 allies.\",\r\n\t},\r\n\tplatedarmor: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') {\r\n\t\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Plated Armor\",\r\n\t\t//shortDesc: \"This Pokemon heals 1/16 max HP instead of taking recoil damage besides Struggle/Life Orb/crash damage.\",\r\n\t},\r\n\tvaporgrowth: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\tif (attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\t\tthis.debug('Vapor Growth boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t} else return this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\tif (attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\t\tthis.debug('Vapor Growth boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t} else return this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vapor Growth\",\r\n\t\t//shortDesc: \"This Pokemon's Grass-type moves have x1.3 power and x1.5 power below 1/3 max HP.\",\r\n\t},\r\n\tairheaded: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Airheaded');\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tboosts['atk'] = 0;\r\n\t\t\tboosts['def'] = 0;\r\n\t\t\tboosts['spa'] = 0;\r\n\t\t\tboosts['spd'] = 0;\r\n\t\t\tboosts['spe'] = 0;\r\n\t\t\tboosts['accuracy'] = 0;\r\n\t\t\tboosts['evasion'] = 0;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Airheaded\",\r\n\t\t//shortDesc: \"While this Pokemon is active, the effects of all stat changes are ignored.\",\r\n\t},\r\n\tbigassmagnets: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (!pokemon.isAdjacent(this.effectState.target)) return;\r\n\t\t\tif (!pokemon.types.includes(\"Electric\")) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.types.includes(\"Electric\")) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('bigassmagnetterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Big Ass Magnets\",\r\n\t\t//shortDesc: \"Traps opposing Pokemon that aren't Electric-type. On switchin, summons Big Ass Magnet Terrain for 5 turns, which prevent non-Electric Pokemon on the field from switching out.\",\r\n\t},\r\n\tloosefuse: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.id == 'explosion') return;\r\n\t\t\tif (this.randomChance(1, 10)) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(source.name)}|Muck this world.`);\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(source.name)}|That is my final message`);\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(source.name)}|Good bye.`);\r\n\t\t\t\tconst explosion = this.dex.getActiveMove('explosion');\r\n\t\t\t\tthis.actions.useMove(explosion, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Loose Fuse\",\r\n\t\t//shortDesc: \"This Pokemon's attacks without a chance to make the user explode gain a 10% chance to make the user explode.\",\r\n\t},\r\n\tswaloseedlol: {\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif (!pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Swaloseed-Lol');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tif(pokemon.ate) return;\r\n\t\t\tif (item.isBerry) {\r\n\t\t\t\tif (this.singleEvent('Eat', item, null, pokemon, null, null)) {\r\n\t\t\t\t\tpokemon.ate = true;\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} swallowed!`);\r\n\t\t\t\t\tthis.runEvent('EatItem', pokemon, null, null, item);\r\n\t\t\t\t\tpokemon.setItem(pokemon.item);\r\n\t\t\t\t\tthis.add('-item', pokemon, pokemon.item);\r\n\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tpokemon.ate = false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Swaloseed-Lol\",\r\n\t\t//shortDesc: \"Sticky Hold effects. When the user eats a Berry, it is used twice and not consumed.\",\r\n\t},\r\n\trandomdanceparty: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst dances = [\"aquastep\", \"clangoroussoul\", \"dragondance\", \"featherdance\", \"fierydance\", \"lunardance\", \"petaldance\", \"quiverdance\", \"revelationdance\", \"swordsdance\", \"teeterdance\", \"victorydance\"];\r\n\t\t\tlet target = pokemon;\r\n\t\t\tconst dance = this.dex.getActiveMove(this.sample(dances));\r\n\t\t\tif (dance.target != \"self\") {\r\n\t\t\t\tif(pokemon.adjacentFoes().length == 0) return;\r\n\t\t\t\ttarget = this.sample(pokemon.adjacentFoes());\r\n\t\t\t}\r\n\t\t\tthis.add('-message', \"!!!RANDOM DANCE PARTY!!!\");\r\n\t\t\tthis.actions.useMove(dance, pokemon, target);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"RANDOM DANCE PARTY!\",\r\n\t\t//shortDesc: \"This Pokemon uses a random dance move at the end of each turn.\",\r\n\t},\r\n\tlarping: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst abilities = this.dex.abilities.all();\r\n\t\t\tconst newAbility = this.sample(abilities);\r\n\t\t\tif (pokemon.setAbility(newAbility.id)) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is getting into character!`);\r\n\t\t\t\tthis.add('-activate', pokemon, `ability: ${newAbility.name}`, '[of] ' + pokemon);\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s ability is now ${newAbility.name}!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"LARPing\",\r\n\t\t//shortDesc: \"On switch-in, this Pokemon gains a random ability.\",\r\n\t},\r\n\tdotheroar: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (!activated) this.add('-ability', pokemon, 'Do The Roar');\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in target.storedStats) {\r\n\t\t\t\t\tif (target.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = target.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} roared!`);\r\n\t\t\t\t\tswitch(statName) {\r\n\t\t\t\t\t\tcase 'atk':\r\n\t\t\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'def':\r\n\t\t\t\t\t\t\tthis.boost({def: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'spa':\r\n\t\t\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'spd':\r\n\t\t\t\t\t\t\tthis.boost({spd: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'spe':\r\n\t\t\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Do The Roar\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon lowers the highest stat of adjacent opponents by 1.\",\r\n\t},\r\n\tcoldsleep: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.status === 'slp') {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Coldsleep');\r\n\t\t\t\t\tthis.add('-message', `${target.name} is frozen in fear!`);\r\n\t\t\t\t\ttarget.setStatus('frz');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Coldsleep');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'frz') return false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Coldsleep\",\r\n\t\t//shortDesc: \"Causes sleeping foes to be frozen at the end of each turn. The user cannot be frozen or put to sleep.\",\r\n\t},\r\n\ttoxicspores: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tconst side = source.isAlly(target) ? source.side.foe : source.side;\r\n\t\t\tconst toxicSpores = side.sideConditions['toxicspores'];\r\n\t\t\tif (move.category === 'Physical' && !toxicSpores) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Toxic Spores');\r\n\t\t\t\tside.addSideCondition('toxicspores', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Toxic Spores\",\r\n\t\t//shortDesc: \"If this Pokemon is hit by a physical attack, Dire Spores are set on the opposing side.\",\r\n\t},\r\n\tgiantenemyspider: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Giant Enemy Spider');\r\n\t\t\tthis.add('-message', `Run.`);\r\n\t\t\tpokemon.addVolatile('fakedynamax');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.isAlly(source)) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Stakeout boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Stakeout boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Giant Enemy Spider\",\r\n\t\t//shortDesc: \"Pressure + Stakeout\",\r\n\t},\r\n\tgoodvibes: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.side.addSideCondition('goodvibe');\r\n\t\t},\r\n\t\tonModifyAtkPriority: 6,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.side.getSideCondition('badvibe')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Good Vibes\",\r\n\t\t//shortDesc: \"On switch-in, sets Good Vibes for 5 turns. This Pokemon has 1.5x Atk in Bad Vibes.\",\r\n\t},\r\n\tbadvibes: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.side.addSideCondition('badvibe');\r\n\t\t},\r\n\t\tonModifySpAPriority: 6,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (pokemon.side.getSideCondition('goodvibe')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bad Vibes\",\r\n\t\t//shortDesc: \"On switch-in, sets Bad Vibes for 5 turns. This Pokemon has 1.5x SpA in Good Vibes.\",\r\n\t},\r\n\triptides: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Zyggizaggi' || pokemon.level < 20 || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tthis.add('-message', \"Math is my middle name(it isn't really)\");\r\n\t\t\tthis.add(`raw|<img src=\"https://i.imgur.com/kKT2wU0.png\" height=\"1332\" width=\"859\">`);\r\n\t\t\t\r\n\t\t\tlet changeHP = false;\r\n\t\t\tlet previousFormeHP = pokemon.species.baseStats.hp;\r\n\t\t\t\r\n\t\t\tswitch(pokemon.species.forme) {\r\n\t\t\t\tcase \"Solo-10%\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-10%', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Solo-50%\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-50%', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"School-10%\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-10%', this.effect, true);\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(pokemon.hp < pokemon.maxhp / 2) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"School-50%\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-50%', this.effect, true);\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(pokemon.hp < pokemon.maxhp / 2) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"School-Complete\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Solo-Complete\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Complete-School\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Complete-Solo', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Complete-Solo\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Complete-School', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(pokemon.species.baseStats.hp > previousFormeHP) changeHP = true;\r\n\t\t\t\r\n\t\t\tif (changeHP) {\r\n\t\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100) * pokemon.level / 100 + 10);\r\n\t\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Zyggizaggi' || pokemon.level < 20 || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\t\r\n\t\t\tlet changeHP = false;\r\n\t\t\tlet previousFormeHP = pokemon.species.baseStats.hp;\r\n\t\t\t\r\n\t\t\tswitch(pokemon.species.forme) {\r\n\t\t\t\tcase \"Solo-10%\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-10%', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Solo-50%\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-50%', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"School-10%\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-10%', this.effect, true);\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(pokemon.hp < pokemon.maxhp / 2) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"School-50%\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-50%', this.effect, true);\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(pokemon.hp < pokemon.maxhp / 2) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"School-Complete\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Solo-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Solo-Complete\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-School-Complete', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Complete-School\":\r\n\t\t\t\t\tif(pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Complete-Solo', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Complete-Solo\":\r\n\t\t\t\t\tif(pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Riptides');\r\n\t\t\t\t\t\tpokemon.formeChange('Zyggizaggi-Complete-School', this.effect, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(pokemon.species.baseStats.hp > previousFormeHP) changeHP = true;\r\n\t\t\t\r\n\t\t\tif (changeHP) {\r\n\t\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100) * pokemon.level / 100 + 10);\r\n\t\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Riptides\",\r\n\t\t//shortDesc: \"If 50% or 10%: At full HP, its form is School-50% or School-10%. If its HP falls below 1/2 but above 1/4, becomes School-Complete. If HP falls below 1/4, becomes Solo-Complete. If the form is School-Complete, turns into Complete-Solo at below 1/4 max HP. If the form is Solo-Complete, turns into Complete-School at above 1/4 max HP\",\r\n\t},\r\n\tpillage: {\r\n\t\tname: \"Pillage\",\r\n\t\t//shortDesc: \"On switch-in, swaps ability with the opponent.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.foes().some(\r\n\t\t\t\tfoeActive => foeActive && foeActive.isAdjacent(pokemon) && foeActive.ability === 'noability'\r\n\t\t\t) || pokemon.species.id !== 'hatterune') {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || !this.effectState.switchingIn) return;\r\n\t\t\tconst possibleTargets = pokemon.foes().filter(foeActive => foeActive && !foeActive.getAbility().flags['notrace']\r\n\t\t\t\t&& !foeActive.getAbility().flags['failskillswap'] && foeActive.isAdjacent(pokemon));\r\n\t\t\tif (!possibleTargets.length) return;\r\n\t\t\tconst rand = (possibleTargets.length > 1) ? this.random(possibleTargets.length) : 0;\r\n\t\t\tconst target = possibleTargets[rand];\r\n\t\t\tconst pillageAbil = pokemon.getAbility();\r\n\t\t\tconst ability = target.getAbility();\r\n\t\t\tif (!this.runEvent('SetAbility', target, pokemon, this.effect, pillageAbil)\r\n\t\t\t   || !this.runEvent('SetAbility', pokemon, pokemon, this.effect, ability)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Pillage');\r\n\t\t\tthis.add('-activate', pokemon, 'move: Skill Swap', ability, pillageAbil, '[of] ' + target);\r\n\t\t\tthis.singleEvent('End', pillageAbil, pillageAbil.abilityState, pokemon);\r\n\t\t\tthis.singleEvent('End', ability, ability.abilityState, target);\r\n\t\t\tpokemon.ability = ability.id\r\n\t\t\tpokemon.abilityState = {id: this.toID(pokemon.ability), target: pokemon};\r\n\t\t\ttarget.ability = pillageAbil.id;\r\n\t\t\ttarget.abilityState = {id: this.toID(pillageAbil.id), target: target};\r\n\t\t\tthis.singleEvent('Start', ability, pokemon.abilityState, pokemon);\r\n\t\t\tthis.singleEvent('Start', pillageAbil, target.abilityState, target);\r\n\t\t\t\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noentrain: 1, notrace: 1},\r\n\t\trating: 5,\r\n\t},\r\n\tgorillomorphosis: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\ttarget.addVolatile('gorilla');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gorillomorphosis\",\r\n\t\t//shortDesc: \"When this Pokemon is damaged by an attack, its next physical move has 1.5x power.\",\r\n\t},\r\n\teatpaint: {\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (target && source !== target) {\r\n\t\t\t\tif (target.addVolatile('eatpaint')) {\r\n\t\t\t\t\ttarget.volatiles['eatpaint'].move = this.dex.getActiveMove(move.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 2,\r\n\t\t\tonResidualOrder: 28,\r\n\t\t\tonResidualSubOrder: 2,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (pokemon.hp) {\r\n\t\t\t\t\tconst newMove = this.effectState.move;\r\n\t\t\t\t\tif(pokemon.adjacentFoes().length == 0) return;\r\n\t\t\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Eat Paint');\r\n\t\t\t\t\tthis.actions.useMove(newMove, pokemon, target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Eat Paint\",\r\n\t\t//shortDesc: \"When this Pokemon is hit by a move, it uses that move at the end of the next turn.\",\r\n\t},\r\n\tmuckedup: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tthis.add('-message', `${target.name} is mucked up!`);\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mucked Up\",\r\n\t\t//shortDesc: \"When this Pokemon is hit with a contact move, its Speed is raised by 1.\",\r\n\t},\r\n\tweatherwar: {\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst formes = [\"Morform\", \"Morform-Rainy\", \"Morform-Sunny\", \"Morform-Snowy\"];\r\n\t\t\tif (pokemon.species.baseSpecies !== 'Morform' || pokemon.terastallized) return;\r\n\t\t\tconst targetForme = formes[(formes.indexOf(pokemon.species.name) + 1) % 4];\r\n\t\t\tthis.add('-message', `${pokemon.name} has more formes!`);\r\n\t\t\tpokemon.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Weather War\",\r\n\t\t//shortDesc: \"Changes form and the type of Aura Wheel at the end of every turn.\",\r\n\t},\r\n\tasoneou: {\r\n\t\tonStart(pokemon) {\r\n\t\t\t//proto\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t\t\r\n\t\t\t//intim\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'As One (OU)', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('asoneou');\r\n\t\t\t} else if (!pokemon.volatiles['asoneou']?.fromBooster && this.field.weather !== 'sunnyday') {\r\n\t\t\t\t// Protosynthesis will not deactivite if Sun is suppressed, hence the direct ID check (isWeather respects supression)\r\n\t\t\t\tpokemon.removeVolatile('asoneou');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['asoneou'];\r\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: As One (OU)', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: As One (OU)');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'asoneou' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('As One (OU) atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('As One (OU) def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('As One (OU) spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('As One (OU) spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('seriousshowdown')) {\r\n\t\t\t\t\t\tthis.debug('Serious Showdown negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('As One (OU) spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'As One (OU)');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"As One (OU)\",\r\n\t\t//shortDesc: \"Intimidate + Protosynthesis\",\r\n\t},\r\n\thorrendousskin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Horrendous Skin');\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tif (move.category == \"Status\") {\r\n\t\t\t\tconst pokemon = this.sample(target.adjacentFoes());\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is abhorrent! ${target.name} wants to damage it ASAP so it dies and goes away!`);\r\n\t\t\t\tthis.add('cant', pokemon, 'ability: Horrendous Skin', move, '[of] ' + source, '[silent]');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Horrendous Skin\",\r\n\t\t//shortDesc: \"While this Pokemon is active, foes cannot use status moves.\",\r\n\t},\r\n\treprise: {\r\n\t\tonAfterMove(target, source, move) {\r\n            if (target.addVolatile('reprise')) {\r\n\t\t\t\ttarget.volatiles['reprise'].move = this.dex.getActiveMove(move.id);\r\n\t\t\t}\r\n        },\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 2,\r\n\t\t\tonResidualOrder: 28,\r\n\t\t\tonResidualSubOrder: 2,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (pokemon.hp) {\r\n\t\t\t\t\tconst newMove = this.effectState.move;\r\n\t\t\t\t\tif(pokemon.adjacentFoes().length == 0) return;\r\n\t\t\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Reprise');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} does it again!`);\r\n\t\t\t\t\tthis.actions.useMove(newMove, pokemon, target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Reprise\",\r\n\t\t//shortDesc: \"When this Pokemon uses a move, it uses that move again at the end of the next turn.\",\r\n\t},\r\n\tpoweroffriendship: {\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.friend = null;\r\n\t\t\t// yes, you can Illusion an active pokemon but only if it's to your right\r\n\t\t\tfor (let i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tconst possibleTarget = pokemon.side.pokemon[i];\r\n\t\t\t\tif (!possibleTarget.fainted) {\r\n\t\t\t\t\t// If Ogerpon is in the last slot while the Illusion Pokemon is Terastallized\r\n\t\t\t\t\t// Illusion will not disguise as anything\r\n\t\t\t\t\tif (!pokemon.terastallized || possibleTarget.species.baseSpecies !== 'Ogerpon') {\r\n\t\t\t\t\t\tpokemon.friend = possibleTarget.species;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 9,\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tmove.pp --;\r\n\t\t\tconst illusionmove = this.dex.getActiveMove(move.id);\r\n\t\t\tillusionmove.name = pokemon.friend;\r\n\t\t\tthis.actions.useMove(illusionmove, pokemon, target);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Power of Friendship\",\r\n\t\t//shortDesc: \"This Pokemon's moves are disguised as the last Pokemon in its party.\",\r\n\t},\r\n\thugescaling: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Huge Scaling');\r\n\t\t\tpokemon.maxhp = Math.floor(pokemon.maxhp * 2);\r\n\t\t\tpokemon.hp = Math.floor(pokemon.hp * 2);\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.maxhp = Math.floor(pokemon.maxhp / 2);\r\n\t\t\tpokemon.hp = Math.floor(pokemon.hp / 2);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Huge Scaling\",\r\n\t\t//shortDesc: \"This Pokemon's HP is doubled.\",\r\n\t},\r\n\tfishificationbeam: {\r\n\t\tonAnyAfterSetStatus(status, target, source, effect) {\r\n\t\t\t//if (source.baseSpecies.name !== \"Pechagiri\") return;\r\n\t\t\tif (source !== this.effectState.target || target === source || effect.effectType !== 'Move') return;\r\n\t\t\tif (status.id === 'psn' || status.id === 'tox') {\r\n\t\t\t\ttarget.addVolatile('fishificationbeam');\r\n\t\t\t\tthis.add(\"-message\", \"Make this bozo become a dozo!\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.formeChange('Dondozo');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Dondozo'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Fishification Beam\",\r\n\t\t//shortDesc: \"If this Pokemon poisons a target, the target also becomes Dondozo.\",\r\n\t},\r\n\tblownaway: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.sideConditions['tailwind']) {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t\tpokemon.switchFlag = true;\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Blown Away');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} was blown away!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.flags['wind']) {\r\n\t\t\t\tif (!this.boost({atk: 1}, target, target)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Blown Away');\r\n\t\t\t\t}\r\n\t\t\t\ttarget.switchFlag = true;\r\n\t\t\t\tthis.add('-activate', target, 'ability: Blown Away');\r\n\t\t\t\tthis.add('-message', `${target.name} was blown away!`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySideConditionStart(target, source, sideCondition) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (sideCondition.id === 'tailwind') {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t\ttarget.switchFlag = true;\r\n\t\t\t\tthis.add('-activate', target, 'ability: Blown Away');\r\n\t\t\t\tthis.add('-message', `${target.name} was blown away!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Blown Away\",\r\n\t\t//shortDesc: \"This Pokemon's Attack is raised by 1 and it switches out when hit by a Wind move; immune to Wind moves.\",\r\n\t},\r\n\tspecialsauce: {\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category !== \"Status\") {\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\tmove.secondaries.push(\r\n\t\t\t\t//tox\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tstatus: 'tox',\r\n\t\t\t\t}, \r\n\t\t\t\t//boost all stats\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tatk: 1,\r\n\t\t\t\t\t\t\tdef: 1,\r\n\t\t\t\t\t\t\tspa: 1,\r\n\t\t\t\t\t\t\tspd: 1,\r\n\t\t\t\t\t\t\tspe: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//boost atk\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tatk: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//boost def\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tdef: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//boost def x2\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tdef: 2,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//boost spa\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tspa: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//boost spe\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tspe: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//burn\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tstatus: 'brn',\r\n\t\t\t\t},\r\n\t\t\t\t//confusion\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tvolatileStatus: 'confusion',\r\n\t\t\t\t},\r\n\t\t\t\t//cure burn\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tvolatileStatus: 'sparklingaria',\r\n\t\t\t\t},\r\n\t\t\t\t//eerie spell\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tonHit(target) {\r\n\t\t\t\t\t\tif (!target.hp) return;\r\n\t\t\t\t\t\tlet move: Move | ActiveMove | null = target.lastMove;\r\n\t\t\t\t\t\tif (!move || move.isZ) return;\r\n\t\t\t\t\t\tif (move.isMax && move.baseMove) move = this.dex.moves.get(move.baseMove);\r\n\r\n\t\t\t\t\t\tconst ppDeducted = target.deductPP(move.id, 3);\r\n\t\t\t\t\t\tif (!ppDeducted) return;\r\n\t\t\t\t\t\tthis.add('-activate', target, 'move: Eerie Spell', move.name, ppDeducted);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//flinch\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t\t},\r\n\t\t\t\t//freeze\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tstatus: 'frz',\r\n\t\t\t\t},\r\n\t\t\t\t//lower acc\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\taccuracy: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//lower atk\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tatk: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//lower def\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tdef: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//lower spa\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspa: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//lower spd\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspd: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//lower spd x2\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspd: -2,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//lower spe\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//paralysis\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tstatus: 'par',\r\n\t\t\t\t},\r\n\t\t\t\t//psn\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tstatus: 'psn',\r\n\t\t\t\t},\r\n\t\t\t\t//psychicnoise\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tvolatileStatus: 'healblock',\r\n\t\t\t\t},\r\n\t\t\t\t//psychicterrain\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tself: {\r\n\t\t\t\t\t\tonHit() {\r\n\t\t\t\t\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//set rocks\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tonAfterHit(target, source, move) {\r\n\t\t\t\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\t\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//set spikes\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tonAfterHit(target, source, move) {\r\n\t\t\t\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\t\t\tside.addSideCondition('spikes');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\t\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\t\t\tside.addSideCondition('spikes');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//slp\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tstatus: 'slp',\r\n\t\t\t\t},\r\n\t\t\t\t//syrup\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tvolatileStatus: 'syrupbomb',\r\n\t\t\t\t},\r\n\t\t\t\t//throatchop\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tonHit(target) {\r\n\t\t\t\t\t\ttarget.addVolatile('throatchop');\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t//trapped\r\n\t\t\t\t{\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tonHit(target, source, move) {\r\n\t\t\t\t\t\tif (source.isActive) target.addVolatile('trapped', source, move, 'trapper');\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Special Sauce\",\r\n\t\t//shortDesc: \"Sheer Force effects. This Pokemon's attacks gain a 10% chance to inflict each secondary effect that Sheer Force can remove.\",\r\n\t},\r\n\tselfish: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category == \"Status\") move.target = \"self\";\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tif(move.category == \"Status\" && move.target == \"self\" && !move.hasBounced) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\t\tnewMove.hasBounced = true;\r\n\t\t\t\tconst newTarget = this.sample(target.adjacentFoes());\r\n\t\t\t\tthis.add('-message', `${source.name} becomes the center of attention!`);\r\n\t\t\t\tthis.actions.useMove(newMove, newTarget, newTarget);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Selfish\",\r\n\t\t//shortDesc: \"This Pokemon redirects all status moves toward itself; its own have their priority increased by 1.\",\r\n\t},\r\n\tmusicaljungal: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tthis.add('-message', \"Walcome to the jungal, we got fun and games\");\r\n\t\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Musical Jungal\",\r\n\t\t//shortDesc: \"This Pokemon's sound moves become Grass type and summon Grassy Terrain.\",\r\n\t},\r\n\tshockandballtorture: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!this.checkMoveMakesContact(move, source, target)) return;\r\n\r\n\t\t\tlet announced = false;\r\n\t\t\tfor (const pokemon of [target, source]) {\r\n\t\t\t\tif (pokemon.volatiles['curseofshocking']) continue;\r\n\t\t\t\tif (!announced) {\r\n\t\t\t\t\tthis.add('-ability', target, 'Shock and Ball Torture');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} got shocked!`);\r\n\t\t\t\t\tannounced = true;\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.addVolatile('curseofshocking');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shock and Ball Torture\",\r\n\t\t//shortDesc: \"Galvanize + contact with this Pokemon inflicts both this Pokemon and the attacker with Curse of Shocking.\",\r\n\t},\r\n\tbecomeaverage: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Become Average', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(!target.setType('Normal')) return;\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', 'Normal', '[from] ability: Become Average');\r\n\t\t\t\t\tthis.add('-message', `${target.name} became a normie!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Become Average\",\r\n\t\t//shortDesc: \"On switch-in, this Pokemon turns adjacent opponents into Normal-types.\",\r\n\t},\r\n\tquickstart: {\r\n\t\t//shortDesc: \"On switch-in, this Pokemon's Attack and Speed are doubled for 5 turns.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('quickstart');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['quickstart'];\r\n\t\t\tthis.add('-end', pokemon, 'Quickstart', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${target.name}|Faster than fast, Quicker than quick. I am lightning.`);\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${target.name}|Speed. I am speed.`);\r\n\t\t\t\tthis.add('-start', target, 'ability: Quickstart', '[silent]');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Quickstart');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Quickstart\",\r\n    },\r\n\tbeewitch: {\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (!move || !target || !target.hp || source.switchFlag === true) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tconst item = target.takeItem();\r\n\t\t\t\tif(!item) return;\r\n\t\t\t\tconst honey = this.dex.items.get('Honey');\r\n\t\t\t\tthis.add('-enditem', target, item.name, '[from] ability: Beewitch', '[of] ' + source, \"[silent]\");\r\n\t\t\t\tthis.add('-item', target, honey, '[from] ability: Beewitch', '[of] ' + target, \"[silent]\");\r\n\t\t\t\ttarget.setItem(honey);\r\n\t\t\t\tthis.add(\"-message\", `${source.name} pollinized ${target.name}'s ${item}!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Beewitch\",\r\n\t\t//shortDesc: \"If this Pokemon hits a Pokemon that is holding a removable item, that item is replaced with Honey.\",\r\n\t},\r\n\troyalpass: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Royal Pass');\r\n\t\t\t\tthis.add('-message', \"The Monarch silences thee.\");\r\n\t\t\t\tsource.addVolatile(\"royalpass\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst index = pokemon.moves.indexOf(pokemon.lastMove.id);\r\n\t\t\t\tconst kingsshield = {\r\n\t\t\t\t\tmove: \"King's Shield\",\r\n\t\t\t\t\tid: \"kingsshield\",\r\n\t\t\t\t\tpp: 16,\r\n\t\t\t\t\tmaxpp: 16,\r\n\t\t\t\t\ttarget: \"self\",\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t\tvirtual: true,\r\n\t\t\t\t};\r\n\t\t\t\tpokemon.moveSlots[index] = kingsshield;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Royal Pass\",\r\n\t\t//shortDesc: \"If a Pokemon makes contact with this Pokemon, their move is replaced with King's Shield until they switch out.\",\r\n\t},\r\n\tmetamorphic: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Miniluna' || pokemon.transformed) return;\r\n\t\t\tif (!pokemon.baseSpecies.forme) pokemon.formeChange('Miniluna-Bloodstone');\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Metamorphic\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (target.species.baseSpecies !== 'Miniluna' || target.transformed) return;\r\n\t\t\tif (move.category === 'Status' || !['Normal', 'Fighting'].includes(move.type)) return;\r\n\t\t\tconst targetForme = target.species.name === 'Miniluna' ? 'Miniluna-Bloodstone' : 'Miniluna';\r\n\t\t\ttarget.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Metamorphic\",\r\n\t\t//shortDesc: \"Mind's Eye + when this Pokemon uses a Fighting or Normal move, it changes forms.\",\r\n\t},\r\n\tdauntingshield: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.ppsuck) return;\r\n\t\t\tpokemon.ppsuck = true;\r\n\t\t\tlet ppsuck = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!ppsuck) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Daunting Shield', 'boost');\r\n\t\t\t\t\tppsuck = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (const move of target.moveSlots) {\r\n\t\t\t\t\t\tmove.pp /= 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} is imposing! ${target.name}'s PP shrunk by half!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Daunting Shield\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon halves the PP of adjacent foes. Once per battle.\",\r\n\t},\r\n\tcodebreaker: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Code Breaker');\r\n\t\t\tthis.add('-message', `${pokemon.name.toLowerCase()} dont caare`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category === 'Status') return;\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tmove.ignoreImmunity[move.type] = true;\r\n\t\t\tmove.onEffectiveness = function(typeMod, target, type) {\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Code Breaker\",\r\n\t\t//shortDesc: \"This Pokemon's moves and their effects ignore the Types of other Pokemon.\",\r\n\t},\r\n\tprismatic: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'ability: Prismatic');\r\n\t\t\tconst types = ['Bug', 'Dark', 'Dragon', 'Electric', 'Fairy', 'Fighting',\r\n\t\t\t\t\t\t   'Fire', 'Flying', 'Ghost', 'Grass', 'Ground', 'Ice', \r\n\t\t\t\t\t\t   'Normal', 'Poison', 'Psychic', 'Rock', 'Steel', 'Water'];\r\n\t\t\tconst possibleTypes = types.filter(type => !pokemon.types.includes(type));\r\n\t\t\tconst newType1 = this.sample(possibleTypes);\r\n\t\t\tconst newType2 = this.sample(possibleTypes.filter(type => type != newType1));\r\n\t\t\tthis.add('-message', `${pokemon.name} is having an identity crisis and is now ${newType1}/${newType2}!`);\r\n\t\t\tconst newTypes = [newType1, newType2];\r\n\t\t\tif(pokemon.setType(newTypes)) this.add('-start', pokemon, 'typechange', newTypes.join('/'), '[silent]');\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Prismatic\",\r\n\t\t//shortDesc: \"This Pokemon changes to a random typing at the end of each turn.\",\r\n\t},\r\n\tteratooth: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Teradoof') return;\r\n\t\t\tif (pokemon.species.forme !== 'Terastal') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Tera Shift');\r\n\t\t\t\tpokemon.formeChange('Teradoof-Terastal', this.effect, true);\r\n\t\t\t\tpokemon.formeChange('Teradoof-Terastal', this.effect, true);\r\n\t\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\t\tconst newMaxHP = pokemon.baseMaxhp;\r\n\t\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1, notransform: 1},\r\n\t\tname: \"Tera Tooth\",\r\n\t\t//shortDesc: \"Tera Shift + this Pokemon's form change is doubled.\",\r\n\t},\r\n\tterashell: {\r\n\t\tinherit: true,\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target || target.species.name !== 'Teradoof-Terastal') return;\r\n\t\t\tif (this.effectState.resisted) return -1; // all hits of multi-hit move should be not very effective\r\n\t\t\tif (move.category === 'Status') return;\r\n\t\t\tif (!target.runImmunity(move.type)) return; // immunity has priority\r\n\t\t\tif (target.hp < target.maxhp) return;\r\n\r\n\t\t\tthis.add('-activate', target, 'ability: Tera Shell');\r\n\t\t\tthis.effectState.resisted = true;\r\n\t\t\treturn -1;\r\n\t\t},\r\n\t},\r\n\tteraformzero: {\r\n\t\tinherit: true,\r\n\t\tonAfterTerastallization(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.name !== 'Teradoof-Stellar') return;\r\n\t\t\tif (this.field.weather || this.field.terrain) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Teraform Zero');\r\n\t\t\t\tthis.field.clearWeather();\r\n\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\thumongouspower: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 3);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: -1,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn this.chainModify([2458, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Humongous Power\",\r\n\t\t//shortDesc: \"This Pokemon's Attack is 3x and accuracy of its physical attacks is 0.6x.\",\r\n\t},\r\n\tbadhax: {\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance = 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance = 100;\r\n\t\t},\r\n\t\tonModifySecondaries(secondaries) {\r\n\t\t\tthis.debug('Bad Hax ensure secondary');\r\n\t\t\tfor (const effect of secondaries) {\r\n\t\t\t\teffect.chance = 100;\r\n\t\t\t}\r\n\t\t\treturn secondaries;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bad Hax\",\r\n\t\t//shortDesc: \"Every move used by or against this Pokemon will always activate its secondary.\",\r\n\t},\r\n\tnoigofirst: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (!move.critRatio || move.critRatio != 0) return priority + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"NO I GO FIRST!!\",\r\n\t\t//shortDesc: \"This Pokemon's moves that can crit have +1 priority.\",\r\n\t},\r\n\tgorillaofruin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Gorilla of Ruin');\r\n\t\t\tthis.add('-message', \"The gorilla suppresses everyone on the field!\");\r\n\t\t},\r\n\t\tonAnyModifySpA(spa, source, target, move) {\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (source.hasAbility('Gorilla of Ruin')) return;\r\n\t\t\tif (!move.ruinedSpA) move.ruinedSpA = abilityHolder;\r\n\t\t\tif (move.ruinedSpA !== abilityHolder) return;\r\n\t\t\tthis.debug('Gorilla of Ruin SpA drop');\r\n\t\t\treturn this.chainModify(0.75);\r\n\t\t},\r\n\t\tonFoeSwitchIn(pokemon) {\r\n\t\t\tif(!pokemon.hasAbility('Gorilla of Ruin') && !pokemon.volatiles['gorillaofruin']) pokemon.addVolatile('gorillaofruin');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst move = this.sample(pokemon.moveSlots);\r\n\t\t\t\tpokemon.disabledMove = move;\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tpokemon.disableMove(pokemon.disabledMove.id, 'hidden');\r\n\t\t\t\tpokemon.maybeDisabled = true;\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 4,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (move.id !== 'struggle' && attacker.disabledMove && move.id === attacker.disabledMove && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'move: Imprison', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tpokemon.disabledMove = null;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gorilla of Ruin\",\r\n\t\t//shortDesc: \"Vessel of Ruin + Pokemon without this ability can only select 0.75x moves.\",\r\n\t},\r\n\tswallowswallow: {\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${source.name}|I'm Smart`);\r\n\t\t\t}\r\n\t\t\telse if (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${source.name}|I'm Dumb`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.type === 'Flying' && target !== source) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Swallow Swallow');\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${target.name}|mmmm... tastes like chicken`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Swallow Swallow\",\r\n\t\t//shortDesc: \"This Pokemon is immune to Flying-type moves.\",\r\n\t},\r\n\twetchain: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\tsource.addVolatile(\"moisturizer\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wet Chain\",\r\n\t\t//shortDesc: \"This Pokemon's moves have a 30% chance of giving it Moisturizer.\",\r\n\t},\r\n\timleabinthisgronp: {\r\n\t\tonFoeSwitchOut(pokemon) {\r\n\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: im leabin this gronp');\r\n\t\t},\r\n\t\tonFoeDragOut(pokemon) {\r\n\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: im leabin this gronp');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"im leabin this gronp\",\r\n\t\t//shortDesc: \"Whenever the opponent switches out, this Pokemon also switches out.\",\r\n\t},\r\n\ttrjumpscare: {\r\n\t\t//handled in battle-actions\r\n\t\tflags: {},\r\n\t\tname: \"trjumpscare\",\r\n\t\t//shortDesc: \"This Pokemon's Speed is reversed.\",\r\n\t},\r\n\tdefensiveice: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('snow');\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (effect.id === 'hail' || effect.id === 'snow') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'hail') return false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Defensive Ice\",\r\n\t\t//shortDesc: \"Snow Warning + Ice Body\",\r\n\t},\r\n\tultrayoink: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (!activated) this.add('-ability', pokemon, 'Ultra Yoink');\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in target.storedStats) {\r\n\t\t\t\t\tif (target.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = target.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (statName === 'atk') {\r\n\t\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|Your Attack? No, OUR Attack`);\r\n\t\t\t\t\t\tpokemon.storedStats.atk = target.storedStats.atk;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (statName === 'def') {\r\n\t\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|Your Defense? No, OUR Defense`);\r\n\t\t\t\t\t\tpokemon.storedStats.def = target.storedStats.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (statName === 'spa') {\r\n\t\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|Your Special Attack? No, OUR Special Attack`);\r\n\t\t\t\t\t\tpokemon.storedStats.spa = target.baseSpecies.baseStats.spa;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (statName === 'spd') {\r\n\t\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|Your Special Defense? No, OUR Special Defense`);\r\n\t\t\t\t\t\tpokemon.storedStats.spd = target.storedStats.spd;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (statName === 'spe') {\r\n\t\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|Your Speed? No, OUR Speed`);\r\n\t\t\t\t\t\tpokemon.storedStats.spe = target.storedStats.spe;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Yoink\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon copies the opponent's highest non-HP stat.\",\r\n\t},\r\n\tultraalchemist: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', source, 'Ultra Alchemist');\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in target.storedStats) {\r\n\t\t\t\t\tif (target.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = target.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === 'atk') {\r\n\t\t\t\t\tthis.add('-message', `${source.name} looted ${target.name}'s Attack!`);\r\n\t\t\t\t\tsource.storedStats.atk = target.storedStats.atk;\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === 'def') {\r\n\t\t\t\t\tthis.add('-message', `${source.name} looted ${target.name}'s Defense!`);\r\n\t\t\t\t\tsource.storedStats.def = target.storedStats.def;\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === 'spa') {\r\n\t\t\t\t\tthis.add('-message', `${source.name} looted ${target.name}'s Special Attack!`);\r\n\t\t\t\t\tsource.storedStats.spa = target.baseSpecies.baseStats.spa;\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === 'spd') {\r\n\t\t\t\t\tthis.add('-message', `${source.name} looted ${target.name}'s Special Defense!`);\r\n\t\t\t\t\tsource.storedStats.spd = target.storedStats.spd;\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === 'spe') {\r\n\t\t\t\t\tthis.add('-message', `${source.name} looted ${target.name}'s Speed!`);\r\n\t\t\t\t\tsource.storedStats.spe = target.storedStats.spe;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Alchemist\",\r\n\t\t//shortDesc: \"This Pokemon copies the highest non-HP stat of a Pokemon that it attacks and KOs.\",\r\n\t},\r\n\tac: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.sideConditions['tailwind']) {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.flags['wind']) {\r\n\t\t\t\tif (!this.boost({atk: 1}, target, target)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Wind Rider');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySideConditionStart(target, source, sideCondition) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (sideCondition.id === 'tailwind') {\r\n\t\t\t\tthis.boost({atk: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.flags['wind'] && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['wind']) this.boost({atk: 1}, source, source);\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"AC\",\r\n\t\t//shortDesc: \"Wind Rider + this Pok\u00E9mon's Wind moves become Ice-Type, do 1.2x damage and raise the user's attack by 1 stage.\",\r\n\t},\r\n\twindstorm: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-message', \"it fucken WIMDY\");\r\n\t\t\tpokemon.side.addSideCondition('tailwind');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wind Storm\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon summons Tailwind.\",\r\n\t},\r\n\tasonegears: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'As One (Gears)');\r\n\t\t},\r\n\t\tonFoeDamage(damage, source, target, effect) {\r\n\t\t\tif (damage > source.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-message', `${source.name} was spared!`);\r\n\t\t\t\treturn (source.hp == 1) ? 0 : source.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"As One (Gears)\",\r\n\t\t//shortDesc: \"While this Pokemon is active, opponents are prevented from fainting.\",\r\n\t},\r\n\t'windows11': {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totaldef = 0;\r\n\t\t\tlet totalspd = 0;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\ttotaldef += target.getStat('def', false, true);\r\n\t\t\t\ttotalspd += target.getStat('spd', false, true);\r\n\t\t\t}\r\n\t\t\tif (totaldef && totaldef >= totalspd) {\r\n\t\t\t\tpokemon.side.addSideCondition('reflect');\r\n\t\t\t} else if (totalspd) {\r\n\t\t\t\tpokemon.side.addSideCondition('lightscreen');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Windows 11\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon summons Reflect or Light Screen depending on the higher defense of the opponent.\",\r\n\t},\r\n\ttheplague: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('alotofbees');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"The Plague\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon summons A Lot Of Bees.\",\r\n\t},\r\n\tgotyourguts: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (!pokemon.hasAbility('gotyourguts') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.hasAbility('gotyourguts')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp) {\r\n\t\t\t\tthis.damage(target.getUndynamaxedHP(damage), source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Got Your Guts!\",\r\n\t\t//shortDesc: \"Shadow Tag + Innards Out\",\r\n\t},\r\n\tcountertype: {\r\n\t\tonFoeEffectiveness(typeMod) {\r\n\t\t\treturn typeMod * -1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Countertype\",\r\n\t\t//shortDesc: \"This Pokemon's attacking effectiveness is reversed.\",\r\n\t},\r\n\trolidsock: {\r\n\t\tonEffectiveness(typeMod) {\r\n\t\t\treturn typeMod * -1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rolid Sock\",\r\n\t\t//shortDesc: \"This Pokemon's defending effectiveness is reversed.\",\r\n\t},\r\n\tgraceofruin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Grace of Ruin');\r\n\t\t\tthis.add('-message', \"The luck of all Pokemon has decreased to that of Earl's!\");\r\n\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName('Earlio2')}|wtf`);\r\n\t\t},\r\n\t\tonModifySecondaries(secondaries) {\r\n\t\t\tthis.debug('Bad Hax reduce secondary');\r\n\t\t\tfor (const effect of secondaries) {\r\n\t\t\t\teffect.chance = Math.floor(effect.chance * 0.75);\r\n\t\t\t}\r\n\t\t\treturn secondaries;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Grace of Ruin\",\r\n\t\t//shortDesc: \"Pokemon without this ability have 0.75x luck.\",\r\n\t},\r\n\tironthorn: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tpokemon.addVolatile('ironthorn');\r\n\t\t\t} else if (!pokemon.volatiles['ironthorn']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('ironthorn');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['ironthorn'];\r\n\t\t\tthis.add('-end', pokemon, 'Iron Thorn', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} thinks the Pokemon from this timeline are just not natural!`);\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Iron Thorn', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Iron Thorn');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tfor(const target of pokemon.adjacentFoes()){\r\n\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${pokemon.name}|I know what you are...`);\r\n\t\t\t\t\tthis.damage(target.baseMaxhp / 8, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Iron Thorn\",\r\n\t\t//shortDesc: \"Iron Barbs + Electric Terrain active or Booster Energy used: gain Iron Thorn.\",\r\n\t},\r\n\tpansexual: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('attract', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t//pansexuality implemented in moves.ts\r\n\t\tflags: {},\r\n\t\tname: \"Pansexual\",\r\n\t\t//shortDesc: \"Cute Charm + this Pokemon can attract opponents regardless of gender.\",\r\n\t},\r\n\tseriousshowdown: {\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tboosts['atk'] = 0;\r\n\t\t\tboosts['def'] = 0;\r\n\t\t\tboosts['spa'] = 0;\r\n\t\t\tboosts['spd'] = 0;\r\n\t\t\tboosts['spe'] = 0;\r\n\t\t\tboosts['accuracy'] = 0;\r\n\t\t\tboosts['evasion'] = 0;\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonFoeBeforeMovePriority: 13,\r\n\t\tonFoeBeforeMove(attacker, defender, move) {\r\n\t\t\tattacker.addVolatile('seriousshowdown');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonAfterMove(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('seriousshowdown');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonAnyModifyAtkPriority: 4,\r\n\t\tonAnyModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (attacker.isAlly(abilityHolder) || attacker.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['asoneou', 'goondrive', 'ancientpyramid']) {\r\n\t\t\t\t\tif (attacker.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (attacker?.volatiles[paradox]?.bestStat !== 'atk') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifyDefPriority: 5,\r\n\t\tonAnyModifyDef(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (defender.isAlly(abilityHolder) || defender.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['asoneou', 'goondrive', 'ancientpyramid']) {\r\n\t\t\t\t\tif (defender.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (defender?.volatiles[paradox]?.bestStat !== 'def') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifySpAPriority: 4,\r\n\t\tonAnyModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (attacker.isAlly(abilityHolder) || attacker.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['asoneou', 'goondrive', 'ancientpyramid']) {\r\n\t\t\t\t\tif (attacker.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (attacker?.volatiles[paradox]?.bestStat !== 'spa') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifySpDPriority: 5,\r\n\t\tonAnyModifySpD(atk, attacker, defender, move) {\r\n\t\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\t\tif (defender.isAlly(abilityHolder) || defender.ignoringAbility() || !this.effectState.unnerved) return;\r\n\t\t\t\tif (!move.suppressedParadox) move.suppressedParadox = abilityHolder;\r\n\t\t\t\telse if (move.suppressedParadox !== abilityHolder) return;\r\n\t\t\t\tfor (const paradox of ['asoneou', 'goondrive', 'ancientpyramid']) {\r\n\t\t\t\t\tif (defender.hasAbility(paradox)) {\r\n\t\t\t\t\t\tif (defender?.volatiles[paradox]?.bestStat !== 'spd') return;\r\n\t\t\t\t\t\tthis.debug('Dyschronometria nullify');\r\n\t\t\t\t\t\treturn this.chainModify([3151, 4096]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\t//Speed suppression in the other Paradox abilities\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Serious Showdown');\r\n\t\t\tthis.add('-message', `${pokemon.name} is locking in...`);\r\n\t\t\tthis.effectState.unnerved = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.effectState.unnerved) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Serious Showdown');\r\n\t\t\tthis.add('-message', `${pokemon.name} is locking in...`);\r\n\t\t\tthis.effectState.unnerved = true;\r\n\t\t},\r\n\t\tonEnd() {\r\n\t\t\tthis.effectState.unnerved = false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Serious Showdown\",\r\n\t\t//shortDesc: \"This Pokemon ignores abilities, stat changes, and paradox boosts.\",\r\n\t},\r\n\tbidenblast: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Biden Blast', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(target.lastMove) {\r\n\t\t\t\t\t\ttarget.addVolatile('disable');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} Biden Blasted ${target.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${pokemon.name}|It's So Joever`);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Biden Blast\",\r\n\t\t//shortDesc: \"On switch-in, this Pokemon disables adjacent opponents' last move.\",\r\n\t},\r\n\therbgather: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isWeather(['sunnyday', 'desolateland']) || this.randomChance(1, 2)) {\r\n\t\t\t\tif (pokemon.hp && !pokemon.item && pokemon.lastItem == 'whiteherb') {\r\n\t\t\t\t\tpokemon.setItem(pokemon.lastItem);\r\n\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} grew the good stuff!`);\r\n\t\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Herb Gather', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Herb Gather\",\r\n\t\t//shortDesc: \"If last item used is a White Herb, 50% chance to restore it at the end of each turn. 100% in Sun.\",\r\n\t},\r\n\t'tier1boomer': {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tconst explosion = this.dex.getActiveMove('explosion');\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${pokemon.name}|I just wanna boom for Arceus' sake!`);\r\n\t\t\t\tthis.actions.useMove(explosion, pokemon, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Tier 1 Boomer\",\r\n\t\t//shortDesc: \"On switch-in, this Pokemon explodes.\",\r\n\t},\r\n\tatv: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'ATV');\r\n\t\t\tlet newBaseTypes = ['Grass', 'Electric', 'Fairy', 'Psychic'];\r\n\t\t\tif(!pokemon.setType(newBaseTypes)) return;\r\n\t\t\tthis.add('-start', pokemon, 'typechange', 'Grass/Electric/Fairy/Psychic', '[from] ability: ATV');\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (!target.isGrounded() || target.isSemiInvulnerable()) return;\r\n\t\t\tif (effect && ((effect as Move).status || effect.id === 'yawn')) {\r\n\t\t\t\tthis.add('-activate', target, 'move: Misty Terrain');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonAnyBasePowerPriority: 6,\r\n\t\tonAnyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst weakenedMoves = ['earthquake', 'bulldoze', 'magnitude'];\r\n\t\t\tif ((weakenedMoves.includes(move.id) || move.type === 'Dragon') && defender.isGrounded() && !defender.isSemiInvulnerable()) {\r\n\t\t\t\tthis.debug('misty terrain weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHitPriority: 4,\r\n\t\t\tonTryHit(target, source, effect) {\r\n\t\t\t\tif (effect && (effect.priority <= 0.1 || effect.target === 'self')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.isSemiInvulnerable() || target.isAlly(source)) return;\r\n\t\t\t\tif (!target.isGrounded()) {\r\n\t\t\t\t\tconst baseMove = this.dex.moves.get(effect.id);\r\n\t\t\t\t\tif (baseMove.priority > 0) {\r\n\t\t\t\t\t\tthis.hint(\"Psychic Terrain doesn't affect Pok\u00E9mon immune to Ground.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-activate', target, 'move: Psychic Terrain');\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (['Grass', 'Electric', 'Psychic'].includes(move.type)) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.isGrounded() && !pokemon.isSemiInvulnerable()) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 16, pokemon, pokemon);\r\n\t\t\t} else {\r\n\t\t\t\tthis.debug(`Pokemon semi-invuln or not grounded; Grassy Terrain skipped`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"ATV\",\r\n\t\t//shortDesc: \"Mimicry + This Pokemon is considered to be under all terrains.\",\r\n\t},\r\n\thealaura: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Heal Aura');\r\n\t\t\tthis.add('-message', `${pokemon.name} radiates a healthy aura!`);\r\n\t\t},\r\n\t\t//should be handled in scripts/battle\r\n\t\tflags: {},\r\n\t\tname: \"Heal Aura\",\r\n\t\t//shortDesc: \"While this Pokemon is active, all healing has 1.33x power.\",\r\n\t},\r\n\tdualperformance: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Paletta') return;\r\n\t\t\tconst targetForme = (pokemon.species.forme !== 'Pirouette' ? 'Paletta-Pirouette' : 'Paletta');\r\n\t\t\tpokemon.formeChange(targetForme, this.effect, true);\r\n\t\t},\r\n\t\tonSwitchIn() {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!this.effectState.switchingIn) return;\r\n\t\t\tthis.effectState.switchingIn = false;\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Paletta') return;\r\n\t\t\tif (!this.effectState.heroMessageDisplayed && pokemon.species.forme === 'Hero') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Zero to Hero');\r\n\t\t\t\tif (pokemon.species.forme === 'Pirouette') this.add('-message', `${pokemon.name} underwent a rhythmic transformation!`);\r\n\t\t\t\telse this.add('-message', `${pokemon.name} underwent a melodic transformation!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1, notransform: 1},\r\n\t\tname: \"Dual Performance\",\r\n\t\t//shortDesc: \"Serene Grace + This Pokemon changes formes on switch.\",\r\n\t},\r\n\tultragun: {\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.category !== \"Status\" && this.randomChance(3, 10)) {\r\n\t\t\t\tif(pokemon.adjacentFoes().length == 0) return;\r\n\t\t\t\tconst actualTarget = this.sample(pokemon.adjacentFoes());\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ultra Gun');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} ultra hams ${actualTarget.name} with its Ultra Gun!`);\r\n\t\t\t\treturn 0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\tthis.debug('Prism Armor neutralize');\r\n\t\t\t\tthis.add('-message', `${target.name} Ultra Parried ${move.name}!`);\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Gun\",\r\n\t\t//shortDesc: \"Quick Draw + This Pok\u00E9mon has a 30% chance to take 0.75x damage from attacks.\",\r\n\t},\r\n\tzoomies: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.flags['contact'] && this.randomChance(3, 10)) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${pokemon.name}|Cumon step it up!!!!!`);\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Zoomies\",\r\n\t\t//shortDesc: \"This Pokemon's contact moves have a 30% chance to gain +1 priority.\",\r\n\t},\r\n\tsweatypalms: {\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is going all out for this attack!`);\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 5,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn' || pokemon.status === 'psn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Sweaty Palms');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn' && status.id !== 'psn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Sweaty Palms');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Sweaty Palms\",\r\n\t\t//shortDesc: \"Takes half damage from Fire moves. Cannot be burned or poisoned. This Pok\u00E9mon's contact moves have a 30% chance of doing double damage.\",\r\n\t},\r\n\tboilingblood: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect.effectType === \"Move\" &&\r\n\t\t\t\t!effect.multihit &&\r\n\t\t\t\t(!effect.negateSecondary && !(effect.hasSheerForce && source.hasAbility('sheerforce')))\r\n\t\t\t) {\r\n\t\t\t\tthis.effectState.checkedAngerShell = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.effectState.checkedAngerShell = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItem(item) {\r\n\t\t\tconst healingItems = [\r\n\t\t\t\t'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry', 'berryjuice',\r\n\t\t\t];\r\n\t\t\tif (healingItems.includes(item.id)) {\r\n\t\t\t\treturn this.effectState.checkedAngerShell;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tthis.effectState.checkedAngerShell = true;\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.add('-message', \"The crab has been angered.\");\r\n\t\t\t\tthis.boost({atk: 12, spa: 12, spe: 12, def: -12, spd: -12}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Boiling Blood\",\r\n\t\t//shortDesc: \"At 1/2 or less of this Pokemon's max HP: +6 Atk, Sp. Atk, Spe, and -6 Def, Sp. Def.\",\r\n\t},\r\n\tsuperangrysyrup: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.angryBoost) return;\r\n\t\t\tpokemon.angryBoost = true;\r\n\t\t\tthis.add('-message', `${pokemon.name} is going batshit crazy!`);\r\n\t\t\tthis.boost({atk: 12}, pokemon);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Superangry Syrup\",\r\n\t\t//shortDesc: \"Once per battle, increases Atk 12 stages on entry.\",\r\n\t},\r\n\tfootballofruin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Football of Ruin');\r\n\t\t\tthis.add('-message', `${pokemon.name} doesn't know about type advantages`);\r\n\t\t},\r\n\t\tonAnyModifySTAB(stab, source, target, move) {\r\n\t\t\tif(source.hasAbility('footballofruin')) return;\r\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\r\n\t\t\t\tif (stab === 0.75) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0.75;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif(source.hasAbility('footballofruin')) return;\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Prism Armor neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceBasePowerPriority: 17,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif(attacker.hasAbility('footballofruin')) return;\r\n\t\t\tif (defender.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\treturn this.chainModify([4, 3]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Football of Ruin\",\r\n\t\t//shortDesc: \"Active Pokemon without this Ability have the effectiveness of their Type multiplied by 0.75.\",\r\n\t},\r\n\tluckycharm: {\r\n\t\tonModifyCritRatio(critRatio, source) {\r\n\t\t\treturn critRatio + Math.min(source.timesAttacked, 5);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.add('-message', `${target.name} is feeling lucky!`);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Lucky Charm\",\r\n\t\t//shortDesc: \"This Pokemon's critical hit ratio is raised by 1 stage after it is damaged by a move.\",\r\n\t},\r\n\tgoldenboy: {\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Move' && ['mimighold', 'mimikyutotem'].includes(target.species.id)) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Golden Boy');\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, source, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (!['mimighold', 'mimikyutotem'].includes(target.species.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target || move.category === 'Status') return;\r\n\t\t\tif (!['mimighold', 'mimikyutotem'].includes(target.species.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category === 'Status' && target !== source) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Golden Boy');\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {\r\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1,\r\n\t\t\tbreakable: 1, notransform: 1,\r\n\t\t},\r\n\t\tname: \"Golden Boy\",\r\n\t\t//shortDesc: \"This Pokemon is immune to attacks and status moves but takes 1/8th max HP damage when targeted by either.\",\r\n\t},\r\n\tsupersaiyan: {\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') return null;\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (['As One (OU)', 'Super Saiyan', 'Intimidate'].includes(effect.name) && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Super Saiyan', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTryPrimaryHit(target, source, move) {\r\n\t\t\tthis.add('-ability', source, 'Intimidate', 'boost');\r\n\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${source.name}|You look strong. Let's fight!`);\r\n\t\t\tthis.boost({atk: -1}, target, source, null, true);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Super Saiyan\",\r\n\t\t//shortDesc: \"Inner Focus + Moves used by and against this Pokemon activate Intimidate.\",\r\n\t},\r\n\tancientpyramid: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('sunnyday')) {\r\n\t\t\t\tpokemon.addVolatile('ancientpyramid');\r\n\t\t\t} else if (!pokemon.volatiles['ancientpyramid']?.fromBooster && this.field.weather !== 'sunnyday') {\r\n\t\t\t\t// Protosynthesis will not deactivite if Sun is suppressed, hence the direct ID check (isWeather respects supression)\r\n\t\t\t\tpokemon.removeVolatile('ancientpyramid');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['ancientpyramid'];\r\n\t\t\tthis.add('-end', pokemon, 'Ancient Pyramid', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is getting fucked up!`);\r\n\t\t\t\tif (effect?.name === 'Booster Energy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Ancient Pyramid', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Ancient Pyramid', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'ancientpyramid' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Pyramid atk boost');\r\n\t\t\t\treturn this.chainModify([3072, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Pyramid def boost');\r\n\t\t\t\treturn this.chainModify([3072, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Pyramid spa boost');\r\n\t\t\t\treturn this.chainModify([3072, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Ancient Pyramid spd boost');\r\n\t\t\t\treturn this.chainModify([3072, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\t\tif (target.hasAbility('seriousshowdown')) {\r\n\t\t\t\t\t\tthis.debug('Serious Showdown negating spe boost');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('Ancient Pyramid spe boost');\r\n\t\t\t\treturn this.chainModify(0.67);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Ancient Pyramid');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Prism Armor neutralize');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Ancient Pyramid\",\r\n\t\t//shortDesc: \"Sunny Day active or Booster Energy used: highest stat is 0.75x, or 0.67x if Speed. This Pokemon takes x1.3 damage from super-effective moves.\",\r\n\t},\r\n\tsweaty: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tthis.add('-message', `${target.name} enjoys a Mr. Sauna`);\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Sweaty');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\tthis.add('-message', `${attacker.name} is Mr Healthy`);\r\n\t\t\t\tthis.heal(attacker.baseMaxhp / 4)\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Sweaty\",\r\n\t\t//shortDesc: \"Water Absorb + Using moves with 60 or lower BP heals the user by 1/4 max HP.\",\r\n\t},\r\n\tultrathief: {\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tmove.stealsBoosts = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Thief\",\r\n\t\t//shortDesc: \"This Pokemon steals stat boosts when it hits a Pok\u00E9mon with an attack.\",\r\n\t},\r\n\tdebristhatarenottoxic: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tconst side = source.isAlly(target) ? source.side.foe : source.side;\r\n\t\t\tconst spikes = side.sideConditions['spikes'];\r\n\t\t\tif (move.category === 'Physical' && (!spikes || spikes.layers < 3)) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Debris That Are Not Toxic');\r\n\t\t\t\tside.addSideCondition('spikes', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Debris That Are Not Toxic\",\r\n\t\t//shortDesc: \"If this Pokemon is hit by a physical attack, Spikes are set on the opposing side.\",\r\n\t},\r\n\tunderstudy: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-message', `One of the nine bats protects ${pokemon.name}!`);\r\n            this.actions.useMove(\"substitute\", pokemon);\r\n        },\r\n\t\tflags: {},\r\n\t\tname: \"Understudy\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon summons Substitute.\",\r\n\t},\r\n\tunimpressivenessofruin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Unimpressiveness of Ruin');\r\n\t\t\tthis.add('-message', `${pokemon.name} is not amused.`);\r\n\t\t},\r\n\t\tonAnyModifySTAB(stab, source, target, move) {\r\n\t\t\tif(source.hasAbility('unimpressivenessofruin')) return;\r\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\r\n\t\t\t\tif (stab === 0.75) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0.75;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySTAB(stab, source, target, move) {\r\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\r\n\t\t\t\tif (stab === 2) {\r\n\t\t\t\t\treturn 2.25;\r\n\t\t\t\t}\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Unimpressiveness of Ruin\",\r\n\t\t//shortDesc: \"Pokemon without this ability have 0.75x STAB power. Its own STAB has 2x power instead of 1.5x.\",\r\n\t},\r\n\thoneyrush: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('alotofbees')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'alotofbees') return false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Honey Rush\",\r\n\t\t//shortDesc: \"This Pok\u00E9mon's Speed is doubled under A Lot Of Bees; bee immunity.\",\r\n\t},\r\n\tfatfree: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (['Ice', 'Fire', 'Normal', 'Fighting', 'Ghost'].includes(move.type)) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (['Ice', 'Fire', 'Normal', 'Fighting', 'Ghost'].includes(move.type)) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Fat Free\",\r\n\t\t//shortDesc: \"Fire/Ice/Normal/Fighting/Ghost moves against this Pokemon have a halved attacking stat.\",\r\n\t},\r\n\tvaporsync: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType !== 'Move' && effect.id !== 'vaporsync') {\r\n\t\t\t\tfor (const foes of target.adjacentFoes()) {\r\n\t\t\t\t\tthis.damage(damage, foes, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vapor Sync\",\r\n\t\t//shortDesc: \"If this Pokemon takes indirect damage, the opponent takes the same amount of damage.\",\r\n\t},\r\n\tsaltthewound: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Salt The Wound');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Salt The Wound');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.volatiles['partiallytrapped'] || attacker.volatiles['trapped']) {\r\n\t\t\t\tthis.debug('Salt The Wound weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\r\n\t\t\tif (attacker.volatiles['partiallytrapped'] || attacker.volatiles['trapped']) {\r\n\t\t\t\tthis.debug('Salt The Wound weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Salt The Wound\",\r\n\t\t//shortDesc: \"Trapped opponents deal damage to this Pokemon with a halved attacking stat; can't be statused.\",\r\n\t},\r\n\r\n\tstillstanding: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Still Standing');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -30,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.status && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Still Standing');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Still Standing\",\r\n\t\t//shortDesc: \"Guts + if this Pokemon has a status, it lives any attack at 1 HP.\",\r\n\t},\r\n\tdoubledown: {\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (!target.hasAbility('doubledown') && !target.volatiles['ability:simple']) target.addVolatile('ability:simple');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd() {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.volatiles['ability:simple']) target.removeVolatile('ability:simple');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Double Down\",\r\n\t\t//shortDesc: \"Serene Grace + this Pokemon's foes have doubled stat changes.\",\r\n\t},\r\n\tpronounsynthesis: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Toxic Chain's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.addVolatile('pronounsynthesis');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.effectState.virusTurns = 0;\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'pronounsynthesis' + this.effectState.bestStat, '[silent]');\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.effectState.virusTurns ++;\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk') return;\r\n\t\t\t\tthis.debug('Protosynthesis atk boost');\r\n\t\t\t\treturn this.chainModify(1 - 0.3 * Math.pow(2, this.effectState.virusTurns));\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def') return;\r\n\t\t\t\tthis.debug('Protosynthesis def boost');\r\n\t\t\t\treturn this.chainModify(1 - 0.3 * Math.pow(2, this.effectState.virusTurns));\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa') return;\r\n\t\t\t\tthis.debug('Protosynthesis spa boost');\r\n\t\t\t\treturn this.chainModify(1 - 0.3 * Math.pow(2, this.effectState.virusTurns));\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd') return;\r\n\t\t\t\tthis.debug('Protosynthesis spd boost');\r\n\t\t\t\treturn this.chainModify(1 - 0.3 * Math.pow(2, this.effectState.virusTurns));\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe') return;\r\n\t\t\t\tthis.debug('Protosynthesis spe boost');\r\n\t\t\t\treturn this.chainModify(1 - 0.5 * Math.pow(2, this.effectState.virusTurns));\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.effectState.virusTurns = 0;\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) {\r\n\t\t\t\tthis.effectState.virusTurns = 0;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pronounsynthesis\",\r\n\t\t//shortDesc: \"This Pokemon's attacks have a 30% chance of inflicting Woke Mind Virus.\",\r\n\t},\r\n\tsketcher: {\r\n\t\tname: \"Sketcher\",\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tconst moveSlot = source.lastMove;\r\n\t\t\tif (moveSlot === null || target.hasMove(moveSlot)) return;\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tif (source.moveSlots.length < 0) return false;\r\n\t\t\tconst learnedMove = {\r\n\t\t\t\tmove: this.dex.moves.get(moveSlot.id),\r\n\t\t\t\tid: moveSlot.id,\r\n\t\t\t\tpp: moveSlot.pp,\r\n\t\t\t\tmaxpp: moveSlot.pp,\r\n\t\t\t\ttarget: moveSlot.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t};\r\n\t\t\ttarget.moveSlots[target.moveSlots.length] = learnedMove;\r\n\t\t\ttarget.baseMoveSlots[target.moveSlots.length - 1] = learnedMove;\r\n\t\t},\r\n\t\t//shortDesc: \"When this Pokemon is targeted by a move, it adds that move to its moveset.\",\r\n\t},\r\n\tepidemiologist: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet warnMoves: (Move | Pokemon)[][] = [];\r\n\t\t\tlet warnBp = 1;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tlet bp = move.basePower;\r\n\t\t\t\t\tif (move.ohko) bp = 150;\r\n\t\t\t\t\tif (move.id === 'counter' || move.id === 'metalburst' || move.id === 'mirrorcoat') bp = 120;\r\n\t\t\t\t\tif (bp === 1) bp = 80;\r\n\t\t\t\t\tif (!bp && move.category !== 'Status') bp = 80;\r\n\t\t\t\t\tif (bp > warnBp) {\r\n\t\t\t\t\t\twarnMoves = [[move, target]];\r\n\t\t\t\t\t\twarnBp = bp;\r\n\t\t\t\t\t} else if (bp === warnBp) {\r\n\t\t\t\t\t\twarnMoves.push([move, target]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!warnMoves.length) return;\r\n\t\t\tconst [warnMoveName, warnTarget] = this.sample(warnMoves);\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Epidemiologist', warnMoveName, `[of] ${warnTarget}`);\r\n\t\t\twarnTarget.strongestMove = warnMoveName;\r\n\t\t\twarnTarget.addVolatile('epidemiologist');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonBasePowerPriority: 19,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.name === attacker.strongestMove.name) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Epidemiologist\",\r\n\t\t//shortDesc: \"On switchin, the foe's highest power move has its BP set to 0.\",\r\n\t},\r\n\tbadbees: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.effectiveWeather() === 'alotofbees') {\r\n\t\t\t\t\tthis.damage(target.baseMaxhp / 8, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bad Bees\",\r\n\t\t//shortDesc: \"If A Lot of Bees is active, damages adjacent opponents for 1/8 max HP each turn.,\r\n\t},\r\n\tallforone: {\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (!move || !target || source.switchFlag === true) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\ttarget.addVolatile('gastroacid');\r\n\t\t\t\tsource.addVolatile('ability:' + target.getAbility().id);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"All For One\",\r\n\t\t//shortDesc: \"This Pokemon steals the ability of targets it damages with an attack.\",\r\n\t},\r\n\tseeingstars: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.id === 'watershuriken') move.multihit = 12;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Seeing Stars\",\r\n\t\t//shortDesc: \"This Pokemon's Water Shuriken hits 12 times.\",\r\n\t},\r\n\tflightresponse: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === 'Physical') {\r\n\t\t\t\tthis.boost({ evasion: 1, accuracy: -2 }, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Flight Response\",\r\n\t\tshortDesc: \"When this Pokemon is damaged by a physical attack, evasion +1, accuracy -2.\",\r\n\t},\r\n\tgrumpossaurus: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.volatiles['grumpossaurus']) pokemon.removeVolatile('grumpossaurus');\r\n\t\t\tpokemon.addVolatile('grumpossaurus');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tconst stat = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\t\t\t\tthis.effectState.boostedStat = this.sample(stat);\r\n\t\t\t\tthis.add('-start', pokemon, 'grumpossaurus' + this.effectState.boostedStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.boostedStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.boostedStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.boostedStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.boostedStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.boostedStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'grumpossaurusatk', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'grumpossaurusdef', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'grumpossaurusspa', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'grumpossaurusspd', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'grumpossaurusspe', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Grumpossaurus\",\r\n\t\t//shortDesc: \"At the end of each turn, this Pokemon gains a Protosynthesis boost to a random non-HP stat.\",\r\n\t},\r\n\tinflation: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.boost({ atk: 2, spa: 2 }, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Inflation\",\r\n\t\t//shortDesc: \"Defiant + Competitive\",\r\n\t},\r\n\theavypoison: {\r\n\t\t//effects of poison/tox in conditions.ts\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Heavy Poison\",\r\n\t\t//shortDesc: \"Poison Point + poison damage is doubled\",\r\n\t},\r\n\trainbowcloud: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tif (!target.secondaries) target.secondaries = [];\r\n\t\t\t\tdeepCopyInto(target.secondaries, move.secondaries);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (!pokemon.secondaries) return;\r\n\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\tfor (const secondary of pokemon.secondaries) {\r\n\t\t\t\tmove.secondaries.push(secondary);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rainbow Cloud\",\r\n\t\t//shortDesc: \"If another Pokemon uses a move with a secondary effect against this Pokemon, this Pokemon's attacks with secondary effects also gain that secondary effect.\",\r\n\t},\r\n\tnowonder: {\r\n\t\tonAnyModifyMove(move) {\r\n\t\t\tif (move.category === 'Status') return;\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tmove.ignoreImmunity[move.type] = true;\r\n\t\t\tmove.onEffectiveness = function(typeMod, target, type) {\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"No Wonder\",\r\n\t\t//shortDesc: \"Moves made by and against this Pokemon are supereffective.\",\r\n\t},\r\n\tchilly: {\r\n\t\tname: \"chilly\",\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tthis.add('-ability', target, 'chilly');\r\n\t\t\tthis.add('-message', `${target.name} shuddered!`);\r\n\t\t},\r\n\t\t//shortDesc: \"When this Pokemon is targeted by a move, it shudders.\",\r\n\t},\r\n\tchemicalimbalance: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.previousTypes) {\r\n\t\t\t\tpokemon.previousTypes = pokemon.types;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet changes = 0;\r\n\t\t\tif (pokemon.previousTypes.length !== pokemon.types.length) changes += Math.abs(pokemon.previousTypes.length - pokemon.types.length);\r\n\t\t\tfor (const type of pokemon.types) {\r\n\t\t\t\tif (!pokemon.previousTypes.includes(type)) changes ++;\r\n\t\t\t}\r\n\t\t\tif (changes > 0) this.boost({ atk: 2 * changes }, pokemon, pokemon, null, false, true);\r\n\t\t\tpokemon.previousTypes = pokemon.types;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chemical Imbalance\",\r\n\t\t//shortDesc: \"This Pokemon's Attack is raised by 2 for each type that it changes.\",\r\n\t},\r\n\tfruitloop: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityState.gluttony = true;\r\n\t\t},\r\n\t\tonDamage(item, pokemon) {\r\n\t\t\tpokemon.abilityState.gluttony = true;\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tif (!pokemon.berryCount) pokemon.berryCount = 0;\r\n\t\t\tif (pokemon.berryCount === 4) return;\r\n\t\t\tconst newItem = pokemon.item;\r\n\t\t\tpokemon.lastItem = '';\r\n\t\t\tpokemon.setItem(newItem);\r\n\t\t\tpokemon.berryCount ++;\r\n\t\t\tpokemon.eatItem(true);\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.berryCount && pokemon.berryCount !== 0 && !pokemon.item) pokemon.berryCount = 0;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fruit Loop\",\r\n\t\t//shortDesc: \"Gluttony + This Pokemon eats its berries 5 times.\",\r\n\t},\r\n\ttransfiguration: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst pokemonList = Object.keys(randomSets);\r\n\t\t\tconst newPokemon = this.sample(pokemonList);\r\n\t\t\t\r\n\t\t\tconst sets = randomSets[newPokemon].sets;\r\n\t\t\tconst set = this.sample(sets);\r\n\t\t\tlet movepool = set.movepool;\r\n\t\t\tfor (let i = 0; i < 4; i ++) {\r\n\t\t\t\tconst temp = this.sample(movepool);\r\n\t\t\t\tconst moveSlot = this.dex.moves.get(temp);\r\n\t\t\t\tconst learnedMove = {\r\n\t\t\t\t\tmove: moveSlot,\r\n\t\t\t\t\tid: moveSlot.id,\r\n\t\t\t\t\tpp: moveSlot.pp,\r\n\t\t\t\t\tmaxpp: moveSlot.pp,\r\n\t\t\t\t\ttarget: moveSlot.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t};\r\n\t\t\t\tpokemon.moveSlots[i] = learnedMove;\r\n\t\t\t\tmovepool.splice(movepool.indexOf(temp), 1);\r\n\t\t\t\tif (movepool.length === 0) break;\r\n\t\t\t}\r\n\t\t\tpokemon.formeChange(newPokemon);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Transfiguration\",\r\n\t\t//shortDesc: \"At the end of each turn, this Pokemon transforms into a random Pokemon.\",\r\n\t},\r\n\tfriendpower: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst fainted = pokemon.side.pokemon.filter(p => p != pokemon && p.fainted);\r\n\t\t\tif (fainted.length > 0) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Friend Power');\r\n\t\t\t\tconst fallen = Math.min(fainted.length, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet msgs = [\"I have prepared you for this very moment. Make me proud, child.\", \"Remember what we've taught you. You got this!\", \"Don't hold back. Avenge us. Have no mercy.\", \"Your training has brought you very far, Kingralts. Show them all you've learned from us!\", \"KICK. THEIR. ASS.\"];\r\n\t\t\t\tfor (const ally of fainted) {\r\n\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${ally.name}|${msgs[i]}`);\r\n\t\t\t\t\ti ++;\r\n\t\t\t\t\tpokemon.addVolatile('ability:' + ally.ability);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Friend Power\",\r\n\t\t//shortDesc: \"This Pokemon gains the abilities of fainted allies.\",\r\n\t},\r\n\tspeeeen: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tif (!pokemon.volatiles['speeeen']) pokemon.addVolatile('speeeen');\r\n\t\t\t} else pokemon.removeVolatile('speeeen');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: speeen');\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'speeen' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis atk boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis def boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spa boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spd boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\r\n\t\t\t\tthis.debug('Protosynthesis spe boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifyAccuracyPriority: -1,\r\n\t\t\tonModifyAccuracy(accuracy, target) {\r\n\t\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'speeenatk', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'speeendef', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'speeenspa', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'speeenspd', '[silent]');\r\n\t\t\t\tthis.add('-end', pokemon, 'speeenspe', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\r\n\t\tname: \"Speeeen!!!\",\r\n\t\t//shortDesc: \"This Pokemon's highest stat and evasiveness are doubled as long as it is confused.\",\r\n\t},\r\n\tsunburn: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: idk');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceBasePowerPriority: 17,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sunburn\",\r\n\t\t//shortDesc: \"Drought + Dry Skin\",\r\n\t},\r\n\tjohntrademarked: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst move = this.dex.getActiveMove(moveSlot.id);\r\n\t\t\t\tif (move.category === 'Status') this.actions.useMove(move, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"John Trademarked\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon uses its status moves.\",\r\n\t},\r\n\tplotarmor: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\t\tthis.debug('Plot Armor boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp && effect && (effect.id === 'recoil' || ((effect.id === 'jumpkick' || effect.id === 'highjumpkick') && source === target))) {\r\n\t\t\t\tthis.add('-ability', target, 'Plot Armor');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Plot Armor\",\r\n\t\t//shortDesc: \"Reckless + If this Pokemon would faint due to recoil or crash damage, it will instead survive with 1 HP.\",\r\n\t},\r\n\tgirlofruin: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.hasAbility(['minus', 'plus'])) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (!target.hasAbility('girlofruin') && !target.volatiles['ability:minus']) target.addVolatile('ability:minus');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd() {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.volatiles['ability:minus']) target.removeVolatile('ability:minus');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Girl of Ruin\",\r\n\t\t//shortDesc: \"If an active Pok\u00E9mon has Plus/Minus, this Pokemon's SpA is 1.5x. Active Pokemon without this Ability have the Minus ability.\",\r\n\t},\r\n\twondershield: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (pokemon.hp >= pokemon.maxhp) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Wonder Shield');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wonder Shield\",\r\n\t\t//shortDesc: \"This Pok\u00E9mon takes no damage from attacks at full HP.\",\r\n\t},\r\n\trollingdices: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.multihit = this.random(200);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rolling Dices\",\r\n\t\t//shortDesc: \"This Pokemon's moves hit a random amount of times.\",\r\n\t},\r\n\tarttheft: {\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tlet targetTypes = target.types;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tlet success = false;\r\n\t\t\t\tlet lostTypes = [];\r\n\t\t\t\tfor (const type of targetTypes) {\r\n\t\t\t\t\tif (type !== '???' && !source.hasType(type) && source.addType(type)) {\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\tsource.addType(type);\r\n\t\t\t\t\t\tlostTypes.push(type);\r\n\t\t\t\t\t\tthis.add('-start', source, 'typeadd', type, '[from] ability: Art Theft');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\ttarget.setType(target.getTypes(true).map(type => lostTypes.includes(type) ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.types.join('/'));\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Art Theft\",\r\n\t\t//shortDesc: \"This Pok\u00E9mon steals the types of any Pok\u00E9mon it hits with a move.\",\r\n\t},\r\n\tstakebody: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!this.checkMoveMakesContact(move, source, target) || source.volatiles['perishsong']) return;\r\n\t\t\tthis.add('-ability', target, 'Stake Body');\r\n\t\t\tsource.addVolatile('perishsong');\r\n\t\t\ttarget.addVolatile('perishsong');\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Stakeout boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Stakeout boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stake Body\",\r\n\t\t//shortDesc: \"Perish Body + Stakeout\",\r\n\t},\r\n\tfowlbehavior: {\r\n\t\tid: \"fowlbehavior\",\r\n\t\tname: \"Fowl Behavior\",\r\n\t\tshortDesc: \"This Pokemon's Sp. Atk is 1.5x, but it can only select the first move it executes.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityState.choiceLock && pokemon.abilityState.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Fowl Behavior\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityState.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityState.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, pokemon, move) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Fowl Behavior Sp. Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityState.choiceLock) return;\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityState.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tstophittingyourself: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet warnMoves: (Move | Pokemon)[][] = [];\r\n\t\t\tlet warnBp = 1;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tlet bp = move.basePower;\r\n\t\t\t\t\tif (move.ohko) bp = 150;\r\n\t\t\t\t\tif (move.id === 'counter' || move.id === 'metalburst' || move.id === 'mirrorcoat') bp = 120;\r\n\t\t\t\t\tif (bp === 1) bp = 80;\r\n\t\t\t\t\tif (!bp && move.category !== 'Status') bp = 80;\r\n\t\t\t\t\tif (bp > warnBp) {\r\n\t\t\t\t\t\twarnMoves = [[move, target]];\r\n\t\t\t\t\t\twarnBp = bp;\r\n\t\t\t\t\t} else if (bp === warnBp) {\r\n\t\t\t\t\t\twarnMoves.push([move, target]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!warnMoves.length) return;\r\n\t\t\tconst [warnMoveName, warnTarget] = this.sample(warnMoves);\r\n\t\t\tthis.actions.useMove(warnMoveName, pokemon);\r\n\t\t},\r\n\t\tcondition: {},\r\n\t\tflags: {},\r\n\t\tname: \"Stop Hitting Yourself\",\r\n\t\t//shortDesc: \"On switchin, identifies the opponent's highest BP move and uses it.\",\r\n\t},\r\n\thotpotato: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif(pokemon.adjacentFoes().length === 0) return;\r\n\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\tif (pokemon.getAbility().flags['failskillswap']) return;\r\n\t\t\t\r\n\t\t\tconst targetCanBeSet = this.runEvent('SetAbility', target, pokemon, this.effect, pokemon.ability);\r\n\t\t\tif (!targetCanBeSet) return targetCanBeSet;\r\n\t\t\tconst sourceAbility = pokemon.setAbility('hotpotato', target);\r\n\t\t\tif (!sourceAbility) return;\r\n\t\t\tif (target.isAlly(pokemon)) {\r\n\t\t\t\tthis.add('-activate', target, 'Skill Swap', '', '', `[of] ${pokemon}`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Hot Potato', this.dex.abilities.get(sourceAbility).name, 'Hot Potato', `[of] ${pokemon}`);\r\n\t\t\t}\r\n\t\t\ttarget.setAbility(sourceAbility);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hot Potato\",\r\n\t},\r\n\tfishingtoken: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.hp || !source.isActive || target.isSemiInvulnerable()) return;\r\n\t\t\tif (['cramoraidgyarados', 'cramoraidarrokuda', 'cramoraidlumineon', 'cramoraidveluza', 'cramoraidtatsugiri', 'cramoraiddondozo', 'cramoraidmalamar'].includes(target.species.id)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\tlet boost = {};\r\n\t\t\t\tswitch (target.species.forme) {\r\n\t\t\t\t\tcase 'Gyarados':\r\n\t\t\t\t\t\tboost = {atk: -1};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Arrokuda':\r\n\t\t\t\t\t\tboost = {def: -1};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Lumineon':\r\n\t\t\t\t\t\tboost = {spa: -1};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Veluza':\r\n\t\t\t\t\t\tboost = {spd: -1};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Tatsugiri':\r\n\t\t\t\t\t\tboost = {spe: -1};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Dondozo':\r\n\t\t\t\t\t\tboost = {atk: -2, def: -2, spa: -2, spd: -2, spe: -2};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Malamar':\r\n\t\t\t\t\t\tboost = {atk: 1, def: 1};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost(boost, source, target, null, true);\r\n\t\t\t\ttarget.formeChange('cramoraid', move);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(source) {\r\n\t\t\tif (source.hasAbility('fishingtoken') && source.species.name === 'Cramoraid') {\r\n\t\t\t\tconst formes = ['cramoraidgyarados', 'cramoraidarrokuda', 'cramoraidlumineon', 'cramoraidveluza', 'cramoraidtatsugiri', 'cramoraiddondozo', 'cramoraidmalamar'];\r\n\t\t\t\tsource.formeChange(this.sample(formes));\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { cantsuppress: 1, notransform: 1 },\r\n\t\tname: \"Fishing Token\",\r\n\t\t//shortDesc: \"At the end of each turn, catches a random prey. When hit with a prey, damages opponent by 1/4 Max HP and lowers stats based on prey.\",\r\n\t},\r\n\tcoinflipmechanics: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${pokemon.name}|Let's go gambling!`);\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\treturn 50;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Coinflip Mechanics\",\r\n\t\t//shortDesc: \"All moves used by or against this Pokemon have 50% accuracy.\",\r\n\t},\r\n\tpressurepressurepressure: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Pressure Pressure Pressure');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.isAlly(source)) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pressure Pressure Pressure\",\r\n\t\t//shortDesc: \"Pressure\",\r\n\t},\r\n\tgenderphobic: {\r\n\t\tonBasePowerPriority: 24,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (attacker.gender && defender.gender) {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Genderphobic\",\r\n\t\t//shortDesc: \"This Pokemon's attacks do 1.25x on same and opposite gender targets.\",\r\n\t},\r\n\thealthyself: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${source.name}|What have I done... I must cleanse my soul.`);\r\n\t\t\t\tsource.formeChange('Darmanitan-Zen', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Heal Thyself\",\r\n\t\t\r\n\t},\r\n\tcopyrightinfringement: {\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.illusion = null;\r\n\t\t\t// yes, you can Illusion an active pokemon but only if it's to your right\r\n\t\t\tfor (let i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tconst possibleTarget = pokemon.side.pokemon[i];\r\n\t\t\t\tif (!possibleTarget.fainted) {\r\n\t\t\t\t\t// If Ogerpon is in the last slot while the Illusion Pokemon is Terastallized\r\n\t\t\t\t\t// Illusion will not disguise as anything\r\n\t\t\t\t\tif (!pokemon.terastallized || possibleTarget.species.baseSpecies !== 'Ogerpon') {\r\n\t\t\t\t\t\tpokemon.illusion = possibleTarget;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.illusion) {\r\n\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityState, target, source, move);\r\n\t\t\t\tconst allies = [...target.side.pokemon, ...target.side.allySide?.pokemon || []];\r\n\t\t\t\tconst healed = allies[allies.length - 1];\r\n\t\t\t\tif (healed.hp < healed.baseMaxhp) {\r\n\t\t\t\t\tconst toHeal = Math.trunc(Math.min(healed.baseMaxhp / 4, healed.baseMaxhp - healed.hp));\r\n\t\t\t\t\thealed.hp += toHeal;\r\n\t\t\t\t\tthis.add('-message', `${target.name} paid ${healed.name} ${toHeal} HP in legal settlement for identity theft and defamation.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.illusion) {\r\n\t\t\t\tthis.debug('illusion cleared');\r\n\t\t\t\tpokemon.illusion = null;\r\n\t\t\t\tconst details = pokemon.getUpdatedDetails();\r\n\t\t\t\tthis.add('replace', pokemon, details);\r\n\t\t\t\tthis.add('-end', pokemon, 'Illusion');\r\n\t\t\t\tif (this.ruleTable.has('illusionlevelmod')) {\r\n\t\t\t\t\tthis.hint(\"Illusion Level Mod is active, so this Pok\\u00e9mon's true level was hidden.\", true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.illusion = null;\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1 },\r\n\t\tname: \"Copyright Infringement\",\r\n\t\trating: 4.5,\r\n\t\tnum: 149,\r\n\t},\r\n\tformicacid: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Poison Touch's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\t\t\tif (this.checkMoveMakesContact(move, target, source)) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\ttarget.trySetStatus('lazy', source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Formic Acid\",\r\n\t\t//shortDesc: \"This Pokemon's contact moves have a 30% chance to inflict Lazy on the opponent.\",\r\n\t},\r\n\tpride: {\r\n\t\tonStart(source) {\r\n\t\t\tsource.side.addSideCondition('waterpledge');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pride\",\r\n\t\t//shortDesc: \"On switchin, this Pokemon sets Rainbow.\",\r\n\t},\r\n\tpranknician: {\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tconst physicalTypes = ['Bug', 'Fairy', 'Fighting', 'Flying', 'Ghost', 'Ground', 'Normal', 'Poison', 'Rock', 'Steel'];\r\n\t\t\t\tif (physicalTypes.includes(move)) move.category = 'Physical';\r\n\t\t\t\telse move.category = 'Special';\r\n\t\t\t\tmove.basePower = 60;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pranknician\",\r\n\t\t//shortDesc: \"This Pokemon's status moves have 60 BP.\",\r\n\t},\r\n\teveryonegiveupnow: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonAnyModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonAnyModifySpA(atk, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Everyone Give Up Now\",\r\n\t\t//shortDesc: \"At 1/2 max HP or less, every move used by or against this Pok\u00E9mon deals halved damage.\",\r\n\t},\r\n\tbatteryboost: {\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (move.category === 'Special') {\r\n\t\t\t\tconst bestStat = attacker.getBestStat(false, true);\r\n\t\t\t\tmove.overrideOffensiveStat = bestStat;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Battery Boost\",\r\n\t\t//shortDesc: \"This Pokemon's special moves use its highest non-HP stat.\",\r\n\t},\r\n\tdragonsbody: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Toxic Chain's effect\r\n\t\t\tif (move.type !== 'Dragon' || target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\tif (target.lastMove) target.addVolatile('disable');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Dragon\\'s Body\",\r\n\t\t//shortDesc: \"This Pokemon's Dragon-type moves have a 30% chance to disable the target's last move.\",\r\n\t},\r\n\ticyice: {\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Move') {\r\n\t\t\t\tif (effect.category === 'Physical' && target.species.id === 'froscue') {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Icy Ice');\r\n\t\t\t\t\ttarget.formeChange('Froscue-No Ice Ice', this.effect, true);\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else if (effect.category === 'Special' && target.species.id === 'froscuenoiceice') {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Icy Ice');\r\n\t\t\t\t\ttarget.formeChange('Froscue', this.effect, true);\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (move.category === 'Physical' && target.species.id !== 'froscue') return;\r\n\t\t\tif (move.category === 'Special' && target.species.id !== 'froscuenoiceice') return;\r\n\t\t\tif (target.volatiles['substitute'] && !(move.flags['bypasssub'] || move.infiltrates)) return;\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (move.category === 'Physical' && target.species.id !== 'froscue') return;\r\n\t\t\tif (move.category === 'Special' && target.species.id !== 'froscuenoiceice') return;\r\n\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tflags: {\r\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1,\r\n\t\t\tbreakable: 1, notransform: 1,\r\n\t\t},\r\n\t\tname: \"Icy Ice\",\r\n\t\t//shortDesc: \"Ice Face for base, Special Ice Face for Noice form\",\r\n\t},\r\n\tboostingskill: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is honing its Gamer Skill!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.multihit && Array.isArray(move.multihit) && move.multihit.length) {\r\n\t\t\t\tmove.multihit = move.multihit[1] + pokemon.activeTurns;\r\n\t\t\t}\r\n\t\t\tif (move.multiaccuracy) {\r\n\t\t\t\tdelete move.multiaccuracy;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Boosting Skill\",\r\n\t\t//shortDesc: \"Skill Link + increase multihits by 1 at the end of each turn\",\r\n\t},\r\n\tprankpocket: {\r\n\t\tname: \"Prankpocket\",\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (source && source !== target && move?.flags['contact']) {\r\n\t\t\t\tlet success = false;\r\n\t\t\t\tfor (let i = 0; i < source.moveSlots.length; i ++) {\r\n\t\t\t\t\tconst temp = source.moveSlots[i];\r\n\t\t\t\t\tconst moveSlot = this.dex.moves.get(temp.id);\r\n\t\t\t\t\tif (moveSlot === null || moveSlot.category !== 'Status') continue;\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\tconst learnedMove = {\r\n\t\t\t\t\t\tmove: moveSlot,\r\n\t\t\t\t\t\tid: moveSlot.id,\r\n\t\t\t\t\t\tpp: moveSlot.pp,\r\n\t\t\t\t\t\tmaxpp: moveSlot.pp,\r\n\t\t\t\t\t\ttarget: moveSlot.target,\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttarget.moveSlots[target.moveSlots.length] = learnedMove;\r\n\t\t\t\t\ttarget.baseMoveSlots[target.moveSlots.length - 1] = learnedMove;\r\n\t\t\t\t\tsource.moveSlots.splice(i, 1);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (success) this.add(`c:|${Math.floor(Date.now() / 1000)}|${target.name}|Yoink!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\t//shortDesc: \"When this Pokemon hit by a contact move, it steals the attacker's Status moves.\",\r\n\t},\r\n\tcommandthesand: {\r\n\t\tonSwitchInPriority: -2,\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (!pokemon.isActive || pokemon.baseSpecies.baseSpecies !== 'Chompgiri' || pokemon.transformed) return;\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tif (this.field.isWeather('sandstorm')) pokemon.addVolatile('commanding');\r\n\t\t\telse pokemon.removeVolatile('commanding');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('commanding');\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1 },\r\n\t\tname: \"Command the Sand\",\r\n\t\t//shortDesc: \"If Sand is active: this Pokemon cannot act or be hit.\",\r\n\t},\r\n\tgrowingpressure: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Growing Pressure');\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp) {\r\n\t\t\t\tthis.add('-message', `The pressure is growing.`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.isAlly(source)) return;\r\n\t\t\treturn 1 + target.activeTurns;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Growing Pressure\",\r\n\t\t//shortDesc: \"Pressure + increases the PP depletion by 1 for each full turn this Pok\u00E9mon stays on the field.\",\r\n\t},\r\n\tswitchballs: {\r\n\t\tname: \"Switch Balls\",\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 3,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp) {\r\n\t\t\t\tconst balls = ['baseball', 'basketball', 'football', 'soccerball', 'tennisball', 'cricketball', 'watermelon', 'cabbage', 'plasmaball', 'snowball', 'crystalball', '8ball', 'gumball', 'discoball', 'themoon', 'rock', 'virus', 'dragonball'];\r\n\t\t\t\tconst ball = this.random(balls.length);\r\n\t\t\t\tlet move1 = '';\r\n\t\t\t\tlet move2 = '';\r\n\t\t\t\tswitch (ball) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tmove1 = 'extremespeed';\r\n\t\t\t\t\t\tmove2 = 'shadowball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tmove1 = 'lavaplume';\r\n\t\t\t\t\t\tmove2 = 'pyroball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tmove1 = 'headlongrush';\r\n\t\t\t\t\t\tmove2 = 'rollout';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tmove1 = 'closecombat';\r\n\t\t\t\t\t\tmove2 = 'gyroball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tmove1 = 'aeroblast';\r\n\t\t\t\t\t\tmove2 = 'energyball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tmove1 = 'bugbuzz';\r\n\t\t\t\t\t\tmove2 = 'energyball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\tmove1 = 'scald';\r\n\t\t\t\t\t\tmove2 = 'energyball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\tmove1 = 'gigadrain';\r\n\t\t\t\t\t\tmove2 = 'energyball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\tmove1 = 'voltswitch';\r\n\t\t\t\t\t\tmove2 = 'electroball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\tmove1 = 'freezedry';\r\n\t\t\t\t\t\tmove2 = 'iceball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\tmove1 = 'psychic';\r\n\t\t\t\t\t\tmove2 = 'shadowball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 11:\r\n\t\t\t\t\t\tmove1 = 'darkpulse';\r\n\t\t\t\t\t\tmove2 = 'shadowball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 12:\r\n\t\t\t\t\t\tmove1 = 'moonblast';\r\n\t\t\t\t\t\tmove2 = 'energyball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\tmove1 = 'flashcannon';\r\n\t\t\t\t\t\tmove2 = 'shadowball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 14:\r\n\t\t\t\t\t\tmove1 = 'shadowsneak';\r\n\t\t\t\t\t\tmove2 = 'shadowball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 15:\r\n\t\t\t\t\t\tmove1 = 'diamondstorm';\r\n\t\t\t\t\t\tmove2 = 'rollout';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 16:\r\n\t\t\t\t\t\tmove1 = 'poisonjab';\r\n\t\t\t\t\t\tmove2 = 'shadowball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 17:\r\n\t\t\t\t\t\tmove1 = 'dracometeor';\r\n\t\t\t\t\t\tmove2 = 'energyball';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tmove1 = this.dex.moves.get(move1);\r\n\t\t\t\tmove2 = this.dex.moves.get(move2);\r\n\t\t\t\tconst learnedMove1 = {\r\n\t\t\t\t\tmove: move1,\r\n\t\t\t\t\tid: move1.id,\r\n\t\t\t\t\tpp: move1.pp,\r\n\t\t\t\t\tmaxpp: move1.pp,\r\n\t\t\t\t\ttarget: move1.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t};\r\n\t\t\t\tconst learnedMove2 = {\r\n\t\t\t\t\tmove: move2,\r\n\t\t\t\t\tid: move2.id,\r\n\t\t\t\t\tpp: move2.pp,\r\n\t\t\t\t\tmaxpp: move2.pp,\r\n\t\t\t\t\ttarget: move2.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t};\r\n\t\t\t\tpokemon.moveSlots[2] = learnedMove1;\r\n\t\t\t\tpokemon.baseMoveSlots[2] = learnedMove1;\r\n\t\t\t\tpokemon.moveSlots[3] = learnedMove2;\r\n\t\t\t\tpokemon.baseMoveSlots[3] = learnedMove2;\r\n\t\t\t\tthis.add('-message', `${pokemon.name} fetched a ${balls[ball]}!`);\r\n\t\t\t\tpokemon.formeChange(balls[ball]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\t//shortDesc: \"At the end of each turn, this Pokemon changes to a random Ball.\",\r\n\t},\r\n\tironify: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target !== pokemon && !target.volatiles['ability:ironified']) target.addVolatile('ability:ironified');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd() {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.volatiles['ability:ironified']) target.removeVolatile('ability:ironified');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ironify\",\r\n\t\t//shortDesc: \"Attacks against this Pokemon have a 30% chance of being Steel-type.\",\r\n\t},\r\n\tquarkarmor: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === 'Physical') {\r\n\t\t\t\tconst bestStat = target.getBestStat(false, true);\r\n\t\t\t\tconst worstStat = target.getWorstStat(false, true);\r\n\t\t\t\tthis.boost({ [bestStat]: -1, [worstStat]: 2 }, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Quark Armor\",\r\n\t\t//shortDesc: \"When hit by a physical move: Highest stat -1, lowest stat +2.\",\r\n\t},\r\n\t\r\n\t//vanilla abils\r\n\tzenmode: {\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1 },\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\t\r\n\t//fake abils\r\n\tironified: {\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (!noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized) && this.randomChance(3, 10)) {\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ironified\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["move"]
}
