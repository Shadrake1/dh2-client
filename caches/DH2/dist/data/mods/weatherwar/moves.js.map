{
  "version": 3,
  "sources": ["../../../../data/mods/weatherwar/moves.ts"],
  "sourcesContent": ["import {FS} from '../../../lib';\r\nimport {toID} from '../../../sim/dex-data';\r\n\r\n// Similar to User.usergroups. Cannot import here due to users.ts requiring Chat\r\n// This also acts as a cache, meaning ranks will only update when a hotpatch/restart occurs\r\nconst usergroups: {[userid: string]: string} = {};\r\nconst usergroupData = FS('config/usergroups.csv').readIfExistsSync().split('\\n');\r\nfor (const row of usergroupData) {\r\n\tif (!toID(row)) continue;\r\n\r\n\tconst cells = row.split(',');\r\n\tif (cells.length > 3) throw new Error(`Invalid entry when parsing usergroups.csv`);\r\n\tusergroups[toID(cells[0])] = cells[1].trim() || ' ';\r\n}\r\n\r\nexport function getName(name: string): string {\r\n\tconst userid = toID(name);\r\n\tif (!userid) throw new Error('No/Invalid name passed to getSymbol');\r\n\r\n\tconst group = usergroups[userid] || ' ';\r\n\treturn group + name;\r\n}\r\n\r\nexport const Moves: {[k: string]: ModdedMoveData} = {\r\n\t//weather setting moves\r\n\tsettheswarm: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set The Swarm\",\r\n\t\tshortDesc: \"Sets The Swarm.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'theswarm',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Bug\",\r\n\t},\r\n\tsettwilightzone: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Twilight Zone\",\r\n\t\tshortDesc: \"Sets Twilight Zone.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'twilightzone',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tsetlotsofreallysmalldragons: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Lots of Really Small Dragons\",\r\n\t\tshortDesc: \"Sets Lots of Really Small Dragons.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'lotsofreallysmalldragons',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Dragon\",\r\n\t},\r\n\tsetthunderstorm: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Thunderstorm\",\r\n\t\tshortDesc: \"Sets Thunderstorm.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'thunderstorm',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Electric\",\r\n\t},\r\n\tsetfable: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Fable\",\r\n\t\tshortDesc: \"Sets Fable.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'fable',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tsetcolosseum: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Colosseum\",\r\n\t\tshortDesc: \"Sets Colosseum.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'colosseum',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tsetdrought: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Drought\",\r\n\t\tshortDesc: \"Sets Drought.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'drought',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tsetdeltastream: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Delta Stream\",\r\n\t\tshortDesc: \"Sets Delta Stream.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'deltastream',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Flying\",\r\n\t},\r\n\tsetthevoices: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set THE VOICES\",\r\n\t\tshortDesc: \"Sets THE VOICES.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'thevoices',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\tsetovergrowth: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Overgrowth\",\r\n\t\tshortDesc: \"Sets Overgrowth.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'overgrowth',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tsetduststorm: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Dust Storm\",\r\n\t\tshortDesc: \"Sets Dust Storm.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'duststorm',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Ground\",\r\n\t},\r\n\tsetwhiteout: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Whiteout\",\r\n\t\tshortDesc: \"Sets Whiteout.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'whiteout',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tsetmetronomebattle: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Metronome Battle\",\r\n\t\tshortDesc: \"Sets Metronome Battle.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'metronomebattle',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tsetshitstorm: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Shitstorm\",\r\n\t\tshortDesc: \"Sets Shitstorm.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'shitstorm',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\tsetmindfuck: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Mindfuck\",\r\n\t\tshortDesc: \"Sets Mindfuck.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'mindfuck',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tsetlandslide: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Landslide\",\r\n\t\tshortDesc: \"Sets Landslide.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'landslide',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tsettimewarp: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Time Warp\",\r\n\t\tshortDesc: \"Sets Time Warp.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'timewarp',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tsetflashflood: {\r\n\t\tisViable: false,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Set Flash Flood\",\r\n\t\tshortDesc: \"Sets Flash Flood.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tpseudoWeather: 'flashflood',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\t\r\n\t//weather abusing moves\r\n\ttwineedle: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tisNonstandard: null,\r\n\t\tshortDesc: \"Hits 2 times; 20% to poison; 5 times in The Swarm.\",\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (this.field.pseudoWeather.theswarm) {\r\n\t\t\t\tmove.multihit = 5;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsnatch: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tisNonstandard: null,\r\n\t\tshortDesc: \"Steals certain status moves. Steals <= 60 BP moves in Twilight Zone.\",\r\n\t\tvolatileStatus: 'snatch',\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singleturn', pokemon, 'Snatch');\r\n\t\t\t},\r\n\t\t\tonAnyPrepareHitPriority: -1,\r\n\t\t\tonAnyPrepareHit(source, target, move) {\r\n\t\t\t\tconst snatchUser = this.effectState.source;\r\n\t\t\t\tif (snatchUser.isSkyDropped()) return;\r\n\t\t\t\tif (this.field.pseudoWeather.twilightzone && (!move || move.basePower > 60)) return;\r\n\t\t\t\tif (!this.field.pseudoWeather.twilightzone && (!move || move.isZ || move.isMax || !move.flags['snatch'] || move.sourceEffect === 'snatch')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsnatchUser.removeVolatile('snatch');\r\n\t\t\t\tthis.add('-activate', snatchUser, 'move: Snatch', '[of] ' + source);\r\n\t\t\t\tthis.actions.useMove(move.id, snatchUser);\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdragonrage: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tisNonstandard: null,\r\n\t\tshortDesc: \"Deals 40 damage. 100 damage in LoRSD.\",\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (this.field.pseudoWeather.lotsofreallysmalldragons) {\r\n\t\t\t\tmove.damage = 100;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcharge: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"+1 SpD, next Electric move 2x, 33% heal in Thunderstorm.\",\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect && ['Short Circuit', 'Wind Power'].includes(effect.name)) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Charge', this.activeMove!.name, '[from] ability: ' + effect.name);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Charge');\r\n\t\t\t\t}\r\n\t\t\t\tif (this.field.pseudoWeather.thunderstorm) {\r\n\t\t\t\t\tthis.heal(pokemon.maxhp / 3, pokemon, pokemon, effect);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRestart(pokemon, source, effect) {\r\n\t\t\t\tif (effect && ['Short Circuit', 'Wind Power'].includes(effect.name)) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Charge', this.activeMove!.name, '[from] ability: ' + effect.name);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Charge');\r\n\t\t\t\t}\r\n\t\t\t\tif (this.field.pseudoWeather.thunderstorm) {\r\n\t\t\t\t\tthis.heal(pokemon.maxhp / 3, pokemon, pokemon, effect);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 9,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\t\tthis.debug('charge boost');\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonMoveAborted(pokemon, target, move) {\r\n\t\t\t\tif (move.type === 'Electric' && move.id !== 'charge') {\r\n\t\t\t\t\tpokemon.removeVolatile('charge');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\t\tif (move.type === 'Electric' && move.id !== 'charge') {\r\n\t\t\t\t\tpokemon.removeVolatile('charge');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Charge', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmistyexplosion: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Doesn't faint and 1.5x power in Fable.\",\r\n\t\tbasePower: 100,\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (this.field.pseudoWeather.fable) {\r\n\t\t\t\tmove.basePower = 150;\r\n\t\t\t\tdelete move.selfdestruct;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tupperhand: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Doesn't fail, doesn't flinch in Colosseum.\",\r\n\t\tonTryHit(target, pokemon, move) {\r\n\t\t\tif (this.field.getPseudoWeather('colosseum')) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n            const action = this.queue.willMove(target);\r\n            const targetMove = action?.choice === 'move' ? action.move : null;\r\n            if (!targetMove || targetMove.priority <= 0.1 || targetMove.category === 'Status') {\r\n                return false;\r\n            }\r\n        },\r\n\t},\r\n\tfirepledge: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Sets Sea of Fire if Drought.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.pseudoWeather.drought) move.sideCondition = 'firepledge';\r\n\t\t},\r\n\t},\r\n\ttailwind: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Sets Tailwind for 4 turns, 6 if Delta Stream.\",\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (this.field.pseudoWeather.deltastream) {\r\n\t\t\t\t\treturn 6;\r\n\t\t\t\t}\r\n\t\t\t\tif (!effect) return 2;\r\n\t\t\t\treturn 4;\r\n\t\t\t},\r\n\t\t\tonSideStart(side, source) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Tailwind', '[persistent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Tailwind');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 5,\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'move: Tailwind');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdestinybond: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Can be used consecutively if THE VOICES is active.\",\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\tif(this.field.pseudoWeather.thevoices) pokemon.removeVolatile('destinybond');\r\n\t\t},\r\n\t},\r\n\tgrasspledge: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Sets Swamp if Overgrowth is active.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.pseudoWeather.overgrowth) move.sideCondition = 'grasspledge';\r\n\t\t},\r\n\t},\r\n\tspikes: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Sets twice at a time and deals double damage if Dust Storm is active.\",\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers = this.field.pseudoWeather.duststorm ? 2 : 1;\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 3) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tconst additive = this.field.pseudoWeather.duststorm ? 2 : 1;\r\n\t\t\t\tthis.effectState.layers += additive;\r\n\t\t\t\tif(this.effectState.layers > 3) this.effectState.layers = 3;\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t\tconst damageAmounts = [0, 3, 4, 6]; // 1/8, 1/6, 1/4\r\n\t\t\t\tconst denominator = this.field.pseudoWeather.duststorm ? 12 : 24;\r\n\t\t\t\tthis.damage(damageAmounts[this.effectState.layers] * pokemon.maxhp / denominator);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsandtomb: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Traps and lowers Defense by 1 if Dust Storm is active.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.pseudoWeather.duststorm) move.volatileStatus = 'sandtomb';\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Sand Tomb', '[silent]');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 13,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tif (this.field.pseudoWeather.duststorm) this.boost({def: -1}, pokemon, pokemon, this.dex.getActiveMove('sandtomb'));\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Sand Tomb', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\ticeball: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tisNonstandard: null,\r\n\t\taccuracy: 100,\r\n\t\tshortDesc: \"2x power and doesn't lock in Whiteout.\",\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tlet bp = move.basePower;\r\n\t\t\tconst iceballData = pokemon.volatiles['iceball'];\r\n\t\t\tif (iceballData?.hitCount) {\r\n\t\t\t\tbp *= Math.pow(2, iceballData.contactHitCount);\r\n\t\t\t}\r\n\t\t\tif (iceballData && pokemon.status !== 'slp') {\r\n\t\t\t\ticeballData.hitCount++;\r\n\t\t\t\ticeballData.contactHitCount++;\r\n\t\t\t\tif (iceballData.hitCount < 5) {\r\n\t\t\t\t\ticeballData.duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['defensecurl']) {\r\n\t\t\t\tbp *= 2;\r\n\t\t\t}\r\n\t\t\tif (this.field.pseudoWeather.whiteout) {\r\n\t\t\t\tbp *= 2;\r\n\t\t\t}\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonLockMove(pokemon) {\r\n\t\t\t\tif (this.field.getPseudoWeather('whiteout')) return;\r\n\t\t\t\treturn 'iceball';\r\n\t\t\t},\r\n\t\t\tonStart() {\r\n\t\t\t\tthis.effectState.hitCount = 0;\r\n\t\t\t\tthis.effectState.contactHitCount = 0;\r\n\t\t\t},\r\n\t\t\tonResidual(target) {\r\n\t\t\t\tif (target.lastMove && target.lastMove.id === 'struggle') {\r\n\t\t\t\t\t// don't lock\r\n\t\t\t\t\tdelete target.volatiles['iceball'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmetronome: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Picks good moves in Metronome battle.\",\r\n\t\tonHit(target, source, effect) {\r\n\t\t\tconst GOOD_STATUS_MOVES = [\r\n\t\t\t\t'acidarmor', 'agility', 'aromatherapy', 'auroraveil', 'autotomize', 'banefulbunker', 'batonpass', 'bellydrum', 'bulkup', 'calmmind', 'chillyreception', 'clangoroussoul', 'coil', 'cottonguard', 'courtchange', 'curse', 'defog', 'destinybond', 'detect', 'disable', 'dragondance', 'encore', 'extremeevoboost', 'filletaway', 'geomancy', 'glare', 'haze', 'healbell', 'healingwish', 'healorder', 'heartswap', 'honeclaws', 'kingsshield', 'leechseed', 'lightscreen', 'lovelykiss', 'lunardance', 'magiccoat', 'maxguard', 'memento', 'milkdrink', 'moonlight', 'morningsun', 'nastyplot', 'naturesmadness', 'noretreat', 'obstruct', 'painsplit', 'partingshot', 'perishsong', 'protect', 'quiverdance', 'recover', 'reflect', 'reflecttype', 'rest', 'revivalblessing', 'roar', 'rockpolish', 'roost', 'shedtail', 'shellsmash', 'shiftgear', 'shoreup', 'silktrap', 'slackoff', 'sleeppowder', 'sleeptalk', 'softboiled', 'spikes', 'spikyshield', 'spore', 'stealthrock', 'stickyweb', 'strengthsap', 'substitute', 'switcheroo', 'swordsdance', 'synthesis', 'tailglow', 'tailwind', 'taunt', 'thunderwave', 'tidyup', 'toxic', 'transform', 'trick', 'victorydance', 'whirlwind', 'willowisp', 'wish', 'yawn',\r\n\t\t\t];\r\n\t\t\tconst GOOD_WEAK_MOVES = [\r\n\t\t\t\t'accelerock', 'acrobatics', 'aquacutter', 'avalanche', 'barbbarrage', 'bonemerang', 'bouncybubble', 'bulletpunch', 'buzzybuzz', 'ceaselessedge', 'circlethrow', 'clearsmog', 'doubleironbash', 'dragondarts', 'dragontail', 'drainingkiss', 'endeavor', 'facade', 'firefang', 'flipturn', 'flowertrick', 'freezedry', 'frustration', 'geargrind', 'grassknot', 'gyroball', 'icefang', 'iceshard', 'iciclespear', 'infernalparade', 'jetpunch', 'knockoff', 'lastrespects', 'lowkick', 'machpunch', 'mortalspin', 'mysticalpower', 'naturesmadness', 'nightshade', 'nuzzle', 'pikapapow', 'populationbomb', 'psychocut', 'psyshieldbash', 'pursuit', 'quickattack', 'ragefist', 'rapidspin', 'return', 'rockblast', 'ruination', 'saltcure', 'scorchingsands', 'seismictoss', 'shadowclaw', 'shadowsneak', 'sizzlyslide', 'skydrop', 'stoneaxe', 'storedpower', 'stormthrow', 'suckerpunch', 'superfang', 'surgingstrikes', 'tailslap', 'trailblaze', 'tripleaxel', 'tripledive', 'twinbeam', 'uturn', 'veeveevolley', 'voltswitch', 'watershuriken', 'weatherball',\r\n\t\t\t];\r\n\t\t\tconst moves = this.dex.moves.all().filter(move => (\r\n\t\t\t\t(this.field.pseudoWeather.metronomebattle ? ((move.basePower >= 75 && !move.flags['charge']) || GOOD_STATUS_MOVES.includes(move) || GOOD_WEAK_MOVES.includes(move)) : //any viable move\r\n\t\t\t\t((![2, 4].includes(this.gen) || !source.moves.includes(move.id)) &&\r\n\t\t\t\t(!move.isNonstandard || move.isNonstandard === 'Unobtainable') &&\r\n\t\t\t\tmove.flags['metronome'])\r\n\t\t\t)));\r\n\t\t\tlet randomMove = '';\r\n\t\t\tif (moves.length) {\r\n\t\t\t\tmoves.sort((a, b) => a.num - b.num);\r\n\t\t\t\trandomMove = this.sample(moves).id;\r\n\t\t\t}\r\n\t\t\tif (!randomMove) return false;\r\n\t\t\tsource.side.lastSelectedMove = this.toID(randomMove);\r\n\t\t\tthis.actions.useMove(randomMove, target);\r\n\t\t\tif (!target.metronomeUsed && target.hasAbility(\"duomodreference\")) {\r\n\t\t\t\tthis.add('-ability', target, 'Duomod Reference??');\r\n\t\t\t\ttarget.metronomeUsed = true;\r\n\t\t\t\tthis.actions.useMove(this.dex.getActiveMove('metronome'), target);\r\n\t\t\t\ttarget.metronomeUsed = false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbelch: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Cannot be selected unless it is Shitstorm or the user eats a Berry.\",\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!this.field.pseudoWeather.shitstorm && !pokemon.ateBerry) pokemon.disableMove('belch');\r\n\t\t},\r\n\t},\r\n\tamnesia: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Raises SpD by 2, SpA by 2 if Mindfuck.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.pseudoWeather.mindfuck) move.boosts = {spa: 2, spd: 2};\r\n\t\t},\r\n\t},\r\n\tancientpower: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"10% to raise all stats, 100% in Landslide.\",\r\n\t\t    onModifyMove(move, pokemon) {\r\n            if (!this.field.pseudoWeather.landslide) return;\r\n            move.secondaries = [];\r\n            if (this.field.pseudoWeather.landslide) {\r\n                move.secondaries.push({\r\n                    chance: 100,\r\n                    self: {\r\n                        boosts: {\r\n                            atk: 1,\r\n                            def: 1,\r\n                            spa: 1,\r\n                            spd: 1,\r\n                            spe: 1,\r\n                        },\r\n                    },\r\n                });\r\n            }\r\n        },\r\n\t},\r\n\tgyroball: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.timewarp) return 150;\r\n\t\t\tlet power = Math.floor(25 * target.getStat('spe') / pokemon.getStat('spe')) + 1;\r\n\t\t\tif (!isFinite(power)) power = 1;\r\n\t\t\tif (power > 150) power = 150;\r\n\t\t\tthis.debug('BP: ' + power);\r\n\t\t\treturn power;\r\n\t\t},\r\n\t},\r\n\thardpress: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.timewarp) return 100;\r\n\t\t\tconst hp = target.hp;\r\n\t\t\tconst maxHP = target.maxhp;\r\n\t\t\tconst bp = Math.floor(Math.floor((100 * (100 * Math.floor(hp * 4096 / maxHP)) + 2048 - 1) / 4096) / 100) || 1;\r\n\t\t\tthis.debug('BP for ' + hp + '/' + maxHP + \" HP: \" + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t},\r\n\theavyslam: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.timewarp) return 120;\r\n\t\t\tconst targetWeight = target.getWeight();\r\n\t\t\tconst pokemonWeight = pokemon.getWeight();\r\n\t\t\tlet bp;\r\n\t\t\tif (pokemonWeight >= targetWeight * 5) {\r\n\t\t\t\tbp = 120;\r\n\t\t\t} else if (pokemonWeight >= targetWeight * 4) {\r\n\t\t\t\tbp = 100;\r\n\t\t\t} else if (pokemonWeight >= targetWeight * 3) {\r\n\t\t\t\tbp = 80;\r\n\t\t\t} else if (pokemonWeight >= targetWeight * 2) {\r\n\t\t\t\tbp = 60;\r\n\t\t\t} else {\r\n\t\t\t\tbp = 40;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t},\r\n\tmetalburst: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tdamageCallback(pokemon) {\r\n\t\t\tif (this.field.pseudoWeather.timewarp) return 65535;\r\n\t\t\tconst lastDamagedBy = pokemon.getLastDamagedBy(true);\r\n\t\t\tif (lastDamagedBy !== undefined) {\r\n\t\t\t\treturn (lastDamagedBy.damage * 1.5) || 1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t},\r\n\tmetalclaw: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Sets Steel hazards in Time Warp.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.pseudoWeather.timewarp) {\r\n\t\t\t\tmove.onAfterHit = function(target, source, move) {\r\n\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\tside.addSideCondition('gmaxsteelsurge');\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\twaterpledge: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Sets Rainbow if Flash Flood.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.pseudoWeather.flashflood) move.sideCondition = 'waterpledge';\r\n\t\t},\r\n\t},\r\n\r\n\t//duomod reference\r\n\tneutralair: {\r\n\t\tnum: 3005,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"For 5 turns, abilities become nullified.\",\r\n\t\tname: \"Neutral Air\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Defog\", target);\r\n\t\t},\r\n\t\tpseudoWeather: 'neutralair',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('floatstone')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of source.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id !== 'neutralair') {\r\n\t\t\t\t\t\treturn 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonStart(target, source) {\r\n\t\t\t\tthis.add('-fieldstart', 'move: Neutral Air', '[of] ' + source);\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tpokemon.addVolatile('gastroacid');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tpokemon.addVolatile('gastroacid');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRestart(target, source) {\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 24,\r\n\t\t\tonEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Neutral Air');\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tpokemon.removeVolatile('gastroacid');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tultranome: {\r\n\t\tnum: 118,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Ultranome\",\r\n\t\tpp: 40,\r\n\t\tshortDesc: \"Uses Metronome 3 times; not learnable.\",\r\n\t\tnoPPBoosts: true,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Metronome\", target);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tthis.actions.useMove(\"Metronome\", pokemon);\r\n\t\t\tthis.actions.useMove(\"Metronome\", pokemon);\r\n\t\t\tthis.actions.useMove(\"Metronome\", pokemon);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tsickhacks: {\r\n\t\tnum: 3021,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Sick Hacks\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Heart Swap\", target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tconst pokHP = (source.hp / source.maxhp);\r\n\t\t\tconst tarHP = (target.hp / target.maxhp);\r\n\t\t\tsource.sethp(tarHP * source.maxhp);\r\n\t\t\tthis.add('-sethp', source, target.getHealth, '[from] move: Pain Split', '[silent]');\r\n\t\t\ttarget.sethp(pokHP * target.maxhp);\r\n\t\t\tthis.add('-sethp', target, target.getHealth, '[from] move: Pain Split', '[silent]');\r\n\t\t\tthis.add('-message', \"The Pokemon traded HP bars!\");\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\troulettespin: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Activates the Roulette Wheel an additional time.\",\r\n\t\tname: \"Roulette Spin\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Metronome\", target);\r\n\t\t},\r\n\t\tonHit(source) {\r\n\t\t\tlet result: number;\r\n\t\t\tlet pickSide: number;\r\n\t\t\tthis.hint(\"Time for a bonus wheel!\");\r\n\t\t\tresult = this.random(50);\r\n\t        pickSide = this.random(2);\r\n\t\t\tif (result === 0) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 1 - Fully heal every active Pokemon.\");\r\n\t            for (const pokemon of this.getAllActive()) {\r\n\t                this.heal(pokemon.maxhp, pokemon);\r\n\t                pokemon.cureStatus();\r\n\t            }\r\n\t        } else if (result === 1) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 2 - Greatly increase everyone's highest stat.\");\r\n\t            for (const pokemon of this.getAllActive()) {\r\n\t                let statName = 'atk';\r\n\t                let bestStat = 0;\r\n\t                let s: StatNameExceptHP;\r\n\t                for (s in pokemon.storedStats) {\r\n\t                    if (pokemon.storedStats[s] > bestStat) {\r\n\t                        statName = s;\r\n\t                        bestStat = pokemon.storedStats[s];\r\n\t                    }\r\n\t                }\r\n\t                this.boost({[statName]: 3}, pokemon);\r\n\t            }\r\n\t        } else if (result === 2) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 3 - Give one Pokemon an omniboost.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1}, target, target, null, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1}, target, target, null, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t        } else if (result === 3) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 4 - Set one Pokemon to 1 HP.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.directDamage(target.hp - 1, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.directDamage(target.hp - 1, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t        } else if (result === 4) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 5 - screw you both\");\r\n\t            for (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.directDamage(pokemon.hp, pokemon);\r\n\t\t    }\r\n\t\t\t} else if (result === 5) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 6 - Set hazards on both sides.\");\r\n\t\t    for (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Spikes\", pokemon);\r\n\t\t\t\t\tthis.actions.useMove(\"Stealth Electric\", pokemon);\r\n\t\t    }\r\n\t\t\t} else if (result === 6) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 7 - Set a random weather and terrain.\");\r\n\t\t\t\tconst result2 = this.random(3);\r\n\t\t\t\tconst result3 = this.random(3);\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tif (result2 === 0) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Grassy Terrain\", target);\r\n\t\t\t\t\t\t\t} else if (result2 === 1) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Electric Terrain\", target);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Misty Terrain\", target);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (result3 === 0) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Sunny Day\", target);\r\n\t\t\t\t\t\t\t} else if (result3 === 1) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Rain Dance\", target);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Sandstorm\", target);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tif (result2 === 0) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Grassy Terrain\", target);\r\n\t\t\t\t\t\t\t} else if (result2 === 1) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Electric Terrain\", target);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Misty Terrain\", target);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (result3 === 0) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Sunny Day\", target);\r\n\t\t\t\t\t\t\t} else if (result3 === 1) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Rain Dance\", target);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Sandstorm\", target);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 7) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 8 - lmao\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.directDamage(1, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.directDamage(1, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t        } else if (result === 8) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 9 - Minimize every stat of one Pokemon.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive && target.hasAbility('contrary')) {\r\n\t\t\t\t\t\t\tthis.boost({atk: 12, def: 12, spa: 12, spd: 12, spe: 12}, target, target, null, true);\r\n\t\t\t\t\t\t} else if (target.isActive) {\r\n\t\t\t\t\t\t\tthis.boost({atk: -12, def: -12, spa: -12, spd: -12, spe: -12}, target, target, null, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive && target.hasAbility('contrary')) {\r\n\t\t\t\t\t\t\tthis.boost({atk: 12, def: 12, spa: 12, spd: 12, spe: 12}, target, target, null, true);\r\n\t\t\t\t\t\t} else if (target.isActive) {\r\n\t\t\t\t\t\t\tthis.boost({atk: -12, def: -12, spa: -12, spd: -12, spe: -12}, target, target, null, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t   } else if (result === 9) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 10 - Forcibly switch every Pokemon.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tpokemon.forceSwitchFlag = true;\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 10) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 11 - Make every Pokemon use Conversion 2.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Conversion 2\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 11) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 12 - Make one Pokemon Transform into the other.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Transform\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Transform\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 12) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 13 - Make both Pokemon trade stat changes.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Heart Swap\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Heart Swap\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 13) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 14 - Slightly heal both Pokemon.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.heal(pokemon.maxhp / 4, pokemon);\r\n\t        \t}\r\n\t        } else if (result === 14) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 15 - heard you guys liked scald\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Scald\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 15) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 16 - Attempt to Toxic both Pokemon.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tif (!pokemon.side.getSideCondition('safeguard')) {\r\n\t\t\t\t\t\tpokemon.trySetStatus('tox', pokemon);\r\n\t\t\t\t\t}\r\n\t      }\r\n\t\t\t} else if (result === 16) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 17 - Switch both sides' field effects.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Court Change\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Court Change\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 17) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 18 - Raise both active Pokemons' attacking stats.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t                this.boost({atk: 2, spa: 2}, pokemon);\r\n\t\t\t\t}\r\n\t        } else if (result === 18) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 19 - Make both Pokemon use Camouflage.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Camouflage\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 19) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 20 - Make both Pokemon swap abilities.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Skill Swap\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Skill Swap\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 20) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 21 - wahoo\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Celebrate\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Celebrate\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 21) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 22 - Sets Trick Room.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Trick Room\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Trick Room\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 22) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 23 - Pocket sand go\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.boost({accuracy: -1}, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.boost({accuracy: -1}, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 23) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 24 - Removes all active stat changes.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Haze\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Haze\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 24) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 25 - Sets Magic Room.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Magic Room\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Magic Room\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 25) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 26 - Sets Wonder Room.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Wonder Room\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Wonder Room\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 26) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 27 - Averages out the HP of active Pokemon.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Pain Split\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Pain Split\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 27) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 28 - Cures all active Pokemons' statuses.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t                \tpokemon.cureStatus();\r\n\t        \t}\r\n\t        } else if (result === 28) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 29 - Sets up Screens for one side.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Reflect\", target);\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Light Screen\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Reflect\", target);\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Light Screen\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 29) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 30 - Starts a status immunity for both sides.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t                \tthis.actions.useMove(\"Safeguard\", pokemon);\r\n\t        \t}\r\n\t        } else if (result === 30) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 31 - Deactivates all abilities that are active within 2 turns.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Neutral Air\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Neutral Air\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 31) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 32 - Attempts to Freeze all active Pokemon.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tpokemon.trySetStatus('frz', pokemon);\r\n\t        \t}\r\n\t\t\t} else if (result === 32) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 33 - Switches out one Pokemon.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\ttarget.forceSwitchFlag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\ttarget.forceSwitchFlag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 33) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 34 - Sets up Aqua Ring for both sides.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Aqua Ring\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 34) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 35 - One active Pokemon Defogs.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Defog\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Defog\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 35) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 36 - Both active Pokemon share a type combination.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Reflect Type\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Reflect Type\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 36) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 37 - glhf\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Sheer Cold\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 37) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 38 - uh oh\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Octolock\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 38) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 39 - Both active Pokemon use Metronome.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Metronome\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 39) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 40 - get ready\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tconst oldAbility = target.setAbility('Moody');\r\n\t\t\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Moody', '[from] move: Roulette Spin');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tconst oldAbility = target.setAbility('Moody');\r\n\t\t\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Moody', '[from] move: Roulette Spin');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 40) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 41 - Both active Pokemon swap items.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Trick\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Switcheroo\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 41) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 42 - Both active Pokemon trade HP bars.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Sick Hacks\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Sick Hacks\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 42) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 43 - Both active Pokemon use their first move.\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tconst frstMove = this.dex.moves.get(pokemon.moveSlots[0].id);\r\n\t\t\t\t\tthis.actions.useMove(frstMove, pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 43) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 44 - One active Pokemon gains a higher crit rate.\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Focus Energy\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Focus Energy\", target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 44) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 45 - One new spin for each active Pokemon!\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Roulette Spin\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 45) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 46 - One active Pokemon becomes way faster than the other.\");\r\n\t\t\t\tfor (const pokemon of this.sides[0].active) {\r\n\t\t\t\t\tfor (const target of this.sides[1].active) {\r\n\t\t\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\t\t\tthis.boost({spe: 12}, pokemon, pokemon, null, true);\r\n\t\t\t\t\t\t\tthis.boost({spe: -12}, target, target, null, true);\r\n\t\t\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\t\t\tthis.boost({spe: 12}, target, target, null, true);\r\n\t\t\t\t\t\t\tthis.boost({spe: -12}, pokemon, pokemon, null, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 46) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 47 - sussie\");\r\n\t\t\t\tif (pickSide === 0) {\r\n\t\t\t\t\tfor (const target of this.sides[0].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Vote Out\", target);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pickSide === 1) {\r\n\t\t\t\t\tfor (const target of this.sides[1].pokemon) {\r\n\t\t\t\t\t\tif (target.isActive) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Vote Out\", target);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 47) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 48 - Time for some good ol' Mario Kart Wii\");\r\n\t\t\t\tfor (const pokemon of this.sides[0].active) {\r\n\t\t\t\t\tfor (const target of this.sides[1].active) {\r\n\t\t\t\t\t\tif (target.storedStats.spe < pokemon.storedStats.spe) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Flame Runner\", pokemon);\r\n\t\t\t\t\t\t\tconst oldAbility = target.setAbility('Slow Start');\r\n\t\t\t\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\t\t\t\tthis.add('-ability', target, 'Slow Start', '[from] move: Flame Runner', '[silent]');\r\n\t\t\t\t\t\t\t\tif (target.side !== pokemon.side) target.volatileStaleness = 'external';\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (target.storedStats.spe > pokemon.storedStats.spe) {\r\n\t\t\t\t\t\t\tthis.actions.useMove(\"Flame Runner\", target);\r\n\t\t\t\t\t\t\tconst oldAbility = pokemon.setAbility('Slow Start');\r\n\t\t\t\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\t\t\t\tthis.add('-ability', pokemon, 'Slow Start', '[from] move: Flame Runner', '[silent]');\r\n\t\t\t\t\t\t\t\tif (target.side !== pokemon.side) pokemon.volatileStaleness = 'external';\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\t\t\t\tthis.actions.useMove(\"Flame Runner\", active);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (result === 48) {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 49 - Ad break.\");\r\n\t\t\t\tthis.add('-message', \"Hello Duomod v3 enjoyer!\");\r\n\t\t\t\tthis.add('-message', \"The fact that you're spending your time on Pokemon Showdown must mean you're really bored!\");\r\n\t\t\t\tthis.add('-message', \"Well today's your lucky day! Because I've got just the cure!\");\r\n\t\t\t\tthis.add('-message', \"Head on over to DuoM2's YouTube channel, featuring several videos from the one and only DuoM2!\");\r\n\t\t\t\tthis.add('-message', \"He's smart, funny, a gamer, handsome, and the best Mewtwo main in South Carolina Smash!\");\r\n\t\t\t\tthis.add('-message', \"With 4 hours of content right now and more to come, your boredom will soar off into space!\");\r\n\t\t\t\tthis.add('-message', \"Plus, as a special promotional bonus, if you subscribe now, you'll get to say you knew him before it was cool!\");\r\n\t\t\t\tthis.add('-message', \"Head on over to DuoM2's YouTube channel for the time of your life! Linked down below!\");\r\n\t\t\t\tthis.add('-message', \"https://www.youtube.com/channel/UCvVihnVokWwZ4NpeMsBk48A/\");\r\n\t\t\t\tthis.add('-message', \"https://www.youtube.com/channel/UCvVihnVokWwZ4NpeMsBk48A/\");\r\n\t\t\t\tthis.add('-message', \"https://www.youtube.com/channel/UCvVihnVokWwZ4NpeMsBk48A/\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.hint(\"Roulette Wheel Result 50 - THE ULTIMATE EFFECT\");\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tthis.actions.useMove(\"Ultranome\", pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Fairy\",\r\n\t\tzMove: {boost: {atk: 1, def: 1, spa: 1, spd: 1, spe: 1}},\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tvoteout: {\r\n\t\tnum: 3020,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Vote Out\",\r\n\t\tpp: 1,\r\n\t\tnoPPBoosts: true,\r\n\t\tpriority: -7,\r\n\t\tflags: {mirror: 1, authentic: 1, mystery: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Acupressure\", target);\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\ttarget.formeChange('Impsaustor', this.effect, true);\r\n\t\t\tconst ms0 = {\r\n\t\t\t\tmove: \"Knock Off\",\r\n\t\t\t\tid: \"knockoff\",\r\n\t\t\t\tpp: 32,\r\n\t\t\t\tmaxpp: 32,\r\n\t\t\t\ttarget: \"normal\",\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tconst ms1 = {\r\n\t\t\t\tmove: \"Recover\",\r\n\t\t\t\tid: \"recover\",\r\n\t\t\t\tpp: 16,\r\n\t\t\t\tmaxpp: 16,\r\n\t\t\t\ttarget: \"self\",\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tconst ms2 = {\r\n\t\t\t\tmove: \"Gunk Shot\",\r\n\t\t\t\tid: \"gunkshot\",\r\n\t\t\t\tpp: 8,\r\n\t\t\t\tmaxpp: 8,\r\n\t\t\t\ttarget: \"normal\",\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tconst ms3 = {\r\n\t\t\t\tmove: \"Swords Dance\",\r\n\t\t\t\tid: \"swordsdance\",\r\n\t\t\t\tpp: 32,\r\n\t\t\t\tmaxpp: 32,\r\n\t\t\t\ttarget: \"self\",\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\ttarget.moveSlots[0] = ms0;\r\n\t\t\ttarget.baseMoveSlots[0] = ms0;\r\n\t\t\ttarget.moveSlots[1] = ms1;\r\n\t\t\ttarget.baseMoveSlots[1] = ms1;\r\n\t\t\ttarget.moveSlots[2] = ms2;\r\n\t\t\ttarget.baseMoveSlots[2] = ms2;\r\n\t\t\ttarget.moveSlots[3] = ms3;\r\n\t\t\ttarget.baseMoveSlots[3] = ms3;\r\n\t\t\tconst oldAbility = target.setAbility('Vent');\r\n\t\t\tif (oldAbility) {\r\n\t\t\t\tthis.add('-ability', target, 'Vent', '[from] move: Vote Out', '[silent]');\r\n\t\t\t\ttarget.volatileStaleness = 'external';\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-message', target + \" was the Impsaustor!\");\r\n\t\t\tthis.add('-start', target, 'typechange', target.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst species = this.dex.species.get(target.species.name);\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tif (species.types[1]) {\r\n\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"https://${Config.routes.client}/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"https://${Config.routes.client}/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"https://${Config.routes.client}/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t}\r\n\t\t\tthis.add('-start', target, 'typechange', target.species.types.join('/'), '[silent]');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tflamerunner: {\r\n\t\tnum: 1002.1,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"User becomes part Fire.\",\r\n\t\tname: \"Flame Runner\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, defrost: 1, contact: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Flame Charge\", target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tonHit(pokemon) {\r\n\t\t\t\tif (pokemon.hasType('Fire')) return false;\r\n\t\t\t\tif (!pokemon.addType('Fire')) return false;\r\n\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Fire', '[from] move: Flame Runner');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t\r\n\t//vanilla\r\n\ttoxicspikes: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 2) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\t\tif (pokemon.hasType('Poison')) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Toxic Spikes', '[of] ' + pokemon);\r\n\t\t\t\t\tpokemon.side.removeSideCondition('toxicspikes');\r\n\t\t\t\t} else if (pokemon.hasType('Steel') || pokemon.hasItem('heavydutyboots') || pokemon.hasAbility('sandrush')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (this.effectState.layers >= 2) {\r\n\t\t\t\t\tpokemon.trySetStatus('tox', pokemon.side.foe.active[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpokemon.trySetStatus('psn', pokemon.side.foe.active[0]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tstickyweb: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Sticky Web');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots') || pokemon.hasAbility('sandrush')) return;\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Sticky Web');\r\n\t\t\t\tthis.boost({spe: -1}, pokemon, pokemon.side.foe.active[0], this.dex.getActiveMove('stickyweb'));\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmilkdrink: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\trecover: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\trest: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\troost: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tshoreup: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tslackoff: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tsoftboiled: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tsynthesis: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Heals the user by 50% of its max HP.\",\r\n\t\tonHit: null,\r\n\t\theal: [1, 2],\r\n\t\tpp: 10,\r\n\t},\r\n\tmorningsun: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Heals the user by 50% of its max HP.\",\r\n\t\tonHit: null,\r\n\t\theal: [1, 2],\r\n\t\tpp: 10,\r\n\t},\r\n\tmoonlight: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Heals the user by 50% of its max HP.\",\r\n\t\tonHit: null,\r\n\t\theal: [1, 2],\r\n\t\tpp: 10,\r\n\t},\r\n\telectroshot: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Charges instantly if Thunderstorm or Flash Flood.\",\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tthis.boost({spa: 1}, attacker, attacker, move);\r\n\t\t\tif (this.field.pseudoWeather.thunderstorm || this.field.pseudoWeather.flashflood) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', attacker, move.name, defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tsolarbeam: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Charges instantly if Overgrowth or Drought.\",\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (this.field.pseudoWeather.overgrowth || this.field.pseudoWeather.drought) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', attacker, move.name, defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tsolarblade: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Charges instantly if Overgrowth or Drought.\",\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (this.field.pseudoWeather.overgrowth || this.field.pseudoWeather.drought) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', attacker, move.name, defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tgrowth: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"+2 Atk, +2 SpA in Overgrowth or Drought.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.pseudoWeather.overgrowth || this.field.pseudoWeather.drought) move.boosts = {atk: 2, spa: 2};\r\n\t\t},\r\n\t},\r\n\tblizzard: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Can't miss in Whiteout.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.pseudoWeather.whiteout) move.accuracy = true;\r\n\t\t},\r\n\t},\r\n\tauroraveil: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Fails unless there is Whiteout.\",\r\n\t\tonTry() {\r\n\t\t\treturn this.field.pseudoWeather.whiteout;\r\n\t\t},\r\n\t},\r\n\tweatherball: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 75,\r\n\t\ttype: 'Stellar',\r\n\t\tshortDesc: \"2x in any weather. Gains type effectiveness for each weather.\",\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif(this.field.pseudoWeather.length == 0) return;\r\n\t\t\tconst ids = [];\r\n\t\t\tfor(const pseudoWeather in this.field.pseudoWeather) {\r\n\t\t\t\tids.push(pseudoWeather);\r\n\t\t\t}\r\n\t\t\tfor(let i = 1; i < ids.length; i ++) {\r\n\t\t\t\tconst weather = ids[i];\r\n\t\t\t\tconsole.log(weather);\r\n\t\t\t\tswitch (weather) {\r\n\t\t\t\t\tcase 'theswarm':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Bug', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'twilightzone':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Dark', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'lotsofreallysmalldragons':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Dragon', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'thunderstorm':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Electric', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'fable':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Fairy', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colosseum':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Fighting', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'drought':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Fire', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'deltastream':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Flying', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'thevoices':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Ghost', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'overgrowth':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Grass', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'duststorm':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Grass', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'whiteout':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Ice', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'metronomebattle':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Normal', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'shitstorm':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Poison', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mindfuck':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Psychic', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'landslide':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Rock', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'timewarp':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Steel', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'flashflood':\r\n\t\t\t\t\t\ttypeMod += this.dex.getEffectiveness('Water', type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"typemod: \" + typeMod);\r\n\t\t\t\treturn typeMod;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif(this.field.pseudoWeather.length > 0) move.basePower *= 2;\r\n\t\t},\r\n\t},\r\n\thyperspacefury: {\r\n\t\tinherit: true,\r\n\t\tonTry: null,\r\n\t},\r\n\thurricane: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"30% chance to confuse target. Delta Stream: can't miss.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.deltastream) move.accuracy = true;\r\n\t\t},\r\n\t},\r\n\tbleakwindstorm: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tshortDesc: \"30% to lower Speed by 1. Delta Stream: 1.3x power.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.deltastream) move.basePower = 130;\r\n\t\t},\r\n\t},\r\n\tcrushclaw: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t},\r\n\trazorshell: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t},\r\n\twildboltstorm: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tshortDesc: \"30% chance to paralyze. Thunderstorm: 1.3x power.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.deltastream) move.basePower = 130;\r\n\t\t},\r\n\t},\r\n\tspringtidestorm: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tshortDesc: \"30% to lower Attack by 1. Fable: 1.3x power.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.fable) move.basePower = 130;\r\n\t\t},\r\n\t},\r\n\tsandsearstorm: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tshortDesc: \"30% chance to burn. Dust Storm: 1.3x power.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.pseudoWeather.duststorm) move.basePower = 130;\r\n\t\t},\r\n\t},\r\n\tdefog: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Clears hazards. Ends Twilight Zone.\",\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (this.field.pseudoWeather.twilightzone) {\r\n\t\t\t\tthis.field.removePseudoWeather(\"twilightzone\");\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n}"],
  "mappings": "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",
  "names": ["move", "pokemon"]
}
