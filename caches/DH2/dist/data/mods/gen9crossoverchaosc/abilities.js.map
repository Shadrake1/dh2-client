{
  "version": 3,
  "sources": ["../../../../data/mods/gen9crossoverchaosc/abilities.ts"],
  "sourcesContent": ["/*\r\nRatings and how they work:\r\n-1: Detrimental\r\n\t  An ability that severely harms the user.\r\n\tex. Defeatist, Slow Start\r\n 0: Useless\r\n\t  An ability with no overall benefit in a singles battle.\r\n\tex. Color Change, Plus\r\n 1: Ineffective\r\n\t  An ability that has minimal effect or is only useful in niche situations.\r\n\tex. Light Metal, Suction Cups\r\n 2: Useful\r\n\t  An ability that can be generally useful.\r\n\tex. Flame Body, Overcoat\r\n 3: Effective\r\n\t  An ability with a strong effect on the user or foe.\r\n\tex. Chlorophyll, Sturdy\r\n 4: Very useful\r\n\t  One of the more popular abilities. It requires minimal support to be effective.\r\n\tex. Adaptability, Magic Bounce\r\n 5: Essential\r\n\t  The sort of ability that defines metagames.\r\n\tex. Imposter, Shadow Tag\r\n*/\r\n\r\nexport const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n  bloodfueled: {\r\n\t\tshortDesc: \"Restores 1/8 of own max HP, rounded down, upon hitting another Pokemon with a contact move.\",\r\n\t\tonAfterMoveSecondarySelfPriority: -1,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\tif (this.checkMoveMakesContact(move, target, pokemon)) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Blood-Fueled\",\r\n\t\trating: 4,\r\n\t\tnum: -1,\r\n\t},\r\n\tyounglion: {\r\n\t\tshortDesc: \"If this Pokemon moves before the opponent, this Pokemon's damaging moves become multi-hit moves that hit twice. The second hit has its damage halved.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.category === 'Status' || move.multihit || move.flags['noparentalbond'] || move.flags['charge'] ||\r\n\t\t\tmove.flags['futuremove'] || move.spreadHit || move.isZ || move.isMax || !(target.newlySwitched || this.queue.willMove(target))) return;\r\n\t\t\tmove.multihit = 2;\r\n\t\t\tmove.multihitType = 'younglion';\r\n\t\t},\r\n\t\t// Damage modifier implemented in BattleActions#modifyDamage()\r\n\t\tonSourceModifySecondaries(secondaries, target, source, move) {\r\n\t\t\tif (move.multihitType === 'younglion' && move.id === 'secretpower' && move.hit < 2) {\r\n\t\t\t\t// hack to prevent accidentally suppressing King's Rock/Razor Fang\r\n\t\t\t\treturn secondaries.filter(effect => effect.volatileStatus === 'flinch');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Young Lion\",\r\n\t\trating: 4,\r\n\t\tnum: -2,\r\n\t},\r\n\tpandemonicfeast: {\r\n\t\tshortDesc: \"Multi-hit moves hit the maximum number of times, and use the higher attacking stat when calculating damage.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.multihit && Array.isArray(move.multihit) && move.multihit.length) {\r\n\t\t\t\tmove.multihit = move.multihit[1];\r\n\t\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\t\tmove.overrideOffensiveStat = 'atk';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmove.overrideOffensiveStat = 'spa';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.multiaccuracy) {\r\n\t\t\t\tdelete move.multiaccuracy;\r\n\t\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\t\tmove.overrideOffensiveStat = 'atk';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmove.overrideOffensiveStat = 'spa';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pandemonic Feast\",\r\n\t\trating: 3.5,\r\n\t\tnum: -3,\r\n\t},\r\n\tshadowpounce: {\r\n\t\tshortDesc: \"This Pokemon retaliates with Shadow Sneak whenever it is damaged by an attack.\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!move.flags['noreaction'] && target.hp) {\r\n\t\t\t\tthis.actions.useMove({\r\n\t\t\t\t\t\tid: 'shadowsneak',\r\n\t\t\t\t\t\tname: \"Shadow Sneak\",\r\n\t\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\t\tbasePower: 40,\r\n\t\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\t\tpriority: 1,\r\n\t\t\t\t\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, noreaction: 1},\r\n\t\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\t\ttype: 'Ghost',\r\n\t\t\t\t\t}, target, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shadow Pounce\",\r\n\t\trating: 3.5,\r\n\t\tnum: -4,\r\n\t},\r\n\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBO,MAAM,YAAsD;AAAA,EACjE,aAAa;AAAA,IACb,WAAW;AAAA,IACX,kCAAkC;AAAA,IAClC,yBAAyB,SAAS,QAAQ,MAAM;AAChD,UAAI,KAAK,sBAAsB,MAAM,QAAQ,OAAO,GAAG;AACrD,aAAK,KAAK,QAAQ,YAAY,CAAC;AAAA,MAChC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACA,WAAW;AAAA,IACV,WAAW;AAAA,IACX,aAAa,QAAQ,QAAQ,MAAM;AAClC,UAAI,KAAK,aAAa,YAAY,KAAK,YAAY,KAAK,MAAM,gBAAgB,KAAK,KAAK,MAAM,QAAQ,KACtG,KAAK,MAAM,YAAY,KAAK,KAAK,aAAa,KAAK,OAAO,KAAK,SAAS,EAAE,OAAO,iBAAiB,KAAK,MAAM,SAAS,MAAM;AAAI;AAChI,WAAK,WAAW;AAChB,WAAK,eAAe;AAAA,IACrB;AAAA;AAAA,IAEA,0BAA0B,aAAa,QAAQ,QAAQ,MAAM;AAC5D,UAAI,KAAK,iBAAiB,eAAe,KAAK,OAAO,iBAAiB,KAAK,MAAM,GAAG;AAEnF,eAAO,YAAY,OAAO,YAAU,OAAO,mBAAmB,QAAQ;AAAA,MACvE;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACA,iBAAiB;AAAA,IAChB,WAAW;AAAA,IACX,aAAa,MAAM,SAAS;AAC3B,UAAI,KAAK,YAAY,MAAM,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,QAAQ;AAC1E,aAAK,WAAW,KAAK,SAAS,CAAC;AAC/B,YAAI,QAAQ,QAAQ,OAAO,OAAO,IAAI,IAAI,QAAQ,QAAQ,OAAO,OAAO,IAAI,GAAG;AAC9E,eAAK,wBAAwB;AAAA,QAC9B,OACK;AACJ,eAAK,wBAAwB;AAAA,QAC9B;AAAA,MACD;AACA,UAAI,KAAK,eAAe;AACvB,eAAO,KAAK;AACZ,YAAI,QAAQ,QAAQ,OAAO,OAAO,IAAI,IAAI,QAAQ,QAAQ,OAAO,OAAO,IAAI,GAAG;AAC9E,eAAK,wBAAwB;AAAA,QAC9B,OACK;AACJ,eAAK,wBAAwB;AAAA,QAC9B;AAAA,MACD;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACA,cAAc;AAAA,IACb,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,CAAC,KAAK,MAAM,YAAY,KAAK,OAAO,IAAI;AAC3C,aAAK,QAAQ,QAAQ;AAAA,UACnB,IAAI;AAAA,UACJ,MAAM;AAAA,UACN,UAAU;AAAA,UACV,WAAW;AAAA,UACX,UAAU;AAAA,UACV,UAAU;AAAA,UACV,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,YAAY,EAAC;AAAA,UACtE,YAAY;AAAA,UACZ,MAAM;AAAA,QACP,GAAG,QAAQ,MAAM;AAAA,MACnB;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAED;",
  "names": []
}
