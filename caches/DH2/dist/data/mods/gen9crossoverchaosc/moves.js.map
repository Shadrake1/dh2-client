{
  "version": 3,
  "sources": ["../../../../data/mods/gen9crossoverchaosc/moves.ts"],
  "sourcesContent": ["/*\r\nList of flags and their descriptions:\r\nauthentic: Ignores a target's substitute.\r\nbite: Power is multiplied by 1.5 when used by a Pokemon with the Strong Jaw Ability.\r\nbullet: Has no effect on Pokemon with the Bulletproof Ability.\r\ncharge: The user is unable to make a move between turns.\r\ncontact: Makes contact.\r\ndance: When used by a Pokemon, other Pokemon with the Dancer Ability can attempt to execute the same move.\r\ndefrost: Thaws the user if executed successfully while the user is frozen.\r\ndistance: Can target a Pokemon positioned anywhere in a Triple Battle.\r\ngravity: Prevented from being executed or selected during Gravity's effect.\r\nheal: Prevented from being executed or selected during Heal Block's effect.\r\nmirror: Can be copied by Mirror Move.\r\nmystery: Unknown effect.\r\nnonsky: Prevented from being executed or selected in a Sky Battle.\r\npowder: Has no effect on Grass-type Pokemon, Pokemon with the Overcoat Ability, and Pokemon holding Safety Goggles.\r\nprotect: Blocked by Detect, Protect, Spiky Shield, and if not a Status move, King's Shield.\r\npulse: Power is multiplied by 1.5 when used by a Pokemon with the Mega Launcher Ability.\r\npunch: Power is multiplied by 1.2 when used by a Pokemon with the Iron Fist Ability.\r\nrecharge: If this move is successful, the user must recharge on the following turn and cannot make a move.\r\nreflectable: Bounced back to the original user by Magic Coat or the Magic Bounce Ability.\r\nsnatch: Can be stolen from the original user and instead used by another Pokemon using Snatch.\r\nsound: Has no effect on Pokemon with the Soundproof Ability.\r\n*/\r\n\r\nexport const Moves: {[k: string]: ModdedMoveData} = {\r\n\tluigilogic: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Luigi Logic\",\r\n\t\tshortDesc: \"Disables target's ability and previous move choice.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1},\r\n\t\tvolatileStatus: 'luigilogic',\r\n\t\tonTryHit(target) {\r\n\t\t\t// If both ability suppression & and move disabling aren't possible (cannot stack with disable)\r\n\t\t\tif ((target.getAbility().flags['cantsuppress'] || target.volatiles['gastroacid'] || target.hasItem('Ability Shield'))\r\n\t\t\t&& (!target.lastMove || target.lastMove.isZ || target.lastMove.isMax || target.lastMove.id === 'struggle' || target.volatiles['disable'] )) {\r\n\t\t\t\tif (target.hasItem('Ability Shield')) {\r\n\t\t\t\t  this.add('-block', target, 'item: Ability Shield');\r\n\t\t\t\t}\r\n\t\t\t\tthis.hint(\"Luigi Logic will fail if it is both impossible to suppress ability & disable the last used move.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\t// Ability suppression\r\n\t\t\tif (!target.getAbility().flags['cantsuppress'] && !target.volatiles['gastroacid'] && !target.hasItem('Ability Shield')) {\r\n\t\t\ttarget.addVolatile('gastroacid');\r\n\t\t\t}\r\n\t\t\telse if(target.hasItem('Ability Shield')) {\r\n\t\t\t\tthis.add('-block', target, 'item: Ability Shield');\r\n\t\t\t}\r\n\t\t\t// Move disable\r\n\t\t\tif (target.lastMove && !target.lastMove.isZ && !target.lastMove.isMax && target.lastMove.id !== 'struggle' && !target.volatiles['disable']) {\r\n\t\t\t\ttarget.addVolatile('disable');\r\n\t\t\t}\r\n\t  },\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Nasty Plot\", source);\r\n\t\t\tthis.add('-anim', source, \"Flash\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n  },\r\n\tlinkinglighthouselaunch: {\r\n\t\tnum: -2,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 175,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Linking Lighthouse Launch\",\r\n\t\tshortDesc: \"50% chance to burn, paralyze, or freeze.\",\r\n\t\tpp: 1,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Mountain Gale\", target);\r\n\t\t\tthis.add('-anim', source, \"Fusion Flare\", target);\r\n\t\t\tthis.add('-anim', source, \"Stoked Sparksurfer\", target);\r\n\t\t},\r\n\t\tisZ: \"bondiumz\",\r\n\t\tsecondary:  {\r\n\t\t\tchance: 50,\r\n\t\t\tonHit(target, source) {\r\n\t\t\t\tconst result = this.random(3);\r\n\t\t\t\tif (result === 0) {\r\n\t\t\t\t\ttarget.trySetStatus('brn', source);\r\n\t\t\t\t} else if (result === 1) {\r\n\t\t\t\t\ttarget.trySetStatus('par', source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.trySetStatus('frz', source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n  },\r\n\tfroggybravesthewindandrain: {\r\n\t\tnum: -3,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 180,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Froggy Braves the Wind and Rain\",\r\n\t\tshortDesc: \"Sets rain.\",\r\n\t\tpp: 1,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t\tthis.add('-anim', source, \"Whirlpool\", target);\r\n\t\t},\r\n\t\tisZ: \"suwakiumz\",\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tthis.field.setWeather('raindance');\r\n\t\t\t},\r\n\t\t},\r\n\t  \ttarget: \"normal\",\r\n\t  \ttype: \"Normal\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tbindingblade: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Binding Blade\",\r\n\t\tshortDesc: \"User recovers 50% of the damage dealt.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, heal: 1, metronome: 1, slicing: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Fire Spin\", source);\r\n\t\t\tthis.add('-anim', source, \"Sacred Sword\", target);\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\thalbird: {\r\n\t\tnum: -5,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\toverrideDefensiveStat: 'def',\r\n\t\tname: \"Halbird\",\r\n\t\tshortDesc: \"Damages target based on Defense, not Sp. Def.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Charge\", source);\r\n\t\t\tthis.add('-anim', source, \"Air Cutter\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tstormcallersong: {\r\n\t\tnum: -6,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Stormcaller Song\",\r\n\t\tshortDesc: \"Hits 3-5 times.\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1, bypasssub: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sparkling Aria\", target);\r\n\t\t},\r\n\t\tmultihit: [3, 5],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: {basePower: 140},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tbioticgrenade: {\r\n\t\tnum: -7,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Biotic Grenade\",\r\n\t\tshortDesc: \"If foe: blocks healing for 2 turns. If ally: heals 50%.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, bullet: 1, metronome: 1, allyanim: 1},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (source.isAlly(target)) {\r\n\t\t\t\tmove.basePower = 0;\r\n\t\t\t\tmove.infiltrates = true;\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryMove(source, target, move) {\r\n\t\t\tif (source.isAlly(target) && source.volatiles['healblock']) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', source, 'move: Heal Block', move);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (source.isAlly(target)) {\r\n\t\t\t\tif (!this.heal(Math.floor(target.baseMaxhp * 0.5))) {\r\n\t\t\t\t\tif (target.volatiles['healblock'] && target.hp !== target.maxhp) {\r\n\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\t// Wrong error message, correct one not supported yet\r\n\t\t\t\t\t\tthis.add('cant', source, 'move: Heal Block', move);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'healblock',\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sludge Bomb\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tnanoboost: {\r\n\t\tnum: -8,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Nano Boost\",\r\n\t\tshortDesc: \"Switches and boosts incoming ally's atk, spa by 1 stage, def, spd by 2 stages. Lasts 2 turns after applying boost. If no allies remaining, boosts self.\",\r\n\t\tpp: 1,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonTryHit(source) {\r\n\t\t\tif (!this.canSwitch(source.side)) {\r\n\t\t\t\tsource.addVolatile('nanoboosted');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Acupressure\", source);\r\n\t\t},\r\n\t\tslotCondition: 'nanoboost',\r\n\t\tcondition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\ttarget.addVolatile('nanoboosted');\r\n\t\t\t\t\ttarget.side.removeSlotCondition(target, 'nanoboost');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tisZ: \"ananiumz\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tshademend: {\r\n\t\tnum: -9,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Shade Mend\",\r\n\t\tshortDesc: \"User heals 33% and cures status.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, 0.33));\r\n\t\t\treturn pokemon.cureStatus() || success;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Poltergeist\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\trudebuster: {\r\n\t\tnum: -10,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tdamageCallback(pokemon, target) {\r\n\t\t\treturn this.clampIntRange(target.getUndynamaxedHP() / 2, 1);\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Rude Buster\",\r\n\t\tshortDesc: \"Does damage equal to 1/2 target's current HP.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {slicing: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dark Pulse\", target);\r\n\t\t\tthis.add('-anim', source, \"Air Slash\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tultimateheal: {\r\n\t\tnum: -11,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Ultimate Heal\",\r\n\t\tshortDesc: \"Susie trained very hard for this.\",\r\n\t\tpp: 1,\r\n\t\tpriority: 0,\r\n\t\tflags: {heal: 1, bypasssub: 1, allyanim: 1},\r\n\t\tonHit(pokemon) {\r\n\t\t\treturn this.heal(1, pokemon);\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Scale Shot\", source);\r\n\t\t\tthis.add('-anim', source, \"Jungle Healing\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allies\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\r\n\t// Altering Pre-Existing Moves\r\n\thealblock: {\r\n\t\tnum: 377,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tisNonstandard: \"Past\",\r\n\t\tname: \"Heal Block\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, metronome: 1},\r\n\t\tvolatileStatus: 'healblock',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Psychic Noise\" || effect?.name === \"Biotic Grenade\") {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Persistent', '[move] Heal Block');\r\n\t\t\t\t\treturn 7;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.add('-start', pokemon, 'move: Heal Block');\r\n\t\t\t\tsource.moveThisTurnResult = true;\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['heal']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (move.flags['heal'] && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Heal Block', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (move.flags['heal'] && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Heal Block', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 20,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Heal Block');\r\n\t\t\t},\r\n\t\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\t\tif ((effect?.id === 'zpower') || this.effectState.isZ) return damage;\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonRestart(target, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Psychic Noise' || effect?.name === 'Biotic Grenade') return;\r\n\r\n\t\t\t\tthis.add('-fail', target, 'move: Heal Block'); // Succeeds to supress downstream messages\r\n\t\t\t\tif (!source.moveThisTurnResult) {\r\n\t\t\t\t\tsource.moveThisTurnResult = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {boost: {spa: 2}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
