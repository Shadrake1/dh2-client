{
  "version": 3,
  "sources": ["../../../../data/mods/gen9crossoverchaosc/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\r\n\tgen: 9,\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['CC OU'],\r\n\t},\r\n\tactions: {\r\n\t\tmodifyDamage(\r\n\t\tbaseDamage: number, pokemon: Pokemon, target: Pokemon, move: ActiveMove, suppressMessages = false\r\n\t\t) {\r\n\t\t\tconst tr = this.battle.trunc;\r\n\t\t\tif (!move.type) move.type = '???';\r\n\t\t\tconst type = move.type;\r\n\r\n\t\t\tbaseDamage += 2;\r\n\r\n\t\t\tif (move.spreadHit) {\r\n\t\t\t\t// multi-target modifier (doubles only)\r\n\t\t\t\tconst spreadModifier = move.spreadModifier || (this.battle.gameType === 'freeforall' ? 0.5 : 0.75);\r\n\t\t\t\tthis.battle.debug('Spread modifier: ' + spreadModifier);\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, spreadModifier);\r\n\t\t\t} else if (move.multihitType === 'parentalbond' && move.hit > 1) {\r\n\t\t\t\t// Parental Bond modifier\r\n\t\t\t\tconst bondModifier = this.battle.gen > 6 ? 0.25 : 0.5;\r\n\t\t\t\tthis.battle.debug(`Parental Bond modifier: ${bondModifier}`);\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, bondModifier);\r\n\t\t\t} else if (move.multihitType === 'younglion' && move.hit > 1) {\r\n\t\t\t\t// Parental Bond modifier\r\n\t\t\t\tconst bondModifier = 0.5;\r\n\t\t\t\tthis.battle.debug(`Young Lion modifier: ${bondModifier}`);\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, bondModifier);\r\n\t\t\t}\r\n\r\n\t\t\t// weather modifier\r\n\t\t\tbaseDamage = this.battle.runEvent('WeatherModifyDamage', pokemon, target, move, baseDamage);\r\n\r\n\t\t\t// crit - not a modifier\r\n\t\t\tconst isCrit = target.getMoveHitData(move).crit;\r\n\t\t\tif (isCrit) {\r\n\t\t\t\tbaseDamage = tr(baseDamage * (move.critModifier || (this.battle.gen >= 6 ? 1.5 : 2)));\r\n\t\t\t}\r\n\r\n\t\t\t// random factor - also not a modifier\r\n\t\t\tbaseDamage = this.battle.randomizer(baseDamage);\r\n\r\n\t\t\t// STAB\r\n\t\t\t// The \"???\" type never gets STAB\r\n\t\t\t// Not even if you Roost in Gen 4 and somehow manage to use\r\n\t\t\t// Struggle in the same turn.\r\n\t\t\t// (On second thought, it might be easier to get a MissingNo.)\r\n\t\t\tif (type !== '???') {\r\n\t\t\t\tlet stab: number | [number, number] = 1;\r\n\r\n\t\t\t\tconst isSTAB = move.forceSTAB || pokemon.hasType(type) || pokemon.getTypes(false, true).includes(type);\r\n\t\t\t\tif (isSTAB) {\r\n\t\t\t\t\tstab = 1.5;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The Stellar tera type makes this incredibly confusing\r\n\t\t\t\t// If the move's type does not match one of the user's base types,\r\n\t\t\t\t// the Stellar tera type applies a one-time 1.2x damage boost for that type.\r\n\t\t\t\t//\r\n\t\t\t\t// If the move's type does match one of the user's base types,\r\n\t\t\t\t// then the Stellar tera type applies a one-time 2x STAB boost for that type,\r\n\t\t\t\t// and then goes back to using the regular 1.5x STAB boost for those types.\r\n\t\t\t\tif (pokemon.terastallized === 'Stellar') {\r\n\t\t\t\t\tif (!pokemon.stellarBoostedTypes.includes(type) || move.stellarBoosted) {\r\n\t\t\t\t\t\tstab = isSTAB ? 2 : [4915, 4096];\r\n\t\t\t\t\t\tmove.stellarBoosted = true;\r\n\t\t\t\t\t\tif (pokemon.species.name !== 'Terapagos-Stellar') {\r\n\t\t\t\t\t\t\tpokemon.stellarBoostedTypes.push(type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (pokemon.terastallized === type && pokemon.getTypes(false, true).includes(type)) {\r\n\t\t\t\t\t\tstab = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstab = this.battle.runEvent('ModifySTAB', pokemon, target, move, stab);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, stab);\r\n\t\t\t}\r\n\r\n\t\t\t// types\r\n\t\t\tlet typeMod = target.runEffectiveness(move);\r\n\t\t\ttypeMod = this.battle.clampIntRange(typeMod, -6, 6);\r\n\t\t\ttarget.getMoveHitData(move).typeMod = typeMod;\r\n\t\t\tif (typeMod > 0) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-supereffective', target);\r\n\r\n\t\t\t\tfor (let i = 0; i < typeMod; i++) {\r\n\t\t\t\t\tbaseDamage *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeMod < 0) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-resisted', target);\r\n\r\n\t\t\t\tfor (let i = 0; i > typeMod; i--) {\r\n\t\t\t\t\tbaseDamage = tr(baseDamage / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCrit && !suppressMessages) this.battle.add('-crit', target);\r\n\r\n\t\t\tif (pokemon.status === 'brn' && move.category === 'Physical' && !pokemon.hasAbility('guts')) {\r\n\t\t\t\tif (this.battle.gen < 6 || move.id !== 'facade') {\r\n\t\t\t\t\tbaseDamage = this.battle.modify(baseDamage, 0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Generation 5, but nothing later, sets damage to 1 before the final damage modifiers\r\n\t\t\tif (this.battle.gen === 5 && !baseDamage) baseDamage = 1;\r\n\r\n\t\t\t// Final modifier. Modifiers that modify damage after min damage check, such as Life Orb.\r\n\t\t\tbaseDamage = this.battle.runEvent('ModifyDamage', pokemon, target, move, baseDamage);\r\n\r\n\t\t\tif (move.isZOrMaxPowered && target.getMoveHitData(move).zBrokeProtect) {\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, 0.25);\r\n\t\t\t\tthis.battle.add('-zbroken', target);\r\n\t\t\t}\r\n\r\n\t\t\t// Generation 6-7 moves the check for minimum 1 damage after the final modifier...\r\n\t\t\tif (this.battle.gen !== 5 && !baseDamage) return 1;\r\n\r\n\t\t\t// ...but 16-bit truncation happens even later, and can truncate to 0\r\n\t\t\treturn tr(baseDamage, 16);\r\n\t\t}\r\n\t}\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
