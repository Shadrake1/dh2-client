{
  "version": 3,
  "sources": ["../../../../data/mods/communityused2/moves.ts"],
  "sourcesContent": ["import { inherits } from \"util\";\r\n\r\nexport const Moves: { [moveid: string]: ModdedMoveData } = {\r\n\r\n\tgiantssiege: {\r\n\t\tnum: -1000,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Giant's Siege\",\r\n\t\tpp: 10,\r\n\t\tpriority: 1,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (pokemon.hp * 2 >= pokemon.maxhp) {\r\n\t\t\t\tthis.debug('giant\\'s siege boost')\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Ice Shard', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\triverwave: {\r\n\t\tnum: -1001,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"River Wave\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Surf', target);\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"10% chance to lower opponent's speed stat.\",\r\n\r\n\t},\r\n\tarchaicglare: {\r\n\t\tnum: -1002,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Archaic Glare\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tlet boost = 1;\r\n\t\t\tif (this.field.getPseudoWeather('trickroom')) {\r\n\t\t\t\tthis.debug('archaic glare TR boost');\r\n\t\t\t\tboost = boost + 0.5;\r\n\t\t\t\t//return move.basePower * 1.5;\r\n\t\t\t}\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('archaic glare sun boost');\r\n\t\t\t\tboost = boost + 0.5;\r\n\t\t\t\t//return move.basePower * 1.5;\r\n\t\t\t}\r\n\r\n\t\t\treturn move.basePower * boost;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (this.field.getPseudoWeather('trickroom')) return;\r\n\t\t\t\r\n\t\t\tthis.field.addPseudoWeather('trickroom');\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Psyshock', target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"Deals +50% damage in TR/Sun. Sets TR.\",\r\n\r\n\t},\r\n\tblindingblitz: {\r\n\t\tnum: -1003,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Blinding Blitz\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, gravity: 1, metronome: 1 },\r\n\t\thasCrashDamage: true,\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tthis.damage(source.baseMaxhp / 2, source, source, this.dex.conditions.get('High Jump Kick'));\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"User takes 50% of their max HP as recoil on whiff.\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'High Jump Kick', target);\r\n\t\t},\r\n\t},\r\n\tboilingbash: {\r\n\t\tnum: -1004,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Boiling Bash\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, contact: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Flare Blitz', target);\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"30% to burn. Hits all adjacent targets.\",\r\n\r\n\t},\r\n\tboilingdeluge: {\r\n\t\tnum: -1005,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Boiling Deluge\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.hasType(['Fire'])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', pokemon, 'Boiling Deluge');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 13,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp * (pokemon.hasType(['Fire']) ? 0 : (1 / 8)));\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Boiling Deluge');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'boilingdeluge',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Flame Burst', target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tshortDesc: \"Pokemon hit take 1/8 max HP every turn. Fire types are immune.\",\r\n\r\n\t},\r\n\tcandlelight: {\r\n\t\tnum: -1006,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Candlelight\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1 },\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tlet removals = 0;\r\n\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif ((targetCondition === 'spikes' || targetCondition === 'toxicspikes') && target.side.getSideCondition(targetCondition)) {\r\n\t\t\t\t\tremovals += target.side.sideConditions[targetCondition].layers;\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.side.getSideCondition(targetCondition)) {\r\n\t\t\t\t\tremovals++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Candlelight', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif ((sideCondition === 'spikes' || sideCondition === 'toxicspikes') && source.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tremovals += source.side.sideConditions[sideCondition].layers;\r\n\t\t\t\t}\r\n\t\t\t\telse if (source.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tremovals++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Candlelight', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.add('-message', `${source.name} cleared ${removals} hazards!`);\r\n\r\n\t\t\tfor (let i = 0; i < removals; i++) {\r\n\t\t\t\tsource.side.addSideCondition('candlelight');\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Candlelight');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\t//this.add('-message', `The candle started burning!`);\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t\t//this.add('-message', `The candle burns brighter!`);\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tthis.heal(this.effectState.layers * (pokemon.maxhp / 16));\r\n\t\t\t\tpokemon.side.removeSideCondition('candlelight');\r\n\t\t\t\tthis.add('-message', `The candle went out!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Moonlight', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"Removes all hazards. Next swap-in heals 1/16 per removed.\",\r\n\t},\r\n\tdragonhunt: {\r\n\t\tnum: -1007,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\t// You can't get here unless the pursuit succeeds\r\n\t\t\tif (target.beingCalledBack || target.switchFlag) {\r\n\t\t\t\tthis.debug('Dragon Hunt damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dragon Hunt\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Leech Life', target);\r\n\t\t},\r\n\t\tbeforeTurnCallback(pokemon) {\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tif (side.hasAlly(pokemon)) continue;\r\n\t\t\t\tside.addSideCondition('dragonhunt', pokemon);\r\n\t\t\t\tconst data = side.getSideConditionData('dragonhunt');\r\n\t\t\t\tif (!data.sources) {\r\n\t\t\t\t\tdata.sources = [];\r\n\t\t\t\t}\r\n\t\t\t\tdata.sources.push(pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (target?.beingCalledBack || target?.switchFlag) move.accuracy = true;\r\n\t\t},\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\ttarget.side.removeSideCondition('dragonhunt');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\t\tthis.debug('dragonhunt start');\r\n\t\t\t\tlet alreadyAdded = false;\r\n\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t\tfor (const source of this.effectState.sources) {\r\n\t\t\t\t\tif (!source.isAdjacent(pokemon) || !this.queue.cancelMove(source) || !source.hp) continue;\r\n\t\t\t\t\tif (!alreadyAdded) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'move: Dragon Hunt');\r\n\t\t\t\t\t\talreadyAdded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Run through each action in queue to check if the Pursuit user is supposed to Mega Evolve this turn.\r\n\t\t\t\t\t// If it is, then Mega Evolve before moving.\r\n\t\t\t\t\tif (source.canMegaEvo || source.canUltraBurst) {\r\n\t\t\t\t\t\tfor (const [actionIndex, action] of this.queue.entries()) {\r\n\t\t\t\t\t\t\tif (action.pokemon === source && action.choice === 'megaEvo') {\r\n\t\t\t\t\t\t\t\tthis.actions.runMegaEvo(source);\r\n\t\t\t\t\t\t\t\tthis.queue.list.splice(actionIndex, 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.runMove('dragonhunt', source, source.getLocOf(pokemon));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Hits opponents on swap out, gets a x2 power boost.\",\r\n\r\n\t},\r\n\tgundown: {\r\n\t\tnum: -1008,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Gun Down\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, distance: 1, metronome: 1, bullet: 1, pulse: 1 },\r\n\t\tignoreImmunity: { 'Fighting': true },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Snipe Shot', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Ignores Ghost-type immunity.\",\r\n\t},\r\n\thuntershot: {\r\n\t\tnum: -1009,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hunter Shot\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, bullet: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Flash Cannon', target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'focusenergy',\r\n\t\t},\r\n\t\twillCrit: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tshortDesc: \"This move always crits. Sets Focus Energy.\",\r\n\r\n\t},\r\n\tlightthatburnthesky: {\r\n\t\tnum: -1010,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Light That Burn The Sky\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Moongeist Beam', target);\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"30% to burn. Hits all adjacent opponents.\",\r\n\r\n\t},\r\n\tobsidianclaw: {\r\n\t\tnum: -1011,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Obsidian Claw\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, contact: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Crabhammer', target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"20% chance to paralyze.\",\r\n\r\n\t},\r\n\tperfectfreeze: {\r\n\t\tnum: -1012,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Perfect Freeze\",\r\n\t\tpp: 1,\r\n\t\tnoPPBoosts: true,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, recharge: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Sheer Cold', target);\r\n\t\t},\r\n\t\t/*mindBlownRecoil: true,\r\n\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\tif (move.mindBlownRecoil && !move.multihit) {\r\n\t\t\t\tconst hpBeforeRecoil = pokemon.hp;\r\n\t\t\t\tthis.damage(Math.round(pokemon.maxhp / 2), pokemon, pokemon, this.dex.conditions.get('Perfect Freeze'), true);\r\n\t\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && hpBeforeRecoil > pokemon.maxhp / 2) {\r\n\t\t\t\t\tthis.runEvent('EmergencyExit', pokemon, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},*/\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"100% chance to freeze. User must recharge.\",\r\n\r\n\t},\r\n\tprominenceshock: {\r\n\t\tnum: -1013,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 160,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Prominence Shock\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, contact: 1 },\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Volt Tackle', target);\r\n\t\t},\r\n\t\trecoil: [50, 100],\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tshortDesc: \"User must recharge. Takes 50% of damage dealt as recoil.\",\r\n\r\n\t},\r\n\tsicklysugar: {\r\n\t\tnum: -1014,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sickly Sugar\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Sludge Bomb', target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (target.status === 'psn' || target.status === 'tox') {\r\n\t\t\t\treturn !!this.boost({ atk: -1, spa: -1 }, target, source, move);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tshortDesc: \"If the opponent is poisoned or badly poisoned, drop Atk and Spa by 1.\",\r\n\t},\r\n\tsulfuricsolution: {\r\n\t\tnum: -1015,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sulfuric Solution\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tignoreImmunity: { 'Poison': true },\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Toxic', target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Steel') return 1;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target.hasType('Poison')) {\r\n\t\t\t\tmove.basePower = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryMove(source, target, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tif (target.hasType('Poison') && source.volatiles['healblock']) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', source, 'move: Heal Block', move);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (target.hasType('Poison')) {\r\n\t\t\t\tif (!this.heal(Math.floor(target.baseMaxhp * 0.25))) {\r\n\t\t\t\t\tif (target.volatiles['healblock'] && target.hp !== target.maxhp) {\r\n\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\t// Wrong error message, correct one not supported yet\r\n\t\t\t\t\t\tthis.add('cant', source, 'move: Heal Block', move);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"SE vs. Steels. Heals Poison-types by 25%.\",\r\n\r\n\t},\r\n\tvitalspark: {\r\n\t\tnum: -1016,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Vital Spark\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Shadow Ball', target);\r\n\t\t},\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'charge',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"User gains Charge volatile.\",\r\n\r\n\t},\r\n\trealmsravage: {\r\n\t\tnum: -1017,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tconst ratio = Math.max(Math.floor(pokemon.hp * 48 / pokemon.maxhp), 1);\r\n\t\t\tlet bp;\r\n\t\t\tif (ratio < 12) {\r\n\t\t\t\tbp = 150;\r\n\t\t\t} else if (ratio < 24) {\r\n\t\t\t\tbp = 100;\r\n\t\t\t} else if (ratio < 36) {\r\n\t\t\t\tbp = 60;\r\n\t\t\t} else {\r\n\t\t\t\tbp = 40;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Realm's Ravage\",\r\n\t\tcritRatio: 2,\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Outrage', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tshortDesc: \"Does more damage the lower the user's HP gets.\",\r\n\t},\r\n\tcrystallineshelter: {\r\n\t\tnum: -1018,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Crystalline Shelter\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1 },\r\n\t\tvolatileStatus: 'crystallineshelter',\r\n\t\tcondition: {\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tthis.add('-start', target, 'move: Crystalline Shelter');\r\n\t\t\t},\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.damage(source.baseMaxhp / 6, source, target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttype: \"Rock\",\r\n\t\ttarget: \"self\",\r\n\t\tsecondary: null,\r\n\t\tshortDesc: \"Gives the user Rocky Helmet effects.\",\r\n\t},\r\n\tdustveil: {\r\n\t\tnum: -1019,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Dust Veil\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1 },\r\n\t\tsideCondition: 'dustveil',\r\n\t\tonTry() {\r\n\t\t\treturn this.field.isWeather(['sandstorm']);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (source?.hasItem('lightclay')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonSideStart(side, source) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Dust Veil');\r\n\t\t\t},\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 5,\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'move: Dust Veil');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Ground\",\r\n\t\tshortDesc: \"Sand: Damage dealt x1.3, 5 turns (8 Light Clay)\",\r\n\t},\r\n\tdevour: {\r\n\t\tnum: -1020,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Devour\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Crunch', target);\r\n\t\t},\r\n\t\tpp: 10,\r\n\t\tflags: { contact: 1, protect: 1, bite: 1, cantusetwice: 1},\r\n\t\tpriority: 0,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tshortDesc: \"Maintains Ouroboros streak. Can't be used twice in a row.\",\r\n\t},\r\n\tdefog: {\r\n\t\tinherit: true,\r\n\t\tflags: { protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1, wind: 1 },\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t// cu2: adding dust veil\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'dustveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tbrickbreak: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(pokemon) {\r\n\t\t\t// will shatter screens through sub, before you hit\r\n\r\n\t\t\t// CU 2 note: adding Dust Veil\r\n\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t\tpokemon.side.removeSideCondition('dustveil');\r\n\t\t},\r\n\t},\r\n\tpsychicfangs: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(pokemon) {\r\n\t\t\t// will shatter screens through sub, before you hit\r\n\r\n\t\t\t// CU 2 note: adding Dust Veil\r\n\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t\tpokemon.side.removeSideCondition('dustveil');\r\n\t\t},\r\n\t},\r\n\tragingbull: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(pokemon) {\r\n\t\t\t// will shatter screens through sub, before you hit\r\n\r\n\t\t\t// cu2 note: not in, future proofing to add dust veil in case anything gets this move\r\n\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t\tpokemon.side.removeSideCondition('dustveil');\r\n\t\t},\r\n\t},\r\n\tcourtchange: {\r\n\t\tinherit: true,\r\n\t\tonHitField(target, source) {\r\n\t\t\t// cu2 note: not in, future proofing to add dust veil in case anything gets this move\r\n\r\n\t\t\tconst sideConditions = [\r\n\t\t\t\t'mist', 'lightscreen', 'reflect', 'dustveil', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t\t];\r\n\t\t\tlet success = false;\r\n\t\t\tif (this.gameType === \"freeforall\") {\r\n\t\t\t\t// random integer from 1-3 inclusive\r\n\t\t\t\tconst offset = this.random(3) + 1;\r\n\t\t\t\t// the list of all sides in counterclockwise order\r\n\t\t\t\tconst sides = [this.sides[0], this.sides[2]!, this.sides[1], this.sides[3]!];\r\n\t\t\t\tconst temp: {[k: number]: typeof source.side.sideConditions} = {0: {}, 1: {}, 2: {}, 3: {}};\r\n\t\t\t\tfor (const side of sides) {\r\n\t\t\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\t\ttemp[side.n][id] = side.sideConditions[id];\r\n\t\t\t\t\t\tdelete side.sideConditions[id];\r\n\t\t\t\t\t\tconst effectName = this.dex.conditions.get(id).name;\r\n\t\t\t\t\t\tthis.add('-sideend', side, effectName, '[silent]');\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\t\tconst sourceSideConditions = temp[sides[i].n];\r\n\t\t\t\t\tconst targetSide = sides[(i + offset) % 4]; // the next side in rotation\r\n\t\t\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\t\t\ttargetSide.sideConditions[id] = sourceSideConditions[id];\r\n\t\t\t\t\t\tconst effectName = this.dex.conditions.get(id).name;\r\n\t\t\t\t\t\tlet layers = sourceSideConditions[id].layers || 1;\r\n\t\t\t\t\t\tfor (; layers > 0; layers--) this.add('-sidestart', targetSide, effectName, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst sourceSideConditions = source.side.sideConditions;\r\n\t\t\t\tconst targetSideConditions = source.side.foe.sideConditions;\r\n\t\t\t\tconst sourceTemp: typeof sourceSideConditions = {};\r\n\t\t\t\tconst targetTemp: typeof targetSideConditions = {};\r\n\t\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\tsourceTemp[id] = sourceSideConditions[id];\r\n\t\t\t\t\tdelete sourceSideConditions[id];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in targetSideConditions) {\r\n\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\ttargetTemp[id] = targetSideConditions[id];\r\n\t\t\t\t\tdelete targetSideConditions[id];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in sourceTemp) {\r\n\t\t\t\t\ttargetSideConditions[id] = sourceTemp[id];\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in targetTemp) {\r\n\t\t\t\t\tsourceSideConditions[id] = targetTemp[id];\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-swapsideconditions');\r\n\t\t\t}\r\n\t\t\tif (!success) return false;\r\n\t\t\tthis.add('-activate', source, 'move: Court Change');\r\n\t\t},\r\n\t},\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
