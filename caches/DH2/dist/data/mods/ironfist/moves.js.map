{
  "version": 3,
  "sources": ["../../../../data/mods/ironfist/moves.ts"],
  "sourcesContent": ["import {FS} from '../../../lib';\r\nimport {toID} from '../../../sim/dex-data';\r\nimport {Pokemon} from \"../../../sim/pokemon\";\r\n\r\n// Similar to User.usergroups. Cannot import here due to users.ts requiring Chat\r\n// This also acts as a cache, meaning ranks will only update when a hotpatch/restart occurs\r\nconst usergroups: {[userid: string]: string} = {};\r\nconst usergroupData = FS('config/usergroups.csv').readIfExistsSync().split('\\n');\r\nfor (const row of usergroupData) {\r\n\tif (!toID(row)) continue;\r\n\r\n\tconst cells = row.split(',');\r\n\tif (cells.length > 3) throw new Error(`Invalid entry when parsing usergroups.csv`);\r\n\tusergroups[toID(cells[0])] = cells[1].trim() || ' ';\r\n}\r\n\r\nexport function getName(name: string): string {\r\n\tconst userid = toID(name);\r\n\tif (!userid) throw new Error('No/Invalid name passed to getSymbol');\r\n\r\n\tconst group = usergroups[userid] || ' ';\r\n\treturn group + name;\r\n}\r\nexport const Moves: {[moveid: string]: ModdedMoveData} = {\r\n\t/*\r\n\tplaceholder: {\r\n\t\tname: \"\",\r\n\t\ttype: \"\",\r\n\t\tcategory: \"\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\t*/\r\n\r\n\t//slate 1\r\n\tsilcoonsexactmovepool: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"silcoonsexactmovepool\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(source) {\r\n\t\t\tthis.actions.useMove(\"Tackle\", source);\r\n\t\t\tthis.actions.useMove(\"String Shot\", source);\r\n\t\t\tthis.actions.useMove(\"Poison Sting\", source);\r\n\t\t\tthis.actions.useMove(\"Bug Bite\", source);\r\n\t\t\tthis.actions.useMove(\"Iron Defense\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Bug\",\r\n\t\tshortDesc: \"Uses Tackle, String Shot, Poison Sting, Bug Bite, and Iron Defense.\",\r\n\t},\r\n  \tpog: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"POG\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"G-Max Steelsurge\", target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n            if (target.getTypes()[0] === type || target.terastallized) return 1;\r\n            else return 0;\r\n        },\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tshortDesc: \"Always super-effective.\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n  \tvelvetblade: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Night Slash\", target);\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Velvet Blade\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n            let newMoveName;\r\n\t\t\tlet activated = false;\r\n            for (const moveSlot of pokemon.moveSlots) {\r\n                const temp = this.dex.moves.get(moveSlot.id);\r\n                if (temp.category === 'Status') {\r\n                    newMoveName = temp.name;\r\n\t\t\t\t\tactivated = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (activated) move.name = newMoveName;\r\n\t\t\telse move.basePower /= 2;\r\n        },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tshortDesc: \"Disguises as the user's first Status move. Else halved power.\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n  \tmogoff: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Mog Off\",\r\n\t\tshortDesc: \"50% chance to lower the target's Atk/SpA by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Bulk Up\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (pokemon.ability === 'benevolentblessing') {\r\n\t\t\t\tmove.secondary = null;\r\n\t\t\t\tmove.onHit = function(target, source) {\r\n\t\t\t\t\tif (this.randomChance(1, 2)) this.actions.useMove('swagger', source, source);\r\n\t\t\t\t\telse this.actions.useMove(\"selfdestruct\", source, target);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Silly\",\r\n\t\tcontestType: \"Tough\",\r\n\t\t//shortDesc: \"50% chance to confuse the target.\",\r\n\t},\r\n  \tchocolatekiss: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Chocolate Kiss\",\r\n\t\tpp: 20,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Lovely Kiss\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tshortDesc: \"Usually moves first. 10% chance to lower target's Speed by 1.\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n  \tfishingminigame: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Fishing Minigame\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, fishing: 1,},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Anchor Shot\", target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (source.isActive) target.addVolatile('trapped', source, move, 'trapper');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Prevents the target from switching out.\",\r\n\t},\r\n  \tstankyleg: {\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Stanky Leg\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Rolling Kick\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tstatus: 'tox',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"100% chance to badly poison the target.\",\r\n\t},\r\n  \ttriplerkick: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Tripler Kick\",\r\n\t\tshortDesc: \"Hits 3 times. Each hit can miss, but power rises.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Triple Kick\", target);\r\n\t\t},\r\n\t\tmultihit: 3,\r\n\t\tmultiaccuracy: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: {basePower: 120},\r\n\t\tmaxMove: {basePower: 140},\r\n\t},\r\n\tgorgingmissile: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Gorging Missile\",\r\n\t\tshortDesc: \"If user is under 50% max HP, paralyzes the opponent.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, fishing: 1,},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Snipe Shot\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tmove.status = 'par';\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tgoombastomp: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Goomba Stomp\",\r\n\t\tshortDesc: \"100% chance for -1 Defense. OHKOs Goomba.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1, foot: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"High Jump Kick\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.baseSpecies == \"Goomba\") {\r\n\t\t\t\t\tif (target.volatiles['bigbutton']) {\r\n\t\t\t\t\t\tbasePower = 0;\r\n\t\t\t\t\t\tdamageCallback = function (target) {\r\n\t\t\t\t\t\t\treturn this.clampIntRange(target.getUndynamaxedHP() / 3, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmove.ohko = true;\r\n\t\t\t\t\t\tmove.accuracy = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tsplash: {\r\n\t\tinherit: true,\r\n\t\tflags: {snatch: 1, fishing: 1, metronome: 1},\r\n\t\tshortDesc: \"Feebas: remove all tokens and gain +1 all stats for each 2.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif(target.baseSpecies.baseSpecies === 'Feebas') {\r\n\t\t\t\tconst targetSide = target.side;\r\n\t\t\t\tif (targetSide.fishingTokens > 0) {\r\n\t\t\t\t\tconst boosts = Math.floor(Math.min(targetSide.fishingTokens, 6) / 2);\r\n\t\t\t\t\ttarget.side.removeFishingTokens(targetSide.fishingTokens);\r\n\t\t\t\t\tthis.boost({atk: boosts, def: boosts, spa: boosts, spd: boosts, spe: boosts}, target, target, move);\r\n\t\t\t\t} else targetSide.addFishingTokens(1);\r\n\t\t\t} else this.add('-nothing');\r\n\t\t},\r\n\t},\r\n\tsilcoonblast: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Silcoon Blast\",\r\n\t\tshortDesc: \"Turns the opponent into Silcoon.\",\r\n\t\tpp: 166,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Hyper Beam\", target);\r\n\t\t},\r\n\t\tonHit(target, pokemon, move) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\ttarget.formeChange('Silcoon');\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tgofish: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Go Fish\",\r\n\t\tshortDesc: \"Spends 1 token to switch target. Fails if target is not attacking.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, metronome: 1, fishing: 1,},\r\n\t\tforceSwitch: true,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Boomburst\", target);\r\n\t\t},\r\n\t\tonTry(source, target) {\r\n\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\tconst move = action?.choice === 'move' ? action.move : null;\r\n\t\t\tif (!move || (move.category === 'Status' && move.id !== 'mefirst') || target.volatiles['mustrecharge'] || !source.side.removeFishingTokens(1)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t\r\n\t//slate 2\r\n\tthekitchensink: {\r\n        num: -1,\r\n        accuracy: 93.81174699,\r\n        basePower: 76.6977492,\r\n        basePowerCallback(pokemon, target, move) {\r\n            let power = move.basePower;\r\n            //avalanche\r\n            const damagedByTarget = pokemon.attackedBy.some(\r\n                p => p.pokemon === target && p.damage > 0 && p.thisTurn\r\n            );\r\n            if (damagedByTarget) {\r\n                power *= 2;\r\n            }\r\n           \r\n            if (target.newlySwitched || this.queue.willMove(target)) {\r\n                //bolt beak\r\n                power *= 2;\r\n            } else {\r\n                //payback\r\n                power *= 2;\r\n            }\r\n           \r\n            //frustration\r\n            power += Math.floor((pokemon.happiness * 10) / 25) || 1;\r\n           \r\n            //heavyslam\r\n            const targetWeight = target.getWeight();\r\n            const pokemonWeight = pokemon.getWeight();\r\n            if (pokemonWeight >= targetWeight * 5) {\r\n                power += 120;\r\n            } else if (pokemonWeight >= targetWeight * 4) {\r\n                power += 100;\r\n            } else if (pokemonWeight >= targetWeight * 3) {\r\n                power += 80;\r\n            } else if (pokemonWeight >= targetWeight * 2) {\r\n                power += 60;\r\n            } else {\r\n                power += 40;\r\n            }\r\n           \r\n            //last respects\r\n            power += 50 * pokemon.side.totalFainted;\r\n           \r\n            //low kick\r\n            if (targetWeight >= 2000) {\r\n                power += 120;\r\n            } else if (targetWeight >= 1000) {\r\n                power += 100;\r\n            } else if (targetWeight >= 500) {\r\n                power += 80;\r\n            } else if (targetWeight >= 250) {\r\n                power += 60;\r\n            } else if (targetWeight >= 100) {\r\n                power += 40;\r\n            } else {\r\n                power += 20;\r\n            }\r\n           \r\n            //power trip\r\n            power += 20 * pokemon.positiveBoosts();\r\n           \r\n            //punishment\r\n            power += 20 * target.positiveBoosts();\r\n            if (power > 200) power = 200;\r\n           \r\n            //pursuit\r\n            if (target.beingCalledBack || target.switchFlag) {\r\n                this.debug('Pursuit damage boost');\r\n                power *= 2;\r\n            }\r\n           \r\n            //rage fist\r\n            power = Math.min(350, power + 50 * pokemon.timesAttacked);\r\n           \r\n            //reversal\r\n            const ratio = Math.max(Math.floor(pokemon.hp * 48 / pokemon.maxhp), 1);\r\n            if (ratio < 2) {\r\n                power += 200;\r\n            } else if (ratio < 5) {\r\n                power += 150;\r\n            } else if (ratio < 10) {\r\n                power += 100;\r\n            } else if (ratio < 17) {\r\n                power += 80;\r\n            } else if (ratio < 33) {\r\n                power += 40;\r\n            } else {\r\n                power += 20;\r\n            }\r\n           \r\n\t\t    //rollout\r\n\t\t\tif (pokemon.volatiles['defensecurl']) power *= 2;\r\n\t\t   \r\n            //smelling salts\r\n            if (target.status === 'par') {\r\n                power *= 2;\r\n            }\r\n           \r\n            //stomping tantrum\r\n            if (pokemon.moveLastTurnResult === false) {\r\n                power *= 2;\r\n            }\r\n           \r\n            //tera blast\r\n            if (pokemon.terastallized === 'Stellar') {\r\n                power += 100;\r\n            } else power += 80;\r\n           \r\n            //triple axel\r\n            power += 20 * move.hit;\r\n           \r\n            //trump card\r\n            const callerMoveId = move.pokemonEffect || move.id;\r\n            const moveSlot = callerMoveId === 'instruct' ? pokemon.getMoveData(move.id) : pokemon.getMoveData(callerMoveId);\r\n            if (!moveSlot) {\r\n                power += 40;\r\n            } else {\r\n                switch (moveSlot.pp) {\r\n                case 0:\r\n                    power += 200;\r\n                    break;\r\n                case 1:\r\n                    power += 80;\r\n                    break;\r\n                case 2:\r\n                    power += 60;\r\n                    break;\r\n                case 3:\r\n                    power += 50;\r\n                    break;\r\n                default:\r\n                    power += 40;\r\n                    break;\r\n                }\r\n            }\r\n           \r\n            //wakeupslap\r\n            if (target.status === 'slp' || target.hasAbility('comatose')) {\r\n                power *= 2;\r\n            }\r\n           \r\n            //wring out\r\n            const hp = target.hp;\r\n            const maxHP = target.maxhp;\r\n            power += Math.floor(Math.floor((120 * (100 * Math.floor(hp * 4096 / maxHP)) + 2048 - 1) / 4096) / 100) || 1;\r\n           \r\n            return power;\r\n        },\r\n        category: \"Physical\",\r\n        name: \"The Kitchen Sink\",\r\n        shortDesc: \"Power doubles if user is damaged by the target. Power doubles if user moves before the target. Power doubles if the user moves after the target. Power doubles if user is burn/poison/ paralyzed. Power doubles if the target's HP is 50% or less. Power doubles if the target is poisoned. Power doubles if target is burned. Power doubles if the target has a status ailment. More power the more HP the target has left. Max 102 power at minimum Happiness. More power the heavier the user than the target. +50 power for each time a party member fainted. More power the heavier the target. + 20 power for each of the user's stat boosts. +20 for each of the target's stat boosts. If a foe is switching out, hits it at 2x power. +50 power for each time user was hit. Max 6 hits. More power the less HP the user has left. Power doubles if target is paralyzed. Power doubles if the user's last move failed. Each hit can miss, but power rises. More power the fewer PP this move has left. Power doubles if target is asleep. Breaks protect. High critical hit ratio. Heals 50% of the damage dealt. Ignores the Abilities of other Pokemon. Ignores the target's stat stage changes. User loses 50% max HP. Hits adjacent Pokemon. Hits 10 times. Uses user's Def stat as Atk in damage calculation. Uses target's Attack stat in damage calculation. Normal moves become Electric type this turn. Steals target's boosts before dealing damage. Cannot be redirected. Traps and damages the target for 4-5 turns. Always results in a critical hit. Burns on contact with the user before it moves. Fails if the user takes damage before it hits. Removes item. Frees user from hazards/bind/ Leech Seed. If the user has no item, it steals the target's. Lasts 2-3 turns. Confuses the user afterwards. The target is cured of its burn. Curly|Droopy|Stretchy eaten: +1 Atk|Def|Spe. Ends terrain. 2x power if the user had a stat lowered this turn. During Electric Terrain: 1.5x power. Power doubles if an ally fainted last turn. No charge in sunlight. Halved power in other weathers. Cannot be selected until the user eats a Berry. Grounds adjacent foes. First hit neutral on Flying. User steals and eats the target's Berry. If the target is an ally, heals 50% of its max HP. Summons Leech Seed. All healthy allies aid in damaging the target. Can't miss in rain. Power varies; 2x on Dig. Physical if user's Atk > Sp. Atk. 40, 80, 120 power, or heals target 1/4 max HP. Effect varies with terrain. (30% paralysis chance). If Terastallized: Phys. if Atk > SpA, type = Tera. User on terrain: power doubles, type varies. Power doubles and type varies in each weather. Type varies based on the held Memory. Type varies based on the user's primary type. Type varies based on the held Drive. User is hurt by 50% of its max HP if it misses. Fails if target is not attacking. Power increases when used on consecutive turns. Fails if user has no Stockpile. Fails if the target has no held item. Fails if there is no terrain active. Destroys screens, unless the target is immune. Active Pokemon cannot fall asleep. Hits adjacent Pokemon sharing the user's type. Summons Reflect. Lower's the user's Attack and Defense by 1. Lowers the user's Sp. Attack by 2. Lowers the user's Sp. Defense by 1. Lowers the user's Spe by 2. Cures the user's party of all status conditions.\",\r\n        pp: 13.41701681,\r\n        priority: 0.0341176471,\r\n\t\tgen: 5,\r\n        flags: {protect: 1, mirror: 1,\r\n                bullet: 1, punch: 1, bite: 1, contact: 1, wind: 1, sound: 1, slicing: 1, heal: 1, defrost: 1,\r\n                failencore: 1, failcopycat: 1, failinstruct: 1, failmimic: 1,\r\n                nosleeptalk: 1, noassist: 1, noparentalbond: 1,\r\n                reflectable: 1, charge: 1, recharge: 1, gravity: 1, distance: 1, nonsky: 1, bypasssub: 1},\r\n        breaksProtect: true,\r\n        critRatio: 2,\r\n        drain: [1, 2],\r\n        ignoreAbility: true,\r\n        ignoreEvasion: true,\r\n        ignoreDefensive: true, //darkest lariat\r\n        mindBlownRecoil: true,\r\n        multihit: 10,\r\n        multiaccuracy: true,\r\n        noSketch: true, //torques\r\n        overrideDefensiveStat: 'def',\r\n        overrideOffensiveStat: 'def', //body press\r\n        overrideOffensivePokemon: 'target', //foul play\r\n        pseudoWeather: 'iondeluge', //plasma fists\r\n        recoil: [33, 100],\r\n        //selfdestruct: \"always\",\r\n        stealsBoosts: true,\r\n        tracksTarget: true,\r\n        volatileStatus: 'partiallytrapped',\r\n        willCrit: true,\r\n        priorityChargeCallback(pokemon) {\r\n            //beak blast\r\n            pokemon.addVolatile('thekitchensink');\r\n        },\r\n        beforeMoveCallback(pokemon) {\r\n            //focus punch\r\n            if (pokemon.volatiles['thekitchensink']?.lostFocus) {\r\n                this.add('cant', pokemon, 'The Kitchen Sink', 'The Kitchen Sink');\r\n                return true;\r\n            }\r\n           \r\n            //pursuit\r\n            for (const side of this.sides) {\r\n                if (side.hasAlly(pokemon)) continue;\r\n                side.addSideCondition('pursuit', pokemon);\r\n                const data = side.getSideConditionData('pursuit');\r\n                if (!data.pokemons) {\r\n                    data.pokemons = [];\r\n                }\r\n                data.pokemons.push(pokemon);\r\n            }\r\n        },\r\n        onAfterHit(target, source, move) {\r\n            //knock off\r\n            if (source.hp) {\r\n                const item = target.takeItem();\r\n                if (item) {\r\n                    this.add('-enditem', target, item.name, '[from] move: The Kitchen Sink', '[of] ' + source);\r\n                }\r\n            }\r\n           \r\n            //mortal spin\r\n            if (!move.hasSheerForce) {\r\n                if (source.hp && source.removeVolatile('leechseed')) {\r\n                    this.add('-end', source, 'Leech Seed', '[from] move: The Kitchen Sink', '[of] ' + source);\r\n                }\r\n                const sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n                for (const condition of sideConditions) {\r\n                    if (source.hp && source.side.removeSideCondition(condition)) {\r\n                        this.add('-sideend', source.side, this.dex.conditions.get(condition).name, '[from] move: Mortal Spin', '[of] ' + source);\r\n                    }\r\n                }\r\n                if (source.hp && source.volatiles['partiallytrapped']) {\r\n                    source.removeVolatile('partiallytrapped');\r\n                }\r\n            }\r\n       \r\n            //thief\r\n            if (source.item || source.volatiles['gem']) {\r\n                return;\r\n            }\r\n            const yourItem = target.takeItem(source);\r\n            if (!yourItem) {\r\n                return;\r\n            }\r\n            if (!this.singleEvent('TakeItem', yourItem, target.itemState, source, target, move, yourItem) ||\r\n                !source.setItem(yourItem)) {\r\n                target.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n                return;\r\n            }\r\n            this.add('-enditem', target, yourItem, '[silent]', '[from] move: Thief', '[of] ' + source);\r\n            this.add('-item', source, yourItem, '[from] move: Thief', '[of] ' + target);\r\n        },\r\n        onAfterMove(pokemon, target, move) {\r\n            //mind blown\r\n            if (move.mindBlownRecoil && !move.multihit) {\r\n                const hpBeforeRecoil = pokemon.hp;\r\n                this.damage(Math.round(pokemon.maxhp / 2), pokemon, pokemon, this.dex.conditions.get('Mind Blown'), true);\r\n                if (pokemon.hp <= pokemon.maxhp / 2 && hpBeforeRecoil > pokemon.maxhp / 2) {\r\n                    this.runEvent('EmergencyExit', pokemon, pokemon);\r\n                }\r\n            }\r\n           \r\n            //outrage\r\n            if (pokemon.volatiles['lockedmove'] && pokemon.volatiles['lockedmove'].duration === 1) {\r\n                pokemon.removeVolatile('lockedmove');\r\n            }\r\n           \r\n            //sparkling aria\r\n            for (const pokemon of this.getAllActive()) {\r\n                if (pokemon !== target && pokemon.removeVolatile('sparklingaria') && pokemon.status === 'brn' && !source.fainted) {\r\n                    pokemon.cureStatus();\r\n                }\r\n            }\r\n        },\r\n        onAfterMoveSecondarySelf(pokemon, target, move) {\r\n            //order up\r\n            if (!pokemon.volatiles['commanded']) return;\r\n            const tatsugiri = pokemon.volatiles['commanded'].source;\r\n            if (tatsugiri.baseSpecies.baseSpecies !== 'Tatsugiri') return; // Should never happen\r\n            switch (tatsugiri.baseSpecies.forme) {\r\n            case 'Droopy':\r\n                this.boost({def: 1}, pokemon, pokemon);\r\n                break;\r\n            case 'Stretchy':\r\n                this.boost({spe: 1}, pokemon, pokemon);\r\n                break;\r\n            default:\r\n                this.boost({atk: 1}, pokemon, pokemon);\r\n                break;\r\n            }\r\n        },\r\n        onAfterSubDamage(damage, target, pokemon, move) {\r\n            //mortal spin\r\n            if (!move.hasSheerForce) {\r\n                if (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n                    this.add('-end', pokemon, 'Leech Seed', '[from] move: The Kitchen Sink', '[of] ' + pokemon);\r\n                }\r\n                const sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n                for (const condition of sideConditions) {\r\n                    if (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n                        this.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n                    }\r\n                }\r\n                if (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n                    pokemon.removeVolatile('partiallytrapped');\r\n                }\r\n            }\r\n           \r\n            //shell side arm\r\n            if (!pokemon.isAlly(target)) this.hint(move.category + \" The Kitchen Sink\");\r\n           \r\n            //steel roller\r\n            this.field.clearTerrain();\r\n        },\r\n        onBasePower(basePower, pokemon, target) {\r\n            //brine\r\n            if (target.hp * 2 <= target.maxhp) {\r\n                return this.chainModify(2);\r\n            }\r\n           \r\n            //lashout\r\n            if (pokemon.statsLoweredThisTurn) {\r\n                this.debug('lashout buff');\r\n                return this.chainModify(2);\r\n            }\r\n           \r\n            //psyblade\r\n            if (this.field.isTerrain('electricterrain')) {\r\n                this.debug('psyblade electric terrain boost');\r\n                return this.chainModify(1.5);\r\n            }\r\n           \r\n            //retaliate\r\n            if (pokemon.side.faintedLastTurn) {\r\n                this.debug('Boosted for a faint last turn');\r\n                return this.chainModify(2);\r\n            }\r\n           \r\n            //solar beam\r\n            const weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow'];\r\n            if (weakWeathers.includes(pokemon.effectiveWeather())) {\r\n                this.debug('weakened by weather');\r\n                return this.chainModify(0.5);\r\n            }\r\n       \r\n            //venoshock\r\n            if (target.status === 'psn' || target.status === 'tox') {\r\n                return this.chainModify(2);\r\n            }\r\n        },\r\n        onDisableMove(pokemon) {\r\n            //belch\r\n            if (!pokemon.ateBerry) pokemon.disableMove('thekitchensink');\r\n        },\r\n        onEffectiveness(typeMod, target, type, move) {\r\n\t\t\t//freezedry\r\n\t\t\tif (type === 'Water') return 1;\r\n\t\t\t\r\n            //thousand arrows\r\n            if (move.type !== 'Ground') return;\r\n            if (!target) return; // avoid crashing when called from a chat plugin\r\n            // ignore effectiveness if the target is Flying type and immune to Ground\r\n            if (!target.runImmunity('Ground')) {\r\n                if (target.hasType('Flying')) return 0;\r\n            }\r\n        },\r\n        onHit(target, source, move) {\r\n            //bug bite\r\n            const item = target.getItem();\r\n            if (source.hp && item.isBerry && target.takeItem(source)) {\r\n                this.add('-enditem', target, item.name, '[from] stealeat', '[move] The Kitchen Sink', '[of] ' + source);\r\n                if (this.singleEvent('Eat', item, null, source, null, null)) {\r\n                    this.runEvent('EatItem', source, null, null, item);\r\n                    if (item.id === 'leppaberry') target.staleness = 'external';\r\n                }\r\n                if (item.onEat) source.ateBerry = true;\r\n            }\r\n           \r\n            //pollen puff\r\n            if (source.isAlly(target)) {\r\n                if (!this.heal(Math.floor(target.baseMaxhp * 0.5))) {\r\n                    if (target.volatiles['healblock'] && target.hp !== target.maxhp) {\r\n                        this.attrLastMove('[still]');\r\n                        // Wrong error message, correct one not supported yet\r\n                        this.add('cant', source, 'move: Heal Block', move);\r\n                    } else {\r\n                        this.add('-immune', target);\r\n                    }\r\n                    return this.NOT_FAIL;\r\n                }\r\n            }\r\n           \r\n            //sappy seed\r\n            if (target.hasType('Grass')) return null;\r\n            target.addVolatile('leechseed', source);\r\n           \r\n            // Shell Side Arm\r\n            if (!source.isAlly(target)) this.hint(move.category + \" Shell Side Arm\");\r\n           \r\n            //steel roller\r\n            this.field.clearTerrain();\r\n        },\r\n        onModifyMove(move, pokemon, target) {\r\n            //beat up\r\n            move.allies = pokemon.side.pokemon.filter(ally => ally === pokemon || !ally.fainted && !ally.status);\r\n            move.multihit += move.allies.length;\r\n           \r\n            //bleakwind storm\r\n            if (target && ['raindance', 'primordialsea'].includes(target.effectiveWeather())) {\r\n                move.accuracy = true;\r\n            }\r\n           \r\n            //magnitude\r\n            const i = this.random(100);\r\n            if (i < 5) {\r\n                move.magnitude = 4;\r\n                move.basePower += 10;\r\n            } else if (i < 15) {\r\n                move.magnitude = 5;\r\n                move.basePower += 30;\r\n            } else if (i < 35) {\r\n                move.magnitude = 6;\r\n                move.basePower += 50;\r\n            } else if (i < 65) {\r\n                move.magnitude = 7;\r\n                move.basePower += 70;\r\n            } else if (i < 85) {\r\n                move.magnitude = 8;\r\n                move.basePower += 90;\r\n            } else if (i < 95) {\r\n                move.magnitude = 9;\r\n                move.basePower += 110;\r\n            } else {\r\n                move.magnitude = 10;\r\n                move.basePower += 150;\r\n            }\r\n           \r\n            //photon geyser\r\n            if (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n           \r\n            //present\r\n            const rand = this.random(10);\r\n            if (rand < 2) {\r\n                move.heal = [1, 4];\r\n                move.infiltrates = true;\r\n            } else if (rand < 6) {\r\n                move.basePower += 40;\r\n            } else if (rand < 9) {\r\n                move.basePower += 80;\r\n            } else {\r\n                move.basePower += 120;\r\n            }\r\n           \r\n            //pursuit\r\n            if (target?.beingCalledBack || target?.switchFlag) move.accuracy = true;\r\n           \r\n            //secret power\r\n            if (this.field.isTerrain('')) return;\r\n            move.secondaries = [];\r\n            if (this.field.isTerrain('electricterrain')) {\r\n                move.secondaries.push({\r\n                    chance: 30,\r\n                    status: 'par',\r\n                });\r\n            } else if (this.field.isTerrain('grassyterrain')) {\r\n                move.secondaries.push({\r\n                    chance: 30,\r\n                    status: 'slp',\r\n                });\r\n            } else if (this.field.isTerrain('mistyterrain')) {\r\n                move.secondaries.push({\r\n                    chance: 30,\r\n                    boosts: {\r\n                        spa: -1,\r\n                    },\r\n                });\r\n            } else if (this.field.isTerrain('psychicterrain')) {\r\n                move.secondaries.push({\r\n                    chance: 30,\r\n                    boosts: {\r\n                        spe: -1,\r\n                    },\r\n                });\r\n            }\r\n           \r\n            //shell side arm\r\n            if (!target) return;\r\n            const atk = pokemon.getStat('atk', false, true);\r\n            const spa = pokemon.getStat('spa', false, true);\r\n            const def = target.getStat('def', false, true);\r\n            const spd = target.getStat('spd', false, true);\r\n            const physical = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * atk) / def) / 50);\r\n            const special = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * spa) / spd) / 50);\r\n            if (physical > special || (physical === special && this.random(2) === 0)) {\r\n                move.category = 'Physical';\r\n                move.flags.contact = 1;\r\n            }\r\n           \r\n            //tera blast\r\n            if (pokemon.terastallized && pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n                move.category = 'Physical';\r\n            }\r\n            if (pokemon.terastallized === 'Stellar') {\r\n                move.self = {boosts: {atk: -1, spa: -1}};\r\n            }\r\n       \r\n            //terrain pulse\r\n            if (this.field.terrain && pokemon.isGrounded()) {\r\n                move.basePower *= 2;\r\n                this.debug('BP doubled in Terrain');\r\n            }\r\n           \r\n            //weather ball\r\n            switch (pokemon.effectiveWeather()) {\r\n            case 'sunnyday':\r\n            case 'desolateland':\r\n                move.basePower *= 2;\r\n                break;\r\n            case 'raindance':\r\n            case 'primordialsea':\r\n                move.basePower *= 2;\r\n                break;\r\n            case 'sandstorm':\r\n                move.basePower *= 2;\r\n                break;\r\n            case 'hail':\r\n            case 'snow':\r\n                move.basePower *= 2;\r\n                break;\r\n            }\r\n        },\r\n        onModifyType(move, pokemon) {\r\n            //multi attack\r\n            if (pokemon.ignoringItem()) return;\r\n            move.type = this.runEvent('Memory', pokemon, null, move, 'Normal');\r\n       \r\n            //revelation dance\r\n            let type = pokemon.getTypes()[0];\r\n            if (type === \"Bird\") type = \"???\";\r\n            if (type === \"Stellar\") type = pokemon.getTypes(false, true)[0];\r\n            move.type = type;\r\n           \r\n            //techno blast\r\n            if (pokemon.ignoringItem()) return;\r\n            move.type = this.runEvent('Drive', pokemon, null, move, 'Normal');\r\n           \r\n            //tera blast\r\n            if (pokemon.terastallized) {\r\n                move.type = pokemon.teraType;\r\n            }\r\n           \r\n            //terrain pulse\r\n            if (!pokemon.isGrounded()) return;\r\n            switch (this.field.terrain) {\r\n            case 'electricterrain':\r\n                move.type = 'Electric';\r\n                break;\r\n            case 'grassyterrain':\r\n                move.type = 'Grass';\r\n                break;\r\n            case 'mistyterrain':\r\n                move.type = 'Fairy';\r\n                break;\r\n            case 'psychicterrain':\r\n                move.type = 'Psychic';\r\n                break;\r\n            }\r\n       \r\n            //weather ball\r\n            switch (pokemon.effectiveWeather()) {\r\n            case 'sunnyday':\r\n            case 'desolateland':\r\n                move.type = 'Fire';\r\n                break;\r\n            case 'raindance':\r\n            case 'primordialsea':\r\n                move.type = 'Water';\r\n                break;\r\n            case 'sandstorm':\r\n                move.type = 'Rock';\r\n                break;\r\n            case 'hail':\r\n            case 'snow':\r\n                move.type = 'Ice';\r\n                break;\r\n            }\r\n        },\r\n        onMoveFail(target, source, move) {\r\n            this.damage(source.baseMaxhp / 2, source, source, this.dex.conditions.get('The Kitchen Sink'));\r\n        },\r\n        onPrepareHit(target, source, move) {\r\n            if (source.terastallized) {\r\n                this.attrLastMove('[anim] Tera Blast ' + source.teraType);\r\n            }\r\n        },\r\n        onTry(source, target) {\r\n            //sucker punch\r\n            const action = this.queue.willMove(target);\r\n            const move = action?.choice === 'move' ? action.move : null;\r\n            if (!move || (move.category === 'Status' && move.id !== 'mefirst') || target.volatiles['mustrecharge']) {\r\n                return false;\r\n            }\r\n           \r\n            //fake out\r\n            if (source.activeMoveActions > 1) {\r\n                this.hint(\"The Kitchen Sink only works on your first turn out.\");\r\n                //return false;\r\n            }\r\n           \r\n            //echoed voice\r\n            this.field.addPseudoWeather('echoedvoice');\r\n           \r\n            return !!source.volatiles['stockpile'] && //spit up\r\n                   !!target.item && //poltergeist\r\n                   !target.fainted && //sky drop\r\n                   !this.field.isTerrain('') //steel roller\r\n                   // && (source.status === 'slp' || source.hasAbility('comatose'))\r\n                   ; //snore\r\n        },\r\n        onTryHit(target, pokemon) {\r\n            //brick break\r\n            pokemon.side.removeSideCondition('reflect');\r\n            pokemon.side.removeSideCondition('lightscreen');\r\n            pokemon.side.removeSideCondition('auroraveil');\r\n           \r\n            //pollen puff\r\n            if (pokemon.isAlly(target)) {\r\n                move.basePower = 0;\r\n                move.infiltrates = true;\r\n            }\r\n           \r\n            //poltergeist\r\n            this.add('-activate', target, 'move: The Kitchen Sink', this.dex.items.get(target.item).name);\r\n           \r\n            //pursuit\r\n            target.side.removeSideCondition('pursuit');\r\n           \r\n            //uproar\r\n            const activeTeam = target.side.activeTeam();\r\n            const foeActiveTeam = target.side.foe.activeTeam();\r\n            for (const [i, allyActive] of activeTeam.entries()) {\r\n                if (allyActive && allyActive.status === 'slp') allyActive.cureStatus();\r\n                const foeActive = foeActiveTeam[i];\r\n                if (foeActive && foeActive.status === 'slp') foeActive.cureStatus();\r\n            }\r\n        },\r\n        onTryMove(source, target, move) {\r\n            //pollen puff\r\n            if (source.isAlly(target) && source.volatiles['healblock']) {\r\n                this.attrLastMove('[still]');\r\n                this.add('cant', source, 'move: Heal Block', move);\r\n                return false;\r\n            }\r\n        },\r\n        onTryImmunity(target, source) {\r\n            return target.hasType(source.getTypes());\r\n        },\r\n        onUseMoveMessage(pokemon, target, move) {\r\n            this.add('-activate', pokemon, 'move: Magnitude', move.magnitude);\r\n        },\r\n        condition: {\r\n            duration: 1,\r\n            onStart(pokemon) {\r\n                this.add('-singleturn', pokemon, 'move: The Kitchen Sink');\r\n            },\r\n            onHit(target, source, move) {\r\n                if (this.checkMoveMakesContact(move, source, target)) {\r\n                    source.trySetStatus('brn', target);\r\n                }\r\n                if (move.category !== 'Status') {\r\n                    this.effectState.lostFocus = true;\r\n                }\r\n            },\r\n            onTryAddVolatile(status, pokemon) {\r\n                if (status.id === 'flinch') return null;\r\n            },\r\n        },\r\n        secondary: null,\r\n        self: {\r\n            volatileStatus: 'mustrecharge',\r\n           \r\n            //baddy bad\r\n            sideCondition: 'reflect',\r\n           \r\n            boosts: {\r\n                atk: -1,\r\n                def: -1,\r\n                spa: -2,\r\n                spd: -1,\r\n                spe: -2,\r\n            },\r\n           \r\n            //sparkly swirl\r\n            onHit(pokemon, source, move) {\r\n                this.add('-activate', source, 'move: Aromatherapy');\r\n                for (const ally of source.side.pokemon) {\r\n                    if (ally !== source && (ally.volatiles['substitute'] && !move.infiltrates)) {\r\n                        continue;\r\n                    }\r\n                    ally.cureStatus();\r\n                }\r\n            },\r\n        },\r\n        target: \"allAdjacent\",\r\n        type: \"???\",\r\n    },\r\n\tcuddie: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"cuddIe\",\r\n\t\tshortDesc: \"the pokemon have. a nice cuddle :)\",\r\n\t\tpp: 625000,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Tickle\", target);\r\n\t\t},\r\n\t\tonTryHit(target, source) {\r\n\t\t\tthis.add('-message', `${source.name} cuddled ${target.name}...`);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Friend\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tfeebasproshops: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Feebas Pro Shops\",\r\n\t\tshortDesc: \"50%: 85 BP Special, hits Ghost; 50%: +2 tokens.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {fishing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Pay Day\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.randomChance(1, 2)) {\r\n\t\t\t\tmove.basePower = 85;\r\n\t\t\t\tmove.category = \"Special\";\r\n\t\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmove.basePower = 0;\r\n\t\t\t\tmove.category = \"Status\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif(move.basePower === 0) source.side.addFishingTokens(2);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tbigbash: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 68,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Big Bash\",\r\n\t\tshortDesc: \"Guaranteed crit if either Pokemon used Big Button.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Pulverizing Pancake\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif(pokemon.volatiles['bigbutton'] || target.volatiles['bigbutton']) move.willCrit = true;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tdiamondhatchet: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon.volatiles['bigbutton']) return 120;\r\n\t\t\treturn 80;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Diamond Hatchet\",\r\n\t\tshortDesc: \"20% chance to make the target flinch. Big: 120 BP.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {slicing: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Mighty Cleave\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\trainbowfeather: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Rainbow Feather\",\r\n\t\tshortDesc: \"User switches out. Target uses Conversion.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Esper Wing\", target);\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tthis.actions.useMove(\"Conversion\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t},\r\n\theartdrain: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Heart Drain\",\r\n\t\tshortDesc: \"User recovers 50% of the damage dealt.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, heal: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Giga Drain\", target);\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tvineboom: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Vine Boom\",\r\n\t\tshortDesc: \"20% par; 30% flinch; 5% frz; 10% slp; 1% ingrain.\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Ivy Cudgel\", target);\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 20,\r\n\t\t\t\tstatus: 'par',\r\n\t\t\t}, {\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t}, {\r\n\t\t\t\tchance: 5,\r\n\t\t\t\tstatus: 'frz',\r\n\t\t\t}, {\r\n\t\t\t\tchance: 10,\r\n\t\t\t\tstatus: 'slp',\r\n\t\t\t}, {\r\n\t\t\t\tchance: 1,\r\n\t\t\t\tvolatileStatus: 'ingrain',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tawesomeearthquake: {\r\n\t\tname: \"awesome Earthquake\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 100,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Earthquake\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\twingedblade: {\r\n\t\tname: \"Winged Blade\",\r\n\t\ttype: \"Flying\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 90,\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"High critical hit ratio.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {slicing: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Air Cutter\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\r\n\t//slate 3\r\n\tfishanddip: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fish and Dip\",\r\n\t\tshortDesc: \"Sets 1 Fishing Token on the user's side. User switches out.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1, fishing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Life Dew\", pokemon);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tsource.side.addFishingTokens(1);\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tohmygoooodwaaaaaaaaaanisfokifnouh: {\r\n\t\tname: \"OH MY GOOOOD WAAAAAAAAAANISFOKIFNOUH\",\r\n\t\ttype: \"Normal\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 300,\r\n\t\taccuracy: 100,\r\n\t\tpp: 1,\r\n\t\tnoPPBoosts: true,\r\n\t\tshortDesc: \"User faints. Removes user's side's entry hazards.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Spin Out\", target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (source.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(condition).name, '[from] move: OH MY GOOOOD WAAAAAAAAAANISFOKIFNOUH', '[of] ' + source);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselfdestruct: \"always\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfrigidterrain: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Frigid Terrain\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Ice power, Fishing takes 3x PP.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tterrain: 'frigidterrain',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (attacker.isGrounded() && !attacker.isSemiInvulnerable()) {\r\n\t\t\t\t\tif(move.type === 'Ice') return this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Frigid Terrain', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Frigid Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAnyDeductPP(target, source) {\r\n\t\t\t\tif (target.isGrounded() && target.lastMoveUsed.flags['fishing']) return 2;\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Frigid Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tgetemboys: {\r\n\t\tname: \"Get Em\\', Boys\",\r\n\t\ttype: \"Normal\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 100,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tconst allies = pokemon.side.pokemon.filter(ally => ally != pokemon && !ally.fainted && ally.diamondHand);\r\n\t\t\treturn 100 + 10 * allies;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"+10 BP per other unfainted allied Diamond Hand.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Close Combat\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tsniftgear: {\r\n\t\tname: \"Snift Gear\",\r\n\t\ttype: \"Steel\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"User +2 Atk; can hit Ghost-types, ignores evasiveness, takes 2x from Poison.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Odor Sleuth\", target);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 2,\r\n\t\t},\r\n\t\tvolatileStatus: \"sniftgear\",\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} took a big sniff!`);\r\n\t\t\t\tthis.add('-start', pokemon, 'Snift Gear', '[silent]');\r\n\t\t\t},\r\n\t\t\tonModifyMovePriority: -5,\r\n\t\t\tonModifyMove(move) {\r\n\t\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (move.type === 'Poison')  return this.chainModify(2);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tspringtidestorm: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 120,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t\tshortDesc: \"30% chance to lower the foe(s) Attack by 1. Rain: can't miss.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tanchorshot: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, fishing: 1},\r\n\t},\r\n\tarrowsoflight: {\r\n\t\tname: \"Arrows of Light\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 185,\r\n\t\taccuracy: 100,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"User gains the Laser Focus effect.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tisZ: \"zeldaniumz\",\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Sinister Arrow Raid\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tsupermushroom: {\r\n\t\tname: \"Super Mushroom\",\r\n\t\ttype: \"Grass\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Heals 1/3 max HP, Endure. Cannot be selected twice in a row.\",\r\n\t\tpriority: 3,\r\n\t\tflags: {snatch: 1, metronome: 1, cantusetwice: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Synthesis\", pokemon);\r\n\t\t},\r\n\t\theal: [1, 3],\r\n\t\tvolatileStatus: 'endure',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tfishprocessing: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fish Processing\",\r\n\t\tshortDesc: \"+1 Fishing Token; +1 Fishing Token at end of turn.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1, fishing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Shift Gear\", pokemon);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tsource.side.addFishingTokens(1);\r\n\t\t},\r\n\t\tvolatileStatus: \"fishprocessing\",\r\n\t\tcondition: {\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tpokemon.side.addFishingTokens(1);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tfisheater: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fish Eater\",\r\n\t\tshortDesc: \"-50% foe's fishing tokens; 1/16 heal, +1 stockpile each.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1, fishing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Life Dew\", pokemon);\r\n\t\t},\r\n\t\tonTry(source, target) {\r\n\t\t\treturn (target.side.fishingTokens && target.side.fishingTokens > 0);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (!target.side.fishingTokens || target.side.fishingTokens <= 0 || source.volatiles['stockpile3']) return false;\r\n\t\t\tconst tokens = Math.ceil(target.side.fishingTokens / 2);\r\n\t\t\tconst success = target.side.removeFishingTokens(tokens);\r\n\t\t\tif (success) {\r\n\t\t\t\tfor (let i = 0; i < Math.min(3, tokens); i ++) {\r\n\t\t\t\t\tsource.addVolatile('stockpile');\r\n\t\t\t\t}\r\n\t\t\t\tthis.heal(Math.ceil(source.maxhp * tokens / 16), source);\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tfishingterrain: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fishing Terrain\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Fishing power, Fishing tokens +1 on fishing move.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tterrain: 'fishingterrain',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tlet mod = 1;\r\n\t\t\t\tif (attacker.isGrounded() && !attacker.isSemiInvulnerable()) {\r\n\t\t\t\t\tif(move.flags['fishing']) mod *= 1.3;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.chainModify(mod);\r\n\t\t\t},\r\n\t\t\tonAfterMove(target, source, move) {\r\n\t\t\t\tif (move.flags['fishing']) target.side.addFishingTokens(1);\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Fishing Terrain', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Fishing Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Fishing Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tevilscaryuturn: {\r\n\t\tname: \"EVIL SCARY U-Turn\",\r\n\t\ttype: \"Dark\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 70,\r\n\t\taccuracy: 100,\r\n\t\tpp: 20,\r\n\t\tshortDesc: \"User switches out after damaging the target.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Scary Face\", target);\r\n\t\t\tthis.add('-anim', pokemon, \"Shadow Sneak\", target);\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tlooksmaxxknuckle: {\r\n\t\tname: \"Looksmaxx Knuckle\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 70,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Raises the user's Attack by 1.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1, punch: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Max Knuckle\", target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tlemonacid: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Lemon Acid\",\r\n\t\tshortDesc: \"100% chance to lower the target\u2019s Sp. Def by 1.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Acid Spray\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Lemon\",\r\n\t},\r\n\tcampfire: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Campfire\",\r\n\t\tshortDesc: \"Consumes 1 Fishing Token to heal 50% max HP.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1, fishing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Ember\", pokemon);\r\n\t\t},\r\n\t\tonTry(source) {\r\n\t\t\treturn (source.side.fishingTokens && source.side.fishingTokens > 0);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tconst success = source.side.removeFishingTokens(1);\r\n\t\t\tif (success) {\r\n\t\t\t\tthis.heal(Math.ceil(source.maxhp / 2), source);\r\n\t\t\t\tif (!['', 'slp', 'frz'].includes(source.status)) source.cureStatus();\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tsizedifference: {\r\n\t\tname: \"Size Difference\",\r\n\t\ttype: \"Ice\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 100,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Payback NOT boosted');\r\n\t\t\t\treturn move.basePower;\r\n\t\t\t}\r\n\t\t\tconst targetMove = target.lastMove;\r\n\t\t\tif (targetMove.name.length < 15) return move.basePower * 2;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"Move against user has shorter name: 2x power.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Ice Hammer\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tgenderaffirmingcare: {\r\n\t\tname: \"Gender Affirming Care\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Changes the target's gender.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Endeavor\", target);\r\n\t\t},\r\n\t\tonTryImmunity(pokemon, source) {\r\n\t\t\t//const nonVanilla = ['Anarlvet', 'Kingler-Mega', 'microwave', 'Lytlegai', 'Ohmyrod', 'Big Crammer', 'Samurott-Sinnoh', 'Goomba', 'Fridgile', 'Melmetal 2', 'Pidown', 'Kurayami', 'Zelda', 'Drigike', 'Phish', 'Smelmetal', 'Bondra', 'Tangette-Eternal', 'Donmigo', 'Dragoone', 'Collachet', 'Guiltrism', 'Swooliobat', 'Electrode-Mega', 'Mario Kart Wii', 'Impalpitoad', 'Scrubby', 'palpitoad is so cool', 'Moltres-Mega', 'Jirachitwo', 'Shinx-Fishing', 'Conquescape', 'Daiyakuza', 'Pokestar Fisherman', 'Magnegiri', 'mario', 'Contamicow', 'Whonhef', 'Fish Factory', 'cowboy_bandido', 'Pokestar Giant', 'Richard Petty', 'Impidimp-Mega', 'Lemon', 'Fishing Zombie', 'MT', 'Margaret Thatcher', 'Flesh Valiant', 'Flesh Valiant-Mega'];\r\n\t\t\treturn (pokemon.gender !== 'N');\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\tif (!target.trans) {\r\n\t\t\t\ttarget.gender = (target.gender === 'F') ? 'M' : 'F';\r\n\t\t\t\ttarget.trans = true;\r\n\t\t\t\tthis.add('-message', `${target.name} is now ${(target.gender === 'M') ? 'male' : 'female'}!`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.boost({def: 1, spd: 1}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tliondeluge: {\r\n\t\tname: \"Lion Deluge\",\r\n\t\ttype: \"Electric\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 40,\r\n\t\tshortDesc: \"For 5 turns, sound moves turn the user into a Lion.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Ion Deluge\", target);\r\n\t\t},\r\n\t\tpseudoWeather: 'liondeluge',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (source?.hasItem('liongun')) {\r\n\t\t\t\t\treturn 10;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonFieldStart(target, source, sourceEffect) {\r\n\t\t\t\tthis.add('-fieldactivate', 'move: Lion Deluge');\r\n\t\t\t\tthis.hint(`Certain sound moves cause the user to become a lion Pokemon depending on the move's type.`);\r\n\t\t\t},\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif(!move.flags['sound']) return;\r\n\t\t\t\tif(move.type === 'Normal') pokemon.formeChange('Pyroar');\r\n\t\t\t\tif(move.type === 'Electric') pokemon.formeChange('Luxray');\r\n\t\t\t\tif(move.type === 'Fire') pokemon.formeChange('Entei');\r\n\t\t\t\tif(move.type === 'Dragon') pokemon.formeChange('Gouging Fire');\r\n\t\t\t\tif(move.type === 'Steel') pokemon.formeChange('Solgaleo');\r\n\t\t\t\tif(move.type === 'Psychic') pokemon.formeChange('Necrozma-Dusk-Mane');\r\n\t\t\t},\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Lion Deluge');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\t\r\n\t//slate 4\r\n\tholdhands: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(target, source) {\r\n\t\t\tthis.add('-message', `${source.name} held hands with ${target.name}!`);\r\n\t\t},\r\n\t},\r\n\tspacelaser: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 140,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Space Laser\",\r\n\t\tshortDesc: \"Hits two turns after being used.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1, futuremove: 1},\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tmove: 'spacelaser',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'spacelaser',\r\n\t\t\t\t\tname: \"Space Laser\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 140,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {metronome: 1, futuremove: 1},\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Fire',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'Space Laser');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tjuicewave: {\r\n\t\tname: \"Juice Wave\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"User recovers 50% of the damage dealt.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, heal: 1},\r\n\t\tdrain: [1, 2],\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Sludge Wave\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tzestycutter: {\r\n\t\tname: \"Zesty Cutter\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"+1 priority if the target has a lowered stat.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Psycho Cut\", target);\r\n\t\t},\r\n\t\tonModifyPriority(priority, source) {\r\n\t\t\tfor (const target of source.foes()) {\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tlet i: boostID;\r\n\t\t\t\t\tfor (i in target.boosts) {\r\n\t\t\t\t\t\tif (target.boosts[i] < 0) {\r\n\t\t\t\t\t\t\treturn priority + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tblindingsquirter: {\r\n\t\tname: \"Blinding Squirter\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Target's 100% accurate moves have 50% accuracy.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Acid Spray\", target);\r\n\t\t},\r\n\t\tvolatileStatus: \"blindingsquirter\",\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Blinding Squirter', '[silent]');\r\n\t\t\t\tthis.add('message', `${pokemon.name} was blinded!`);\r\n\t\t\t},\r\n\t\t\tonSourceAccuracy(accuracy, target, source, move) {\r\n\t\t\t\tif (move && move.accuracy === 100) return 50;\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tthrowemamug: {\r\n\t\tname: \"Throw Em\\' A Mug\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"User switches out. Incoming Diamond Hand: 30% heal.\",\r\n\t\tpriority: -2,\r\n\t\tflags: {metronome: 1},\r\n\t\tonTry(source) {\r\n\t\t\treturn !!this.canSwitch(source.side);\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Teleport\", target);\r\n\t\t},\r\n\t\tsideCondition: 'throwemamug',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Throw Em A Mug', '[silent]');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.baseSpecies.diamondHand) this.heal(pokemon.maxhp * 0.3);\r\n\t\t\t\tpokemon.side.removeSideCondition('throwemamug');\r\n\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Throw Em A Mug', '[of] ' + pokemon, '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tmewing: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Mewing\",\r\n\t\tshortDesc: \"Protects from damaging attacks. Contact: gain Silly.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {noassist: 1, failcopycat: 1, failinstruct: 1},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'mewing',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tif (!target.hasType('Silly') && target.addType('Silly')) this.add('-start', target, 'typeadd', 'Silly', '[from] move: Mewing');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tif (!target.hasType('Silly') && target.addType('Silly')) this.add('-start', target, 'typeadd', 'Silly', '[from] move: Mewing');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tfreakout: {\r\n\t\tname: \"Freak Out\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 85,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"50% chance to lower target's Def by 1 stage, 100% if target healed.\u200B\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t//this.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target.volatiles['healed']) {\r\n\t\t\t\tmove.secondary.chance = 100;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tcorrosivegus: {\r\n\t\tname: \"Corrosive Gus\",\r\n\t\ttype: \"Normal\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Target has a random stat lowered by 1 each turn.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Corrosive Gas\", target);\r\n\t\t},\r\n\t\tvolatileStatus: \"corrosivegus\",\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Corrosive Gus');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 28,\r\n\t\t\tonResidualSubOrder: 2,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tlet stats: BoostID[] = [];\r\n\t\t\t\tconst boost: SparseBoostsTable = {};\r\n\t\t\t\tstats = [];\r\n\t\t\t\tlet statMinus: BoostID;\r\n\t\t\t\tfor (statMinus in pokemon.boosts) {\r\n\t\t\t\t\tif (statMinus === 'accuracy' || statMinus === 'evasion') continue;\r\n\t\t\t\t\tif (pokemon.boosts[statMinus] > -6) {\r\n\t\t\t\t\t\tstats.push(statMinus);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet randomStat: BoostID | undefined = stats.length ? this.sample(stats) : undefined;\r\n\t\t\t\tif (randomStat) boost[randomStat] = -1;\r\n\r\n\t\t\t\tthis.boost(boost, pokemon, pokemon);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tincinerate: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Incinerate\",\r\n\t\tshortDesc: \"1.5x damage if foe holds an item. Removes item.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tconst item = target.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, target.itemState, target, target, move, item)) return;\r\n\t\t\tif (item.id) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (source.hp) {\r\n\t\t\t\tlet item = target.item;\r\n\t\t\t\tconst nonBurn = ['Never-Melt Ice', 'Charcoal', 'Magmarizer', 'Dragon Fang', 'Dragon Scale', 'Damp Rock', 'Smooth Rock', 'Heat Rock', 'Insect Plate', 'Dread Plate', 'Draco Plate', 'Zap Plate', 'Flame Plate', 'Fist Plate', 'Sky Plate', 'Pixie Plate', 'Spooky Plate', 'Meadow Plate', 'Earth Plate', 'Icicle Plate', 'Toxic Plate', 'Stone Plate', 'Iron Plate', 'Splash Plate', 'Light Ball', 'Metal Powder', 'Quick Powder', 'Deep Sea Scale', 'Deep Sea Tooth', 'Thick Club', 'Protective Pads'];\r\n\t\t\t\tif (!nonBurn.includes(target.item)) item = target.takeItem();\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tthis.add('-enditem', target, item.name, '[from] move: Incinerate', '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tpissongrave: {\r\n\t\tname: \"Piss on Grave\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 95,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"OHKOs Margaret Thatcher.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Steam Eruption\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.baseSpecies == \"Margaret Thatcher\") {\r\n\t\t\t\t\tmove.ohko = true;\r\n\t\t\t\t\tmove.accuracy = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tformofthestrawberryelephant: {\r\n\t\tname: \"Form of the strawberry elephant\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"Raises Attack, Sp. Attack, Speed, accuracy by 1. User loses 1/8 HP.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Bulk Up\", target);\r\n\t\t},\r\n\t\tonTry(source) {\r\n\t\t\tif (source.hp <= (source.maxhp / 8) || source.maxhp === 1) return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (!this.boost(move.boosts as SparseBoostsTable)) return null;\r\n\t\t\tdelete move.boosts;\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tthis.directDamage(pokemon.maxhp / 8);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tspa: 1,\r\n\t\t\tspe: 1,\r\n\t\t\taccuracy: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\t/*thief: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Steels the target's item.\",\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tconst item = target.takeItem();\r\n\t\t\tif (!item) return;\r\n\t\t\tconst ironball = this.dex.items.get('Iron Ball');\r\n\t\t\tthis.add('-enditem', target, item.name, '[from] move: Thief', '[of] ' + source, \"[silent]\");\r\n\t\t\tthis.add('-item', target, ironball, '[from] move: Thief', '[of] ' + target, \"[silent]\");\r\n\t\t\ttarget.setItem(ironball);\r\n\t\t\tthis.add(\"-message\", `${source.name} steeled ${target.name}'s ${item}!`);\r\n\t\t}\r\n\t},*/\r\n\tswiftsquirt: {\r\n\t\tname: \"Swift Squirt\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 40,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Usually moves first. High critical hit ratio.\",\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tcritRatio: 2,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Water Shuriken\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tcourtchange: {\r\n\t\tinherit: true,\r\n\t\tonHitField(target, source) {\r\n\t\t\tconst sideConditions = [\r\n\t\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t\t];\r\n\t\t\tlet success = false;\r\n\t\t\tconst sourceSideConditions = source.side.sideConditions;\r\n\t\t\tconst targetSideConditions = source.side.foe.sideConditions;\r\n\t\t\tconst sourceTemp: typeof sourceSideConditions = {};\r\n\t\t\tconst targetTemp: typeof targetSideConditions = {};\r\n\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\tsourceTemp[id] = sourceSideConditions[id];\r\n\t\t\t\tdelete sourceSideConditions[id];\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\tfor (const id in targetSideConditions) {\r\n\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\ttargetTemp[id] = targetSideConditions[id];\r\n\t\t\t\tdelete targetSideConditions[id];\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\tif (target.side.fishingTokens > 0 || source.side.fishingTokens > 0) {\r\n\t\t\t\tconst tempT = target.side.fishingTokens;\r\n\t\t\t\tconst tempS = source.side.fishingTokens;\r\n\t\t\t\ttarget.side.removeFishingTokens(tempT);\r\n\t\t\t\ttarget.side.addFishingTokens(tempS);\r\n\t\t\t\tsource.side.removeFishingTokens(tempS);\r\n\t\t\t\tsource.side.addFishingTokens(tempT);\r\n\t\t\t}\r\n\t\t\tfor (const id in sourceTemp) {\r\n\t\t\t\ttargetSideConditions[id] = sourceTemp[id];\r\n\t\t\t}\r\n\t\t\tfor (const id in targetTemp) {\r\n\t\t\t\tsourceSideConditions[id] = targetTemp[id];\r\n\t\t\t}\r\n\t\t\tthis.add('-swapsideconditions');\r\n\t\t\tif (!success) return false;\r\n\t\t\tthis.add('-activate', source, 'move: Court Change');\r\n\t\t},\r\n\t},\r\n\tlethalhug: {\r\n\t\tname: \"Lethal Hug\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 90,\r\n\t\taccuracy: 10001,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"User recovers 1/8 max HP if this KOs a target.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Body Slam\", target);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) this.heal(pokemon.maxhp / 6, pokemon, target, move);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbrainrotcudgel: {\r\n\t\tname: \"Brainrot Cudgel\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 50,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Always results in a critical hit.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\twillCrit: true,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Ivy Cudgel Rock\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\t\r\n\t//slate 5\r\n\tmaldfist: {\r\n\t\tname: \"Mald Fist\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcategory: \"Physical\",\r\n\t\taccuracy: 100,\r\n\t\tpp: 16,\r\n\t\tnoPPBoosts: true,\r\n\t\tbasePower: 50,\r\n\t\tshortDesc: \"+10 power for each PP used.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, punch: 1, contact: 1},\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tconst callerMoveId = move.sourceEffect || move.id;\r\n\t\t\tconst moveSlot = callerMoveId === 'instruct' ? pokemon.getMoveData(move.id) : pokemon.getMoveData(callerMoveId);\r\n\t\t\treturn move.basePower + 10 * (move.pp - moveSlot.pp - 1);\r\n\t\t},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Rage Fist\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tairhorn: {\r\n\t\tname: \"Air Horn\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 55,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Guaranteed crit if either Pokemon used Big Button.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1,},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Boomburst\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif(pokemon.volatiles['bigbutton'] || target.volatiles['bigbutton']) move.willCrit = true;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbalatroblast: {\r\n\t\tname: \"Balatro Blast\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 40,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (!pokemon.side.trumpcard) pokemon.side.trumpcard = 0;\r\n\t\t\tconst bp = move.basePower + 20 * pokemon.side.trumpcard;\r\n\t\t\tthis.debug('BP: ' + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"+20 power for each time an ally used Trump Card.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Hyper Beam\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfiendfire: {\r\n\t\tname: \"Fiend Fire\",\r\n\t\ttype: \"Fire\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 50,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Consumes user's tokens; hits for that many tokens, max 4.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Magma Storm\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tconst pokeSide = pokemon.side;\r\n\t\t\tif(pokeSide.fishingTokens > 0) {\r\n\t\t\t\tconst hits = Math.min(pokeSide.fishingTokens, 4);\r\n\t\t\t\tpokeSide.removeFishingTokens(pokeSide.fishingTokens);\r\n\t\t\t\tmove.multihit = hits;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tjurassicfeast: {\r\n\t\tname: \"Jurassic Feast\",\r\n\t\ttype: \"Rock\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Always crits and burns Lemon-type or fish Pokemon.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Tar Shot\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif(target.hasType('Lemon') || target.baseSpecies.fish) move.willCrit = true;\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (target.hasType('Lemon') || target.baseSpecies.fish) {\r\n\t\t\t\ttarget.trySetStatus('brn');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tsingleironbash: {\r\n\t\tname: \"Single Iron Bash\",\r\n\t\ttype: \"Steel\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 111,\r\n\t\taccuracy: true,\r\n\t\tpp: 11,\r\n\t\tnoPPBoosts: true,\r\n\t\tshortDesc: \"11% chance to make the target flinch.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, punch: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Double Iron Bash\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 11,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\thandofspace: {\r\n\t\tname: \"Hand of Space\",\r\n\t\ttype: \"Water\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 100,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif(target.baseSpecies.diamondHand) return move.basePower * 1.5;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Deals 1.5x damage to Diamond Hand members.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Spacial Rend\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfishburn: {\r\n\t\tname: \"Fish Burn\",\r\n\t\ttype: \"Fire\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.side.removeFishingTokens(1)) {\r\n\t\t\t\treturn move.basePower *= 1.5;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"-1 foe's Fishing Token to deal 1.5x damage.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, fishing: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Burn Up\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tenchantedboomerang: {\r\n\t\tname: \"Enchanted Boomerang\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 50,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Hits twice.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Bonemerang\", target);\r\n\t\t},\r\n\t\tmultihit: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tteratriplebasedballbarrage: {\r\n\t\tname: \"Tera Triple Basedball Barrage\",\r\n\t\ttype: \"Stellar\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 1,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"\",\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Astral Barrage\", target);\r\n\t\t},\r\n\t\tisZ: \"stellariumz\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\t\r\n\t//slate 6\r\n\tironfist: {\r\n\t\tname: \"Iron Fist\",\r\n\t\ttype: \"Steel\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 90,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Raises user's and target's Defense by 1.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, punch: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Double Iron Bash\", target);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tdef: 1,\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfertilesoil: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fertile Soil\",\r\n\t\tshortDesc: \"Inflicts foes with Leech seed on switchin. Single use.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1},\r\n\t\tsideCondition: 'fertilesoil',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Fertile Soil');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif(!pokemon.hasType('Grass')) {\r\n\t\t\t\t\tif(pokemon.adjacentFoes().length == 0) return;\r\n\t\t\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\t\t\tpokemon.addVolatile('leechseed', target);\r\n\t\t\t\t\tpokemon.side.removeSideCondition('fertilesoil');\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Fertile Soil', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tepicbeam: {\r\n\t\tname: \"Epic Beam\",\r\n\t\ttype: \"Ice\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 40,\r\n\t\tshortDesc: \"Epic Beam\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonTry(source) {\r\n\t\t\tif (source.side.pokemonLeft > 1) return;\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-fail', source, 'move: Epic Beam');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Prismatic Laser\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tmove.category = 'Special';\r\n\t\t\tmove.basePower = 300;\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tsource.side.addSlotCondition(source, 'epicbeam');\r\n\t\t},\r\n\t\t// wtf\r\n\t\tselfSwitch: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\t// sacrificing implemented in side.ts, kind of\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\thomerun: {\r\n\t\tname: \"Home Run\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 40,\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"Usually goes first. 2x power if target is Baseballed.\",\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Brutal Swing\", target);\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif(target.status === 'baseball') return this.chainModify(2);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tchaospotion: {\r\n\t\tname: \"Chaos Potion\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Turns the user into a random Pokemon.\",\r\n\t\tpriority: 2,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Transform\", target);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n            const pokemons = this.dex.species.all();\r\n\t\t\tconst randomPokemon = this.sample(pokemons);\r\n            pokemon.formeChange(randomPokemon);\r\n\t\t\tthis.add('-message', `${pokemon.name} transformed into ${randomPokemon}!`);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tjusticepotion: {\r\n\t\tname: \"Justice Potion\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Turns the target into a random Pokemon.\",\r\n\t\tpriority: -2,\r\n\t\tflags: {protect: 1, mirror: 1, reflectable: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Acid Spray\", target);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n            const pokemons = this.dex.species.all();\r\n            const randomPokemon = this.sample(pokemons);\r\n            pokemon.formeChange(randomPokemon);\r\n\t\t\tthis.add('-message', `${pokemon.name} transformed into ${randomPokemon}!`);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tgraveyard: {\r\n\t\tname: \"Graveyard\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"For 5 turns, +Ghost and damages non-Ghost/Darks/Normals.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Sunny Day\", target);\r\n\t\t},\r\n\t\tweather: 'graveyard',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t},\r\n\tpieblast: {\r\n\t\tname: \"Pie Blast\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"100% chance to lower the target's Speed by 1.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Mind Blown\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tmultiattack: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Type = Memory. Special if user's Sp. Atk > Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) < pokemon.getStat('spa', false, true)) move.category = 'Special';\r\n\t\t},\r\n\t},\r\n\tcitrusbomb: {\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Citrus Bomb\",\r\n\t\tshortDesc: \"Target's accuracy is lowered by 1 stage for 3 turns.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 4,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Citrus Bomb');\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (this.effectState.source && !this.effectState.source.isActive) {\r\n\t\t\t\t\tpokemon.removeVolatile('citrusbomb');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 14,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.boost({accuracy: -1}, pokemon, this.effectState.source);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Citrus Bomb', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'citrusbomb',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Lemon\",\r\n\t},\r\n\t\r\n\t//slate 7\r\n\tclash: {\r\n\t\tname: \"Clash\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 100,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Fails if this Pokemon has a Status move.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"First Impression\", target);\r\n\t\t},\r\n\t\tonTry(pokemon) {\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n                const temp = this.dex.moves.get(moveSlot.id);\r\n                if (temp.category === 'Status') return false;\r\n            }\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tanofferyoucantrefuse: {\r\n\t\tname: \"An Offer You Can\\'t Refuse\",\r\n\t\ttype: \"Bug\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 90,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"User sets a Madness Counter on its side.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Pay Day\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tsource.side.addSideCondition('madnesscounter');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tlemonbash: {\r\n\t\tname: \"Lemon Bash\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 85,\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"20% chance to lower the target's Def by 1.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1,},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Double-Edge\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tspringyfist: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 30,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Springy Fist\",\r\n\t\tshortDesc: \"User switches out. Disables the target's last move.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 1,\r\n\t\tflags: {contact: 1, punch: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Dizzy Punch\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (!target.lastMove || target.lastMove.isZ || target.lastMove.isMax || target.lastMove.id === 'struggle') return;\r\n\t\t\ttarget.addVolatile('disable');\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tfocusblast: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 80,\r\n\t},\r\n\trecycle: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Restores the items the user's party last used.\",\r\n\t\tonHit(target, source) {\r\n\t\t\tlet success = false;\r\n\t\t\tconst allies = [...target.side.pokemon, ...target.side.allySide?.pokemon || []];\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tif (ally.item || !ally.lastItem) continue;\r\n\t\t\t\tconst item = ally.lastItem;\r\n\t\t\t\tally.lastItem = '';\r\n\t\t\t\tthis.add('-item', ally, this.dex.items.get(item), '[from] move: Recycle');\r\n\t\t\t\tally.setItem(item);\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\t\r\n\t//slate 8\r\n\tnecromancy: {\r\n\t\tname: \"Necromancy\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 0,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 30 * Math.min(pokemon.side.totalFainted, 5);\r\n\t\t},\r\n\t\taccuracy: 70,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"+30 power for each fainted ally. Graveyard: can't miss.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\treturn attacker.side.totalFainted > 0;\r\n\t\t},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Last Respects\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\t\tcase 'graveyard':\r\n\t\t\t\t\tmove.accuracy = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tsnowflakeshuriken: {\r\n\t\tname: \"Snowflake Shuriken\",\r\n\t\ttype: \"Ice\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 20,\r\n\t\taccuracy: 100,\r\n\t\tpp: 20,\r\n\t\tshortDesc: \"Usually goes first. Hits 3 times.\",\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tmultihit: 3,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Icicle Spear\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\twildhunt: {\r\n\t\tname: \"Wild Hunt\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 120,\r\n\t\taccuracy: 85,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Power Whip\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tflytrap: {\r\n\t\tname: \"Flytrap\",\r\n\t\ttype: \"Grass\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 70,\r\n\t\taccuracy: 100,\r\n\t\tpp: 20,\r\n\t\tshortDesc: \"Super effective against Bug-types.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Snap Trap\", target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Bug') return 1;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\ttwineedle: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Hits 2-5 times. 20% chance to poison regardless of typing.\",\r\n\t\tmultihit: [2, 5],\r\n\t\tbeforeTurnCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('twineedle');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(target) {\r\n\t\t\t\ttarget.addVolatile('ability:corrosion');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\ttarget.removeVolatile('ability:corrosion');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\twariopicrosspuzzle4g: {\r\n\t\tname: \"Wario Picross Puzzle 4G\",\r\n\t\ttype: \"Rock\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 95,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"10% chance to Baseball the target.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Power Gem\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'baseball',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tblazeball: {\r\n\t\tname: \"Blazeball\",\r\n\t\ttype: \"Fire\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 160,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon === target || move.target === 'self') {\r\n\t\t\t\tthis.debug(\"BP halved in hitting self\");\r\n\t\t\t\treturn move.basePower / 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"User also hits self at half power.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Burn Up\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (source.hp && source.lastMove.target != 'self') {\r\n\t\t\t\tmove.target = 'self';\r\n\t\t\t\tthis.actions.useMove(move.id, source, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tperfectfreeze: {\r\n\t\tnum: -1012,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Perfect Freeze\",\r\n\t\tpp: 1,\r\n\t\tnoPPBoosts: true,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, recharge: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Sheer Cold', target);\r\n\t\t},\r\n\t\t/*mindBlownRecoil: true,\r\n\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\tif (move.mindBlownRecoil && !move.multihit) {\r\n\t\t\t\tconst hpBeforeRecoil = pokemon.hp;\r\n\t\t\t\tthis.damage(Math.round(pokemon.maxhp / 2), pokemon, pokemon, this.dex.conditions.get('Perfect Freeze'), true);\r\n\t\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && hpBeforeRecoil > pokemon.maxhp / 2) {\r\n\t\t\t\t\tthis.runEvent('EmergencyExit', pokemon, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},*/\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"100% chance to freeze. User must recharge.\",\r\n\r\n\t},\r\n\tenergytank: {\r\n\t\tname: \"Energy Tank\",\r\n\t\ttype: \"Steel\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Heals 1/3 max HP, Endure. Cannot be selected twice in a row.\",\r\n\t\tpriority: 3,\r\n\t\tflags: {snatch: 1, metronome: 1, cantusetwice: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Synthesis\", pokemon);\r\n\t\t},\r\n\t\theal: [1, 3],\r\n\t\tvolatileStatus: 'endure',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tzekromkick: {\r\n\t\tname: \"Zekrom Kick\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 45,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon.species.id === 'zekrom') return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"Zekrom: 2x power. Else transforms into Zekrom.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1, foot: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Thunderous Kick\", target);\r\n\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|shut up idiot \u30B8\u30A7\u30A4\u7D75\u30B8\u30A7 (ZEKROM KICK)`);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(target, source, move) {\r\n\t\t\tif (target.species.id !== 'zekrom') target.formeChange('Zekrom', this.effect, false, '0', '[msg]');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbakingblast: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Baking Blast\",\r\n\t\tshortDesc: \"+2 SpD on contact with user before it moves.\",\r\n\t\tpp: 15,\r\n\t\tpriority: -3,\r\n\t\tflags: {protect: 1, failmefirst: 1, nosleeptalk: 1, noassist: 1, failcopycat: 1, failinstruct: 1, bullet: 1},\r\n\t\tpriorityChargeCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('bakingblast');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singleturn', pokemon, 'move: Baking Blast');\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({def: 2, accuracy: 1}, target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\t// FIXME: onMoveAborted(pokemon) {pokemon.removeVolatile('beakblast')},\r\n\t\tonAfterMove(pokemon) {\r\n\t\t\tpokemon.removeVolatile('bakingblast');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Silly\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdeathgrip: {\r\n\t\tnum: 3015,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Prevents the target from using pivoting moves.\",\r\n\t\tname: \"Death Grip\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t    this.attrLastMove('[still]');\r\n\t\t    this.add('-anim', source, \"Octolock\", target);\r\n\t\t},\r\n\t\tvolatileStatus: 'deathgrip',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Death Grip');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\tif (move.selfSwitch) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t\r\n\t//slate 9\r\n\ttrumpcard: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(source, target, move) {\r\n\t\t\tconst callerMoveId = move.sourceEffect || move.id;\r\n\t\t\tconst moveSlot = callerMoveId === 'instruct' ? source.getMoveData(move.id) : source.getMoveData(callerMoveId);\r\n\t\t\tlet bp;\r\n\t\t\tif (!moveSlot) {\r\n\t\t\t\tbp = 40;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (moveSlot.pp) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tbp = 250;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tbp = 120;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tbp = 90;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tbp = 60;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbp = 40;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.debug('BP: ' + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tif (!source.side.trumpcard) source.side.trumpcard = 0;\r\n\t\t\tsource.side.trumpcard ++;\r\n\t\t\tconsole.log(source.name + \" \" + source.side.trumpcard);\r\n\t\t},\r\n\t},\r\n\tracism2: {\r\n\t\tname: \"Racism 2\",\r\n\t\ttype: \"Dark\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 82,\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"25% chance to transform the target into Ferrothorn for 3 turns.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Taunt\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 25,\r\n\t\t\tvolatileStatus: 'racism2',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 3,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.formeChange('Ferrothorn');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tpokemon.formeChange(pokemon.baseSpecies.name);\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tcitron: {\r\n\t\tname: \"Citron\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Hits all adjacent foes.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1,},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Overdrive\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t},\r\n\tcitronoverload: {\r\n\t\tname: \"CITRON OVERLOAD\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 145,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"Hits all adjacent foes. All Pokemon become Lemon-type.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {sound: 1},\r\n\t\tisZ: 'citroniumz',\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Boomburst\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tthis.add('-fieldactivate', 'move: CITRON OVERLOAD');\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif(pokemon.setType('Lemon')) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Lemon');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t},\r\n\teverstormhalberd: {\r\n\t\tname: \"Everstorm Halberd\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 0,\r\n\t\tdamageCallback(pokemon, target) {\r\n\t\t\tconst nonVanilla = [\"Anarlvet\",  \"Kingler-Mega\",  \"microwave\",  \"Lytlegai\",  \"Ohmyrod\",  \"Big Crammer\",  \"Samurott-Sinnoh\",  \"Goomba\",  \"Fridgile\",  \"Melmetal 2\",  \"Pidown\",  \"Kurayami\",  \"Zelda\",  \"Drigike\",  \"Phish\",  \"Smelmetal\",  \"Bondra\",  \"Tangette-Eternal\",  \"Donmigo\",  \"Dragoone\",  \"Collachet\",  \"Guiltrism\",  \"Swooliobat\",  \"Electrode-Mega\",  \"Mario Kart Wii\",  \"Impalpitoad\",  \"Scrubby\",  \"Ogerpon-Cornerstone\",  \"palpitoad is so cool\",  \"Moltres-Mega\",  \"Jirachitwo\",  \"Shinx-Fishing\",  \"Conquescape\",  \"Daiyakuza\",  \"Pokestar Fisherman\",  \"Magnegiri\",  \"mario\",  \"Contamicow\",  \"Whonhef\",  \"Fish Factory\",  \"cowboy_bandido\",  \"Pokestar Giant\",  \"Richard Petty\",  \"Impidimp-Mega\",  \"Lemon\",  \"Fishing Zombie\",  \"Pokestar MT\",  \"Margaret Thatcher\",  \"Flesh Valiant\",  \"Flesh Valiant-Mega\",  \"Ronald Reagan\",  \"Lime Lips\",  \"Lemotic\",  \"Zestii\",  \"Rawring Moon\",  \"Boogerpon-CLOWNerstone\",  \"Keisberg-IF\",  \"Apple's Newest Emoji\",  \"Lemon Fish\",  \"Goddease\",  \"Jableye\",  \"Kyrum\",  \"Raccoon\",  \"Lucario-Calm\",  \"Nedontrol\",  \"Princirang\",  \"Iron Clown\",  \"The Pearl Hand\",  \"McFish\",  \"Applwirm\",  \"minun and plusle :D\", \"Traike\", \"Dr. Liberty\", \"Sunflora-Grave\", \"Hydralemon\", \"Hiveweb\", \"Syndican\\'t\", \"Fish Marketing 3\", \"Lemonganium\", \"Carnivine-IF\", \"Grumpig\", \"Impromancer\", \"Pander Dragoon\", \"Soruarc\", \"Skibidragon\", \"Hitmontop-Mega\", \"Porygon-Z-Mega\", \"Furumo\", \"mega man\", \"Fudgesaur\", \"Fudgesaur-Mega\", \"darkpoison\", \"Sigma Rice Lion\", \"Lickilord\", \"Citrus Jams\", \"Everh\u00E1l\", \"Grimace\", \"Pyroaring\", \"Tyler the Creator\"];\r\n\t\t\treturn nonVanilla.includes(target.baseSpecies.name) ? 200 : 150;\r\n\t\t},\r\n\t\taccuracy: 90,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"Deals 150 damage; 200 to fakemon.\",\r\n\t\tpriority: -2,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Dragon Hammer\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tabsolutezero: {\r\n\t\tname: \"Absolute Zero\",\r\n\t\ttype: \"Ice\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 80,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Frigid Terrain: 1.5x power, lowers Speed by 2.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Sheer Cold\", target);\r\n\t\t},\r\n\t\tonBasePower(basePower, source) {\r\n\t\t\tif (this.field.isTerrain('frigidterrain') && source.isGrounded()) {\r\n\t\t\t\tthis.debug('terrain buff');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (this.field.isTerrain('frigidterrain') && source.isGrounded()) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: -2,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tyoshisisland: {\r\n\t\tname: \"Yoshi\\'s Island\",\r\n\t\ttype: \"Normal\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 180,\r\n\t\taccuracy: 100,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"Hits all adjacent Pokemon. User faints and gains 3 Fishing Tokens.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tselfdestruct: \"always\",\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Explosion\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tsource.side.addFishingTokens(3);\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source) {\r\n\t\t\tsource.side.addFishingTokens(3);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfuckaroundandfindout: {\r\n\t\tname: \"Fuck Around and Find Out\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 120,\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"Has 50% recoil unless it KOs the target.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\trecoil: [1, 2],\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tconst moves = this.dex.moves.all();\r\n\t\t\tthis.add('-anim', pokemon, this.sample(moves).name, target);\r\n\t\t},\r\n\t\tbeforeTurnCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('fuckaroundandfindout');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tnoCopy: true,\r\n\t\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t\tif (target.hp <= 0) {\r\n\t\t\t\t\tsource.addVolatile(\"ability:rockhead\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon){\r\n\t\t\t\tpokemon.removeVolatile(\"ability:rockhead\");\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\t'5bigdooms': {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 28,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"5 Big Dooms\",\r\n\t\tshortDesc: \"Hits 5 times, 2 turns after being used.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {metronome: 1, futuremove: 1},\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tmove: '5bigdooms',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: '5bigdooms',\r\n\t\t\t\t\tname: \"5 Big Dooms\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 28,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {metronome: 1, futuremove: 1},\r\n\t\t\t\t\tmultihit: 5,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Dark',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, '5 Big Dooms');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tsnagphone: {\r\n\t\tname: \"Snag Phone\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 20,\r\n\t\taccuracy: 100,\r\n\t\tpp: 20,\r\n\t\tshortDesc: \"Steals the target's item if user is not holding one. User switches out.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1},\r\n\t\tselfSwitch: true,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Thief\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (source.item || source.volatiles['gem']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\tif (!yourItem) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.singleEvent('TakeItem', yourItem, target.itemState, source, target, move, yourItem) ||\r\n\t\t\t\t!source.setItem(yourItem)) {\r\n\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-enditem', target, yourItem, '[silent]', '[from] move: Snag Phone', '[of] ' + source);\r\n\t\t\tthis.add('-item', source, yourItem, '[from] move: Snag Phone', '[of] ' + target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\t\r\n\t//slate 10\r\n\tlemonthrow: {\r\n\t\tname: \"Lemon Throw\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 25,\r\n\t\taccuracy: 90,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Hits 2-5 times.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Rock Blast\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\teatmyshorts: {\r\n\t\tname: \"Eat My Shorts!\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 85,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"For 2 turns, the target cannot use status moves.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Taunt\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (target.activeTurns && !this.queue.willMove(target)) {\r\n\t\t\t\t\tthis.effectState.duration!++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 15,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\tif (move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 5,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && !move.isMax && move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\tthis.add('cant', attacker, 'move: Taunt', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target) {\r\n\t\t\t\ttarget.addVolatile('eatmyshorts');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tcitrusrend: {\r\n\t\tname: \"Citrus Rend\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 70,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Fishious Rend damage boost');\r\n\t\t\t\treturn move.basePower * 1.6;\r\n\t\t\t}\r\n\t\t\tthis.debug('Fishious Rend NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\taccuracy: 100,\r\n\t\tpp: 15,\r\n\t\tshortDesc: \"1.6x power if user moves before the target.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bite: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Fishious Rend\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tdecoyanvil: {\r\n\t\tname: \"Decoy Anvil\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 110,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Lowers user's Sp. Atk by 1.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Rock Tomb\", target);\r\n\t\t\tthis.add('-anim', pokemon, \"Core Enforcer\", target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tanvildrop: {\r\n\t\tname: \"Anvil Drop\",\r\n\t\ttype: \"Steel\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"Hits in 2 turns. Sets Stealth Rock.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tmove: 'anvildrop',\r\n\t\t\t\tsource,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'anvildrop',\r\n\t\t\t\t\tname: \"Anvil Drop\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 80,\r\n\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: { allyanim: 1, metronome: 1, futuremove: 1 },\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Steel',\r\n\t\t\t\t\tonAfterHit(target, source, move) {\r\n\t\t\t\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\t\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Future Sight');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Doom Desire\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfishield: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fishield\",\r\n\t\tshortDesc: \"Protects from moves. Attack: +1 Fishing Token.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: { metronome: 1, noassist: 1, failcopycat: 1, fishing: 1},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'fishield',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'move: Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect']) {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t\ttarget.side.addFishingTokens(1);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered) {\r\n\t\t\t\t\ttarget.side.addFishingTokens(1);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tfloatsamhook: {\r\n\t\tname: \"Floatsam Hook\",\r\n\t\ttype: \"Water\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 75,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Has +1 crit ratio for each user's Fishing Token.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Liquidation\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tmove.critRatio = pokemon.side.fishingTokens;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tyouwantfun: {\r\n\t\tname: \"You Want Fun?!\",\r\n\t\ttype: \"Dark\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 65,\r\n\t\taccuracy: 95,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Forces the target to switch to a random ally.\",\r\n\t\tpriority: -6,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tforceSwitch: true,\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Pursuit\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tabominationsjig: {\r\n\t\tname: \"Abomination's Jig\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"30% chance to inflict Insanity on the target.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, dance: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Teeter Dance\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tvolatileStatus: 'insanity',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tcatchysong: {\r\n\t\tname: \"Catchy Song\",\r\n\t\ttype: \"Silly\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"Inflicts the target with Insanity.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Sing\", target);\r\n\t\t},\r\n\t\tvolatileStatus: 'insanity',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbravestbird: {\r\n\t\tname: \"Bravest Bird\",\r\n\t\ttype: \"Flying\",\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 150,\r\n\t\taccuracy: 100,\r\n\t\tpp: 1,\r\n\t\tnoPPBoosts: true,\r\n\t\tshortDesc: \"Has 50% recoil. 10% chance to burn.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\trecoil: [1, 2],\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Brave Bird\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbloomdesire: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Bloom Desire\",\r\n\t\tshortDesc: \"2 turns: 2/3 of user's max HP is restored, cure status.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, heal: 1, metronome: 1 },\r\n\t\tslotCondition: 'bloomdesire',\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Wish\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.effectState.hp = source.maxhp * 2/3;\r\n\t\t\t\tthis.effectState.turns = 2;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 4,\r\n\t\t\tonResidual(side) {\r\n\t\t\t\tif (this.effectState.turns === 0) side.removeSlotCondition(this.getAtSlot(this.effectState.sourceSlot), 'bloomdesire');\r\n\t\t\t\telse this.effectState.turns --;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tif (target && !target.fainted) {\r\n\t\t\t\t\tconst damage = this.heal(this.effectState.hp, target, target);\r\n\t\t\t\t\tif (damage) {\r\n\t\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] move: Bloom Desire', '[wisher] ' + this.effectState.source.name);\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: { boost: { spd: 1 } },\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tacidrain: {\r\n\t\tname: \"Acid Rain\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"For 5 turns, the weather becomes Acid Rain.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, metronome: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Rain Dance\", target);\r\n\t\t},\r\n\t\tweather: 'acidrain',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t},\r\n\tmakelemonade: {\r\n\t\tname: \"Make Lemonade\",\r\n\t\ttype: \"Lemon\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 5,\r\n\t\tshortDesc: \"Heals a weather-dependent amount. Lemon-type removed until turn ends.\",\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, heal: 1, metronome: 1 },\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\tcase 'acidrain':\r\n\t\t\t\t\tfactor = 0.667;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sunnyday':\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\tcase 'raindance':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\tcase 'sandstorm':\r\n\t\t\t\tcase 'hail':\r\n\t\t\t\tcase 'snowscape':\r\n\t\t\t\tcase 'graveyard':\r\n\t\t\t\t\tfactor = 0.333;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'makelemonade',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonResidualOrder: 25,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (target.terastallized) {\r\n\t\t\t\t\tif (target.hasType('Lemon')) {\r\n\t\t\t\t\t\tthis.add('-hint', \"If a Terastallized Pokemon uses Make Lemonade, it remains Lemon-type.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-singleturn', target, 'move: Make Lemonade');\r\n\t\t\t},\r\n\t\t\tonTypePriority: -1,\r\n\t\t\tonType(types, pokemon) {\r\n\t\t\t\tthis.effectState.typeWas = types;\r\n\t\t\t\treturn types.filter(type => type !== 'Lemon');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tfishmortar: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Fish Mortar\",\r\n\t\tshortDesc: \"Hits two turns after being used.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { allyanim: 1, metronome: 1, futuremove: 1 },\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tmove: 'fishmortar',\r\n\t\t\t\tsource,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'fishmortar',\r\n\t\t\t\t\tname: \"Fish Mortar\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 120,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: { allyanim: 1, metronome: 1, futuremove: 1 },\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Water',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Fish Mortar');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tstealthanvils: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Stealth Anvils\",\r\n\t\tshortDesc: \"Flattens the opponent upon entry.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1, nosketch: 1, snatch: 1},\r\n\t\tsideCondition: 'stealthanvils',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Stealth Anvils');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} was flattened!`);\r\n\t\t\t\tpokemon.addVolatile('flattened');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Steel\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t\r\n\t//silly shit\r\n\tattract: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tbind: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tconfide: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tconfuseray: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tconstrict: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tdoubleslap: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tfaketears: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tflatter: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tgrowl: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tharden: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\thealblock: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tlick: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tlovelykiss: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tmilkdrink: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tmindreader: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tpounce: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\trocksmash: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\troleplay: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tskittersmack: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tsleeptalk: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tsmackdown: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tsnarl: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tsubmission: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tswagger: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tswallow: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tsweetkiss: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\ttickle: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\ttopsyturvy: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\r\n\t//disaster shit\r\n\trockslide: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tearthquake: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tmagnitude: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tmuddywater: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tsurf: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\thurricane: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, distance: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tmove.accuracy = 50;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tthunder: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tmove.accuracy = 50;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tblizzard: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tmove.accuracy = 50;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdracometeor: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\theatwave: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tinferno: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\teruption: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tavalanche: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\twhirlwind: {\r\n\t\tinherit: true,\r\n\t\tflags: {reflectable: 1, mirror: 1, bypasssub: 1, allyanim: 1, metronome: 1, noassist: 1, failcopycat: 1, wind: 1, disaster: 1},\r\n\t},\r\n\tbleakwindstorm: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tsandsearstorm: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\twildboltstorm: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tlavaplume: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\ttwister: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\tmagmastorm: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, disaster: 1},\r\n\t},\r\n\t\r\n\t//foot shit\r\n\taxekick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tblazekick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tdoublekick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\thighjumpkick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tjumpkick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tmegakick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tpyroball: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tstomp: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tstompingtantrum: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tthunderouskick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\ttriplekick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\ttropkick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\trollingkick: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\tlowsweep: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, foot: 1},\r\n\t},\r\n\t\r\n\t//fake moves\r\n\tabomacarespikes: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Aboma Care Spikes\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1, nosketch: 1},\r\n\t\tsideCondition: 'abomacarespikes',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Aboma Care Spikes', '[silent]');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tthis.heal(pokemon.maxhp / 4);\r\n\t\t\t\tpokemon.side.removeSideCondition('abomacarespikes');\r\n\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Aboma Care Spikes', '[of] ' + pokemon, '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tmadnesscounter: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Madness Counter\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1, nosketch: 1},\r\n\t\tsideCondition: 'madnesscounter',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Madness Counter');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.baseSpecies.diamondHand) {\r\n\t\t\t\t\tif (pokemon.hasAbility('stillwater')) pokemon.side.addFishingTokens(3);\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bestStat = pokemon.getBestStat(true, true);\r\n\t\t\t\t\t\tthis.boost({[bestStat]: 1}, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition('madnesscounter');\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Madness Counter', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tclownnose: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Clown Nose\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1, nosketch: 1},\r\n\t\tvolatileStatus: 'clownnose',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} grew a clown nose!`);\r\n\t\t\t\tthis.add('-start', pokemon, 'Clown Nose', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\tfish: {\r\n\t\tname: \"Fish\",\r\n\t\ttype: \"Water\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"Designates Fish Pokemon\",\r\n\t\tviable: false,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tdiamondhand: {\r\n\t\tname: \"Diamond Hand\",\r\n\t\ttype: \"Normal\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"Designates Diamond Hand Pokemon\",\r\n\t\tviable: false,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\thoenn: {\r\n\t\tname: \"Hoenn\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"Designates Hoenn Pokemon\",\r\n\t\tviable: false,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\ttrans: {\r\n\t\tname: \"Trans\",\r\n\t\ttype: \"Normal\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"Designates Trans Pokemon\",\r\n\t\tviable: false,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tcopen: {\r\n\t\tname: \"Copen\",\r\n\t\ttype: \"Poison\",\r\n\t\tcategory: \"Status\",\r\n\t\tbasePower: 0,\r\n\t\taccuracy: true,\r\n\t\tpp: 1,\r\n\t\tshortDesc: \"Designates Copen Pokemon\",\r\n\t\tviable: false,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tinsanity: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Insanity\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1, nosketch: 1},\r\n\t\tvolatileStatus: 'insanity',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Insanity', '[silent]');\r\n\t\t\t},\r\n\t\t\tonAfterMove(source, target, move) {\r\n\t\t\t\tif(move.category !== 'Status') this.actions.useMove('chaospotion', source);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Silly\",\r\n\t},\r\n\r\n\t//vanilla moves\r\n\tnaturepower: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tlet move = 'triattack';\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove = 'thunderbolt';\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tmove = 'energyball';\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tmove = 'moonblast';\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove = 'psychic';\r\n\t\t\t} else if (this.field.isTerrain('fishingterrain')) {\r\n\t\t\t\tmove = 'fishingminigame';\r\n\t\t\t} else if (this.field.isTerrain('frigidterrain')) {\r\n\t\t\t\tmove = 'icebeam';\r\n\t\t\t}\r\n\t\t\tthis.actions.useMove(move, pokemon, {target});\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tsecretpower: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.isTerrain('')) return;\r\n\t\t\tmove.secondaries = [];\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'par',\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'slp',\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspa: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('fishingterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tonHit(target, source, move) {\r\n\t\t\t\t\t\tsource.side.addFishingTokens(1);\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('frigidterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'frz',\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t},\r\n\t},\r\n\tterrainpulse: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\tcase 'electricterrain':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grassyterrain':\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mistyterrain':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psychicterrain':\r\n\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fishingterrain':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frigidterrain':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfirepledge: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Sets Rainbow if Fishing Terrain is active.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isTerrain('fishingterrain')) move.sideCondition = 'waterpledge';\r\n\t\t},\r\n\t},\r\n\tgrasspledge: {\r\n\t\tinherit: true,\r\n\t\tisViable: true,\r\n\t\tshortDesc: \"Sets Swamp if Fishing Terrain is active.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isTerrain('fishingterrain')) move.sideCondition = 'grasspledge';\r\n\t\t},\r\n\t},\r\n\tskydrop: {\r\n\t\tinherit: true,\r\n\t\tonTry(source, target) {\r\n\t\t\treturn !target.fainted && !target.volatiles['bigbutton'];\r\n\t\t},\r\n\t},\r\n\tblazingtorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\twickedtorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tcombattorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tnoxioustorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tmagicaltorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tgmaxcuddle: null,\r\n\tweatherball: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'graveyard':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tmove.type = 'Lemon';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'graveyard':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t},\r\n\t},\r\n\tmorningsun: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'graveyard':\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tfactor = 0.25;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tsynthesis: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'graveyard':\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tfactor = 0.25;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tmoonlight: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\tcase 'graveyard':\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'acidrain':\r\n\t\t\t\tfactor = 0.25;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tstockpile: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\tthis.effectState.def = 0;\r\n\t\t\t\tthis.effectState.spd = 0;\r\n\t\t\t\tthis.add('-start', target, 'stockpile' + this.effectState.layers);\r\n\t\t\t\tif (effect.id === 'fisheater') return;\r\n\t\t\t\tconst [curDef, curSpD] = [target.boosts.def, target.boosts.spd];\r\n\t\t\t\tthis.boost({def: 1, spd: 1}, target, target);\r\n\t\t\t\tif (curDef !== target.boosts.def) this.effectState.def--;\r\n\t\t\t\tif (curSpD !== target.boosts.spd) this.effectState.spd--;\r\n\t\t\t},\r\n\t\t\tonRestart(target, source, effect) {\r\n\t\t\t\tif (this.effectState.layers >= 3) return false;\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t\tthis.add('-start', target, 'stockpile' + this.effectState.layers);\r\n\t\t\t\tif (effect.id === 'fisheater') return;\r\n\t\t\t\tconst curDef = target.boosts.def;\r\n\t\t\t\tconst curSpD = target.boosts.spd;\r\n\t\t\t\tthis.boost({def: 1, spd: 1}, target, target);\r\n\t\t\t\tif (curDef !== target.boosts.def) this.effectState.def--;\r\n\t\t\t\tif (curSpD !== target.boosts.spd) this.effectState.spd--;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tif (this.effectState.def || this.effectState.spd) {\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tif (this.effectState.def) boosts.def = this.effectState.def;\r\n\t\t\t\t\tif (this.effectState.spd) boosts.spd = this.effectState.spd;\r\n\t\t\t\t\tthis.boost(boosts, target, target);\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-end', target, 'Stockpile');\r\n\t\t\t\tif (this.effectState.def !== this.effectState.layers * -1 || this.effectState.spd !== this.effectState.layers * -1) {\r\n\t\t\t\t\tthis.hint(\"In Gen 7, Stockpile keeps track of how many times it successfully altered each stat individually.\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsolarbeam: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow', 'acidrain'];\r\n\t\t\tif (weakWeathers.includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('weakened by weather');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsolarblade: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow', 'acidrain'];\r\n\t\t\tif (weakWeathers.includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('weakened by weather');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tlightofruin: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tbaddybad: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tfling: {\r\n\t\tinherit: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (source.ignoringItem()) return false;\r\n\t\t\tconst item = source.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, source.itemState, source, source, move, item)) return false;\r\n\t\t\tif (!item.fling) return false;\r\n\t\t\t\r\n\t\t\tmove.basePower = item.fling.basePower;\r\n\t\t\tif (item.fling.damageCallback) move.damageCallback = item.fling.damageCallback;\r\n\t\t\tif (item.fling.multihit) move.multihit = item.fling.multihit;\r\n\t\t\tif (item.fling.priority) move.prioty = item.fling.priority;\r\n\t\t\t\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t\tif (item.isBerry) {\r\n\t\t\t\tmove.onHit = function (foe) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, foe, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', foe, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') foe.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) foe.ateBerry = true;\r\n\t\t\t\t};\r\n\t\t\t} else if (item.fling.effect) {\r\n\t\t\t\tmove.onHit = item.fling.effect;\r\n\t\t\t} else {\r\n\t\t\t\tif (!move.secondaries) {\r\n\t\t\t\t\tmove.secondaries = [];\r\n\t\t\t\t\tif (item.fling.status) {\r\n\t\t\t\t\tmove.secondaries.push({status: item.fling.status});\r\n\t\t\t\t\t} else if (item.fling.volatileStatus) {\r\n\t\t\t\t\t\tmove.secondaries.push({volatileStatus: item.fling.volatileStatus});\r\n\t\t\t\t\t} else if (item.fling.secondaries) {\r\n\t\t\t\t\t\tmove.secondaries.push(item.fling.secondary);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tsource.addVolatile('fling');\r\n\t\t},\r\n\t},\r\n\tgravity: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Persistent', '[move] Gravity');\r\n\t\t\t\t\treturn 7;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasItem('spacejamdvd')) {\r\n\t\t\t\t\tthis.add('-message', `${source.name} is ballin!`);\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonFieldStart(target, source) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Gravity', '[persistent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Gravity');\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tlet applies = false;\r\n\t\t\t\t\tif (pokemon.removeVolatile('bounce') || pokemon.removeVolatile('fly')) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['skydrop']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\r\n\t\t\t\t\t\tif (pokemon.volatiles['skydrop'].source) {\r\n\t\t\t\t\t\t\tthis.add('-end', pokemon.volatiles['twoturnmove'].source, 'Sky Drop', '[interrupt]');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpokemon.removeVolatile('skydrop');\r\n\t\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['magnetrise']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tdelete pokemon.volatiles['magnetrise'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['telekinesis']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tdelete pokemon.volatiles['telekinesis'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (applies) this.add('-activate', pokemon, 'move: Gravity');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyAccuracy(accuracy) {\r\n\t\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\t\treturn this.chainModify([6840, 4096]);\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['gravity']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// groundedness implemented in battle.engine.js:BattlePokemon#isGrounded\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (move.flags['gravity'] && !move.isZ) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Gravity', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (move.flags['gravity'] && !move.isZ) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Gravity', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 2,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Gravity');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmagicroom: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Persistent', '[move] Magic Room');\r\n\t\t\t\t\treturn 7;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasItem('spacejamdvd')) {\r\n\t\t\t\t\tthis.add('-message', `${source.name} is ballin!`);\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonFieldStart(target, source) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Magic Room', `[of] ${source}`, '[persistent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Magic Room', `[of] ${source}`);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const mon of this.getAllActive()) {\r\n\t\t\t\t\tthis.singleEvent('End', mon.getItem(), mon.itemState, mon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldRestart(target, source) {\r\n\t\t\t\tthis.field.removePseudoWeather('magicroom');\r\n\t\t\t},\r\n\t\t\t// Item suppression implemented in Pokemon.ignoringItem() within sim/pokemon.js\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 6,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Magic Room', '[of] ' + this.effectState.source);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\twonderroom: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Persistent', '[move] Wonder Room');\r\n\t\t\t\t\treturn 7;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasItem('spacejamdvd')) {\r\n\t\t\t\t\tthis.add('-message', `${source.name} is ballin!`);\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, source, target) {\r\n\t\t\t\t// This code is for moves that use defensive stats as the attacking stat; see below for most of the implementation\r\n\t\t\t\tif (!move.overrideOffensiveStat) return;\r\n\t\t\t\tconst statAndBoosts = move.overrideOffensiveStat;\r\n\t\t\t\tif (!['def', 'spd'].includes(statAndBoosts)) return;\r\n\t\t\t\tmove.overrideOffensiveStat = statAndBoosts === 'def' ? 'spd' : 'def';\r\n\t\t\t\tthis.hint(`${move.name} uses ${statAndBoosts === 'def' ? '' : 'Sp. '}Def boosts when Wonder Room is active.`);\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Wonder Room', `[of] ${source}`, '[persistent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Wonder Room', `[of] ${source}`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldRestart(target, source) {\r\n\t\t\t\tthis.field.removePseudoWeather('wonderroom');\r\n\t\t\t},\r\n\t\t\t// Swapping defenses partially implemented in sim/pokemon.js:Pokemon#calculateStat and Pokemon#getStat\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 5,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Wonder Room');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\treflect: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (source?.hasItem('lightclay')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasAbility('timebomb')) {\r\n\t\t\t\t\treturn 10;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonAnyModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (target !== source && this.effectState.target.hasAlly(target) && this.getCategory(move) === 'Physical') {\r\n\t\t\t\t\tif (!target.getMoveHitData(move).crit && !move.infiltrates) {\r\n\t\t\t\t\t\tthis.debug('Reflect weaken');\r\n\t\t\t\t\t\tif (this.activePerHalf > 1) return this.chainModify([2732, 4096]);\r\n\t\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Reflect');\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 1,\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'Reflect');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tlightscreen: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (source?.hasItem('lightclay')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasAbility('timebomb')) {\r\n\t\t\t\t\treturn 10;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonAnyModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (target !== source && this.effectState.target.hasAlly(target) && this.getCategory(move) === 'Special') {\r\n\t\t\t\t\tif (!target.getMoveHitData(move).crit && !move.infiltrates) {\r\n\t\t\t\t\t\tthis.debug('Light Screen weaken');\r\n\t\t\t\t\t\tif (this.activePerHalf > 1) return this.chainModify([2732, 4096]);\r\n\t\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Light Screen');\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 2,\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'move: Light Screen');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmetronome: {\r\n\t\tinherit: true,\r\n\t\tonAfterMove(pokemon) {\r\n\t\t\tif (pokemon && pokemon.hp && pokemon.lastMove === 'metronome' && pokemon.item === 'metronome') {\r\n\t\t\t\tif (!pokemon.metronome) pokemon.metronome = 0;\r\n\t\t\t\tpokemon.metronome ++;\r\n\t\t\t}\r\n\t\t\telse pokemon.metronome = 0;\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["source", "move", "target", "pokemon", "basePower"]
}
