{
  "version": 3,
  "sources": ["../../../../data/mods/ironfist/scripts.ts"],
  "sourcesContent": ["import {Dex} from '../../../sim/dex';\r\nexport const Scripts: {[k: string]: ModdedBattleScriptsData} = {\r\n\tgen: 9,\r\n\tteambuilderConfig: {\r\n\t\t// for micrometas to only show custom tiers\r\n\t\texcludeStandardTiers: true,\r\n\t\t// only to specify the order of custom tiers\r\n\t\tcustomTiers: ['Viable', 'Untested', 'Unviable'],\r\n\t},\t\r\n\t\r\n\tinit() {\r\n\t\tfor (const pokemon in Dex.data.Pokedex){\r\n\t\t\tif (pokemon in Dex.data.Learnsets && this.modData('Learnsets', pokemon).learnset) {\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.fishingterrain = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.holdhands = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.mewing = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.epicbeam = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.bigbash = [\"9L1\"];\r\n\t\t\t\tconst mon = Dex.species.get(pokemon);\r\n\t\t\t\tif (!mon.types.includes('Water') && !mon.types.includes('Steel')) this.modData(\"Learnsets\", pokemon).learnset.fisheater = [\"9L1\"];\r\n\t\t\t\tif (mon.fish) this.modData(\"Learnsets\", pokemon).learnset.fish = [\"9L1\"];\r\n\t\t\t\tif (mon.diamondhand) this.modData(\"Learnsets\", pokemon).learnset.diamondhand = [\"9L1\"];\r\n\t\t\t\tif (mon.hoenn || mon.gen === 3) this.modData(\"Learnsets\", pokemon).learnset.hoenn = [\"9L1\"];\r\n\t\t\t\tif (mon.trans) this.modData(\"Learnsets\", pokemon).learnset.trans = [\"9L1\"];\r\n\t\t\t\tif (mon.copen) this.modData(\"Learnsets\", pokemon).learnset.copen = [\"9L1\"];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbattle: {\r\n\t\trunAction(action: Action) {\r\n\t\t\tconst pokemonOriginalHP = action.pokemon?.hp;\r\n\t\t\tlet residualPokemon: (readonly [Pokemon, number])[] = [];\r\n\t\t\tconsole.log(action);\r\n\t\t\t// returns whether or not we ended in a callback\r\n\t\t\tswitch (action.choice) {\r\n\t\t\tcase 'start': {\r\n\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\tif (side.pokemonLeft) side.pokemonLeft = side.pokemon.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.add('start');\r\n\r\n\t\t\t\t// Change Zacian/Zamazenta into their Crowned formes\r\n\t\t\t\tfor (const pokemon of this.getAllPokemon()) {\r\n\t\t\t\t\tlet rawSpecies: Species | null = null;\r\n\t\t\t\t\tif (pokemon.species.id === 'zacian' && pokemon.item === 'rustedsword') {\r\n\t\t\t\t\t\trawSpecies = this.dex.species.get('Zacian-Crowned');\r\n\t\t\t\t\t} else if (pokemon.species.id === 'zamazenta' && pokemon.item === 'rustedshield') {\r\n\t\t\t\t\t\trawSpecies = this.dex.species.get('Zamazenta-Crowned');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!rawSpecies) continue;\r\n\t\t\t\t\tconst species = pokemon.setSpecies(rawSpecies);\r\n\t\t\t\t\tif (!species) continue;\r\n\t\t\t\t\tpokemon.baseSpecies = rawSpecies;\r\n\t\t\t\t\tpokemon.details = species.name + (pokemon.level === 100 ? '' : ', L' + pokemon.level) +\r\n\t\t\t\t\t\t(pokemon.gender === '' ? '' : ', ' + pokemon.gender) + (pokemon.set.shiny ? ', shiny' : '');\r\n\t\t\t\t\tpokemon.setAbility(species.abilities['0'], null, true);\r\n\t\t\t\t\tpokemon.baseAbility = pokemon.ability;\r\n\r\n\t\t\t\t\tconst behemothMove: {[k: string]: string} = {\r\n\t\t\t\t\t\t'Zacian-Crowned': 'behemothblade', 'Zamazenta-Crowned': 'behemothbash',\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst ironHead = pokemon.baseMoves.indexOf('ironhead');\r\n\t\t\t\t\tif (ironHead >= 0) {\r\n\t\t\t\t\t\tconst move = this.dex.moves.get(behemothMove[rawSpecies.name]);\r\n\t\t\t\t\t\tpokemon.baseMoveSlots[ironHead] = {\r\n\t\t\t\t\t\t\tmove: move.name,\r\n\t\t\t\t\t\t\tid: move.id,\r\n\t\t\t\t\t\t\tpp: (move.noPPBoosts || move.isZ) ? move.pp : move.pp * 8 / 5,\r\n\t\t\t\t\t\t\tmaxpp: (move.noPPBoosts || move.isZ) ? move.pp : move.pp * 8 / 5,\r\n\t\t\t\t\t\t\ttarget: move.target,\r\n\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\tdisabledSource: '',\r\n\t\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tpokemon.moveSlots = pokemon.baseMoveSlots.slice();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.format.onBattleStart) this.format.onBattleStart.call(this);\r\n\t\t\t\tfor (const rule of this.ruleTable.keys()) {\r\n\t\t\t\t\tif ('+*-!'.includes(rule.charAt(0))) continue;\r\n\t\t\t\t\tconst subFormat = this.dex.formats.get(rule);\r\n\t\t\t\t\tif (subFormat.onBattleStart) subFormat.onBattleStart.call(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\tfor (let i = 0; i < side.active.length; i++) {\r\n\t\t\t\t\t\tif (!side.pokemonLeft) {\r\n\t\t\t\t\t\t\t// forfeited before starting\r\n\t\t\t\t\t\t\tside.active[i] = side.pokemon[i];\r\n\t\t\t\t\t\t\tside.active[i].fainted = true;\r\n\t\t\t\t\t\t\tside.active[i].hp = 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.actions.switchIn(side.pokemon[i], i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pokemon of this.getAllPokemon()) {\r\n\t\t\t\t\tthis.singleEvent('Start', this.dex.conditions.getByID(pokemon.species.id), pokemon.speciesState, pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tthis.midTurn = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase 'move':\r\n\t\t\t\tif (!action.pokemon.isActive) return false;\r\n\t\t\t\tif (action.pokemon.fainted) return false;\r\n\t\t\t\tthis.actions.runMove(action.move, action.pokemon, action.targetLoc, action.sourceEffect,\r\n\t\t\t\t\taction.zmove, undefined, action.maxMove, action.originalTarget);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'megaEvo':\r\n\t\t\t\tthis.actions.runMegaEvo(action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'megaEvoX':\r\n\t\t\t\tthis.actions.runMegaEvoX?.(action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'megaEvoY':\r\n\t\t\t\tthis.actions.runMegaEvoY?.(action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'runDynamax':\r\n\t\t\t\taction.pokemon.addVolatile('bigbutton');\r\n\t\t\t\taction.pokemon.side.dynamaxUsed = false;\r\n\t\t\t\tif (action.pokemon.side.allySide) action.pokemon.side.allySide.dynamaxUsed = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'terastallize':\r\n\t\t\t\tthis.actions.terastallize(action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'beforeTurnMove':\r\n\t\t\t\tif (!action.pokemon.isActive) return false;\r\n\t\t\t\tif (action.pokemon.fainted) return false;\r\n\t\t\t\tthis.debug('before turn callback: ' + action.move.id);\r\n\t\t\t\tconst target = this.getTarget(action.pokemon, action.move, action.targetLoc);\r\n\t\t\t\tif (!target) return false;\r\n\t\t\t\tif (!action.move.beforeTurnCallback) throw new Error(`beforeTurnMove has no beforeTurnCallback`);\r\n\t\t\t\taction.move.beforeTurnCallback.call(this, action.pokemon, target);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'priorityChargeMove':\r\n\t\t\t\tif (!action.pokemon.isActive) return false;\r\n\t\t\t\tif (action.pokemon.fainted) return false;\r\n\t\t\t\tthis.debug('priority charge callback: ' + action.move.id);\r\n\t\t\t\tif (!action.move.priorityChargeCallback) throw new Error(`priorityChargeMove has no priorityChargeCallback`);\r\n\t\t\t\taction.move.priorityChargeCallback.call(this, action.pokemon);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'event':\r\n\t\t\t\tthis.runEvent(action.event!, action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'team':\r\n\t\t\t\tif (action.index === 0) {\r\n\t\t\t\t\taction.pokemon.side.pokemon = [];\r\n\t\t\t\t}\r\n\t\t\t\taction.pokemon.side.pokemon.push(action.pokemon);\r\n\t\t\t\taction.pokemon.position = action.index;\r\n\t\t\t\t// we return here because the update event would crash since there are no active pokemon yet\r\n\t\t\t\treturn;\r\n\r\n\t\t\tcase 'pass':\r\n\t\t\t\treturn;\r\n\t\t\tcase 'instaswitch':\r\n\t\t\tcase 'switch':\r\n\t\t\t\tif (action.choice === 'switch' && action.pokemon.status) {\r\n\t\t\t\t\tthis.singleEvent('CheckShow', this.dex.abilities.getByID('naturalcure' as ID), null, action.pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.actions.switchIn(action.target, action.pokemon.position, action.sourceEffect) === 'pursuitfaint') {\r\n\t\t\t\t\t// a pokemon fainted from Pursuit before it could switch\r\n\t\t\t\t\tif (this.gen <= 4) {\r\n\t\t\t\t\t\t// in gen 2-4, the switch still happens\r\n\t\t\t\t\t\tthis.hint(\"Previously chosen switches continue in Gen 2-4 after a Pursuit target faints.\");\r\n\t\t\t\t\t\taction.priority = -101;\r\n\t\t\t\t\t\tthis.queue.unshift(action);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// in gen 5+, the switch is cancelled\r\n\t\t\t\t\t\tthis.hint(\"A Pokemon can't switch between when it runs out of HP and when it faints\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'revivalblessing':\r\n\t\t\t\taction.pokemon.side.pokemonLeft++;\r\n\t\t\t\tif (action.target.position < action.pokemon.side.active.length) {\r\n\t\t\t\t\tthis.queue.addChoice({\r\n\t\t\t\t\t\tchoice: 'instaswitch',\r\n\t\t\t\t\t\tpokemon: action.target,\r\n\t\t\t\t\t\ttarget: action.target,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\taction.target.fainted = false;\r\n\t\t\t\taction.target.faintQueued = false;\r\n\t\t\t\taction.target.subFainted = false;\r\n\t\t\t\taction.target.status = '';\r\n\t\t\t\taction.target.hp = 1; // Needed so hp functions works\r\n\t\t\t\taction.target.sethp(action.target.maxhp / 2);\r\n\t\t\t\tthis.add('-heal', action.target, action.target.getHealth, '[from] move: Revival Blessing');\r\n\t\t\t\taction.pokemon.side.removeSlotCondition(action.pokemon, 'revivalblessing');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'epicbeam':\r\n\t\t\t\tconsole.log(\"runaction: \" + action.target.position + \" \" + action.pokemon.side.active.length);\r\n\t\t\t\taction.pokemon.side.pokemonLeft--;\r\n\t\t\t\tif (action.target.position < action.pokemon.side.active.length) {\r\n\t\t\t\t\tthis.queue.addChoice({\r\n\t\t\t\t\t\tchoice: 'instaswitch',\r\n\t\t\t\t\t\tpokemon: action.target,\r\n\t\t\t\t\t\ttarget: action.target,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\taction.target.fainted = true;\r\n\t\t\t\tthis.add('-faint', action.target, '[from] move: Epic Beam');\r\n\t\t\t\taction.pokemon.side.removeSlotCondition(action.pokemon, 'epicbeam');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'runUnnerve':\r\n\t\t\t\tthis.singleEvent('PreStart', action.pokemon.getAbility(), action.pokemon.abilityState, action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'runSwitch':\r\n\t\t\t\tthis.actions.runSwitch(action.pokemon);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'runPrimal':\r\n\t\t\t\tif (!action.pokemon.transformed) {\r\n\t\t\t\t\tthis.singleEvent('Primal', action.pokemon.getItem(), action.pokemon.itemState, action.pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shift':\r\n\t\t\t\tif (!action.pokemon.isActive) return false;\r\n\t\t\t\tif (action.pokemon.fainted) return false;\r\n\t\t\t\tthis.swapPosition(action.pokemon, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'beforeTurn':\r\n\t\t\t\tthis.eachEvent('BeforeTurn');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'residual':\r\n\t\t\t\tthis.add('');\r\n\t\t\t\tthis.clearActiveMove(true);\r\n\t\t\t\tthis.updateSpeed();\r\n\t\t\t\tresidualPokemon = this.getAllActive().map(pokemon => [pokemon, pokemon.getUndynamaxedHP()] as const);\r\n\t\t\t\tthis.residualEvent('Residual');\r\n\t\t\t\tthis.add('upkeep');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// phazing (Roar, etc)\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const pokemon of side.active) {\r\n\t\t\t\t\tif (pokemon.forceSwitchFlag) {\r\n\t\t\t\t\t\tif (pokemon.hp) this.actions.dragIn(pokemon.side, pokemon.position);\r\n\t\t\t\t\t\tpokemon.forceSwitchFlag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.clearActiveMove();\r\n\r\n\t\t\t// fainting\r\n\r\n\t\t\tthis.faintMessages();\r\n\t\t\tif (this.ended) return true;\r\n\r\n\t\t\t// switching (fainted pokemon, U-turn, Baton Pass, etc)\r\n\r\n\t\t\tif (!this.queue.peek() || (this.gen <= 3 && ['move', 'residual'].includes(this.queue.peek()!.choice))) {\r\n\t\t\t\t// in gen 3 or earlier, switching in fainted pokemon is done after\r\n\t\t\t\t// every move, rather than only at the end of the turn.\r\n\t\t\t\tthis.checkFainted();\r\n\t\t\t} else if (['megaEvo', 'megaEvoX', 'megaEvoY'].includes(action.choice) && this.gen === 7) {\r\n\t\t\t\tthis.eachEvent('Update');\r\n\t\t\t\t// In Gen 7, the action order is recalculated for a Pok\u00E9mon that mega evolves.\r\n\t\t\t\tfor (const [i, queuedAction] of this.queue.list.entries()) {\r\n\t\t\t\t\tif (queuedAction.pokemon === action.pokemon && queuedAction.choice === 'move') {\r\n\t\t\t\t\t\tthis.queue.list.splice(i, 1);\r\n\t\t\t\t\t\tqueuedAction.mega = 'done';\r\n\t\t\t\t\t\tthis.queue.insertChoice(queuedAction, true);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (this.queue.peek()?.choice === 'instaswitch') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gen >= 5) {\r\n\t\t\t\tthis.eachEvent('Update');\r\n\t\t\t\tfor (const [pokemon, originalHP] of residualPokemon) {\r\n\t\t\t\t\tconst maxhp = pokemon.getUndynamaxedHP(pokemon.maxhp);\r\n\t\t\t\t\tif (pokemon.hp && pokemon.getUndynamaxedHP() <= maxhp / 2 && originalHP > maxhp / 2) {\r\n\t\t\t\t\t\tthis.runEvent('EmergencyExit', pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (action.choice === 'runSwitch') {\r\n\t\t\t\tconst pokemon = action.pokemon;\r\n\t\t\t\tif (pokemon.hp && pokemon.hp <= pokemon.maxhp / 2 && pokemonOriginalHP! > pokemon.maxhp / 2) {\r\n\t\t\t\t\tthis.runEvent('EmergencyExit', pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst switches = this.sides.map(\r\n\t\t\t\tside => side.active.some(pokemon => pokemon && !!pokemon.switchFlag)\r\n\t\t\t);\r\n\r\n\t\t\tfor (let i = 0; i < this.sides.length; i++) {\r\n\t\t\t\tlet reviveSwitch = false; // Used to ignore the fake switch for Revival Blessing\r\n\t\t\t\tif (switches[i] && !this.canSwitch(this.sides[i])) {\r\n\t\t\t\t\tfor (const pokemon of this.sides[i].active) {\r\n\t\t\t\t\t\tif (this.sides[i].slotConditions[pokemon.position]['revivalblessing']) {\r\n\t\t\t\t\t\t\treviveSwitch = true;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpokemon.switchFlag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!reviveSwitch) switches[i] = false;\r\n\t\t\t\t} else if (switches[i]) {\r\n\t\t\t\t\tfor (const pokemon of this.sides[i].active) {\r\n\t\t\t\t\t\tif (pokemon.hp && pokemon.switchFlag && pokemon.switchFlag !== 'revivalblessing' &&\r\n\t\t\t\t\t\t\t\t!pokemon.skipBeforeSwitchOutEventFlag) {\r\n\t\t\t\t\t\t\tthis.runEvent('BeforeSwitchOut', pokemon);\r\n\t\t\t\t\t\t\tpokemon.skipBeforeSwitchOutEventFlag = true;\r\n\t\t\t\t\t\t\tthis.faintMessages(); // Pokemon may have fainted in BeforeSwitchOut\r\n\t\t\t\t\t\t\tif (this.ended) return true;\r\n\t\t\t\t\t\t\tif (pokemon.fainted) {\r\n\t\t\t\t\t\t\t\tswitches[i] = this.sides[i].active.some(sidePokemon => sidePokemon && !!sidePokemon.switchFlag);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (const playerSwitch of switches) {\r\n\t\t\t\tif (playerSwitch) {\r\n\t\t\t\t\tthis.makeRequest('switch');\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gen < 5) this.eachEvent('Update');\r\n\r\n\t\t\tif (this.gen >= 8 && (this.queue.peek()?.choice === 'move' || this.queue.peek()?.choice === 'runDynamax')) {\r\n\t\t\t\t// In gen 8, speed is updated dynamically so update the queue's speed properties and sort it.\r\n\t\t\t\tthis.updateSpeed();\r\n\t\t\t\tfor (const queueAction of this.queue.list) {\r\n\t\t\t\t\tif (queueAction.pokemon) this.getActionSpeed(queueAction);\r\n\t\t\t\t}\r\n\t\t\t\tthis.queue.sort();\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\theal(damage: number, target?: Pokemon, source: Pokemon | null = null, effect: 'drain' | Effect | null = null) {\r\n\t\t\tif (this.event) {\r\n\t\t\t\ttarget ||= this.event.target;\r\n\t\t\t\tsource ||= this.event.source;\r\n\t\t\t\teffect ||= this.effect;\r\n\t\t\t}\r\n\t\t\tif (effect === 'drain') effect = this.dex.conditions.getByID(effect as ID);\r\n\t\t\tif (damage && damage <= 1) damage = 1;\r\n\t\t\tdamage = this.trunc(damage);\r\n\t\t\t// for things like Liquid Ooze, the Heal event still happens when nothing is healed.\r\n\t\t\tdamage = this.runEvent('TryHeal', target, source, effect, damage);\r\n\t\t\tif (!damage) return damage;\r\n\t\t\tif (!target?.hp) return false;\r\n\t\t\tif (!target.isActive) return false;\r\n\t\t\tif (target.hp >= target.maxhp) return false;\r\n\t\t\tconst finalDamage = target.heal(damage, source, effect);\r\n\t\t\tswitch (effect?.id) {\r\n\t\t\tcase 'leechseed':\r\n\t\t\tcase 'rest':\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[silent]');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'drain':\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] drain', '[of] ' + source);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wish':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'zpower':\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[zeffect]');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (!effect) break;\r\n\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\tthis.add('-heal', target, target.getHealth);\r\n\t\t\t\t} else if (source && source !== target) {\r\n\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] ' + effect.fullname, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] ' + effect.fullname);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.runEvent('Heal', target, source, effect, finalDamage);\r\n\t\t\ttarget.addVolatile('healed');\r\n\t\t\treturn finalDamage;\r\n\t\t},\r\n\t},\r\n\tqueue: {\r\n\t\tresolveAction(action: ActionChoice, midTurn = false): Action[] {\r\n\t\tif (!action) throw new Error(`Action not passed to resolveAction`);\r\n\t\tif (action.choice === 'pass') return [];\r\n\t\tconst actions = [action];\r\n\r\n\t\tif (!action.side && action.pokemon) action.side = action.pokemon.side;\r\n\t\tif (!action.move && action.moveid) action.move = this.battle.dex.getActiveMove(action.moveid);\r\n\t\tif (!action.order) {\r\n\t\t\tconst orders: {[choice: string]: number} = {\r\n\t\t\t\tteam: 1,\r\n\t\t\t\tstart: 2,\r\n\t\t\t\tinstaswitch: 3,\r\n\t\t\t\tbeforeTurn: 4,\r\n\t\t\t\tbeforeTurnMove: 5,\r\n\t\t\t\trevivalblessing: 6,\r\n\t\t\t\tepicbeam: 6,\r\n\r\n\t\t\t\trunUnnerve: 100,\r\n\t\t\t\trunSwitch: 101,\r\n\t\t\t\trunPrimal: 102,\r\n\t\t\t\tswitch: 103,\r\n\t\t\t\tmegaEvo: 104,\r\n\t\t\t\tmegaEvoX: 104,\r\n\t\t\t\tmegaEvoY: 104,\r\n\t\t\t\trunDynamax: 105,\r\n\t\t\t\tterastallize: 106,\r\n\t\t\t\tpriorityChargeMove: 107,\r\n\r\n\t\t\t\tshift: 200,\r\n\t\t\t\t// default is 200 (for moves)\r\n\r\n\t\t\t\tresidual: 300,\r\n\t\t\t};\r\n\t\t\tif (action.choice in orders) {\r\n\t\t\t\taction.order = orders[action.choice];\r\n\t\t\t} else {\r\n\t\t\t\taction.order = 200;\r\n\t\t\t\tif (!['move', 'event'].includes(action.choice)) {\r\n\t\t\t\t\tthrow new Error(`Unexpected orderless action ${action.choice}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!midTurn) {\r\n\t\t\tif (action.choice === 'move') {\r\n\t\t\t\tif (!action.maxMove && !action.zmove && action.move.beforeTurnCallback) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'beforeTurnMove', pokemon: action.pokemon, move: action.move, targetLoc: action.targetLoc,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tif (action.mega && !action.pokemon.isSkyDropped()) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'megaEvo',\r\n\t\t\t\t\t\tpokemon: action.pokemon,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tif (action.megax && !action.pokemon.isSkyDropped()) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'megaEvoX',\r\n\t\t\t\t\t\tpokemon: action.pokemon,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tif (action.megay && !action.pokemon.isSkyDropped()) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'megaEvoY',\r\n\t\t\t\t\t\tpokemon: action.pokemon,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tif (action.terastallize && !action.pokemon.terastallized) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'terastallize',\r\n\t\t\t\t\t\tpokemon: action.pokemon,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tif (action.maxMove && !action.pokemon.volatiles['dynamax']) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'runDynamax',\r\n\t\t\t\t\t\tpokemon: action.pokemon,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tif (!action.maxMove && !action.zmove && action.move.priorityChargeCallback) {\r\n\t\t\t\t\tactions.unshift(...this.resolveAction({\r\n\t\t\t\t\t\tchoice: 'priorityChargeMove',\r\n\t\t\t\t\t\tpokemon: action.pokemon,\r\n\t\t\t\t\t\tmove: action.move,\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\taction.fractionalPriority = this.battle.runEvent('FractionalPriority', action.pokemon, null, action.move, 0);\r\n\t\t\t} else if (['switch', 'instaswitch'].includes(action.choice)) {\r\n\t\t\t\tif (typeof action.pokemon.switchFlag === 'string') {\r\n\t\t\t\t\taction.sourceEffect = this.battle.dex.moves.get(action.pokemon.switchFlag as ID) as any;\r\n\t\t\t\t}\r\n\t\t\t\taction.pokemon.switchFlag = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst deferPriority = this.battle.gen === 7 && action.mega && action.mega !== 'done';\r\n\t\tif (action.move) {\r\n\t\t\tlet target = null;\r\n\t\t\taction.move = this.battle.dex.getActiveMove(action.move);\r\n\r\n\t\t\tif (!action.targetLoc) {\r\n\t\t\t\ttarget = this.battle.getRandomTarget(action.pokemon, action.move);\r\n\t\t\t\t// TODO: what actually happens here?\r\n\t\t\t\tif (target) action.targetLoc = action.pokemon.getLocOf(target);\r\n\t\t\t}\r\n\t\t\taction.originalTarget = action.pokemon.getAtLoc(action.targetLoc);\r\n\t\t}\r\n\t\tif (!deferPriority) this.battle.getActionSpeed(action);\r\n\t\treturn actions as any;\r\n\t}\r\n\t},\r\n\tactions: {\r\n\t\tcanTerastallize(pokemon: Pokemon) {\r\n\t\t\tif (pokemon.getItem().zMove || pokemon.canMegaEvo || this.dex.gen !== 9 || pokemon.volatiles['bigbutton']) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn pokemon.teraType;\r\n\t\t},\r\n\r\n\t\tterastallize(pokemon: Pokemon) {\r\n\t\t\tif (pokemon.volatiles['bigbutton']) return;\r\n\t\t\tif (pokemon.illusion && ['Ogerpon', 'Terapagos'].includes(pokemon.illusion.species.baseSpecies)) {\r\n\t\t\t\tthis.battle.singleEvent('End', this.dex.abilities.get('Illusion'), pokemon.abilityState, pokemon);\r\n\t\t\t}\r\n\r\n\t\t\tlet type = pokemon.teraType;\r\n\t\t\tlet canTera = false;\r\n\t\t\tif (pokemon.set.ability === 'I Love Fishing') {\r\n\t\t\t\tcanTera = true;\r\n\t\t\t\ttype = 'Water';\r\n\t\t\t}\r\n\t\t\tif (pokemon.set.ability === 'Racer\\'s Spirit') {\r\n\t\t\t\tcanTera = true;\r\n\t\t\t\ttype = 'Steel';\r\n\t\t\t}\r\n\t\t\tif (type === 'Bug' || canTera) {\r\n\t\t\t\tthis.battle.add('-terastallize', pokemon, type);\r\n\t\t\t\tpokemon.terastallized = type;\r\n\t\t\t\tfor (const ally of pokemon.side.pokemon) {\r\n\t\t\t\t\tif (ally.teraType === 'Bug') ally.canTerastallize = null;\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.addedType = '';\r\n\t\t\t\tpokemon.knownType = true;\r\n\t\t\t\tpokemon.apparentType = type;\r\n\t\t\t\tif (pokemon.species.baseSpecies === 'Ogerpon') {\r\n\t\t\t\t\tconst tera = pokemon.species.id === 'ogerpon' ? 'tealtera' : 'tera';\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.id + tera, null, true);\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.species.name === 'Terapagos-Terastal' && type === 'Stellar') {\r\n\t\t\t\t\tpokemon.formeChange('Terapagos-Stellar', null, true);\r\n\t\t\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\t\t\tconst newMaxHP = pokemon.baseMaxhp;\r\n\t\t\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\t\t\tthis.battle.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tthis.battle.runEvent('AfterTerastallization', pokemon);\r\n\t\t\t} else pokemon.addVolatile('bigbutton');\r\n\t\t},\r\n\t\r\n\t\tmodifyDamage(\r\n\t\tbaseDamage: number, pokemon: Pokemon, target: Pokemon, move: ActiveMove, suppressMessages = false\r\n\t\t) {\r\n\t\t\tconst tr = this.battle.trunc;\r\n\t\t\tif (!move.type) move.type = '???';\r\n\t\t\tconst type = move.type;\r\n\r\n\t\t\tbaseDamage += 2;\r\n\r\n\t\t\tif (move.spreadHit) {\r\n\t\t\t\t// multi-target modifier (doubles only)\r\n\t\t\t\tconst spreadModifier = move.spreadModifier || (this.battle.gameType === 'freeforall' ? 0.5 : 0.75);\r\n\t\t\t\tthis.battle.debug('Spread modifier: ' + spreadModifier);\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, spreadModifier);\r\n\t\t\t\tif (move.multihitType === 'bestfriends') {\r\n\t\t\t\t\t// Best Friends modifier\r\n\t\t\t\t\tthis.battle.debug(\"Best Friends modifier: 0.33\");\r\n\t\t\t\t\tbaseDamage = this.battle.modify(baseDamage, 0.33);\r\n\t\t\t\t}\r\n\t\t\t} else if (move.multihitType === 'parentalbond' && move.hit > 1) {\r\n\t\t\t\t// Parental Bond modifier\r\n\t\t\t\tconst bondModifier = this.battle.gen > 6 ? 0.25 : 0.5;\r\n\t\t\t\tthis.battle.debug(`Parental Bond modifier: ${bondModifier}`);\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, bondModifier);\r\n\t\t\t} else if (move.multihitType === 'bestfriends') {\r\n\t\t\t\t// Best Friends modifier\r\n\t\t\t\tthis.battle.debug(\"Best Friends modifier: 0.33\");\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, 0.33);\r\n\t\t\t}\r\n\r\n\t\t\t// weather modifier\r\n\t\t\tbaseDamage = this.battle.runEvent('WeatherModifyDamage', pokemon, target, move, baseDamage);\r\n\r\n\t\t\t// crit - not a modifier\r\n\t\t\tconst isCrit = target.getMoveHitData(move).crit;\r\n\t\t\tif (isCrit) {\r\n\t\t\t\tbaseDamage = tr(baseDamage * (move.critModifier || (this.battle.gen >= 6 ? 1.5 : 2)));\r\n\t\t\t}\r\n\r\n\t\t\t// random factor - also not a modifier\r\n\t\t\tbaseDamage = this.battle.randomizer(baseDamage);\r\n\r\n\t\t\t// STAB\r\n\t\t\t// The \"???\" type never gets STAB\r\n\t\t\t// Not even if you Roost in Gen 4 and somehow manage to use\r\n\t\t\t// Struggle in the same turn.\r\n\t\t\t// (On second thought, it might be easier to get a MissingNo.)\r\n\t\t\tif (type !== '???') {\r\n\t\t\t\tlet stab: number | [number, number] = 1;\r\n\r\n\t\t\t\tconst isSTAB = move.forceSTAB || pokemon.hasType(type) || pokemon.getTypes(false, true).includes(type);\r\n\t\t\t\tif (isSTAB) {\r\n\t\t\t\t\tstab = 1.5;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The Stellar tera type makes this incredibly confusing\r\n\t\t\t\t// If the move's type does not match one of the user's base types,\r\n\t\t\t\t// the Stellar tera type applies a one-time 1.2x damage boost for that type.\r\n\t\t\t\t//\r\n\t\t\t\t// If the move's type does match one of the user's base types,\r\n\t\t\t\t// then the Stellar tera type applies a one-time 2x STAB boost for that type,\r\n\t\t\t\t// and then goes back to using the regular 1.5x STAB boost for those types.\r\n\t\t\t\tif (pokemon.terastallized === 'Stellar') {\r\n\t\t\t\t\tif (!pokemon.stellarBoostedTypes.includes(type) || move.stellarBoosted) {\r\n\t\t\t\t\t\tstab = isSTAB ? 2 : [4915, 4096];\r\n\t\t\t\t\t\tmove.stellarBoosted = true;\r\n\t\t\t\t\t\tif (pokemon.species.name !== 'Terapagos-Stellar') {\r\n\t\t\t\t\t\t\tpokemon.stellarBoostedTypes.push(type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (pokemon.terastallized === type && pokemon.getTypes(false, true).includes(type)) {\r\n\t\t\t\t\t\tstab = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstab = this.battle.runEvent('ModifySTAB', pokemon, target, move, stab);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, stab);\r\n\t\t\t}\r\n\r\n\t\t\t// types\r\n\t\t\tlet typeMod = target.runEffectiveness(move);\r\n\t\t\ttypeMod = this.battle.clampIntRange(typeMod, -6, 6);\r\n\t\t\ttarget.getMoveHitData(move).typeMod = typeMod;\r\n\t\t\tif (typeMod > 0) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-supereffective', target);\r\n\r\n\t\t\t\tfor (let i = 0; i < typeMod; i++) {\r\n\t\t\t\t\tbaseDamage *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeMod < 0) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-resisted', target);\r\n\r\n\t\t\t\tfor (let i = 0; i > typeMod; i--) {\r\n\t\t\t\t\tbaseDamage = tr(baseDamage / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCrit && !suppressMessages) this.battle.add('-crit', target);\r\n\r\n\t\t\tif (pokemon.status === 'brn' && move.category === 'Physical' && !pokemon.hasAbility('guts')) {\r\n\t\t\t\tif (this.battle.gen < 6 || move.id !== 'facade') {\r\n\t\t\t\t\tbaseDamage = this.battle.modify(baseDamage, 0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Generation 5, but nothing later, sets damage to 1 before the final damage modifiers\r\n\t\t\tif (this.battle.gen === 5 && !baseDamage) baseDamage = 1;\r\n\r\n\t\t\t// Final modifier. Modifiers that modify damage after min damage check, such as Life Orb.\r\n\t\t\tbaseDamage = this.battle.runEvent('ModifyDamage', pokemon, target, move, baseDamage);\r\n\r\n\t\t\tif (move.isZOrMaxPowered && target.getMoveHitData(move).zBrokeProtect) {\r\n\t\t\t\tbaseDamage = this.battle.modify(baseDamage, 0.25);\r\n\t\t\t\tthis.battle.add('-zbroken', target);\r\n\t\t\t}\r\n\r\n\t\t\t// Generation 6-7 moves the check for minimum 1 damage after the final modifier...\r\n\t\t\tif (this.battle.gen !== 5 && !baseDamage) return 1;\r\n\r\n\t\t\t// ...but 16-bit truncation happens even later, and can truncate to 0\r\n\t\t\treturn tr(baseDamage, 16);\r\n\t\t},\r\n\t\t\r\n\t\tgetZMove(move: Move, pokemon: Pokemon, skipChecks?: boolean): string | undefined {\r\n\t\t\tconst Z_MOVES: {readonly [k: string]: string} = {\r\n\t\t\t\tPoison: \"Acid Downpour\",\r\n\t\t\t\tFighting: \"All-Out Pummeling\",\r\n\t\t\t\tDark: \"Black Hole Eclipse\",\r\n\t\t\t\tGrass: \"Bloom Doom\",\r\n\t\t\t\tNormal: \"Breakneck Blitz\",\r\n\t\t\t\tRock: \"Continental Crush\",\r\n\t\t\t\tSteel: \"Corkscrew Crash\",\r\n\t\t\t\tDragon: \"Devastating Drake\",\r\n\t\t\t\tElectric: \"Gigavolt Havoc\",\r\n\t\t\t\tWater: \"Hydro Vortex\",\r\n\t\t\t\tFire: \"Inferno Overdrive\",\r\n\t\t\t\tGhost: \"Never-Ending Nightmare\",\r\n\t\t\t\tBug: \"Savage Spin-Out\",\r\n\t\t\t\tPsychic: \"Shattered Psyche\",\r\n\t\t\t\tIce: \"Subzero Slammer\",\r\n\t\t\t\tFlying: \"Supersonic Skystrike\",\r\n\t\t\t\tGround: \"Tectonic Rage\",\r\n\t\t\t\tFairy: \"Twinkle Tackle\",\r\n\t\t\t\tStellar: \"Tera Triple Basedball Barrage\",\r\n\t\t\t};\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (!skipChecks) {\r\n\t\t\t\tif (pokemon.side.zMoveUsed) return;\r\n\t\t\t\tif (!item.zMove) return;\r\n\t\t\t\tif (item.itemUser && !item.itemUser.includes(pokemon.species.name)) return;\r\n\t\t\t\tconst moveData = pokemon.getMoveData(move);\r\n\t\t\t\t// Draining the PP of the base move prevents the corresponding Z-move from being used.\r\n\t\t\t\tif (!moveData?.pp) return;\r\n\t\t\t}\r\n\r\n\t\t\tif (item.zMoveFrom) {\r\n\t\t\t\tif (move.name === item.zMoveFrom) return item.zMove as string;\r\n\t\t\t} else if (item.zMove === true) {\r\n\t\t\t\tif (move.type === item.zMoveType || item.name === 'Stellarium Z') {\r\n\t\t\t\t\tif (move.category === \"Status\") {\r\n\t\t\t\t\t\treturn move.name;\r\n\t\t\t\t\t} else if (move.zMove?.basePower) {\r\n\t\t\t\t\t\tif (item.name === 'Stellarium Z') return \"Tera Triple Basedball Barrage\";\r\n\t\t\t\t\t\telse return Z_MOVES[move.type];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetActiveZMove(move: Move, pokemon: Pokemon): ActiveMove {\r\n\t\t\tconst Z_MOVES: {readonly [k: string]: string} = {\r\n\t\t\t\tPoison: \"Acid Downpour\",\r\n\t\t\t\tFighting: \"All-Out Pummeling\",\r\n\t\t\t\tDark: \"Black Hole Eclipse\",\r\n\t\t\t\tGrass: \"Bloom Doom\",\r\n\t\t\t\tNormal: \"Breakneck Blitz\",\r\n\t\t\t\tRock: \"Continental Crush\",\r\n\t\t\t\tSteel: \"Corkscrew Crash\",\r\n\t\t\t\tDragon: \"Devastating Drake\",\r\n\t\t\t\tElectric: \"Gigavolt Havoc\",\r\n\t\t\t\tWater: \"Hydro Vortex\",\r\n\t\t\t\tFire: \"Inferno Overdrive\",\r\n\t\t\t\tGhost: \"Never-Ending Nightmare\",\r\n\t\t\t\tBug: \"Savage Spin-Out\",\r\n\t\t\t\tPsychic: \"Shattered Psyche\",\r\n\t\t\t\tIce: \"Subzero Slammer\",\r\n\t\t\t\tFlying: \"Supersonic Skystrike\",\r\n\t\t\t\tGround: \"Tectonic Rage\",\r\n\t\t\t\tFairy: \"Twinkle Tackle\",\r\n\t\t\t\tStellar: \"Tera Triple Basedball Barrage\",\r\n\t\t\t};\r\n\t\t\tlet item;\r\n\t\t\tif (pokemon) {\r\n\t\t\t\titem = pokemon.getItem();\r\n\t\t\t\tif (move.name === item.zMoveFrom) {\r\n\t\t\t\t\tconst zMove = this.dex.getActiveMove(item.zMove as string);\r\n\t\t\t\t\tzMove.isZOrMaxPowered = true;\r\n\t\t\t\t\treturn zMove;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tconst zMove = this.dex.getActiveMove(move);\r\n\t\t\t\tzMove.isZ = true;\r\n\t\t\t\tzMove.isZOrMaxPowered = true;\r\n\t\t\t\treturn zMove;\r\n\t\t\t}\r\n\t\t\tlet zMove = this.dex.getActiveMove(Z_MOVES[move.type]);\r\n\t\t\tif(item && item.name === 'Stellarium Z') zMove = this.dex.getActiveMove(\"Tera Triple Basedball Barrage\");\r\n\t\t\tzMove.basePower = move.zMove!.basePower!;\r\n\t\t\tzMove.category = move.category;\r\n\t\t\t// copy the priority for Quick Guard\r\n\t\t\tzMove.priority = move.priority;\r\n\t\t\tzMove.isZOrMaxPowered = true;\r\n\t\t\treturn zMove;\r\n\t\t},\r\n\t\t\r\n\t\tcanZMove(pokemon: Pokemon) {\r\n\t\t\tif (pokemon.side.zMoveUsed ||\r\n\t\t\t\t(pokemon.transformed &&\r\n\t\t\t\t\t(pokemon.species.isMega || pokemon.species.isPrimal || pokemon.species.forme === \"Ultra\"))\r\n\t\t\t) return;\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (!item.zMove) return;\r\n\t\t\tif (item.itemUser && !item.itemUser.includes(pokemon.species.name)) return;\r\n\t\t\tlet atLeastOne = false;\r\n\t\t\tlet mustStruggle = true;\r\n\t\t\tconst zMoves: ZMoveOptions = [];\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.pp <= 0) {\r\n\t\t\t\t\tzMoves.push(null);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!moveSlot.disabled) {\r\n\t\t\t\t\tmustStruggle = false;\r\n\t\t\t\t}\r\n\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\tlet zMoveName = this.getZMove(move, pokemon, true) || '';\r\n\t\t\t\tif (zMoveName) {\r\n\t\t\t\t\tconst zMove = this.dex.moves.get(zMoveName);\r\n\t\t\t\t\tif (!zMove.isZ && zMove.category === 'Status') zMoveName = \"Z-\" + zMoveName;\r\n\t\t\t\t\tzMoves.push({move: zMoveName, target: zMove.target});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tzMoves.push(null);\r\n\t\t\t\t}\r\n\t\t\t\tif (zMoveName) atLeastOne = true;\r\n\t\t\t}\r\n\t\t\tif (atLeastOne && !mustStruggle) return zMoves;\r\n\t\t},\r\n\t\r\n\t\thitStepMoveHitLoop(targets: Pokemon[], pokemon: Pokemon, move: ActiveMove) { // Temporary name\r\n\t\t\tlet damage: (number | boolean | undefined)[] = [];\r\n\t\t\tfor (const i of targets.keys()) {\r\n\t\t\t\tdamage[i] = 0;\r\n\t\t\t}\r\n\t\t\tmove.totalDamage = 0;\r\n\t\t\tpokemon.lastDamage = 0;\r\n\t\t\tlet targetHits = move.multihit || 1;\r\n\t\t\tif (Array.isArray(targetHits)) {\r\n\t\t\t\t// yes, it's hardcoded... meh\r\n\t\t\t\tif (targetHits[0] === 2 && targetHits[1] === 5) {\r\n\t\t\t\t\tif (this.battle.gen >= 5) {\r\n\t\t\t\t\t\t// 35-35-15-15 out of 100 for 2-3-4-5 hits\r\n\t\t\t\t\t\ttargetHits = this.battle.sample([2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5]);\r\n\t\t\t\t\t\tif (targetHits < 4 && pokemon.hasItem('loadeddice')) {\r\n\t\t\t\t\t\t\ttargetHits = 5 - this.battle.random(2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttargetHits = this.battle.sample([2, 2, 2, 3, 3, 3, 4, 5]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttargetHits = this.battle.random(targetHits[0], targetHits[1] + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (targetHits === 10 && pokemon.hasItem('loadeddice')) targetHits -= this.battle.random(7);\r\n\t\t\ttargetHits = Math.floor(targetHits);\r\n\t\t\tlet nullDamage = true;\r\n\t\t\tlet moveDamage: (number | boolean | undefined)[] = [];\r\n\t\t\t// There is no need to recursively check the \u00B4sleepUsable\u00B4 flag as Sleep Talk can only be used while asleep.\r\n\t\t\tconst isSleepUsable = move.sleepUsable || this.dex.moves.get(move.sourceEffect).sleepUsable;\r\n\r\n\t\t\tlet targetsCopy: (Pokemon | false | null)[] = targets.slice(0);\r\n\t\t\tlet hit: number;\r\n\t\t\tfor (hit = 1; hit <= targetHits; hit++) {\r\n\t\t\t\tif (damage.includes(false)) break;\r\n\t\t\t\tif (hit > 1 && pokemon.status === 'slp' && (!isSleepUsable || this.battle.gen === 4)) break;\r\n\t\t\t\tif (targets.every(target => !target?.hp)) break;\r\n\t\t\t\tmove.hit = hit;\r\n\t\t\t\tif (move.smartTarget && targets.length > 1) {\r\n\t\t\t\t\ttargetsCopy = [targets[hit - 1]];\r\n\t\t\t\t\tdamage = [damage[hit - 1]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttargetsCopy = targets.slice(0);\r\n\t\t\t\t}\r\n\t\t\t\tconst target = targetsCopy[0]; // some relevant-to-single-target-moves-only things are hardcoded\r\n\t\t\t\tif (target && typeof move.smartTarget === 'boolean') {\r\n\t\t\t\t\tif (hit > 1) {\r\n\t\t\t\t\t\tthis.battle.addMove('-anim', pokemon, move.name, target);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.battle.retargetLastMove(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// like this (Triple Kick)\r\n\t\t\t\tif (target && move.multiaccuracy && hit > 1) {\r\n\t\t\t\t\tlet accuracy = move.accuracy;\r\n\t\t\t\t\tconst boostTable = [1, 4 / 3, 5 / 3, 2, 7 / 3, 8 / 3, 3];\r\n\t\t\t\t\tif (accuracy !== true) {\r\n\t\t\t\t\t\tif (!move.ignoreAccuracy) {\r\n\t\t\t\t\t\t\tconst boosts = this.battle.runEvent('ModifyBoost', pokemon, null, null, {...pokemon.boosts});\r\n\t\t\t\t\t\t\tconst boost = this.battle.clampIntRange(boosts['accuracy'], -6, 6);\r\n\t\t\t\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\t\t\t\taccuracy *= boostTable[boost];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\taccuracy /= boostTable[-boost];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!move.ignoreEvasion) {\r\n\t\t\t\t\t\t\tconst boosts = this.battle.runEvent('ModifyBoost', target, null, null, {...target.boosts});\r\n\t\t\t\t\t\t\tconst boost = this.battle.clampIntRange(boosts['evasion'], -6, 6);\r\n\t\t\t\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\t\t\t\taccuracy /= boostTable[boost];\r\n\t\t\t\t\t\t\t} else if (boost < 0) {\r\n\t\t\t\t\t\t\t\taccuracy *= boostTable[-boost];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\taccuracy = this.battle.runEvent('ModifyAccuracy', target, pokemon, move, accuracy);\r\n\t\t\t\t\tif (!move.alwaysHit) {\r\n\t\t\t\t\t\taccuracy = this.battle.runEvent('Accuracy', target, pokemon, move, accuracy);\r\n\t\t\t\t\t\tif (accuracy !== true && !this.battle.randomChance(accuracy, 100)) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst moveData = move;\r\n\t\t\t\tif (!moveData.flags) moveData.flags = {};\r\n\r\n\t\t\t\tlet moveDamageThisHit;\r\n\t\t\t\t// Modifies targetsCopy (which is why it's a copy)\r\n\t\t\t\t[moveDamageThisHit, targetsCopy] = this.spreadMoveHit(targetsCopy, pokemon, move, moveData);\r\n\t\t\t\t// When Dragon Darts targets two different pokemon, targetsCopy is a length 1 array each hit\r\n\t\t\t\t// so spreadMoveHit returns a length 1 damage array\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmoveDamage.push(...moveDamageThisHit);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmoveDamage = moveDamageThisHit;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!moveDamage.some(val => val !== false)) break;\r\n\t\t\t\tnullDamage = false;\r\n\r\n\t\t\t\tfor (const [i, md] of moveDamage.entries()) {\r\n\t\t\t\t\tif (move.smartTarget && i !== hit - 1) continue;\r\n\t\t\t\t\t// Damage from each hit is individually counted for the\r\n\t\t\t\t\t// purposes of Counter, Metal Burst, and Mirror Coat.\r\n\t\t\t\t\tdamage[i] = md === true || !md ? 0 : md;\r\n\t\t\t\t\t// Total damage dealt is accumulated for the purposes of recoil (Parental Bond).\r\n\t\t\t\t\tmove.totalDamage += damage[i] as number;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.mindBlownRecoil) {\r\n\t\t\t\t\tconst hpBeforeRecoil = pokemon.hp;\r\n\t\t\t\t\tthis.battle.damage(Math.round(pokemon.maxhp / 2), pokemon, pokemon, this.dex.conditions.get(move.id), true);\r\n\t\t\t\t\tmove.mindBlownRecoil = false;\r\n\t\t\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && hpBeforeRecoil > pokemon.maxhp / 2) {\r\n\t\t\t\t\t\tthis.battle.runEvent('EmergencyExit', pokemon, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.battle.eachEvent('Update');\r\n\t\t\t\tif (!move.flags['futuremove'] && !pokemon.hp && targets.length === 1) {\r\n\t\t\t\t\thit++; // report the correct number of hits for multihit moves\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// hit is 1 higher than the actual hit count\r\n\t\t\tif (hit === 1) return damage.fill(false);\r\n\t\t\tif (nullDamage) damage.fill(false);\r\n\t\t\tthis.battle.faintMessages(false, false, !pokemon.hp);\r\n\t\t\tif (move.multihit && typeof move.smartTarget !== 'boolean') {\r\n\t\t\t\tthis.battle.add('-hitcount', targets[0], hit - 1);\r\n\t\t\t}\r\n\r\n\t\t\tif ((move.recoil || move.id === 'chloroblast') && move.totalDamage) {\r\n\t\t\t\tconst hpBeforeRecoil = pokemon.hp;\r\n\t\t\t\tthis.battle.damage(this.calcRecoilDamage(move.totalDamage, move, pokemon), pokemon, pokemon, 'recoil');\r\n\t\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && hpBeforeRecoil > pokemon.maxhp / 2) {\r\n\t\t\t\t\tthis.battle.runEvent('EmergencyExit', pokemon, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (move.struggleRecoil) {\r\n\t\t\t\tconst hpBeforeRecoil = pokemon.hp;\r\n\t\t\t\tlet recoilDamage;\r\n\t\t\t\tif (this.dex.gen >= 5) {\r\n\t\t\t\t\trecoilDamage = this.battle.clampIntRange(Math.round(pokemon.baseMaxhp / 4), 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trecoilDamage = this.battle.clampIntRange(this.battle.trunc(pokemon.maxhp / 4), 1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.battle.directDamage(recoilDamage, pokemon, pokemon, {id: 'strugglerecoil'} as Condition);\r\n\t\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && hpBeforeRecoil > pokemon.maxhp / 2) {\r\n\t\t\t\t\tthis.battle.runEvent('EmergencyExit', pokemon, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// smartTarget messes up targetsCopy, but smartTarget should in theory ensure that targets will never fail, anyway\r\n\t\t\tif (move.smartTarget) {\r\n\t\t\t\ttargetsCopy = targets.slice(0);\r\n\t\t\t}\r\n\r\n\t\t\tfor (const [i, target] of targetsCopy.entries()) {\r\n\t\t\t\tif (target && pokemon !== target) {\r\n\t\t\t\t\ttarget.gotAttacked(move, moveDamage[i] as number | false | undefined, pokemon);\r\n\t\t\t\t\tif (typeof moveDamage[i] === 'number') {\r\n\t\t\t\t\t\ttarget.timesAttacked += move.smartTarget ? 1 : hit - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (move.ohko && !targets[0].hp) this.battle.add('-ohko');\r\n\r\n\t\t\tif (!damage.some(val => !!val || val === 0)) return damage;\r\n\r\n\t\t\tthis.battle.eachEvent('Update');\r\n\r\n\t\t\tthis.afterMoveSecondaryEvent(targetsCopy.filter(val => !!val) as Pokemon[], pokemon, move);\r\n\r\n\t\t\tif (!move.negateSecondary && !(move.hasSheerForce && pokemon.hasAbility('sheerforce'))) {\r\n\t\t\t\tfor (const [i, d] of damage.entries()) {\r\n\t\t\t\t\t// There are no multihit spread moves, so it's safe to use move.totalDamage for multihit moves\r\n\t\t\t\t\t// The previous check was for `move.multihit`, but that fails for Dragon Darts\r\n\t\t\t\t\tconst curDamage = targets.length === 1 ? move.totalDamage : d;\r\n\t\t\t\t\tif (typeof curDamage === 'number' && targets[i].hp) {\r\n\t\t\t\t\t\tconst targetHPBeforeDamage = (targets[i].hurtThisTurn || 0) + curDamage;\r\n\t\t\t\t\t\tif (targets[i].hp <= targets[i].maxhp / 2 && targetHPBeforeDamage > targets[i].maxhp / 2) {\r\n\t\t\t\t\t\t\tthis.battle.runEvent('EmergencyExit', targets[i], pokemon);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn damage;\r\n\t\t}\r\n\t\r\n\t},\r\n\tside: {\r\n\t\t//inherit: true,\r\n\t\tconstructor(name: string, battle: Battle, sideNum: number, team: PokemonSet[]) {\r\n\t\t\tconst sideScripts = battle.dex.data.Scripts.side;\r\n\t\t\tif (sideScripts) Object.assign(this, sideScripts);\r\n\t\r\n\t\t\tthis.battle = battle;\r\n\t\t\tthis.id = ['p1', 'p2', 'p3', 'p4'][sideNum] as SideID;\r\n\t\t\tthis.n = sideNum;\r\n\t\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.avatar = '';\r\n\t\r\n\t\t\tthis.team = team;\r\n\t\t\tthis.pokemon = [];\r\n\t\t\tfor (let i = 0; i < this.team.length && i < 24; i++) {\r\n\t\t\t\t// console.log(\"NEW POKEMON: \" + (this.team[i] ? this.team[i].name : '[unidentified]'));\r\n\t\t\t\tthis.pokemon.push(new Pokemon(this.team[i], this));\r\n\t\t\t\tthis.pokemon[i].position = i;\r\n\t\t\t}\r\n\t\r\n\t\t\tswitch (this.battle.gameType) {\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.active = [null!, null!];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples': case 'rotation':\r\n\t\t\t\tthis.active = [null!, null!, null!];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.active = [null!];\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.pokemonLeft = this.pokemon.length;\r\n\t\t\tthis.faintedLastTurn = null;\r\n\t\t\tthis.faintedThisTurn = null;\r\n\t\t\tthis.totalFainted = 0;\r\n\t\t\tthis.zMoveUsed = false;\r\n\t\t\tthis.dynamaxUsed = false;\r\n\t\r\n\t\t\tthis.sideConditions = {};\r\n\t\t\tthis.slotConditions = [];\r\n\t\t\t// Array#fill doesn't work for this\r\n\t\t\tfor (let i = 0; i < this.active.length; i++) this.slotConditions[i] = {};\r\n\t\r\n\t\t\tthis.activeRequest = null;\r\n\t\t\tthis.choice = {\r\n\t\t\t\tcantUndo: false,\r\n\t\t\t\terror: ``,\r\n\t\t\t\tactions: [],\r\n\t\t\t\tforcedSwitchesLeft: 0,\r\n\t\t\t\tforcedPassesLeft: 0,\r\n\t\t\t\tswitchIns: new Set(),\r\n\t\t\t\tzMove: false,\r\n\t\t\t\tmega: false,\r\n\t\t\t\tultra: false,\r\n\t\t\t\tterastallize: false,\r\n\t\t\t\tdynamax: false,\r\n\t\t\t};\r\n\t\r\n\t\t\t// old-gens\r\n\t\t\tthis.lastMove = null;\r\n\t\t\t\r\n\t\t\t//fishing tokens?\r\n\t\t\tthis.fishingTokens = 0;\r\n\t\t},\r\n\t\tgetChoice() {\r\n\t\t\tif (this.choice.actions.length > 1 && this.choice.actions.every(action => action.choice === 'team')) {\r\n\t\t\t\treturn `team ` + this.choice.actions.map(action => action.pokemon!.position + 1).join(', ');\r\n\t\t\t}\r\n\t\t\treturn this.choice.actions.map(action => {\r\n\t\t\t\tswitch (action.choice) {\r\n\t\t\t\tcase 'move':\r\n\t\t\t\t\tlet details = ``;\r\n\t\t\t\t\tif (action.targetLoc && this.active.length > 1) details += ` ${action.targetLoc > 0 ? '+' : ''}${action.targetLoc}`;\r\n\t\t\t\t\tif (action.mega) details += (action.pokemon!.item === 'ultranecroziumz' ? ` ultra` : ` mega`);\r\n\t\t\t\t\tif (action.zmove) details += ` zmove`;\r\n\t\t\t\t\tif (action.maxMove) details += ` dynamax`;\r\n\t\t\t\t\tif (action.terastallize) details += ` terastallize`;\r\n\t\t\t\t\treturn `move ${action.moveid}${details}`;\r\n\t\t\t\tcase 'switch':\r\n\t\t\t\tcase 'instaswitch':\r\n\t\t\t\tcase 'revivalblessing':\r\n\t\t\t\tcase 'epicbeam':\r\n\t\t\t\t\treturn `switch ${action.target!.position + 1}`;\r\n\t\t\t\tcase 'team':\r\n\t\t\t\t\treturn `team ${action.pokemon!.position + 1}`;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn action.choice;\r\n\t\t\t\t}\r\n\t\t\t}).join(', ');\r\n\t\t},\r\n\t\tchooseSwitch(slotText?: string) {\r\n\t\t\tif (this.requestState !== 'move' && this.requestState !== 'switch') {\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: You need a ${this.requestState} response`);\r\n\t\t\t}\r\n\t\t\tconst index = this.getChoiceIndex();\r\n\t\t\tif (index >= this.active.length) {\r\n\t\t\t\tif (this.requestState === 'switch') {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't switch: You sent more switches than Pok\u00E9mon that need to switch`);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: You sent more choices than unfainted Pok\u00E9mon`);\r\n\t\t\t}\r\n\t\t\tconst pokemon = this.active[index];\r\n\t\t\tlet slot;\r\n\t\t\tif (!slotText) {\r\n\t\t\t\tif (this.requestState !== 'switch') {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't switch: You need to select a Pok\u00E9mon to switch in`);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.slotConditions[pokemon.position]['revivalblessing']) {\r\n\t\t\t\t\tslot = 0;\r\n\t\t\t\t\twhile (!this.pokemon[slot].fainted) slot++;\r\n\t\t\t\t} else if (this.slotConditions[pokemon.position]['epicbeam']) {\r\n\t\t\t\t\tslot = 0;\r\n\t\t\t\t\twhile (this.pokemon[slot].fainted) slot++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!this.choice.forcedSwitchesLeft) return this.choosePass();\r\n\t\t\t\t\tslot = this.active.length;\r\n\t\t\t\t\twhile (this.choice.switchIns.has(slot) || this.pokemon[slot].fainted) slot++;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tslot = parseInt(slotText) - 1;\r\n\t\t\t}\r\n\t\t\tif (isNaN(slot) || slot < 0) {\r\n\t\t\t\t// maybe it's a name/species id!\r\n\t\t\t\tslot = -1;\r\n\t\t\t\tfor (const [i, mon] of this.pokemon.entries()) {\r\n\t\t\t\t\tif (slotText!.toLowerCase() === mon.name.toLowerCase() || toID(slotText) === mon.species.id) {\r\n\t\t\t\t\t\tslot = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (slot < 0) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't switch: You do not have a Pok\u00E9mon named \"${slotText}\" to switch to`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (slot >= this.pokemon.length) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: You do not have a Pok\u00E9mon in slot ${slot + 1} to switch to`);\r\n\t\t\t} else if (slot < this.active.length && !this.slotConditions[pokemon.position]['revivalblessing']) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: You can't switch to an active Pok\u00E9mon`);\r\n\t\t\t} else if (slot < this.active.length && !this.slotConditions[pokemon.position]['epicbeam']) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: You can't switch to an active Pok\u00E9mon`);\r\n\t\t\t} else if (this.choice.switchIns.has(slot)) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: The Pok\u00E9mon in slot ${slot + 1} can only switch in once`);\r\n\t\t\t}\r\n\t\t\tconst targetPokemon = this.pokemon[slot];\r\n\r\n\t\t\t//console.log(\"pokemon: \" + pokemon.baseSpecies + \"\\ntargetPokemon: \" + targetPokemon.baseSpecies + \"\\nindex: \" + index + \"\\nslot: \" + slot + \"\\npokemon.position: \" + pokemon.position);\r\n\t\t\tif (this.slotConditions[pokemon.position]['revivalblessing']) {\r\n\t\t\t\tif (!targetPokemon.fainted) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't switch: You have to pass to a fainted Pok\u00E9mon`);\r\n\t\t\t\t}\r\n\t\t\t\t// Should always subtract, but stop at 0 to prevent errors.\r\n\t\t\t\tthis.choice.forcedSwitchesLeft = this.battle.clampIntRange(this.choice.forcedSwitchesLeft - 1, 0);\r\n\t\t\t\tpokemon.switchFlag = false;\r\n\t\t\t\tthis.choice.actions.push({\r\n\t\t\t\t\tchoice: 'revivalblessing',\r\n\t\t\t\t\tpokemon,\r\n\t\t\t\t\ttarget: targetPokemon,\r\n\t\t\t\t} as ChosenAction);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this.slotConditions[pokemon.position]['epicbeam']) {\r\n\t\t\t\tif (targetPokemon.fainted) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't switch: You have to sacrifice an unfainted Pok\u00E9mon`);\r\n\t\t\t\t}\r\n\t\t\t\t// Should always subtract, but stop at 0 to prevent errors.\r\n\t\t\t\tthis.choice.forcedSwitchesLeft = this.battle.clampIntRange(this.choice.forcedSwitchesLeft - 1, 0);\r\n\t\t\t\tpokemon.switchFlag = false;\r\n\t\t\t\tthis.battle.faint(targetPokemon, targetPokemon, this.battle.dex.moves.get('epicbeam'));\r\n\t\t\t\tthis.choice.actions.push({\r\n\t\t\t\t\tchoice: 'epicbeam',\r\n\t\t\t\t\tpokemon,\r\n\t\t\t\t\ttarget: targetPokemon,\r\n\t\t\t\t} as ChosenAction);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (targetPokemon.fainted) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't switch: You can't switch to a fainted Pok\u00E9mon`);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.requestState === 'move') {\r\n\t\t\t\tif (pokemon.trapped) {\r\n\t\t\t\t\tconst includeRequest = this.updateRequestForPokemon(pokemon, req => {\r\n\t\t\t\t\t\tlet updated = false;\r\n\t\t\t\t\t\tif (req.maybeTrapped) {\r\n\t\t\t\t\t\t\tdelete req.maybeTrapped;\r\n\t\t\t\t\t\t\tupdated = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!req.trapped) {\r\n\t\t\t\t\t\t\treq.trapped = true;\r\n\t\t\t\t\t\t\tupdated = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn updated;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst status = this.emitChoiceError(`Can't switch: The active Pok\u00E9mon is trapped`, includeRequest);\r\n\t\t\t\t\tif (includeRequest) this.emitRequest(this.activeRequest!);\r\n\t\t\t\t\treturn status;\r\n\t\t\t\t} else if (pokemon.maybeTrapped) {\r\n\t\t\t\t\tthis.choice.cantUndo = this.choice.cantUndo || pokemon.isLastActive();\r\n\t\t\t\t}\r\n\t\t\t} else if (this.requestState === 'switch') {\r\n\t\t\t\tif (!this.choice.forcedSwitchesLeft) {\r\n\t\t\t\t\tthrow new Error(`Player somehow switched too many Pokemon`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.choice.forcedSwitchesLeft--;\r\n\t\t\t}\r\n\r\n\t\t\tthis.choice.switchIns.add(slot);\r\n\r\n\t\t\tthis.choice.actions.push({\r\n\t\t\t\tchoice: (this.requestState === 'switch' ? 'instaswitch' : 'switch'),\r\n\t\t\t\tpokemon,\r\n\t\t\t\ttarget: targetPokemon,\r\n\t\t\t} as ChosenAction);\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tcanDynamaxNow(): boolean {\r\n\t\t\tif (this.battle.gen === 9) return false;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\taddFishingTokens(amount: number) {\r\n\t\t\tif (amount === 0 || Number.isNaN(amount)) return false;\r\n\t\t\tif(this.fishingTokens === undefined) this.fishingTokens = 0;\r\n\t\t\tthis.fishingTokens += amount;\r\n\t\t\tconst word = (amount === 1) ? 'token was' : 'tokens were';\r\n\t\t\tthis.battle.add('-message', `${amount} fishing ${word} added to ${this.name}'s side!`);\r\n\t\t\tthis.battle.hint(`They now have ${this.fishingTokens} tokens.`);\r\n\t\t},\r\n\t\tremoveFishingTokens(amount: number) {\r\n\t\t\tif (this.fishingTokens === undefined) this.fishingTokens = 0;\r\n\t\t\tif (amount === 0 || Number.isNaN(amount) || amount > this.fishingTokens) return false;\r\n\t\t\tthis.fishingTokens -= amount;\r\n\t\t\tconst word = (amount === 1) ? 'token was' : 'tokens were';\r\n\t\t\tthis.battle.add('-message', `${amount} fishing ${word} removed from ${this.name}'s side!`);\r\n\t\t\tthis.battle.hint(`They now have ${this.fishingTokens} tokens.`);\r\n\t\t\tif (this.battle.field.isWeather('acidrain')) this.removeFishingToken();\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tremoveFishingToken() {\r\n\t\t\tif (this.fishingTokens === undefined) this.fishingTokens = 0;\r\n\t\t\tif (this.fishingTokens < 1) return false;\r\n\t\t\tthis.fishingTokens -= 1;\r\n\t\t\tthis.battle.add('-message', `1 fishing token was removed from ${this.name}'s side!`);\r\n\t\t\tthis.battle.hint(`They now have ${this.fishingTokens} tokens.`);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\taddSideCondition(\r\n\t\tstatus: string | Condition, source: Pokemon | 'debug' | null = null, sourceEffect: Effect | null = null\r\n\t\t): boolean {\r\n\t\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\t\tif (source === 'debug') source = this.active[0];\r\n\t\t\tif (!source) throw new Error(`setting sidecond without a source`);\r\n\t\t\tif (!source.getSlot) source = (source as any as Side).active[0];\r\n\r\n\t\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\t\tif (this.sideConditions[status.id]) {\r\n\t\t\t\tif (!(status as any).onSideRestart) return false;\r\n\t\t\t\treturn this.battle.singleEvent('SideRestart', status, this.sideConditions[status.id], this, source, sourceEffect);\r\n\t\t\t}\r\n\t\t\tthis.sideConditions[status.id] = {\r\n\t\t\t\tid: status.id,\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tsource,\r\n\t\t\t\tsourceSlot: source.getSlot(),\r\n\t\t\t\tduration: status.duration,\r\n\t\t\t};\r\n\t\t\tif (status.durationCallback) {\r\n\t\t\t\tthis.sideConditions[status.id].duration =\r\n\t\t\t\t\tstatus.durationCallback.call(this.battle, this.active[0], source, sourceEffect);\r\n\t\t\t}\r\n\t\t\tif (source.hasAbility('unitedparty') && status.duration && source.copen) this.sideConditions[status.id].duration += (status.id === 'tailwind') ? Math.floor(source.copen / 2) : source.copen; \r\n\t\t\tif (!this.battle.singleEvent('SideStart', status, this.sideConditions[status.id], this, source, sourceEffect)) {\r\n\t\t\t\tdelete this.sideConditions[status.id];\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.battle.runEvent('SideConditionStart', source, source, status);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t},\r\n\tpokemon: {\r\n\t\tinherit: true,\r\n\t\thasAbility(ability) {\r\n\t\t\tif (this.ignoringAbility()) return false;\r\n\t\t\tif (Array.isArray(ability)) return ability.some(abil => this.hasAbility(abil));\r\n\t\t\tconst abilityid = this.battle.toID(ability);\r\n\t\t\treturn this.ability === abilityid || !!this.volatiles['ability:' + abilityid];\r\n\t\t},\r\n\t\tisGrounded(negateImmunity = false) {\r\n\t\t\tif ('gravity' in this.battle.field.pseudoWeather) return true;\r\n\t\t\tif ('ingrain' in this.volatiles && this.battle.gen >= 4) return true;\r\n\t\t\tif ('smackdown' in this.volatiles) return true;\r\n\t\t\tconst item = (this.ignoringItem() ? '' : this.item);\r\n\t\t\tif (item === 'ironball' || item === 'itemfist') return true;\r\n\t\t\t// If a Fire/Flying type uses Burn Up and Roost, it becomes ???/Flying-type, but it's still grounded.\r\n\t\t\tif (!negateImmunity && this.hasType('Flying') && !('roost' in this.volatiles)) return false;\r\n\t\t\tif (\r\n\t\t\t\t(this.hasAbility('levitate') || \r\n\t\t\t\tthis.hasAbility('impalpable')) && \r\n\t\t\t\t!this.battle.suppressingAbility(this)) return null;\r\n\t\t\tif ('magnetrise' in this.volatiles) return false;\r\n\t\t\tif ('telekinesis' in this.volatiles) return false;\r\n\t\t\treturn item !== 'airballoon';\r\n\t\t},\r\n\t},\r\n\tfield: {\r\n\t\tinherit: true,\r\n\t\tsetWeather(status: string | Condition, source: Pokemon | 'debug' | null = null, sourceEffect: Effect | null = null) {\r\n\t\t\tconsole.log(status);\r\n\t\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\t\tif (!sourceEffect && this.battle.effect) sourceEffect = this.battle.effect;\r\n\t\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\r\n\t\t\tif (this.weather === status.id) {\r\n\t\t\t\tif (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\t\tif (this.battle.gen > 5 || this.weatherState.duration === 0) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.battle.gen > 2 || status.id === 'sandstorm') {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (source) {\r\n\t\t\t\tconst result = this.battle.runEvent('SetWeather', source, source, status);\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\tif (result === false) {\r\n\t\t\t\t\t\tif ((sourceEffect as Move)?.weather) {\r\n\t\t\t\t\t\t\tthis.battle.add('-fail', source, sourceEffect, '[from] ' + this.weather);\r\n\t\t\t\t\t\t} else if (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\t\t\t\tthis.battle.add('-ability', source, sourceEffect, '[from] ' + this.weather, '[fail]');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst prevWeather = this.weather;\r\n\t\t\tconst prevWeatherState = this.weatherState;\r\n\t\t\tthis.weather = status.id;\r\n\t\t\tthis.weatherState = {id: status.id};\r\n\t\t\tif (source) {\r\n\t\t\t\tthis.weatherState.source = source;\r\n\t\t\t\tthis.weatherState.sourceSlot = source.getSlot();\r\n\t\t\t\tconsole.log(this.effectState.copen);\r\n\t\t\t\tif (source.hasAbility('unitedparty') && status.duration && source.copen) status.duration += source.copen; \r\n\t\t\t}\r\n\t\t\tif (status.duration) {\r\n\t\t\t\tthis.weatherState.duration = status.duration;\r\n\t\t\t}\r\n\t\t\tif (status.durationCallback) {\r\n\t\t\t\tif (!source) throw new Error(`setting weather without a source`);\r\n\t\t\t\tthis.weatherState.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t\t}\r\n\t\t\tif (!this.battle.singleEvent('FieldStart', status, this.weatherState, this, source, sourceEffect)) {\r\n\t\t\t\tthis.weather = prevWeather;\r\n\t\t\t\tthis.weatherState = prevWeatherState;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.battle.eachEvent('WeatherChange', sourceEffect);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tsetTerrain(status: string | Effect, source: Pokemon | 'debug' | null = null, sourceEffect: Effect | null = null) {\r\n\t\t\tconsole.log(status);\r\n\t\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\t\tif (!sourceEffect && this.battle.effect) sourceEffect = this.battle.effect;\r\n\t\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\t\t\tif (!source) throw new Error(`setting terrain without a source`);\r\n\r\n\t\t\tif (this.terrain === status.id) return false;\r\n\t\t\tconst prevTerrain = this.terrain;\r\n\t\t\tconst prevTerrainState = this.terrainState;\r\n\t\t\tthis.terrain = status.id;\r\n\t\t\tthis.terrainState = {\r\n\t\t\t\tid: status.id,\r\n\t\t\t\tsource,\r\n\t\t\t\tsourceSlot: source.getSlot(),\r\n\t\t\t\tduration: status.duration,\r\n\t\t\t};\r\n\t\t\tif (status.durationCallback) {\r\n\t\t\t\tthis.terrainState.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t\t}\r\n\t\t\tif (source.hasAbility('unitedparty') && status.duration && this.effectState.copen) this.terrainState.duration += this.effectState.copen; \r\n\t\t\tif (!this.battle.singleEvent('FieldStart', status, this.terrainState, this, source, sourceEffect)) {\r\n\t\t\t\tthis.terrain = prevTerrain;\r\n\t\t\t\tthis.terrainState = prevTerrainState;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.battle.eachEvent('TerrainChange', sourceEffect);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\taddPseudoWeather(\r\n\t\tstatus: string | Condition,\r\n\t\tsource: Pokemon | 'debug' | null = null,\r\n\t\tsourceEffect: Effect | null = null\r\n\t\t): boolean {\r\n\t\t\tconsole.log(status);\r\n\t\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\t\t\tstatus = this.battle.dex.conditions.get(status);\r\n\r\n\t\t\tlet state = this.pseudoWeather[status.id];\r\n\t\t\tif (state) {\r\n\t\t\t\tif (!(status as any).onFieldRestart) return false;\r\n\t\t\t\treturn this.battle.singleEvent('FieldRestart', status, state, this, source, sourceEffect);\r\n\t\t\t}\r\n\t\t\tstate = this.pseudoWeather[status.id] = {\r\n\t\t\t\tid: status.id,\r\n\t\t\t\tsource,\r\n\t\t\t\tsourceSlot: source?.getSlot(),\r\n\t\t\t\tduration: status.duration,\r\n\t\t\t};\r\n\t\t\tif (status.durationCallback) {\r\n\t\t\t\tif (!source) throw new Error(`setting fieldcond without a source`);\r\n\t\t\t\tstate.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t\t}\r\n\t\t\tif (!this.battle.singleEvent('FieldStart', status, state, this, source, sourceEffect)) {\r\n\t\t\t\tdelete this.pseudoWeather[status.id];\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.battle.runEvent('PseudoWeatherChange', source, source, status);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t},\r\n};"],
  "mappings": "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",
  "names": ["zMove", "target"]
}
