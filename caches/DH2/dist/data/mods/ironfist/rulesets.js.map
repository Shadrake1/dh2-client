{
  "version": 3,
  "sources": ["../../../../data/mods/ironfist/rulesets.ts"],
  "sourcesContent": ["import {FS} from '../../../lib';\r\nimport {toID} from '../../../sim/dex-data';\r\nimport {Pokemon} from \"../../../sim/pokemon\";\r\n\r\n// Similar to User.usergroups. Cannot import here due to users.ts requiring Chat\r\n// This also acts as a cache, meaning ranks will only update when a hotpatch/restart occurs\r\nconst usergroups: {[userid: string]: string} = {};\r\nconst usergroupData = FS('config/usergroups.csv').readIfExistsSync().split('\\n');\r\nfor (const row of usergroupData) {\r\n\tif (!toID(row)) continue;\r\n\r\n\tconst cells = row.split(',');\r\n\tif (cells.length > 3) throw new Error(`Invalid entry when parsing usergroups.csv`);\r\n\tusergroups[toID(cells[0])] = cells[1].trim() || ' ';\r\n}\r\n\r\nexport function getName(name: string): string {\r\n\tconst userid = toID(name);\r\n\tif (!userid) throw new Error('No/Invalid name passed to getSymbol');\r\n\r\n\tconst group = usergroups[userid] || ' ';\r\n\treturn group + name;\r\n}\r\nexport const Rulesets: {[k: string]: ModdedFormatData} = {\r\n\tspeciesclause: {\r\n\t\tinherit: true,\r\n\t\tonValidateTeam(team, format) {\r\n\t\t\tconst speciesTable = new Set<number>();\r\n\t\t\tfor (const set of team) {\r\n\t\t\t\tconst species = this.dex.species.get(set.species);\r\n\t\t\t\tif (speciesTable.has(species.num) || speciesTable.has(species.name)) {\r\n\t\t\t\t\treturn [`You are limited to one of each Pok\u00E9mon by Species Clause.`, `(You have more than one ${species.baseSpecies})`];\r\n\t\t\t\t}\r\n\t\t\t\tif (species.num) speciesTable.add(species.num);\r\n\t\t\t\telse speciesTable.add(species.name);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbigbuttonrule: {\r\n\t\tname: \"Big Button Rule\",\r\n\t\teffectType: \"Rule\",\r\n\t\tdesc: `Pok&eacute;mon who have turned Big will remain Big when switched out.`,\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.big) {\r\n\t\t\t\tpokemon.addVolatile('bigbutton');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmilfrule: {\r\n\t\tname: \"MILF Rule\",\r\n\t\teffectType: \"Rule\",\r\n\t\tdesc: `Pok&eacute;mon with the ability MILF will add 2 Fishing Tokens at the beginning of the battle.`,\r\n\t\tonBegin() {\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const pokemon of side.pokemon) {\r\n\t\t\t\t\tif (pokemon.set.ability === 'M I L F') side.addFishingTokens(2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tohmyrodrule: {\r\n\t\tname: \"Ohmyrod Rule\",\r\n\t\teffectType: \"Rule\",\r\n\t\tdesc: `Ohmyrod gets a special message when switching in.`,\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies === 'Ohmyrod') {\r\n\t\t\t\tthis.add('-message', 'it is ohmyrod time :D');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tseriousrule: {\r\n\t\tname: \"Serious Rule\",\r\n\t\teffectType: \"Rule\",\r\n\t\tdesc: `Pok&eacute;mon with the nature Serious will gain the Serious type on switchin.`,\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.set.nature === 'Serious') {\r\n\t\t\t\tif (pokemon.addType('Serious')) this.add('-start', pokemon, 'typeadd', 'Serious');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tiloverefrigeratorsrule: {\r\n\t\tname: \"I love refrigerators Rule\",\r\n\t\teffectType: \"Rule\",\r\n\t\tdesc: `Pok&eacute;mon who switch with ally Fridgile active will use Hold Hands on Fridgile.`,\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (this.gameType === 'doubles') {\r\n\t\t\t\tconst ally = pokemon.allies()[0];\r\n\t\t\t\tif (ally && ally.baseSpecies.baseSpecies === 'Fridgile') { \r\n\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|I love refrigerators!`);\r\n\t\t\t\t\tconst newMove = this.dex.getActiveMove('Hold Hands');\r\n\t\t\t\t\tthis.actions.useMove(newMove, pokemon, ally);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmariokartwiiclause: {\r\n\t\teffectType: 'ValidatorRule',\r\n\t\tname: 'Mario Kart Wii Clause',\r\n\t\tdesc: \"Mario Kart must use Gorilla Tactics.\",\r\n\t\tonValidateTeam(team, format) {\r\n\t\t\tfor (const set of team) {\r\n\t\t\t\tif (set.species === 'Mario Kart Wii' && set.ability !== 'Gorilla Tactics') {\r\n\t\t\t\t\treturn [set.species + ' must use Gorilla Tactics.'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tspookysecretclause: {\r\n\t\tname: \"Spooky Secret Clause\",\r\n\t\teffectType: \"Rule\",\r\n\t\tdesc: `Spooky Secret Clause`,\r\n\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\tif(pokemon.metronome >= 26) pokemon.side.win();\r\n\t\t},\r\n\t},\r\n};"],
  "mappings": "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",
  "names": []
}
