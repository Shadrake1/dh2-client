{
  "version": 3,
  "sources": ["../../../../data/mods/scootopia/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\t// metamorphosis: {\r\n\t// num: 1016,\r\n\t// name: \"Metamorphosis\",\r\n\t// shortDesc: \"50% boost to moves of the same type as the first move used.\",\r\n\t// onSourceHit(target, source, move) {\r\n\t// if (!move || !target) return;\r\n\t// if (target !== source && move.category !== 'Status') {\r\n\t// source.addVolatile(\"metamorphosis\");\r\n\t// }\r\n\t// },\r\n\t// condition: {\r\n\t// noCopy: true, // doesn't get copied by Baton Pass\r\n\t// onStart(target) {\r\n\t// this.add('-start', target, 'ability: Metamorphosis');\r\n\t// target.m.metaType = target.lastMove.type;\r\n\t// },\r\n\t// onModifyAtkPriority: 5,\r\n\t// onModifyAtk(atk, attacker, defender, move) {\r\n\t// if (move.type === attacker.m.metaType && attacker.hasAbility('metamorphosis')) {\r\n\t// return this.chainModify(1.5);\r\n\t// }\r\n\t// },\r\n\t// onModifySpAPriority: 5,\r\n\t// onModifySpA(atk, attacker, defender, move) {\r\n\t// if (move.type === attacker.m.metaType && attacker.hasAbility('metamorphosis')) {\r\n\t// return this.chainModify(1.5);\r\n\t// }\r\n\t// },\r\n\t// onEnd(target) {\r\n\t// this.add('-end', target, 'ability: Metamorphosis', '[silent]');\r\n\t// },\r\n\t// },\r\n\t// },\r\n\tmythicalpresence: {\r\n\t\tname: \"Mythical Presence\",\r\n\t\tshortDesc: \"Lowers opposing Pokemon Special Attack by 1 stage when switching in.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Mythical Presence', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpowerconstruct: {\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Flocura' || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tif (pokemon.species.id === 'flocuranexus' || pokemon.hp > pokemon.maxhp / 2) return;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Power Construct');\r\n\t\t\tpokemon.formeChange('Flocura-Nexus', this.effect, true);\r\n\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Power Construct\",\r\n\t\trating: 5,\r\n\t\tnum: 211,\r\n\t},\r\n\tbattlebond: {\r\n\t\tshortDesc: \"Change to a stronger forme after getting a KO.\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect?.effectType !== 'Move') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (source.species.id === 'soleron' && source.hp && !source.transformed && source.side.foe.pokemonLeft) {\r\n\t\t\t\tthis.add('-activate', source, 'ability: Battle Bond');\r\n\t\t\t\tsource.formeChange('Soleron-Awakened', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -1,\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Battle Bond\",\r\n\t\trating: 4,\r\n\t\tnum: 210,\r\n\t},\r\n\t// firmfooting: {\r\n\t// shortDesc: \"Immune to Wind moves, +1 SpD if hit by one.\",\r\n\t// onTryHit(target, source, move) {\r\n\t// if (target !== source && move.flags[\"wind\"]) {\r\n\t// if (!this.boost({spd: 1})) {\r\n\t// this.add('-immune', target, '[from] ability: Firm Footing');\r\n\t// }\r\n\t// return null;\r\n\t// }\r\n\t// },\r\n\t// name: \"Firm Footing\",\r\n\t// rating: 3,\r\n\t// },\r\n\t// terrainpower: {\r\n\t// shortDesc: \"+50% SpA/SpD in Terrain.\",\r\n\t// onModifyDefPriority: 6,\r\n\t// onModifyDef(pokemon) {\r\n\t// if (this.field.isTerrain('')) return;\r\n\t// return this.chainModify(1.5);\r\n\t// },\r\n\t// onModifySpDPriority: 6,\r\n\t// onModifySpD(pokemon) {\r\n\t// if (this.field.isTerrain('')) return;\r\n\t// return this.chainModify(1.5);\r\n\t// },\r\n\t// name: \"Terrain Power\",\r\n\t// rating: 0.5,\r\n\t// num: 179,\r\n\t// },\r\n\t// wakethedead: {\r\n\t// shortDesc: \"50% reduction to Ghost damage. Nothing can Sleep.\",\r\n\t// onStart(pokemon) {\r\n\t// this.add('-ability', pokemon, 'Wake the Dead');\r\n\t// this.add('-message', pokemon.name + \" is making a ton of noise!\");\r\n\t// },\r\n\t// onUpdate(pokemon) {\r\n\t// for (const target of pokemon.side.active) {\r\n\t// if (target.status === 'slp') target.cureStatus();\r\n\t// }\r\n\t// for (const target of pokemon.side.foe.active) {\r\n\t// if (target.status === 'slp') target.cureStatus();\r\n\t// }\r\n\t// },\r\n\t// onAnySetStatus(status, pokemon) {\r\n\t// if (status.id === 'slp') {\r\n\t// if (pokemon === this.effectState.target) {\r\n\t// this.add('-fail', pokemon, 'slp', '[from] ability: Wake the Dead', '[msg]');\r\n\t// } else {\r\n\t// this.add('-fail', pokemon, 'slp', '[from] ability: Wake the Dead');\r\n\t// }\r\n\t// return null;\r\n\t// }\r\n\t// },\r\n\t// onAnyBasePowerPriority: 20,\r\n\t// onAnyBasePower(basePower, source, target, move) {\r\n\t// if (target === source || move.category === 'Status' || move.type !== 'Ghost') return;\r\n\t// return this.chainModify(0.5);\r\n\t// },\r\n\t// isUnbreakable: true,\r\n\t// name: \"Wake the Dead\",\r\n\t// rating: 3,\r\n\t// },\r\n\t// xenospore: {\r\n\t// shortDesc: \"Levitate. Also changes form if it maxes out a stat.\",\r\n\t// onResidualOrder: 27,\r\n\t// onStart(pokemon) {\r\n\t// pokemon.m.xenosporeHints = {};\r\n\t// pokemon.m.xenosporeHints.firstHint = false;\r\n\t// pokemon.m.xenosporeHints.secondHint = false;\r\n\t// },\r\n\t// onUpdate(pokemon) {\r\n\t// if (pokemon.baseSpecies.baseSpecies !== 'Flocura' || pokemon.transformed || !pokemon.hp) return;\r\n\t// if (pokemon.species.id === 'flocuranexus') return;\r\n\t// let areBoosts = 0;\r\n\t// let b: BoostName;\r\n\t// for (b in pokemon.boosts) {\r\n\t// if (pokemon.boosts[b] > areBoosts) areBoosts = pokemon.boosts[b]\r\n\t// }\r\n\t// if (areBoosts >= 6) {\r\n\t// this.add('-activate', pokemon, 'ability: Xenospore');\r\n\t// pokemon.formeChange('Flocura-Nexus', this.effect, true);\r\n\t// pokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t// 2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t// ) * pokemon.level / 100 + 10);\r\n\t// const newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t// pokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t// pokemon.maxhp = newMaxHP;\r\n\t// this.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t// pokemon.m.xenosporeHints.firstHint = true;\r\n\t// pokemon.m.xenosporeHints.secondHint = true;\r\n\t// } else if (areBoosts >= 4 && !pokemon.m.xenosporeHints.secondHint) {\r\n\t// pokemon.m.xenosporeHints.firstHint = true;\r\n\t// pokemon.m.xenosporeHints.secondHint = true;\r\n\t// this.add('-message', pokemon.name + \" needs MORE power!\");\r\n\t// } else if (areBoosts >= 2 && !pokemon.m.xenosporeHints.firstHint) {\r\n\t// pokemon.m.xenosporeHints.firstHint = true;\r\n\t// this.add('-message', pokemon.name + \" started to glow!\");\r\n\t// }\r\n\t// },\r\n\t// flags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t// name: \"Xenospore\",\r\n\t// rating: 5,\r\n\t// num: 211,\r\n\t// },\r\n\tcrystalheart: {\r\n\t\tshortDesc: \"User becomes Crystal type. While Crystal type, 33% boost to Def and SpD\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.hasType('Crystal')) return false;\r\n\t\t\tif (!pokemon.addType('Crystal')) return false;\r\n\t\t\tpokemon.setType([\"Crystal\"]);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', 'Crystal', '[from] ability: Crystal Heart');\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.hasType('Crystal')) return this.chainModify(1 + (1 / 3));\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (pokemon.hasType('Crystal')) return this.chainModify(1 + (1 / 3));\r\n\t\t},\r\n\t\tname: \"Crystal Heart\",\r\n\t},\r\n\twildheart: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.hasType('Feral')) return false;\r\n\t\t\tif (!pokemon.addType('Feral')) return false;\r\n\t\t\tpokemon.setType([\"Feral\"]);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', \"Feral\", '[from] ability: Wild Heart');\r\n\t\t},\r\n\t\tonModifyAtkPriority: 6,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.hasType('Feral')) return this.chainModify(1 + (1 / 3));\r\n\t\t},\r\n\t\tonModifySpAPriority: 6,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (pokemon.hasType('Feral')) return this.chainModify(1 + (1 / 3));\r\n\t\t},\r\n\t\tname: \"Wild Heart\",\r\n\t\tshortDesc: \"User becomes Feral type. While Feral type, 33% boost to Atk and SpA\",\r\n\t},\r\n\tschooling: {\r\n\t\tonStart(pokemon) {\r\n\t\tif (pokemon.baseSpecies.baseSpecies !== 'Jaegorm' || pokemon.transformed) return;\r\n\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\tif (pokemon.species.id === 'jaegorm') {\r\n\t\t\t\tpokemon.formeChange('Jaegorm-Collective');\r\n\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'jaegormcollective') {\r\n\t\t\t\t\tpokemon.formeChange('Jaegorm');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\tpokemon.baseSpecies.baseSpecies !== 'Jaegorm' ||\r\n\t\t\tpokemon.transformed || !pokemon.hp\r\n\t\t\t) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'jaegorm') {\r\n\t\t\t\t\tpokemon.formeChange('Jaegorm-Collective');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'jaegormcollective') {\r\n\t\t\t\t\tpokemon.formeChange('Jaegorm');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Schooling\",\r\n\t\tshortDesc: \"If user is Jaegorm, changes to Collective Form if it has > 1/4 max HP, else Solo Form.\",\r\n\t\trating: 3,\r\n\t\tnum: 208,\r\n\t},\r\n\tshellbunker: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move' || !target.hurtThisTurn) return damage;\r\n\t\t\treturn damage / 2;\r\n\t\t},\r\n\t\tname: \"Shell Bunker\",\r\n\t\tshortDesc: \"After taking damage, Def and SpD are doubled for the rest of the turn.\",\r\n\t},\r\n\t// crystalline: {\r\n\t// onSourceModifyAtkPriority: 6,\r\n\t// onSourceModifyAtk(atk, attacker, defender, move) {\r\n\t// if (move.type === 'Crystal' || move.type === 'Rock') {\r\n\t// this.debug('Crystalline weaken');\r\n\t// return this.chainModify(0.5);\r\n\t// }\r\n\t// },\r\n\t// onSourceModifySpAPriority: 5,\r\n\t// onSourceModifySpA(atk, attacker, defender, move) {\r\n\t// if (move.type === 'Crystal' || move.type === 'Rock') {\r\n\t// this.debug('Crystalline weaken');\r\n\t// return this.chainModify(0.5);\r\n\t// }\r\n\t// },\r\n\t// name: \"Crystalline\",\r\n\t// shortDesc: \"Reduces damage from Rock and Crystal by 50%.\",\r\n\t// rating: 3.5,\r\n\t// },\r\n\t// wildroots: {\r\n\t// onSourceModifyAtkPriority: 6,\r\n\t// onSourceModifyAtk(atk, attacker, defender, move) {\r\n\t// if (move.type === 'Fairy' || move.type === 'Feral') {\r\n\t// this.debug('Wild Roots weaken');\r\n\t// return this.chainModify(0.5);\r\n\t// }\r\n\t// },\r\n\t// onSourceModifySpAPriority: 5,\r\n\t// onSourceModifySpA(atk, attacker, defender, move) {\r\n\t// if (move.type === 'Fairy' || move.type === 'Feral') {\r\n\t// this.debug('Wild Roots weaken');\r\n\t// return this.chainModify(0.5);\r\n\t// }\r\n\t// },\r\n\t// shortDesc: \"Reduces damage from Fairy and Feral by 50%.\",\r\n\t// name: \"Wild Roots\",\r\n\t// rating: 3.5,\r\n\t// },\r\n\t// growthpower: {\r\n\t// onTryHitPriority: 1,\r\n\t// onTryHit(target, source, move) {\r\n\t// if (target !== source && move.type === 'Grass') {\r\n\t// this.field.setTerrain('grassyterrain');\r\n\t// this.add('-immune', target, '[from] ability: Growth Power');\r\n\t// return null;\r\n\t// }\r\n\t// },\r\n\t// onAllyTryHitSide(target, source, move) {\r\n\t// if (target === this.effectState.target || target.side !== source.side) return;\r\n\t// if (move.type === 'Grass') {\r\n\t// this.field.setTerrain('grassyterrain');\r\n\t// }\r\n\t// },\r\n\t// onSwitchIn(pokemon) {\r\n\t// if (pokemon.hp > pokemon.maxhp / 2) target.m.growthPower = false;\r\n\t// },\r\n\t// onResidual(pokemon) {\r\n\t// if (pokemon.hp > pokemon.maxhp / 2) target.m.growthPower = false;\r\n\t// },\r\n\t// onDamage(damage, target, source, move) {\r\n\t// if (!move || move.effectType !== 'Move' || !source) return;\r\n\t// if (!target.m.growthPower) {\r\n\t// target.m.growthPower = true\r\n\t// this.field.setTerrain('grassyterrain');\r\n\t// }\r\n\t// },\r\n\t// shortDesc: \"If knocked below 50% or hit by a Grass move, sets Grassy Terrain. Immune to Grass moves.\",\r\n\t// name: \"Growth Power\",\r\n\t// },\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
