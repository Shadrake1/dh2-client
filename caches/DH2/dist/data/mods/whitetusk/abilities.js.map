{
  "version": 3,
  "sources": ["../../../../data/mods/whitetusk/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tpuffinup: {\r\n\t\tshortDesc: \"When this Pokemon uses or is targeted by a status move, Stockpiles 1. When this Pokemon loses a Stockpile, Speed +1.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttarget.addVolatile('stockpile');\r\n\t\t},\r\n\t\t/*onResidual() {\r\n\t\t\tconst success = !!\r\n\t\t\tif (!success) return;\r\n\t\t\tpokemon.removeVolatile('stockpile');\r\n\t\t\tthis.boost({spe: 1});\r\n\t\t\treturn success || this.NOT_FAIL;\r\n\t\t},*/\r\n\t\tname: \"Puffin Up\",\r\n\t\trating: 3,\r\n\t\tnum: -1,\r\n\t},\r\n\tfairestofthemall: {\r\n\t\tshortDesc: \"This Pokemon's status condition is cured if hit by one Fairy move; Fairy immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fairy') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (!target.cureStatus()) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Fairest of Them All');\r\n\t\t\t\t\tthis.cureStatus()\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fairest of Them All\",\r\n\t\trating: 3,\r\n\t\tnum: -2,\r\n\t},\r\n\tunpoppable: {\r\n\t\tshortDesc: \"This Pokemon is immune to damage from Piercing moves.\",\r\n\t\t\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['piercing']) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Unpoppable');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Unpoppable\",\r\n\t\trating: 3,\r\n\t\tnum: -3,\r\n\t},\r\n\trefreshing: {\r\n\t\tshortDesc: \"When this Pokemon switches out, the incoming Pokemon is healed of all status conditions.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'refreshing'); \r\n\t\t\tthis.add('-ability', pokemon, 'Refreshing');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted && target.status) {\r\n\t\t\t\ttarget.clearStatus();\r\n\t\t\t\tthis.add('-message', \"\" + target.name + \"was cured by refreshing!\");\r\n\t\t\t\ttarget.side.removeSlotCondition(target, 'refreshing');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Refreshing\",\r\n\t\trating: 3,\r\n\t\tnum: -4,\r\n\t},\r\n\tgacha: {\r\n\t\tshortDesc: \"An attacker making contact can receive, randomly, Leftovers, Black Sludge, or Sticky Barb.\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact'] && !(target.item)) {\r\n\t\t\t\tconst result = this.random(3);\r\n\t\t\t\tif (result === 0) {\r\n\t\t\t\t\ttarget.setItem('Leftovers');\r\n\t\t\t\t} else if (result === 1) {\r\n\t\t\t\t\ttarget.setItem('Black Sludge');\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.setItem('Sticky Barb');\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', target, myItem.name, '[from] ability: Gacha', '[of] ' + source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Gacha\",\r\n\t\trating: 3,\r\n\t\tnum: -5,\r\n\t},\r\n\tantigravity: {\r\n\t\tshortDesc: \"While this Pok\u00E9mon is present, all Pok\u00E9mon are non-grounded.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Anti-Gravity');\r\n\t\t\tthis.add('-message', `While ${pokemon.name} is present, all Pok\u00E9mon are non-grounded.`);\r\n\t\t},\r\n\t\t// effect is in scripts.ts\r\n\t\tname: \"Anti-Gravity\",\r\n\t\trating: 4,\r\n\t\tnum: -6\r\n\t},\r\n\ttoxindrain: {\r\n\t\tshortDesc: \"If another Pokemon takes Poison damage, heals 1/2 the damage taken.\",\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.ability === 'poisonheal' || target.ability === 'magicguard') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\tthis.heal(target.baseMaxhp / 8, pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tif (target.status === 'tox') {\r\n\t\t\t\t\tif ((target.hp + this.clampIntRange(pokemon.baseMaxhp / 16, 1) * target.activeTurns) > target.basemaxhp) {\r\n\t\t\t\t\t\tthis.heal(target.hp - target.basemaxhp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.heal(this.clampIntRange(pokemon.baseMaxhp / 16, 1) * target.activeTurns, pokemon)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxin Drain\",\r\n\t\trating: 3,\r\n\t\tnum: -7,\r\n\t},\r\n\tlifedrain: {\r\n\t\tshortDesc: \"This Pokemon heals 1/3 of the damage dealt when using contact moves.\",\r\n\t\tonAfterMoveSecondarySelfPriority: -1,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.category !== 'Status' && move.flags['contact']) {\r\n\t\t\t\tthis.heal(pokemon.lastDamage / 3, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Life Drain\",\r\n\t\trating: 3,\r\n\t\tnum: -8,\r\n\t},\r\n};"],
  "mappings": "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",
  "names": []
}
