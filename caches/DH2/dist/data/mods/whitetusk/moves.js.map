{
  "version": 3,
  "sources": ["../../../../data/mods/whitetusk/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: ModdedMoveData} = {\r\n\thopskip: {\r\n\t\tnum: -1001,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Raises the user's Special Attack and Speed by 1.\",\r\n\t\tname: \"Hop Skip\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, dance: 1},\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t\tspe: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tsympatheticvibration: {\r\n\t\tnum: -1002,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"For each target; if highest stat is the same, +1. If not, target gets -1 to their highest stat.\",\r\n\t\tname: \"Sympathetic Vibration\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, authentic: 1},\r\n\t\tsecondary: {\r\n\t\t\tdustproof: true,\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source) {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet statName1 = 'atk';\r\n\t\t\t\tlet bestStat1 = 0;\r\n\t\t\t\tlet s1: StatNameExceptHP;\r\n\t\t\t\tfor (s1 in target.storedStats) {\r\n\t\t\t\t\tif (target.storedStats[s] > bestStat1) {\r\n\t\t\t\t\t\tstatName1 = s1;\r\n\t\t\t\t\t\tbestStat1 = target.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === statName1) {\r\n\t\t\t\t\tthis.boost({[statName]: +1}, source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({[statName1]: -1}, target, source, null, false, true);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tbonesong: {\r\n\t\tnum: -1003,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Cures the user's party of all status conditions.\",\r\n\t\tname: \"Bone Song\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, sound: 1, distance: 1, authentic: 1},\r\n\t\tonHit(pokemon, source) {\r\n\t\t\tthis.add('-activate', source, 'move: Heal Bell');\r\n\t\t\tconst side = pokemon.side;\r\n\t\t\tlet success = false;\r\n\t\t\tfor (const ally of side.pokemon) {\r\n\t\t\t\tif (ally !== source && ally.hasAbility('soundproof')) continue;\r\n\t\t\t\tif (ally.cureStatus()) success = true;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\ttarget: \"allyTeam\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tpuffinpummel: {\r\n\t\tnum: -1004,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tbasePowerCallback(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['stockpile']?.layers) return 70;\r\n\t\t\treturn 70 + pokemon.volatiles['stockpile'].layers * 30;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Gains 30 BP and sets a Spike layer for each Stockpile the user has. Resets Stockpile.\",\r\n\t\tname: \"Puffin Pummel\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1},\r\n\t\tonAfterMove(pokemon) {\r\n\t\t\tpokemon.removeVolatile('stockpile');\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!source.volatiles['stockpile']?.layers) return;\r\n\t\t\tfor (let i = 0; i < source.volatiles['stockpile'].layers; i++) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('spikes');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tpropheticdreams: {\r\n\t\tnum: -1005,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Deals damage two turns after used. Fails if another future move is already in effect.\",\r\n\t\tname: \"Prophetic Dreams\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tignoreImmunity: true,\r\n\t\tisFutureMove: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'propheticdreams',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'propheticdreams',\r\n\t\t\t\t\tname: \"Prophetic Dreams\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 120,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\ttype: 'Fairy',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Future Sight');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tgatlinggum: {\r\n\t\tnum: -1006,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"If user is holding Luminous Bubble or Fresh Stick, becomes Water- or Ice-type, respectively.\",\r\n\t\tname: \"Gatling Gum\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (pokemon.getItem() === \"Luminous Bubble\") {\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t} else if (pokemon.getItem() === \"Fresh Stick\") {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tpoppedrelief: {\r\n\t\tnum: -1007,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"User takes 33% piercing damage and switches out. Incoming Pokemon heals 33%.\",\r\n\t\tname: \"Popped Relief\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, piercing: 1},\r\n\t\tonHit(target) {\r\n\t\t\tthis.directDamage(target.maxhp/3);\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tslotCondition: 'poppedrelief',\r\n\t\tcondition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted && (target.hp < target.maxhp)) {\r\n\t\t\t\t\ttarget.heal(target.maxhp/3);\r\n\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] move: Popped Relief');\r\n\t\t\t\t\ttarget.side.removeSlotCondition(target, 'poppedrelief');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\ticyrelief: {\r\n\t\tnum: -1008,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"User switches out; all Pokemon on the field are healed from Burn.\",\r\n\t\tname: \"Icy Relief\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: {\r\n\t\t\tdustproof: true,\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(source) {\r\n\t\t\t\tfor (const ally of source.side.pokemon) {\r\n\t\t\t\t\tif (ally.status === 'brn') ally.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pokemon of source.side.foe.active) {\r\n\t\t\t\t\tif (pokemon.status === 'brn') pokemon.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\trefurbish: {\r\n\t\tnum: -1009,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Refurbish\",\r\n\t\tshortDesc: \"All active field effects are reset to last another 5 turns.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tonHitField(target, source) {\r\n\t\t\tlet success = false;\r\n\t\t\tfor (const id in this.field.pseudoWeather) {\r\n\t\t\t\tif (this.field.pseudoWeather[id]?.duration && this.field.pseudoWeather[id]?.duration !== 0) {\r\n\t\t\t\t\tthis.field.pseudoWeather[id].duration = 5;\r\n\t\t\t\t\tthis.add('-fieldend', this.dex.conditions.get(id).name, '[silent]');\r\n\t\t\t\t\tthis.add('-fieldstart', this.dex.conditions.get(id).name, '[silent]');\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const id in source.side.sideConditions) {\r\n\t\t\t\tif (source.side.sideConditions[id].duration && source.side.sideConditions[id].duration !== 0) {\r\n\t\t\t\t\tsource.side.sideConditions[id].duration = 5;\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(id).name, '[silent]');\r\n\t\t\t\t\tthis.add('-sidestart', source.side, this.dex.conditions.get(id).name, '[silent]');\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const id in source.side.foe.sideConditions) {\r\n\t\t\t\tif (source.side.foe.sideConditions[id].duration && source.side.foe.sideConditions[id].duration !== 0) {\r\n\t\t\t\t\tsource.side.foe.sideConditions[id].duration = 5;\r\n\t\t\t\t\tthis.add('-sideend', source.side.foe, this.dex.conditions.get(id).name, '[silent]');\r\n\t\t\t\t\tthis.add('-sidestart', source.side.foe, this.dex.conditions.get(id).name, '[silent]');\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.field.weatherState?.duration) {\r\n\t\t\t\tthis.field.weatherState.duration = 5;\r\n\t\t\t\tif (this.dex.conditions.get(this.field.weather)) {\r\n\t\t\t\t\t// the weather conditions all have specific names for \"this.add\", but they're only found in conditions.ts\r\n\t\t\t\t\tthis.add('-weather', 'none', '[silent]');\r\n\t\t\t\t\tthis.add('-weather', this.dex.conditions.get(this.field.weather).name, '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\tif (this.field.terrainState?.duration) {\r\n\t\t\t\tthis.field.terrainState.duration = 5;\r\n\t\t\t\tif (this.dex.moves.get(this.field.terrain)) {\r\n\t\t\t\t\t// the terrains all have specific names for \"this.add\", but they're only found in moves.ts\r\n\t\t\t\t\tthis.add('-fieldend', 'move: ' + this.dex.moves.get(this.field.terrain).name, '[silent]');\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: ' + this.dex.moves.get(this.field.terrain).name, '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\tif (success) this.add('-message', `All ongoing field effects were set to last 5 turns!`);\r\n\t\t\treturn success;\r\n\t\t\tif (!success) return;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tplasmastrike: {\r\n\t\tnum: -1010,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"100% chance to lower the user's Spe by 1 stage, and the target's Spe by 2 stages.\",\r\n\t\tname: \"Plasma Strike\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -2,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tradiantstrike: {\r\n\t\tnum: -1011,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"100% chance to lower the user's SpA by 1 stage, and the target's SpA by 2 stages.\",\r\n\t\tname: \"Radiant Strike\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -2,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tstockpile: {\r\n\t\tnum: 254,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Stockpile\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tonTry(source) {\r\n\t\t\tif (source.volatiles['stockpile'] && source.volatiles['stockpile'].layers >= 3) return false;\r\n\t\t},\r\n\t\tvolatileStatus: 'stockpile',\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\tthis.effectState.def = 0;\r\n\t\t\t\tthis.effectState.spd = 0;\r\n\t\t\t\tthis.add('-start', target, 'stockpile' + this.effectState.layers);\r\n\t\t\t\tconst [curDef, curSpD] = [target.boosts.def, target.boosts.spd];\r\n\t\t\t\tthis.boost({def: 1, spd: 1}, target, target);\r\n\t\t\t\tif (curDef !== target.boosts.def) this.effectState.def--;\r\n\t\t\t\tif (curSpD !== target.boosts.spd) this.effectState.spd--;\r\n\t\t\t},\r\n\t\t\tonRestart(target) {\r\n\t\t\t\tif (this.effectState.layers >= 3) return false;\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t\tthis.add('-start', target, 'stockpile' + this.effectState.layers);\r\n\t\t\t\tconst curDef = target.boosts.def;\r\n\t\t\t\tconst curSpD = target.boosts.spd;\r\n\t\t\t\tthis.boost({def: 1, spd: 1}, target, target);\r\n\t\t\t\tif (curDef !== target.boosts.def) this.effectState.def--;\r\n\t\t\t\tif (curSpD !== target.boosts.spd) this.effectState.spd--;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tif (this.effectState.def || this.effectState.spd) {\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tif (this.effectState.def) boosts.def = this.effectState.def;\r\n\t\t\t\t\tif (this.effectState.spd) boosts.spd = this.effectState.spd;\r\n\t\t\t\t\tthis.boost(boosts, target, target);\r\n\t\t\t\t}\r\n\t\t\t\tif (target.ability === 'puffinup') {\r\n\t\t\t\t\tthis.boost({spe: 1}, target);\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-end', target, 'Stockpile');\r\n\t\t\t\tif (this.effectState.def !== this.effectState.layers * -1 || this.effectState.spd !== this.effectState.layers * -1) {\r\n\t\t\t\t\tthis.hint(\"In Gen 7, Stockpile keeps track of how many times it successfully altered each stat individually.\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'heal'},\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n};"],
  "mappings": "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",
  "names": []
}
