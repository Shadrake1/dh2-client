{
  "version": 3,
  "sources": ["../../../../data/mods/pmcm/moves.ts"],
  "sourcesContent": ["export const Moves: { [moveid: string]: ModdedMoveData } = {\r\n\tancientpower: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tsecondary: null,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) this.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1,}, pokemon, pokemon, move);\r\n\t\t},\r\n\t\tshortDesc: \"If this move causes the opponent to faint, raises the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.\",\r\n\t},\r\n\tsandsearstorm: {\r\n\t\t//Now always hits in Sand instead of Rain\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['sandstorm'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmountainmaw: {\r\n\t\t//Copied from Psychic Fangs, just changed to be Rock type\r\n\t\tnum: -101,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mountain Maw\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1},\r\n\t\tonTryHit(pokemon) {\r\n\t\t\t// will shatter screens through sub, before you hit\r\n\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tsteelwing: {\r\n\t\t//Buffed secondary chance to 50%\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tdef: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\tscavenge: {\r\n\t\tnum: -102,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Scavenge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tonHit(target, source) {\r\n\t\t  if (source.item && !source.lastItem) {\r\n\t\t\tsource.lastItem = source.item;\r\n\t\t\tsource.setItem('');\r\n\t\t\tthis.add('-item', source, '', '[from] move: Scavenge');\r\n\t\t  }\r\n\t\t  return null;\r\n\t\t},\r\n\t\tonAfterMove(source) {\r\n\t\t  if (source.lastItem) {\r\n\t\t\tconst item = source.lastItem;\r\n\t\t\tsource.lastItem = '';\r\n\t\t\tsource.setItem(item);\r\n\t\t\tthis.add('-item', source, this.dex.items.get(item), '[from] move: Scavenge');\r\n\t\t  }\r\n\t\t},\r\n\t  },\t  \r\n\r\n\r\n\taquaring: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Aqua Ring');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 6,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t\t},\r\n\t\t\tonSourceModifyAtkPriority: 5,\r\n\t\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSourceModifySpAPriority: 5,\r\n\t\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Water') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Water') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"User recovers 1/16 max HP per turn. While this is active, this Pokemon's Water power is 2x and Fire power against it is halved. \",\r\n\t},\r\n\r\n\tragingbull: {\r\n\t\tnum: 9999,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tpriority: 0,\r\n\t\tpp: 10,\r\n\t\tname: \"Raging Bull\",\r\n\t\ttype: \"Normal\",\r\n\t\teffectType: \"Move\",\r\n\t\tshortDesc: \"Changes type to the most effective against the target (Water, Fighting, Fire, or Normal).\",\r\n\t\tdesc: \"Changes the move's and user's forme to the most effective against the target (Water, Fighting, Fire, or Normal).\",\r\n\t\t\r\n\t\tbeforeMoveCallback(source, target, move) {\r\n\t\t  const typeEffectiveness = {\r\n\t\t\tWater: this.dex.getEffectiveness('Water', target),\r\n\t\t\tFighting: this.dex.getEffectiveness('Fighting', target),\r\n\t\t\tFire: this.dex.getEffectiveness('Fire', target),\r\n\t\t\tNormal: this.dex.getEffectiveness('Normal', target),\r\n\t\t  };\r\n\t\t  \r\n\t\t  let bestType = 'Normal';\r\n\t\t  let maxEffectiveness = -Infinity;\r\n\t\t  \r\n\t\t  for (const type in typeEffectiveness) {\r\n\t\t\tif (typeEffectiveness[type] > maxEffectiveness) {\r\n\t\t\t  maxEffectiveness = typeEffectiveness[type];\r\n\t\t\t  bestType = type;\r\n\t\t\t}\r\n\t\t  }\r\n\t  \r\n\t\t  if (bestType === 'Water') {\r\n\t\t\tsource.formeChange('Tauros-Paldea-Aqua');\r\n\t\t\tsource.setAbility('Adaptability');\r\n\t\t\tthis.add('-ability', source, 'Adaptability');\r\n\t\t  } else if (bestType === 'Fighting') {\r\n\t\t\tsource.formeChange('Tauros-Paldea-Combat');\r\n\t\t\tsource.setAbility('Adaptability');\r\n\t\t\tthis.add('-ability', source, 'Adaptability');\r\n\t\t  } else if (bestType === 'Fire') {\r\n\t\t\tsource.formeChange('Tauros-Paldea-Blaze');\r\n\t\t\tsource.setAbility('Adaptability');\r\n\t\t\tthis.add('-ability', source, 'Adaptability');\r\n\t\t  } else {\r\n\t\t\tsource.formeChange('Tauros');\r\n\t\t\tsource.setAbility('Adaptability');\r\n\t\t\tthis.add('-ability', source, 'Adaptability');\r\n\t\t  }\r\n\t  \r\n\t\t  source.m.ragingBullMoveType = bestType;\r\n\t\t},\r\n\t  \r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t  this.add('-anim', source, 'Techno Blast', target);\r\n\t\t},\r\n\t  \r\n\t\tonModifyType(move, pokemon, target) {\r\n\t\t  if (pokemon.m.ragingBullMoveType) {\r\n\t\t\tmove.type = pokemon.m.ragingBullMoveType;\r\n\t\t  }\r\n\t\t},\r\n\t  \r\n\t\ttarget: \"normal\",\r\n\t  },\r\n\t  \r\n\t  metalclaw: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tatk: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n  \t}\r\n};\r\n  \r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,QAA8C;AAAA,EAC1D,cAAc;AAAA,IACb,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,yBAAyB,SAAS,QAAQ,MAAM;AAC/C,UAAI,CAAC,UAAU,OAAO,WAAW,OAAO,MAAM;AAAG,aAAK,MAAM,EAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,GAAG,SAAS,SAAS,IAAI;AAAA,IAC9H;AAAA,IACA,WAAW;AAAA,EACZ;AAAA,EACA,eAAe;AAAA;AAAA,IAEd,SAAS;AAAA,IACT,aAAa,MAAM,SAAS,QAAQ;AACnC,UAAI,UAAU,CAAC,WAAW,EAAE,SAAS,OAAO,iBAAiB,CAAC,GAAG;AAChE,aAAK,WAAW;AAAA,MACjB;AAAA,IACD;AAAA,EACD;AAAA,EACA,aAAa;AAAA;AAAA,IAEZ,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,MAAM,EAAC;AAAA,IAChE,SAAS,SAAS;AAEjB,cAAQ,KAAK,oBAAoB,SAAS;AAC1C,cAAQ,KAAK,oBAAoB,aAAa;AAC9C,cAAQ,KAAK,oBAAoB,YAAY;AAAA,IAC9C;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,WAAW;AAAA;AAAA,IAEV,SAAS;AAAA,IACT,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACL,QAAQ;AAAA,UACP,KAAK;AAAA,QACN;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,UAAU;AAAA,IACT,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IACvD,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,IACb,MAAM,QAAQ,QAAQ;AACpB,UAAI,OAAO,QAAQ,CAAC,OAAO,UAAU;AACtC,eAAO,WAAW,OAAO;AACzB,eAAO,QAAQ,EAAE;AACjB,aAAK,IAAI,SAAS,QAAQ,IAAI,uBAAuB;AAAA,MACpD;AACA,aAAO;AAAA,IACT;AAAA,IACA,YAAY,QAAQ;AAClB,UAAI,OAAO,UAAU;AACtB,cAAM,OAAO,OAAO;AACpB,eAAO,WAAW;AAClB,eAAO,QAAQ,IAAI;AACnB,aAAK,IAAI,SAAS,QAAQ,KAAK,IAAI,MAAM,IAAI,IAAI,GAAG,uBAAuB;AAAA,MAC1E;AAAA,IACF;AAAA,EACC;AAAA,EAGF,UAAU;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,MACV,QAAQ,SAAS;AAChB,aAAK,IAAI,UAAU,SAAS,WAAW;AAAA,MACxC;AAAA,MACA,iBAAiB;AAAA,MACjB,WAAW,SAAS;AACnB,aAAK,KAAK,QAAQ,YAAY,EAAE;AAAA,MACjC;AAAA,MACA,2BAA2B;AAAA,MAC3B,kBAAkB,KAAK,UAAU,UAAU,MAAM;AAChD,YAAI,KAAK,SAAS,QAAQ;AACzB,iBAAO,KAAK,YAAY,GAAG;AAAA,QAC5B;AAAA,MACD;AAAA,MACA,2BAA2B;AAAA,MAC3B,kBAAkB,KAAK,UAAU,UAAU,MAAM;AAChD,YAAI,KAAK,SAAS,QAAQ;AACzB,iBAAO,KAAK,YAAY,GAAG;AAAA,QAC5B;AAAA,MACD;AAAA,MACA,YAAY,KAAK,UAAU,UAAU,MAAM;AAC1C,YAAI,KAAK,SAAS,SAAS;AAC1B,iBAAO,KAAK,YAAY,CAAC;AAAA,QAC1B;AAAA,MACD;AAAA,MACA,YAAY,KAAK,UAAU,UAAU,MAAM;AAC1C,YAAI,KAAK,SAAS,SAAS;AAC1B,iBAAO,KAAK,YAAY,CAAC;AAAA,QAC1B;AAAA,MACD;AAAA,IACD;AAAA,IACA,WAAW;AAAA,EACZ;AAAA,EAEA,YAAY;AAAA,IACX,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,MAAM;AAAA,IAEN,mBAAmB,QAAQ,QAAQ,MAAM;AACvC,YAAM,oBAAoB;AAAA,QAC3B,OAAO,KAAK,IAAI,iBAAiB,SAAS,MAAM;AAAA,QAChD,UAAU,KAAK,IAAI,iBAAiB,YAAY,MAAM;AAAA,QACtD,MAAM,KAAK,IAAI,iBAAiB,QAAQ,MAAM;AAAA,QAC9C,QAAQ,KAAK,IAAI,iBAAiB,UAAU,MAAM;AAAA,MACjD;AAEA,UAAI,WAAW;AACf,UAAI,mBAAmB;AAEvB,iBAAW,QAAQ,mBAAmB;AACvC,YAAI,kBAAkB,IAAI,IAAI,kBAAkB;AAC9C,6BAAmB,kBAAkB,IAAI;AACzC,qBAAW;AAAA,QACb;AAAA,MACC;AAEA,UAAI,aAAa,SAAS;AAC3B,eAAO,YAAY,oBAAoB;AACvC,eAAO,WAAW,cAAc;AAChC,aAAK,IAAI,YAAY,QAAQ,cAAc;AAAA,MAC1C,WAAW,aAAa,YAAY;AACrC,eAAO,YAAY,sBAAsB;AACzC,eAAO,WAAW,cAAc;AAChC,aAAK,IAAI,YAAY,QAAQ,cAAc;AAAA,MAC1C,WAAW,aAAa,QAAQ;AACjC,eAAO,YAAY,qBAAqB;AACxC,eAAO,WAAW,cAAc;AAChC,aAAK,IAAI,YAAY,QAAQ,cAAc;AAAA,MAC1C,OAAO;AACR,eAAO,YAAY,QAAQ;AAC3B,eAAO,WAAW,cAAc;AAChC,aAAK,IAAI,YAAY,QAAQ,cAAc;AAAA,MAC1C;AAEA,aAAO,EAAE,qBAAqB;AAAA,IAChC;AAAA,IAEA,aAAa,QAAQ,QAAQ,MAAM;AACjC,WAAK,IAAI,SAAS,QAAQ,gBAAgB,MAAM;AAAA,IAClD;AAAA,IAEA,aAAa,MAAM,SAAS,QAAQ;AAClC,UAAI,QAAQ,EAAE,oBAAoB;AACnC,aAAK,OAAO,QAAQ,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,IAEA,QAAQ;AAAA,EACP;AAAA,EAEA,WAAW;AAAA,IACZ,SAAS;AAAA,IACT,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACL,QAAQ;AAAA,UACP,KAAK;AAAA,QACN;AAAA,MACD;AAAA,IACD;AAAA,EACC;AACH;",
  "names": []
}
