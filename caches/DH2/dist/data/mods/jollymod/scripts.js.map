{
  "version": 3,
  "sources": ["../../../../data/mods/jollymod/scripts.ts"],
  "sourcesContent": ["import {Pokemon} from '../../../sim/pokemon';\r\nimport {Dex} from '../../../sim/dex';\r\nexport const Scripts: {[k: string]: ModdedBattleScriptsData} = {\r\n\tgen: 9,\r\n\tteambuilderConfig: {\r\n\t\t// for micrometas to only show custom tiers\r\n\t\texcludeStandardTiers: true,\r\n\t\t// only to specify the order of custom tiers\r\n\t\tcustomTiers: ['JM'],\r\n\t},\t\r\n\t\r\n\tinit() {\r\n\t\tfor (const pokemon in Dex.data.Pokedex){\r\n\t\t\tif (pokemon in Dex.data.Learnsets && this.modData('Learnsets', pokemon).learnset) {\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.bakecookie = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.buildsnowman = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.christmastree = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.milkandcookies = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.hug = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.niceball = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.nicebeam = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.nicefang = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.nicehammer = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.nicepunch = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.niceshard = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.nicespinner = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.sharesnack = [\"9L1\"];\r\n\t\t\t\tthis.modData(\"Learnsets\", pokemon).learnset.snowballfight = [\"9L1\"];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbattle: {\r\n\t},\r\n\tactions: {\r\n\t\tgetDamage(\r\n\t\tsource: Pokemon, target: Pokemon, move: string | number | ActiveMove,\r\n\t\tsuppressMessages = false\r\n\t\t): number | undefined | null | false {\r\n\t\t\tif (typeof move === 'string') move = this.dex.getActiveMove(move);\r\n\t\t\t//if (move.id === 'present') return getPresentDamage(source, target, move);\r\n\t\t\tif (typeof move === 'number') {\r\n\t\t\t\tconst basePower = move;\r\n\t\t\t\tmove = new Dex.Move({\r\n\t\t\t\t\tbasePower,\r\n\t\t\t\t\ttype: '???',\r\n\t\t\t\t\tcategory: 'Physical',\r\n\t\t\t\t\twillCrit: false,\r\n\t\t\t\t}) as ActiveMove;\r\n\t\t\t\tmove.hit = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!move.ignoreImmunity || (move.ignoreImmunity !== true && !move.ignoreImmunity[move.type])) {\r\n\t\t\t\tif (!target.runImmunity(move.type, !suppressMessages)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (move.ohko) return target.maxhp;\r\n\t\t\tif (move.damageCallback) return move.damageCallback.call(this.battle, source, target);\r\n\t\t\tif (move.damage === 'level') {\r\n\t\t\t\treturn source.level;\r\n\t\t\t} else if (move.damage) {\r\n\t\t\t\treturn move.damage;\r\n\t\t\t}\r\n\r\n\t\t\tconst category = this.battle.getCategory(move);\r\n\r\n\t\t\tlet basePower: number | false | null = move.basePower;\r\n\t\t\tif (move.basePowerCallback) {\r\n\t\t\t\tbasePower = move.basePowerCallback.call(this.battle, source, target, move);\r\n\t\t\t}\r\n\t\t\tif (!basePower) return basePower === 0 ? undefined : basePower;\r\n\t\t\tbasePower = this.battle.clampIntRange(basePower, 1);\r\n\r\n\t\t\tlet critMult;\r\n\t\t\tlet critRatio = this.battle.runEvent('ModifyCritRatio', source, target, move, move.critRatio || 0);\r\n\t\t\tif (this.battle.gen <= 5) {\r\n\t\t\t\tcritRatio = this.battle.clampIntRange(critRatio, 0, 5);\r\n\t\t\t\tcritMult = [0, 16, 8, 4, 3, 2];\r\n\t\t\t} else {\r\n\t\t\t\tcritRatio = this.battle.clampIntRange(critRatio, 0, 4);\r\n\t\t\t\tif (this.battle.gen === 6) {\r\n\t\t\t\t\tcritMult = [0, 16, 8, 2, 1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcritMult = [0, 24, 8, 2, 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst moveHit = target.getMoveHitData(move);\r\n\t\t\tmoveHit.crit = move.willCrit || false;\r\n\t\t\tif (move.willCrit === undefined) {\r\n\t\t\t\tif (critRatio) {\r\n\t\t\t\t\tmoveHit.crit = this.battle.randomChance(1, critMult[critRatio]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (moveHit.crit) {\r\n\t\t\t\tmoveHit.crit = this.battle.runEvent('CriticalHit', target, null, move);\r\n\t\t\t}\r\n\r\n\t\t\t// happens after crit calculation\r\n\t\t\tbasePower = this.battle.runEvent('BasePower', source, target, move, basePower, true);\r\n\r\n\t\t\tif (!basePower) return 0;\r\n\t\t\tbasePower = this.battle.clampIntRange(basePower, 1);\r\n\t\t\t// Hacked Max Moves have 0 base power, even if you Dynamax\r\n\t\t\tif ((!source.volatiles['dynamax'] && move.isMax) || (move.isMax && this.dex.moves.get(move.baseMove).isMax)) {\r\n\t\t\t\tbasePower = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tbasePower < 60 && source.getTypes(true).includes(move.type) && source.terastallized && move.priority <= 0 &&\r\n\t\t\t\t// Hard move.basePower check for moves like Dragon Energy that have variable BP\r\n\t\t\t\t!move.multihit && !((move.basePower === 0 || move.basePower === 150) && move.basePowerCallback)\r\n\t\t\t) {\r\n\t\t\t\tbasePower = 60;\r\n\t\t\t}\r\n\r\n\t\t\tlet level = source.level;\r\n\r\n\t\t\tconst attacker = move.overrideOffensivePokemon === 'target' ? target : source;\r\n\t\t\tconst defender = move.overrideDefensivePokemon === 'source' ? source : target;\r\n\r\n\t\t\tconst isPhysical = move.category === 'Physical';\r\n\t\t\tlet attackStat: StatIDExceptHP = move.overrideOffensiveStat || (isPhysical ? 'atk' : 'spa');\r\n\t\t\tconst defenseStat: StatIDExceptHP = move.overrideDefensiveStat || (isPhysical ? 'def' : 'spd');\r\n\r\n\t\t\tconst statTable = {atk: 'Atk', def: 'Def', spa: 'SpA', spd: 'SpD', spe: 'Spe'};\r\n\r\n\t\t\tlet atkBoosts = attacker.boosts[attackStat];\r\n\t\t\tlet defBoosts = defender.boosts[defenseStat];\r\n\r\n\t\t\tlet ignoreNegativeOffensive = !!move.ignoreNegativeOffensive;\r\n\t\t\tlet ignorePositiveDefensive = !!move.ignorePositiveDefensive;\r\n\r\n\t\t\tif (moveHit.crit) {\r\n\t\t\t\tignoreNegativeOffensive = true;\r\n\t\t\t\tignorePositiveDefensive = true;\r\n\t\t\t}\r\n\t\t\tconst ignoreOffensive = !!(move.ignoreOffensive || (ignoreNegativeOffensive && atkBoosts < 0));\r\n\t\t\tconst ignoreDefensive = !!(move.ignoreDefensive || (ignorePositiveDefensive && defBoosts > 0));\r\n\r\n\t\t\tif (ignoreOffensive) {\r\n\t\t\t\tthis.battle.debug('Negating (sp)atk boost/penalty.');\r\n\t\t\t\tatkBoosts = 0;\r\n\t\t\t}\r\n\t\t\tif (ignoreDefensive) {\r\n\t\t\t\tthis.battle.debug('Negating (sp)def boost/penalty.');\r\n\t\t\t\tdefBoosts = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlet attack = attacker.calculateStat(attackStat, atkBoosts, 1, source);\r\n\t\t\tlet defense = defender.calculateStat(defenseStat, defBoosts, 1, target);\r\n\r\n\t\t\tattackStat = (category === 'Physical' ? 'atk' : 'spa');\r\n\t\t\t\r\n\t\t\t// Gen 2 Present has a glitched damage calculation using the secondary types of the Pokemon for the Attacker's Level and Defender's Defense.\r\n\t\t\tif (move.id === 'present') {\r\n\t\t\t\tconst typeIndexes = {\"Normal\": 0, \"Fighting\": 1, \"Flying\": 2, \"Poison\": 3, \"Ground\": 4, \"Rock\": 5, \"Bug\": 7, \"Ghost\": 8, \"Steel\": 9, \"Fire\": 20, \"Water\": 21, \"Grass\": 22, \"Electric\": 23, \"Psychic\": 24, \"Ice\": 25, \"Dragon\": 26, \"Dark\": 27, \"Fairy\": 28};\r\n\t\t\t\tattack = 10;\r\n\r\n\t\t\t\tconst attackerLastType = attacker.getTypes().slice(-1)[0];\r\n\t\t\t\tconst defenderLastType = defender.getTypes().slice(-1)[0];\r\n\r\n\t\t\t\tdefense = typeIndexes[attackerLastType] || 1;\r\n\t\t\t\tlevel = typeIndexes[defenderLastType] || 1;\r\n\t\t\t\tif (move.crit) {\r\n\t\t\t\t\tlevel *= 2;\r\n\t\t\t\t}\r\n\t\t\t\tthis.battle.hint(\"Gen 2 Present has a glitched damage calculation using the secondary types of the Pokemon for the Attacker's Level and Defender's Defense.\", true);\r\n\t\t\t}\r\n\r\n\t\t\tconst tr = this.battle.trunc;\r\n\r\n\t\t\t// Apply Stat Modifiers\r\n\t\t\tattack = this.battle.runEvent('Modify' + statTable[attackStat], source, target, move, attack);\r\n\t\t\tdefense = this.battle.runEvent('Modify' + statTable[defenseStat], target, source, move, defense);\r\n\r\n\t\t\tif (this.battle.gen <= 4 && ['explosion', 'selfdestruct'].includes(move.id) && defenseStat === 'def') {\r\n\t\t\t\tdefense = this.battle.clampIntRange(Math.floor(defense / 2), 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// int(int(int(2 * L / 5 + 2) * A * P / D) / 50);\r\n\t\t\tconst baseDamage = tr(tr(tr(tr(2 * level / 5 + 2) * basePower * attack) / defense) / 50);\r\n\r\n\t\t\t// Calculate damage modifiers separately (order differs between generations)\r\n\t\t\treturn this.modifyDamage(baseDamage, source, target, move, suppressMessages);\r\n\t\t}\r\n\t},\r\n\tside: {\r\n\t\taddKarma(amount: number) {\r\n\t\t\tif(amount === 0) return;\r\n\t\t\tif(this.karma === undefined) this.karma = 0;\r\n\t\t\tthis.karma += amount;\r\n\t\t\tthis.battle.add('-message', `${this.name} gained ${amount} karma!`);\r\n\t\t\tthis.battle.hint(`They now have ${this.karma} karma.`);\r\n\t\t},\r\n\t\tremoveKarma(amount: number) {\r\n\t\t\tif(amount === 0) return;\r\n\t\t\tif(this.karma === undefined) this.karma = 0;\r\n\t\t\tthis.karma -= amount;\r\n\t\t\tthis.battle.add('-message', `${this.name} lost ${amount} karma!`);\r\n\t\t\tthis.battle.hint(`They now have ${this.karma} karma.`);\r\n\t\t},\r\n\t\tswapKarma() {\r\n\t\t\tif (this.karma === undefined) this.karma = 0;\r\n\t\t\tif (this.foe.karma === undefined) this.foe.karma = 0;\r\n\t\t\tif (this.karma === 0 && this.foe.karma === 0) return;\r\n\t\t\tconst temp = this.karma;\r\n\t\t\tthis.foe.karma = this.karma;\r\n\t\t\tthis.karma = temp;\r\n\t\t\tthis.battle.add('-message', `${this.name} and ${this.foes.name} swapped karma!`);\r\n\t\t\tthis.battle.hint(`${this.name} has ${this.karma} karma and ${this.foe.name} has ${this.foe.karma} karma.`);\r\n\t\t},\r\n\t\treward() {\r\n\t\t\tif (!this.active) {\r\n\t\t\t\tthis.battle.add('-message', \"But there was no one home...\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//const n = 1;\r\n\t\t\tconst n = this.battle.random(100);\r\n\t\t\tconst pokemon = this.active[0];\r\n\t\t\tif (n < 30) {\r\n\t\t\t\tthis.battle.add('-message', `Santa gave ${pokemon.name} a snack!`);\r\n\t\t\t\tif(pokemon.item) this.battle.add('-message', `But ${pokemon.name} didn't have room for one!`);\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst items = ['aguavberry', 'figyberry', 'iapapaberry', 'magoberry', 'wikiberry', 'sitrusberry', 'lumberry', 'custapberry', 'salacberry', 'starfberry', 'keeberry', 'marangaberry', 'jabocaberry', 'rowapberry', 'candycane', 'gingerbreadman', 'pokedoll'];\r\n\t\t\t\t\tconst item = this.battle.dex.items.get(this.sample(items));\r\n\t\t\t\t\tthis.add('-item', pokemon, item);\r\n\t\t\t\t\ttarget.setItem(item);\r\n\t\t\t\t}\r\n\t\t\t} else if (n < 50) {\r\n\t\t\t\tthis.battle.add('-message', `Santa invigorated ${pokemon.name} with energy!`);\r\n\t\t\t\tthis.battle.heal(pokemon.baseMaxhp / 4, pokemon);\r\n\t\t\t} else if (n < 69) {\r\n\t\t\t\tthis.battle.add('-message', `Santa decorated ${pokemon.name} with a bow!`);\r\n\t\t\t\tconst bestStat = pokemon.getBestStat(true, true);\r\n\t\t\t\tthis.battle.boost({[bestStat]: 1}, pokemon);\r\n\t\t\t} else if (n < 84) {\r\n\t\t\t\tthis.battle.add('-message', `Santa filled ${pokemon.name} with holiday spirit!`);\r\n\t\t\t\tpokemon.addVolatile('focusenergy');\r\n\t\t\t} else if (n < 99) {\r\n\t\t\t\tthis.battle.add('-message', `Santa filled ${pokemon.name} with holiday spirit!`);\r\n\t\t\t\tpokemon.addVolatile('helpinghand');\r\n\t\t\t} else {\r\n\t\t\t\tthis.battle.add('-message', `Santa granted ${pokemon.name} a Christmas miracle!`);\r\n\t\t\t\tif (!pokemon.side.pokemon.filter(ally => ally.fainted).length) this.battle.add('-message', `But ${pokemon.name} didn't need one!`);\r\n\t\t\t\tconst newMove = this.battle.dex.getActiveMove('revivalblessing');\r\n\t\t\t\tconst newSet = {\r\n\t\t\t\t\tname: 'Mew',\r\n\t\t\t\t\tspecies: 'Mew',\r\n\t\t\t\t\titem: 'Soothe Bell',\r\n\t\t\t\t\tability: 'Natural Cure',\r\n\t\t\t\t\tmoves: [ 'Revival Blessing' ],\r\n\t\t\t\t\tnature: 'Calm',\r\n\t\t\t\t\tevs: { hp: 252, atk: 0, def: 128, spa: 0, spd: 128, spe: 0 },\r\n\t\t\t\t\tgender: 'N',\r\n\t\t\t\t\tivs: { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 },\r\n\t\t\t\t\thappiness: 255,\r\n\t\t\t\t\thpType: '',\r\n\t\t\t\t\tpokeball: '',\r\n\t\t\t\t\tgigantamax: false,\r\n\t\t\t\t\tdynamaxLevel: 10,\r\n\t\t\t\t\tteraType: 'Ice',\r\n\t\t\t\t\tlevel: 100\r\n\t\t\t\t};\r\n\t\t\t\tconst newMon = new Pokemon(newSet, pokemon.side);\r\n\t\t\t\tthis.battle.add('-anim', pokemon, \"Revival Blessing\", pokemon);\r\n\t\t\t\tthis.battle.actions.useMove(newMove, newMon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tpunish() {\r\n\t\t\tif (!this.active) {\r\n\t\t\t\tthis.battle.add('-message', \"But there was no one home...\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst n = this.battle.random(100);\r\n\t\t\tconst pokemon = this.active[0];\r\n\t\t\tif (n < 40) {\r\n\t\t\t\tthis.battle.add('-message', `Santa gave ${this.name} coal!`);\r\n\t\t\t\tthis.battle.add('-anim', pokemon, \"G-Max Volcalith\", pokemon);\r\n\t\t\t\tthis.addSideCondition('gmaxvolcalith');\r\n\t\t\t} else if (n < 60) {\r\n\t\t\t\tthis.battle.add('-message', `Santa lectured ${pokemon.name} about right and wrong!`);\r\n\t\t\t\tconst bestStat = pokemon.getBestStat(true, true);\r\n\t\t\t\tthis.battle.boost({[bestStat]: -1}, pokemon);\r\n\t\t\t} else if (n < 80) {\r\n\t\t\t\tthis.battle.add('-message', `Santa sent a chilling breeze!`);\r\n\t\t\t\tpokemon.addVolatile('hypothermia');\r\n\t\t\t} else if (n < 90) {\r\n\t\t\t\tthis.battle.add('-message', `Santa passed down chilling judgement!`);\r\n\t\t\t\tconst newMove = this.battle.dex.getActiveMove('judgment');\r\n\t\t\t\tconst newSet = {\r\n\t\t\t\t\tname: 'Santa',\r\n\t\t\t\t\tspecies: 'Mew',\r\n\t\t\t\t\titem: 'Icicle Plate',\r\n\t\t\t\t\tability: 'Slush Rush',\r\n\t\t\t\t\tmoves: [ 'Judgment' ],\r\n\t\t\t\t\tnature: 'Serious',\r\n\t\t\t\t\tevs: { hp: 85, atk: 85, def: 85, spa: 85, spd: 85, spe: 85 },\r\n\t\t\t\t\tgender: 'N',\r\n\t\t\t\t\tivs: { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 },\r\n\t\t\t\t\thappiness: 255,\r\n\t\t\t\t\thpType: '',\r\n\t\t\t\t\tpokeball: '',\r\n\t\t\t\t\tgigantamax: false,\r\n\t\t\t\t\tdynamaxLevel: 10,\r\n\t\t\t\t\tteraType: 'Ice',\r\n\t\t\t\t\tlevel: 100\r\n\t\t\t\t};\r\n\t\t\t\tconst newMon = new Pokemon(newSet, pokemon.side);\r\n\t\t\t\tthis.battle.add('-anim', pokemon, \"Judgment\", pokemon);\r\n\t\t\t\tthis.battle.actions.useMove(newMove, newMon, pokemon);\r\n\t\t\t} else if (n < 95) {\r\n\t\t\t\tthis.battle.add('-message', `Santa gave ${this.name} coal!`);\r\n\t\t\t\tthis.battle.add('-anim', pokemon, \"Stealth Rock\", pokemon);\r\n\t\t\t\tthis.addSideCondition('stealthrock');\r\n\t\t\t} else if (n < 99) {\r\n\t\t\t\tthis.battle.add('-message', `Santa sent a chilling breeze!`);\r\n\t\t\t\tthis.battle.add('-message', `${pokemon.name} became frozen!`);\r\n\t\t\t\tpokemon.setStatus('frz');\r\n\t\t\t} else {\r\n\t\t\t\tthis.battle.add('-message', `Santa took out his hammer!`);\r\n\t\t\t\tconst newMove = this.battle.dex.getActiveMove('gigatonhammer');\r\n\t\t\t\tconst newSet = {\r\n\t\t\t\t\tname: 'Santa',\r\n\t\t\t\t\tspecies: 'Mew',\r\n\t\t\t\t\titem: 'Metal Coat',\r\n\t\t\t\t\tability: 'Mold Breaker',\r\n\t\t\t\t\tmoves: [ 'Gigaton Hammer' ],\r\n\t\t\t\t\tnature: 'Adamant',\r\n\t\t\t\t\tevs: { hp: 252, atk: 252, def: 4, spa: 0, spd: 0, spe: 0 },\r\n\t\t\t\t\tgender: 'N',\r\n\t\t\t\t\tivs: { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 },\r\n\t\t\t\t\thappiness: 255,\r\n\t\t\t\t\thpType: '',\r\n\t\t\t\t\tpokeball: '',\r\n\t\t\t\t\tgigantamax: false,\r\n\t\t\t\t\tdynamaxLevel: 10,\r\n\t\t\t\t\tteraType: 'Ice',\r\n\t\t\t\t\tlevel: 100\r\n\t\t\t\t};\r\n\t\t\t\tconst newMon = new Pokemon(newSet, pokemon.side);\r\n\t\t\t\tthis.battle.add('-anim', pokemon, \"Gigaton Hammer\", pokemon);\r\n\t\t\t\tthis.battle.actions.useMove(newMove, newMon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpokemon: {\r\n\t\tinherit: true,\r\n\t\thasAbility(ability) {\r\n\t\t\tif (this.ignoringAbility()) return false;\r\n\t\t\tif (Array.isArray(ability)) return ability.some(abil => this.hasAbility(abil));\r\n\t\t\tconst abilityid = this.battle.toID(ability);\r\n\t\t\treturn this.ability === abilityid || !!this.volatiles['ability:' + abilityid];\r\n\t\t},\r\n\t\tsetStatus(\r\n\t\tstatus: string | Condition,\r\n\t\tsource: Pokemon | null = null,\r\n\t\tsourceEffect: Effect | null = null,\r\n\t\tignoreImmunities = false\r\n\t\t) {\r\n\t\t\tif (!this.hp) return false;\r\n\t\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\t\tif (this.battle.event) {\r\n\t\t\t\tif (!source) source = this.battle.event.source;\r\n\t\t\t\tif (!sourceEffect) sourceEffect = this.battle.effect;\r\n\t\t\t}\r\n\t\t\tif (!source) source = this;\r\n\r\n\t\t\tif (this.status === status.id) {\r\n\t\t\t\tif ((sourceEffect as Move)?.status === this.status) {\r\n\t\t\t\t\tthis.battle.add('-fail', this, this.status);\r\n\t\t\t\t} else if ((sourceEffect as Move)?.status) {\r\n\t\t\t\t\tthis.battle.add('-fail', source);\r\n\t\t\t\t\tthis.battle.attrLastMove('[still]');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!ignoreImmunities && status.id &&\r\n\t\t\t\t\t!(source?.hasAbility('permafrost') && ['frz', 'fsb'].includes(status.id))) {\r\n\t\t\t\t// the game currently never ignores immunities\r\n\t\t\t\tif (!this.runStatusImmunity('fsb')) {\r\n\t\t\t\t\tthis.battle.debug('immune to status');\r\n\t\t\t\t\tif ((sourceEffect as Move)?.status) {\r\n\t\t\t\t\t\tthis.battle.add('-immune', this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst prevStatus = this.status;\r\n\t\t\tconst prevStatusState = this.statusState;\r\n\t\t\tif (status.id) {\r\n\t\t\t\tconst result: boolean = this.battle.runEvent('SetStatus', this, source, sourceEffect, status);\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\tthis.battle.debug('set status [' + status.id + '] interrupted');\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.status = status.id;\r\n\t\t\tthis.statusState = {id: status.id, target: this};\r\n\t\t\tif (source) this.statusState.source = source;\r\n\t\t\tif (status.duration) this.statusState.duration = status.duration;\r\n\t\t\tif (status.durationCallback) {\r\n\t\t\t\tthis.statusState.duration = status.durationCallback.call(this.battle, this, source, sourceEffect);\r\n\t\t\t}\r\n\r\n\t\t\tif (status.id && !this.battle.singleEvent('Start', status, this.statusState, this, source, sourceEffect)) {\r\n\t\t\t\tthis.battle.debug('status start [' + status.id + '] interrupted');\r\n\t\t\t\t// cancel the setstatus\r\n\t\t\t\tthis.status = prevStatus;\r\n\t\t\t\tthis.statusState = prevStatusState;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (status.id && !this.battle.runEvent('AfterSetStatus', this, source, sourceEffect, status)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t},\r\n};"],
  "mappings": "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",
  "names": ["target", "basePower"]
}
