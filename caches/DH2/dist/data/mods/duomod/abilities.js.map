{
  "version": 3,
  "sources": ["../../../../data/mods/duomod/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tangler: {\r\n\t\tdesc: \"If the user is hit by a Water-type move, they take 0.25x damage from it and the opponent recieves recoil equal to the damage dealt.\",\r\n\t\tshortDesc: \"User takes quartered damage from water; attacker receives major recoil.\",\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.damage(target.getUndynamaxedHP(damage) / 2, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Angler\",\r\n\t\trating: 2,\r\n\t\tnum: 1.1,\r\n\t},\r\n\tdeteriorate: {\r\n\t\tdesc: \"This Pokemon loses 1/6th of its max HP each turn.\",\r\n\t\tshortDesc: \"This Pokemon loses 1/6th of its max HP each turn.\",\r\n   \t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 6, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Deteriorate\",\r\n\t\trating: -1,\r\n\t\tnum: 7.1,\r\n\t},\r\n\thypeoverload: {\r\n\t\tshortDesc: \"Measures the user's hype level at the end of each turn.\",\r\n\t\tname: \"Hype Overload\",\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst result = this.random(10);\r\n\t\t\tif (result === 0) {\r\n\t\t\t\tthis.hint(\"Hype Level: 1 out of 10...\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Rest\", pokemon);\r\n\t\t\t} else if (result === 1) {\r\n\t\t\t\tthis.hint(\"Hype Level: 2 out of 10...\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Sleep Talk\", pokemon);\r\n\t\t\t} else if (result === 2) {\r\n\t\t\t\tthis.hint(\"Hype Level: 3 out of 10...\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Celebrate\", pokemon);\r\n\t\t\t} else if (result === 3) {\r\n\t\t\t\tthis.hint(\"Hype Level: 4 out of 10.\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Celebrate\", pokemon);\r\n\t\t\t} else if (result === 4) {\r\n\t\t\t\tthis.hint(\"Hype Level: 5 out of 10.\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Celebrate\", pokemon);\r\n\t\t\t} else if (result === 5) {\r\n\t\t\t\tthis.hint(\"Hype Level: 6 out of 10.\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Celebrate\", pokemon);\r\n\t\t\t} else if (result === 6) {\r\n\t\t\t\tthis.hint(\"Hype Level: 7 out of 10!\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Focus Energy\", pokemon);\r\n\t\t\t} else if (result === 7) {\r\n\t\t\t\tthis.hint(\"Hype Level: 8 out of 10!\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Agility\", pokemon);\r\n\t\t\t} else if (result === 8) {\r\n\t\t\t\tthis.hint(\"Hype Level: 9 OUT OF 10!\");\r\n\t\t\t\t//\t\t\t\tthis.useMove(\"Spinning Web\", pokemon);\r\n\t\t\t} else {\r\n\t\t\t\tthis.hint(\"Hype level: 10 OUT OF 10!!!!!\");\r\n\t\t\t\tthis.boost({atk: 2}, pokemon, pokemon, null, true);\r\n\t\t\t\tthis.useMove(\"Explosion\", pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 2.5,\r\n\t\tnum: 10.1,\r\n\t},\r\n\r\n\tdeathscall: {\r\n\t\tshortDesc: \"All active Pokemon become trapped.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-fieldactivate', 'move: Fairy Lock');\r\n\t\t},\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.tryTrap();\r\n\t\t  },\r\n    \t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (!pokemon.hasAbility('shadowtag') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.hasAbility('shadowtag')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Deaths Call\",\r\n\t\trating: 4,\r\n\t\tnum: 14.1,\r\n\t},\r\n\r\n\r\n\tpoweroftwo: {\r\n\t\tshortDesc: \"If this Pokemon has two moves or less, its power boosts by 1.3x\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.moveSlots.length < 3) {\r\n\t\t\t\tthis.debug('Power of Two boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.moveSlots.length < 3) {\r\n\t\t\t\tthis.debug('Power of Two boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Power of Two\",\r\n\t\trating: 2,\r\n\t\tnum: 18.1,\r\n\t},\r\n\r\n\tfortification: {\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.boost({atk: 1, def: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If user is hit below half HP, boosts Atk + Def.\",\r\n\t\tname: \"Fortification\",\r\n\t\trating: 2,\r\n\t\tnum: 20121,\r\n\t},\r\n\r\n\tbirdup: {\r\n\t\tshortDesc: \"The user is a Bird.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Grass\" ? \"Flying\" : type));\r\n\t\t\tthis.add('-start', pokemon, 'typechange', 'Flying');\r\n\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying', '[from] ability: Bird Up');\r\n\t\t},\r\n\t\tname: \"Bird Up\",\r\n\t\trating: 4,\r\n\t\tnum: 3001,\r\n\t},\r\n\tbootlegregen: {\r\n\t\tshortDesc: \"This Pokemon restores a random amount of HP when it switches out.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tconst result = this.random(10);\r\n\t\t\tpokemon.heal(((result + 11) * pokemon.baseMaxhp) / 100, pokemon);\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst result = this.random(10);\r\n\t\t\tthis.heal((result * pokemon.baseMaxhp) / 100, pokemon);\r\n\t\t},\r\n\t\tname: \"Bootleg Regen\",\r\n\t\trating: 4.5,\r\n\t\tnum: 3002,\r\n\t},\r\n\tlostmemory: {\r\n\t\tshortDesc: \"On switch, the user learns the used move if it has empty moveslots.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst move = this.lastMove;\r\n\t\t\tif (move === null) return;\r\n\t\t\tif (pokemon.moveSlots.length < 4) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tif (pokemon.moveSlots.length < 0) return false;\r\n\t\t\t\tconst learnedMove = {\r\n\t\t\t\t\tmove: move.name,\r\n\t\t\t\t\tid: move.id,\r\n\t\t\t\t\tpp: move.pp,\r\n\t\t\t\t\tmaxpp: move.pp,\r\n\t\t\t\t\ttarget: move.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t};\r\n\t\t\t\tpokemon.moveSlots[pokemon.moveSlots.length] = learnedMove;\r\n\t\t\t\tpokemon.baseMoveSlots[pokemon.moveSlots.length - 1] = learnedMove;\r\n\t\t\t\tthis.add('-start', pokemon, 'Lost Memory', move.name);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lost Memory\",\r\n\t\trating: 3,\r\n\t\tnum: 3004,\r\n\t},\r\n\tobtrusive: {\r\n\t\tshortDesc: \"Prevents the Roulette Wheel from being spun while active.\",\r\n\t\tonAnyTryMove(target, source, effect) {\r\n\t\t\tif (['roulettespin'].includes(effect.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: Obtrusive', effect, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Obtrusive\",\r\n\t\trating: 1,\r\n\t\tnum: 3007,\r\n\t},\r\n\tpatience: {\r\n\t\tshortDesc: \"This Pokemon moves last within priority bracket, but is 1.3x stronger.\",\r\n\t\tonFractionalPriority: -0.1,\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\treturn this.chainModify(1.3);\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\treturn this.chainModify(1.3);\r\n\t\t},\r\n\t\tname: \"Patience\",\r\n\t\trating: -1,\r\n\t\tnum: 100,\r\n\t},\r\n\tqueenofroulette: {\r\n\t\tshortDesc: \"Spins the Roulette Wheel two additional times.\",\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.useMove(\"Roulette Spin\", pokemon);\r\n\t\t\tthis.useMove(\"Roulette Spin\", pokemon);\r\n\t\t},\r\n\t\tname: \"Queen of Roulette\",\r\n\t\trating: 1,\r\n\t\tnum: 3009,\r\n\t},\r\n\tragingbeast: {\r\n\t\tshortDesc: \"The user's highest stat has a 20% chance to rise after each turn.\",\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst result = this.random(5);\r\n\t\t\tif (result === 0) {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in pokemon.storedStats) {\r\n\t\t\t\t\tif (pokemon.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = pokemon.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: 1}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Raging Beast\",\r\n\t\trating: 1,\r\n\t\tnum: 3010,\r\n\t},\r\n\tswagnetpull: {\r\n\t\tshortDesc: \"Prevents randomly-typed foes from choosing to switch.\",\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tconst result = this.random(12);\r\n\t\t\tlet currType = \"???\";\r\n\t\t\tif (result === 0) {\r\n\t\t\t\tcurrType = \"Dark\";\r\n\t\t\t\tthis.hint(\"Dark-types are now being trapped.\");\r\n\t\t\t} else if (result === 1) {\r\n\t\t\t\tcurrType = \"Grass\";\r\n\t\t\t\tthis.hint(\"Grass-types are now being trapped.\");\r\n\t\t\t} else if (result === 2) {\r\n\t\t\t\tcurrType = \"Fire\";\r\n\t\t\t\tthis.hint(\"Fire-types are now being trapped.\");\r\n\t\t\t} else if (result === 3) {\r\n\t\t\t\tcurrType = \"Water\";\r\n\t\t\t\tthis.hint(\"Water-types are now being trapped.\");\r\n\t\t\t} else if (result === 4) {\r\n\t\t\t\tcurrType = \"Electric\";\r\n\t\t\t\tthis.hint(\"Electric-types are now being trapped.\");\r\n\t\t\t} else if (result === 5) {\r\n\t\t\t\tcurrType = \"Ground\";\r\n\t\t\t\tthis.hint(\"Ground-types are now being trapped.\");\r\n\t\t\t} else if (result === 6) {\r\n\t\t\t\tcurrType = \"Flying\";\r\n\t\t\t\tthis.hint(\"Flying-types are now being trapped.\");\r\n\t\t\t} else if (result === 7) {\r\n\t\t\t\tcurrType = \"Dragon\";\r\n\t\t\t\tthis.hint(\"Dragon-types are now being trapped.\");\r\n\t\t\t} else if (result === 8) {\r\n\t\t\t\tcurrType = \"Fairy\";\r\n\t\t\t\tthis.hint(\"Fairy-types are now being trapped.\");\r\n\t\t\t} else if (result === 9) {\r\n\t\t\t\tcurrType = \"Steel\";\r\n\t\t\t\tthis.hint(\"Steel-types are now being trapped.\");\r\n\t\t\t} else if (result === 10) {\r\n\t\t\t\tcurrType = \"Bug\";\r\n\t\t\t\tthis.hint(\"Bug-types are now being trapped.\");\r\n\t\t\t} else if (result === 11) {\r\n\t\t\t\tcurrType = \"Poison\";\r\n\t\t\t\tthis.hint(\"Poison-types are now being trapped.\");\r\n\t\t\t}\r\n\t\t\tif (pokemon.hasType(currType)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tpokemon.maybeTrapped = true;\r\n\t\t},\r\n\t\tname: \"Swagnet Pull\",\r\n\t\trating: 4,\r\n\t\tnum: 20,\r\n\t},\r\n\ttoughout: {\r\n\t\tshortDesc: \"If the user survives seven turns, +1 all stats.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('toughout');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['toughout'];\r\n\t\t\tthis.add('-end', pokemon, 'Tough Out', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 7,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Tough Out');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1}, target, target, null, true);\r\n\t\t\t\tthis.add('-end', target, 'Tough Out');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Tough Out\",\r\n\t\trating: 4,\r\n\t\tnum: 3011,\r\n\t},\r\n\ttranquilizinggas: {\r\n\t\tshortDesc: \"Yawns both active Pokemon on switchin.\",\r\n\t\tvolatileStatus: 'yawn',\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (pokemon.status || target.status || !target.runStatusImmunity('slp')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.addVolatile('yawn');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target, source) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Tranquilizing Gas', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 19,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Tranquilizing Gas', '[silent]');\r\n\t\t\t\ttarget.trySetStatus('slp', this.effectState.source);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Tranquilizing Gas\",\r\n\t\trating: 4,\r\n\t\tnum: 3012,\r\n\t},\r\n\ttrashbeat: {\r\n\t\tshortDesc: \"User's Sound moves taunt targets.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\t\ttarget.addVolatile('taunt');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\tvolatileStatus: 'taunt',\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (target.activeTurns && !this.queue.willMove(target)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 12,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\tif (move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 5,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && !move.isMax && move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\tthis.add('cant', attacker, 'move: Taunt', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Trash Beat\",\r\n\t\trating: 4,\r\n\t\tnum: 3013,\r\n\t},\r\n\tdropheat: {\r\n\t\tshortDesc: \"User is immune to recoil, lowers all stats of opponents using Sound moves.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.add('-ability', target, 'Drop Heat');\r\n\t\t\t\tthis.boost({atk: -1, def: -1, spa: -1, spd: -1, spe: -1}, source, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Drop Heat\",\r\n\t\trating: 3,\r\n\t\tnum: 3014,\r\n\t},\r\n\tmentalnote: {\r\n\t\tshortDesc: \"User forewarns a random move.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.fainted) return;\r\n\t\t\t\tconst temp = this.sample(target.moveSlots);\r\n\t\t\t\t// const move = target.moves.indexOf(temp.id);\r\n\t\t\t\tthis.add('-message', pokemon.name + \"'s Mental Note revealed the move \" + temp.move + \"!\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mental Note\",\r\n\t\trating: 0.5,\r\n\t\tnum: 3015,\r\n\t},\r\n\tmixitup: {\r\n\t\tshortDesc: \"The user switches after using sound move.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tmove.selfSwitch = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mix it Up\",\r\n\t\trating: 4,\r\n\t\tnum: 3016,\r\n\t},\r\n\tadaptation: {\r\n\t\tshortDesc: \"On switch-in, user gains a type matching its first move.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst type = this.dex.moves.get(pokemon.moveSlots[0].id).type;\r\n\t\t\tif (pokemon.hasType(type) || !pokemon.addType(type)) return false;\r\n\t\t\tthis.add('-start', pokemon, 'typeadd', type);\r\n\t\t},\r\n\t\tname: \"Adaptation\",\r\n\t\trating: 3.5,\r\n\t\tnum: 3017,\r\n\t},\r\n\tvent: {\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 10 && target.hp + damage > target.maxhp / 10) {\r\n\t\t\t\tthis.add('-message', target.name + \" is gonna Vent!\");\r\n\t\t\t\ttarget.switchFlag = true;\r\n\t\t\t\tthis.heal(target.baseMaxhp);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Vent\",\r\n\t\trating: 5,\r\n\t\tnum: 3018,\r\n\t},\r\n\tmagicbody: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 5,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t},\r\n\t\tname: \"Magic Body\",\r\n\t\trating: 5,\r\n\t\tnum: 3019,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
