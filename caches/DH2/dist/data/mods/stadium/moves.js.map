{
  "version": 3,
  "sources": ["../../../../data/mods/stadium/moves.ts"],
  "sourcesContent": ["export const Moves: {[k: string]: ModdedMoveData} = {\r\n\tbind: {\r\n\t\tinherit: true,\r\n\t\t// FIXME: onBeforeMove() {},\r\n\t},\r\n\tclamp: {\r\n\t\tinherit: true,\r\n\t\t// FIXME: onBeforeMove() {},\r\n\t},\r\n\tfirespin: {\r\n\t\tinherit: true,\r\n\t\t// FIXME: onBeforeMove() {},\r\n\t},\r\n\thighjumpkick: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If this attack misses the target, the user takes 1 HP of damage.\",\r\n\t\tshortDesc: \"User takes 1 HP damage it would have dealt if miss.\",\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tif (!target.types.includes('Ghost')) {\r\n\t\t\t\tthis.directDamage(1, source);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\thyperbeam: {\r\n\t\tinherit: true,\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tsource.addVolatile('mustrecharge');\r\n\t\t},\r\n\t},\r\n\tjumpkick: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If this attack misses the target, the user 1HP of damage.\",\r\n\t\tshortDesc: \"User takes 1 HP damage if miss.\",\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tthis.damage(1, source);\r\n\t\t},\r\n\t},\r\n\tleechseed: {\r\n\t\tinherit: true,\r\n\t\tonHit() {},\r\n\t\teffect: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Leech Seed');\r\n\t\t\t},\r\n\t\t\tonAfterMoveSelfPriority: 1,\r\n\t\t\tonAfterMoveSelf(pokemon) {\r\n\t\t\t\tconst leecher = pokemon.side.foe.active[pokemon.volatiles['leechseed'].sourcePosition];\r\n\t\t\t\tif (!leecher || leecher.fainted || leecher.hp <= 0) {\r\n\t\t\t\t\tthis.debug('Nothing to leech into');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst toLeech = this.clampIntRange(Math.floor(pokemon.maxhp / 16), 1);\r\n\t\t\t\tconst damage = this.damage(toLeech, pokemon, leecher);\r\n\t\t\t\tif (damage) this.heal(damage, leecher, pokemon);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trage: {\r\n\t\tinherit: true,\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'rage',\r\n\t\t},\r\n\t\teffect: {\r\n\t\t\t// Rage lock\r\n\t\t\tduration: 255,\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tthis.effectState.move = 'rage';\r\n\t\t\t},\r\n\t\t\tonLockMove: 'rage',\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (target.boosts.atk < 6 && move.id === 'disable') {\r\n\t\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.boosts.atk < 6 && move.category !== 'Status') {\r\n\t\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trecover: {\r\n\t\tinherit: true,\r\n\t\theal: null,\r\n\t\tonHit(target) {\r\n\t\t\tif (target.hp === target.maxhp) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), target, target);\r\n\t\t},\r\n\t},\r\n\trest: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\t// Fails if the difference between\r\n\t\t\t// max HP and current HP is 0, 255, or 511\r\n\t\t\tif (target.hp >= target.maxhp) return false;\r\n\t\t\tif (!target.setStatus('slp', source, move)) return false;\r\n\t\t\ttarget.statusData.time = 2;\r\n\t\t\ttarget.statusData.startTime = 2;\r\n\t\t\tthis.heal(target.maxhp); // Aesthetic only as the healing happens after you fall asleep in-game\r\n\t\t},\r\n\t},\r\n\tsoftboiled: {\r\n\t\tinherit: true,\r\n\t\theal: null,\r\n\t\tonHit(target) {\r\n\t\t\t// Fail when health is 255 or 511 less than max\r\n\t\t\tif (target.hp === target.maxhp) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), target, target);\r\n\t\t},\r\n\t},\r\n\tsubstitute: {\r\n\t\tinherit: true,\r\n\t\teffect: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'Substitute');\r\n\t\t\t\tthis.effectState.hp = Math.floor(target.maxhp / 4);\r\n\t\t\t\tdelete target.volatiles['partiallytrapped'];\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: -1,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (target === source) {\r\n\t\t\t\t\tthis.debug('sub bypass: self hit');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.drain) {\r\n\t\t\t\t\tthis.add('-miss', source);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\tconst SubBlocked = ['leechseed', 'lockon', 'mindreader', 'nightmare'];\r\n\t\t\t\t\tif (move.status || move.boosts || move.volatileStatus === 'confusion' || SubBlocked.includes(move.id)) {\r\n\t\t\t\t\t\tthis.add('-activate', target, 'Substitute', '[block] ' + move.name);\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.volatileStatus && target === source) return;\r\n\t\t\t\tlet damage = this.getDamage(source, target, move);\r\n\t\t\t\tif (!damage) return null;\r\n\t\t\t\tdamage = this.runEvent('SubDamage', target, source, move, damage);\r\n\t\t\t\tif (!damage) return damage;\r\n\t\t\t\ttarget.volatiles['substitute'].hp -= damage;\r\n\t\t\t\tsource.lastDamage = damage;\r\n\t\t\t\tif (target.volatiles['substitute'].hp <= 0) {\r\n\t\t\t\t\tthis.debug('Substitute broke');\r\n\t\t\t\t\ttarget.removeVolatile('substitute');\r\n\t\t\t\t\ttarget.subFainted = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'Substitute', '[damage]');\r\n\t\t\t\t}\r\n\t\t\t\t// Drain/recoil does not happen if the substitute breaks\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tif (move.recoil) {\r\n\t\t\t\t\t\tthis.damage(Math.round(damage * move.recoil[0] / move.recoil[1]), source, target, 'recoil');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('AfterSubDamage', target, source, move, damage);\r\n\t\t\t\t// Add here counter damage\r\n\t\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\t\tif (!lastAttackedBy) {\r\n\t\t\t\t\ttarget.attackedBy.push({source: source, move: move.id, damage: damage, thisTurn: true});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlastAttackedBy.move = move.id;\r\n\t\t\t\t\tlastAttackedBy.damage = damage;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Substitute');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\twrap: {\r\n\t\tinherit: true,\r\n\t\t// FIXME: onBeforeMove() {},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
