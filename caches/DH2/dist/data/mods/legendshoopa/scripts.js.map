{
  "version": 3,
  "sources": ["../../../../data/mods/legendshoopa/scripts.ts"],
  "sourcesContent": ["export const Scripts: {[k: string]: ModdedBattleScriptsData} = {\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['ANL OU', 'ANL NFE', 'ANL LC'],\r\n\t},\r\n\r\n\tinit() { // pasted in by Hematite because I am far too lazy to manage learnsets.ts\r\n\t\tdelete this.modData('Learnsets', 'crustle').learnset.gigaimpact;\r\n\t\tdelete this.modData('Learnsets', 'crustle').learnset.hyperbeam;\r\n\t\tthis.modData('Learnsets', 'lanturn').learnset.thunderfang = [\"8M\"];\r\n\t\tthis.modData('Learnsets', 'kecleon').learnset.camoscope = [\"8M\"];\r\n\t\tthis.modData('Learnsets', 'tropius').learnset.berryblast = [\"8M\"];\r\n\t\tfor (const id in this.dataCache.Pokedex) {\r\n\t\t\tconst newMon = this.dataCache.Pokedex[id];\r\n\t\t\tif (!newMon || !newMon.copyData) continue; // weeding out Pok\u00E9mon that aren't specifically using this feature\r\n\t\t\tconst copyData = this.dataCache.Pokedex[this.toID(newMon.copyData)];\r\n\r\n\t\t\tif (!newMon.types && copyData.types) newMon.types = copyData.types;\r\n\t\t\tif (!newMon.baseStats && copyData.baseStats) newMon.baseStats = copyData.baseStats;\r\n\t\t\tif (!newMon.abilities && copyData.abilities) newMon.abilities = copyData.abilities;\r\n\t\t\tif (!newMon.num && copyData.num) newMon.num = copyData.num * -1; // inverting the original's dex number\r\n\t\t\tif (!newMon.genderRatio && copyData.genderRatio) newMon.genderRatio = copyData.genderRatio;\r\n\t\t\tif (!newMon.heightm && copyData.heightm) newMon.heightm = copyData.heightm;\r\n\t\t\tif (!newMon.weightkg && copyData.weightkg) newMon.weightkg = copyData.weightkg;\r\n\t\t\tif (!newMon.color && copyData.color) newMon.color = copyData.color;\r\n\t\t\tif (!newMon.eggGroups && copyData.eggGroups) newMon.eggGroups = copyData.eggGroups;\r\n\r\n\t\t\tlet copyMoves = newMon.copyData;\r\n\t\t\tif (newMon.copyMoves) copyMoves = newMon.copyMoves;\r\n\t\t\tif (copyMoves) {\r\n\t\t\t\tif (!this.dataCache.Learnsets[id]) this.dataCache.Learnsets[id] = {learnset: {}};\r\n\t\t\t\tconst learnset = this.dataCache.Learnsets[this.toID(copyMoves)].learnset;\r\n\t\t\t\tfor (const moveid in learnset) {\r\n\t\t\t\t\tthis.modData('Learnsets', id).learnset[moveid] = learnset[moveid];\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolAdditions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolAdditions) {\r\n\t\t\t\t\t\tthis.modData('Learnsets', this.toID(id)).learnset[this.toID(move)] = [\"8M\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolDeletions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolDeletions) {\r\n\t\t\t\t\t\tdelete this.modData('Learnsets', this.toID(id)).learnset[this.toID(move)];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\thitStepAccuracy(targets, pokemon, move) {\r\n\t\tconst hitResults = [];\r\n\t\tfor (const [i, target] of targets.entries()) {\r\n\t\t\tthis.activeTarget = target;\r\n\t\t\t// calculate true accuracy\r\n\t\t\tlet accuracy = move.accuracy;\r\n\t\t\tif (move.ohko) { // bypasses accuracy modifiers\r\n\t\t\t\tif (!target.isSemiInvulnerable()) {\r\n\t\t\t\t\taccuracy = 30;\r\n\t\t\t\t\tif (move.ohko === 'Ice' && this.gen >= 7 && !pokemon.hasType('Ice')) {\r\n\t\t\t\t\t\taccuracy = 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!target.volatiles['dynamax'] && pokemon.level >= target.level &&\r\n\t\t\t\t\t\t(move.ohko === true || !target.hasType(move.ohko))) {\r\n\t\t\t\t\t\taccuracy += (pokemon.level - target.level);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-immune', target, '[ohko]');\r\n\t\t\t\t\t\thitResults[i] = false;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst boostTable = [1, 4 / 3, 5 / 3, 2, 7 / 3, 8 / 3, 3];\r\n\r\n\t\t\t\tlet boosts;\r\n\t\t\t\tlet boost!: number;\r\n\t\t\t\tif (accuracy !== true) {\r\n\t\t\t\t\tif (!move.ignoreAccuracy) {\r\n\t\t\t\t\t\tboosts = this.runEvent('ModifyBoost', pokemon, null, null, {...pokemon.boosts});\r\n\t\t\t\t\t\tboost = this.clampIntRange(boosts['accuracy'], -6, 6);\r\n\t\t\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\t\t\taccuracy *= boostTable[boost];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\taccuracy /= boostTable[-boost];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!move.ignoreEvasion) {\r\n\t\t\t\t\t\tboosts = this.runEvent('ModifyBoost', target, null, null, {...target.boosts});\r\n\t\t\t\t\t\tboost = this.clampIntRange(boosts['evasion'], -6, 6);\r\n\t\t\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\t\t\taccuracy /= boostTable[boost];\r\n\t\t\t\t\t\t} else if (boost < 0) {\r\n\t\t\t\t\t\t\taccuracy *= boostTable[-boost];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\taccuracy = this.runEvent('ModifyAccuracy', target, pokemon, move, accuracy);\r\n\t\t\t}\r\n\t\t\tif (move.alwaysHit || (move.id === 'toxic' && this.gen >= 6 && pokemon.hasType('Poison'))) {\r\n\t\t\t\taccuracy = true; // bypasses ohko accuracy modifiers\r\n\t\t\t} else {\r\n\t\t\t\taccuracy = this.runEvent('Accuracy', target, pokemon, move, accuracy);\r\n\t\t\t}\r\n\t\t\tif (accuracy !== true && !this.randomChance(accuracy, 100)) {\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!move.spreadHit) this.attrLastMove('[miss]');\r\n\t\t\t\t\tthis.add('-miss', pokemon, target);\r\n\t\t\t\t}\r\n\t\t\t\tif (!move.ohko && pokemon.hasItem('blunderpolicy') && pokemon.useItem()) {\r\n\t\t\t\t\tthis.boost({spe: 2}, pokemon);\r\n\t\t\t\t}\r\n\t\t\t\thitResults[i] = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (move.secondaries && move.id !== 'secretpower') {\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.status !== ('brn' || 'par' || 'tox' || 'psn' || 'frz')) return;\r\n\t\t\t\t\t// this.add('-curestatus', target, target.status, '[Silent]');\r\n\t\t\t\t\ttarget.setStatus('');\r\n\t\t\t\t}\r\n\t\t\t}\telse if (move.status) {\r\n\t\t\t\t// this.add('-curestatus', target, target.status, '[Silent]');\r\n\t\t\t\ttarget.setStatus('');\r\n\t\t\t}\r\n\t\t\thitResults[i] = true;\r\n\t\t}\r\n\t\treturn hitResults;\r\n\t},\r\n\r\n\tcalculateStat(statName: StatNameExceptHP, boost: number, modifier?: number) {\r\n\t\tstatName = toID(statName) as StatNameExceptHP;\r\n\t\t// @ts-ignore - type checking prevents 'hp' from being passed, but we're paranoid\r\n\t\tif (statName === 'hp') throw new Error(\"Please read `maxhp` directly\");\r\n\r\n\t\t// base stat\r\n\t\tlet stat = this.storedStats[statName];\r\n\r\n\t\t// Wonder Room swaps defenses before calculating anything else\r\n\t\tif ('wonderroom' in this.battle.field.pseudoWeather) {\r\n\t\t\tif (statName === 'def') {\r\n\t\t\t\tstat = this.storedStats['spd'];\r\n\t\t\t} else if (statName === 'spd') {\r\n\t\t\t\tstat = this.storedStats['def'];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// stat boosts\r\n\t\tlet boosts: SparseBoostsTable = {};\r\n\t\tconst boostName = statName as BoostName;\r\n\t\tboosts[boostName] = boost;\r\n\t\tboosts = this.battle.runEvent('ModifyBoost', this, null, null, boosts);\r\n\t\tboost = boosts[boostName]!;\r\n\t\tconst boostTable = [1, 1.5];\r\n\t\tif (boost > 1) boost = 1;\r\n\t\tif (boost < -1) boost = -1;\r\n\t\tif (boost >= 0) {\r\n\t\t\tstat = Math.floor(stat * boostTable[boost]);\r\n\t\t} else {\r\n\t\t\tstat = Math.floor(stat / boostTable[-boost]);\r\n\t\t}\r\n\r\n\t\t// stat modifier\r\n\t\treturn this.battle.modify(stat, (modifier || 1));\r\n\t},\r\n\r\n\tgetStat(statName: StatNameExceptHP, unboosted?: boolean, unmodified?: boolean) {\r\n\t\tstatName = toID(statName) as StatNameExceptHP;\r\n\t\t// @ts-ignore - type checking prevents 'hp' from being passed, but we're paranoid\r\n\t\tif (statName === 'hp') throw new Error(\"Please read `maxhp` directly\");\r\n\r\n\t\t// base stat\r\n\t\tlet stat = this.storedStats[statName];\r\n\r\n\t\t// Download ignores Wonder Room's effect, but this results in\r\n\t\t// stat stages being calculated on the opposite defensive stat\r\n\t\tif (unmodified && 'wonderroom' in this.battle.field.pseudoWeather) {\r\n\t\t\tif (statName === 'def') {\r\n\t\t\t\tstatName = 'spd';\r\n\t\t\t} else if (statName === 'spd') {\r\n\t\t\t\tstatName = 'def';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// stat boosts\r\n\t\tif (!unboosted) {\r\n\t\t\tconst boosts = this.battle.runEvent('ModifyBoost', this, null, null, {...this.boosts});\r\n\t\t\tlet boost = boosts[statName];\r\n\t\t\tconst boostTable = [1, 1.5];\r\n\t\t\tif (boost > 1) boost = 1;\r\n\t\t\tif (boost < -1) boost = -1;\r\n\t\t\tif (boost >= 0) {\r\n\t\t\t\tstat = Math.floor(stat * boostTable[boost]);\r\n\t\t\t} else {\r\n\t\t\t\tstat = Math.floor(stat / boostTable[-boost]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// stat modifier effects\r\n\t\tif (!unmodified) {\r\n\t\t\tconst statTable: {[s in StatNameExceptHP]?: string} = {atk: 'Atk', def: 'Def', spa: 'SpA', spd: 'SpD', spe: 'Spe'};\r\n\t\t\tstat = this.battle.runEvent('Modify' + statTable[statName], this, null, null, stat);\r\n\t\t}\r\n\r\n\t\tif (statName === 'spe' && stat > 10000) stat = 10000;\r\n\t\treturn stat;\r\n\t},\r\n\r\n\theal(damage: number, target?: Pokemon, source: Pokemon | null = null, effect: 'drain' | Effect | null = null) {\r\n\t\tif (this.event) {\r\n\t\t\tif (!target) target = this.event.target;\r\n\t\t\tif (!source) source = this.event.source;\r\n\t\t\tif (!effect) effect = this.effect;\r\n\t\t}\r\n\t\tif (effect === 'drain') effect = this.dex.getEffectByID(effect as ID);\r\n\t\tif (damage && damage <= 1) damage = 1;\r\n\t\tdamage = this.trunc(damage);\r\n\t\t// for things like Liquid Ooze, the Heal event still happens when nothing is healed.\r\n\t\tdamage = this.runEvent('TryHeal', target, source, effect, damage);\r\n\t\tif (!damage) return damage;\r\n\t\tif (!target || !target.hp) return false;\r\n\t\tif (!target.isActive) return false;\r\n\t\tif (target.hp >= target.maxhp) return false;\r\n\t\tconst finalDamage = target.heal(damage, source, effect);\r\n\t\tswitch (effect?.id) {\r\n\t\tcase 'leechseed':\r\n\t\t\t/*\r\n\t\tcase 'rest':\r\n\t\t\tthis.add('-heal', target, target.getHealth, '[silent]');\r\n\t\t\tbreak;\r\n\t\t*/\r\n\t\tcase 'drain':\r\n\t\t\tthis.add('-heal', target, target.getHealth, '[from] drain', '[of] ' + source);\r\n\t\t\tbreak;\r\n\t\tcase 'wish':\r\n\t\t\tbreak;\r\n\t\tcase 'zpower':\r\n\t\t\tthis.add('-heal', target, target.getHealth, '[zeffect]');\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tif (!effect) break;\r\n\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-heal', target, target.getHealth);\r\n\t\t\t} else if (source && source !== target) {\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] ' + effect.fullname, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] ' + effect.fullname);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.runEvent('Heal', target, source, effect, finalDamage);\r\n\t\treturn finalDamage;\r\n\t},\r\n\r\n\tpokemon: {\r\n\t\tboostBy(boosts: SparseBoostsTable) {\r\n\t\t\tlet delta = 0;\r\n\t\t\tlet boostName: BoostName;\r\n\t\t\tfor (boostName in boosts) {\r\n\t\t\t\tdelta = boosts[boostName]!;\r\n\t\t\t\tthis.boosts[boostName] += delta;\r\n\t\t\t\tif (this.boosts[boostName] > 1) {\r\n\t\t\t\t\tdelta -= this.boosts[boostName] - 1;\r\n\t\t\t\t\tthis.boosts[boostName] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.boosts[boostName] < -1) {\r\n\t\t\t\t\tdelta -= this.boosts[boostName] - (-1);\r\n\t\t\t\t\tthis.boosts[boostName] = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn delta;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tgetStat(statName: StatNameExceptHP, unboosted?: boolean, unmodified?: boolean) {\r\n\t\t\tstatName = toID(statName) as StatNameExceptHP;\r\n\t\t\t// @ts-ignore - type checking prevents 'hp' from being passed, but we're paranoid\r\n\t\t\tif (statName === 'hp') throw new Error(\"Please read `maxhp` directly\");\r\n\r\n\t\t\t// base stat\r\n\t\t\tlet stat = this.storedStats[statName];\r\n\r\n\t\t\t// Download ignores Wonder Room's effect, but this results in\r\n\t\t\t// stat stages being calculated on the opposite defensive stat\r\n\t\t\tif (unmodified && 'wonderroom' in this.battle.field.pseudoWeather) {\r\n\t\t\t\tif (statName === 'def') {\r\n\t\t\t\t\tstatName = 'spd';\r\n\t\t\t\t} else if (statName === 'spd') {\r\n\t\t\t\t\tstatName = 'def';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// stat boosts\r\n\t\t\tif (!unboosted) {\r\n\t\t\t\tconst boosts = this.battle.runEvent('ModifyBoost', this, null, null, {...this.boosts});\r\n\t\t\t\tlet boost = boosts[statName];\r\n\t\t\t\tconst boostTable = [1, 1.5];\r\n\t\t\t\tif (boost > 1) boost = 1;\r\n\t\t\t\tif (boost < -1) boost = -1;\r\n\t\t\t\tif (boost >= 0) {\r\n\t\t\t\t\tstat = Math.floor(stat * boostTable[boost]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstat = Math.floor(stat / boostTable[-boost]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// stat modifier effects\r\n\t\t\tif (!unmodified) {\r\n\t\t\t\tconst statTable: {[s in StatNameExceptHP]?: string} = {atk: 'Atk', def: 'Def', spa: 'SpA', spd: 'SpD', spe: 'Spe'};\r\n\t\t\t\tstat = this.battle.runEvent('Modify' + statTable[statName], this, null, null, stat);\r\n\t\t\t}\r\n\r\n\t\t\tif (statName === 'spe' && stat > 10000) stat = 10000;\r\n\t\t\treturn stat;\r\n\t\t},\r\n\t\t*/\r\n\r\n\t\tmodifyDamage(\r\n\t\t\tbaseDamage: number, pokemon: Pokemon, target: Pokemon, move: ActiveMove, suppressMessages = false\r\n\t\t) {\r\n\t\t\tconst tr = this.trunc;\r\n\t\t\tif (!move.type) move.type = '???';\r\n\t\t\tconst type = move.type;\r\n\r\n\t\t\tbaseDamage += 2;\r\n\r\n\t\t\t// multi-target modifier (doubles only)\r\n\t\t\tif (move.spreadHit) {\r\n\t\t\t\tconst spreadModifier = move.spreadModifier || (this.gameType === 'free-for-all' ? 0.5 : 0.75);\r\n\t\t\t\tthis.debug('Spread modifier: ' + spreadModifier);\r\n\t\t\t\tbaseDamage = this.modify(baseDamage, spreadModifier);\r\n\t\t\t}\r\n\r\n\t\t\t// weather modifier\r\n\t\t\tbaseDamage = this.runEvent('WeatherModifyDamage', pokemon, target, move, baseDamage);\r\n\r\n\t\t\t// crit - not a modifier\r\n\t\t\tconst isCrit = target.getMoveHitData(move).crit;\r\n\t\t\tif (isCrit) {\r\n\t\t\t\tbaseDamage = tr(baseDamage * (move.critModifier || (this.gen >= 6 ? 1.5 : 2)));\r\n\t\t\t}\r\n\r\n\t\t\t// random factor - also not a modifier\r\n\t\t\tbaseDamage = this.randomizer(baseDamage);\r\n\r\n\t\t\t// STAB\r\n\t\t\tif (move.forceSTAB || (type !== '???' && pokemon.hasType(type))) {\r\n\t\t\t\t// The \"???\" type never gets STAB\r\n\t\t\t\t// Not even if you Roost in Gen 4 and somehow manage to use\r\n\t\t\t\t// Struggle in the same turn.\r\n\t\t\t\t// (On second thought, it might be easier to get a MissingNo.)\r\n\t\t\t\tbaseDamage = this.modify(baseDamage, move.stab || 1.5);\r\n\t\t\t}\r\n\t\t\t// types\r\n\t\t\tlet typeMod = target.runEffectiveness(move);\r\n\t\t\ttypeMod = this.clampIntRange(typeMod, -6, 6);\r\n\t\t\ttarget.getMoveHitData(move).typeMod = typeMod;\r\n\t\t\tif (typeMod > 0) {\r\n\t\t\t\tif (!suppressMessages) this.add('-supereffective', target);\r\n\r\n\t\t\t\tfor (let i = 0; i < typeMod; i++) {\r\n\t\t\t\t\tbaseDamage *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeMod < 0) {\r\n\t\t\t\tif (!suppressMessages) this.add('-resisted', target);\r\n\r\n\t\t\t\tfor (let i = 0; i > typeMod; i--) {\r\n\t\t\t\t\tbaseDamage = tr(baseDamage / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCrit && !suppressMessages) this.add('-crit', target);\r\n\r\n\t\t\tif (pokemon.status === 'brn' && move.category === 'Physical' && !pokemon.hasAbility('guts')) {\r\n\t\t\t\tif (this.gen < 6 || move.id !== 'facade') {\r\n\t\t\t\t\tbaseDamage = this.modify(baseDamage, 0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pokemon.status === 'frz' && move.category === 'Special' && pokemon.hasAbility('guts')) {\r\n\t\t\t\tbaseDamage = this.modify(baseDamage, 0.5);\r\n\t\t\t}\r\n\r\n\t\t\t// Generation 5, but nothing later, sets damage to 1 before the final damage modifiers\r\n\t\t\tif (this.gen === 5 && !baseDamage) baseDamage = 1;\r\n\r\n\t\t\t// Final modifier. Modifiers that modify damage after min damage check, such as Life Orb.\r\n\t\t\tbaseDamage = this.runEvent('ModifyDamage', pokemon, target, move, baseDamage);\r\n\r\n\t\t\tif (move.isZOrMaxPowered && target.getMoveHitData(move).zBrokeProtect) {\r\n\t\t\t\tbaseDamage = this.modify(baseDamage, 0.25);\r\n\t\t\t\tthis.add('-zbroken', target);\r\n\t\t\t}\r\n\r\n\t\t\t// Generation 6-7 moves the check for minimum 1 damage after the final modifier...\r\n\t\t\tif (this.gen !== 5 && !baseDamage) return 1;\r\n\r\n\t\t\t// ...but 16-bit truncation happens even later, and can truncate to 0\r\n\t\t\treturn tr(baseDamage, 16);\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
