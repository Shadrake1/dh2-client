{
  "version": 3,
  "sources": ["../../../../data/mods/smashstereotypes/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tdisperal: {\r\n\t\tshortDesc: \"Boosts Bullet Seed, Seed Bomb, Seed Flare, Apple Acid, and Grav Apple by 1.2x. Leech Seed deals 20% more damage and heals 30% more HP each turn.\",\r\n\t\tonBasePowerPriority: 8,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.name === 'Bullet Seed' || move.name === 'Seed Bomb' || move.name === 'Seed Flare' || move.name === 'Grav Apple' || move.name === 'Apple Acid') {\r\n\t\t\t\treturn this.chainModify(1.2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHealPriority: 1,\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tconst heals = {\r\n\t\t\t\tdrain: 1,\r\n\t\t\t\tleechseed: 1,\r\n\t\t\t\tingrain: 1,\r\n\t\t\t\taquaring: 1,\r\n\t\t\t\tstrengthsap: 1,\r\n\t\t\t};\r\n\t\t\tif (heals[effect.id]) {\r\n\t\t\t\treturn Math.ceil((damage * 1.3) - 0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"disperal\",\r\n\t\tname: \"Disperal\",\r\n\t},\r\n\tecopy: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\r\n\t\t\tif (pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'pillage', 'ecopy', 'lemegeton', 'modeshift',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-ability', pokemon, ability, '[from] ability: E-Copy', '[of] ' + target);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"E-Copy\",\r\n\t\tshortDesc: \"Sets Electric Terrain, and then copies the foe's Ability.\",\r\n\t},\r\n\trkssystem: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.species.id === 'silvallyrock') {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Sand Stream', '[from] ability: RKS System', '[of] ' + pokemon);\r\n\t\t\t\tpokemon.setAbility('sandstream');\r\n\t\t\t\tpokemon.baseAbility = 'sandstream';\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"RKS System\",\r\n\t\tshortDesc: \"If Silvally-Rock, changes to Sand Stream.\",\r\n\t\trating: 4,\r\n\t\tnum: 225,\r\n\t},\r\n\tgrimneigh: {\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (target.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Grim Neigh\",\r\n\t\tshortDesc: \"This Pokemon deals 1.5x damage to burned opponents.\",\r\n\t\trating: 3,\r\n\t\tnum: 265,\r\n\t},\r\n\tteachingtech: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.category === 'Status') return;\r\n\t\t\tconsole.log('Teaching Tech: Move BP = ' + move.basePower);\r\n\t\t\tconst targetAbility = target.getAbility();\r\n\t\t\tif (targetAbility.isPermanent || targetAbility.id === 'teachingtech') return;\r\n\t\t\tif (move.basePower <= 60) {\r\n\t\t\t\tconst oldAbility = target.setAbility('teachingtech', source);\r\n\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Teaching Tech');\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Teaching Tech');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Teaching Tech\",\r\n\t\tshortDesc: \"Moves <=60 BP: 1.5x power. If hitting something with such a move: changes their ability to Teaching Tech.\",\r\n\t},\r\n\tjustifiedsylve: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Dark') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif ((!pokemon.knownType || pokemon.hasType('Dark')) && pokemon.isAdjacent(source)) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Justified (Sylve)\",\r\n\t\tshortDesc: \"Prevents adjacent Dark-type foes from choosing to switch.\",\r\n\t\trating: 2.5,\r\n\t\tnum: 154,\r\n\t},\r\n\tshadowtag: {\r\n\t\tonFoeSwitchOut(source, target) {\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Shadow Tag\",\r\n\t\tshortDesc: \"Opposing Pokemon loose 1/8 of their maximum HP, rounded down, when it switches out.\",\r\n\t\trating: 5,\r\n\t\tnum: 23,\r\n\t},\r\n\tvigilante: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fighting') {\r\n\t\t\t\tthis.debug('Vigilante boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fighting') {\r\n\t\t\t\tthis.debug('Vigilante boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Vigilante\",\r\n\t\tshortDesc: \"This Pokemon's Fighting moves deal 1.5x damage.\",\r\n\t\trating: 3.5,\r\n\t},\r\n\tnaturalheal: {\r\n\t\tid: \"naturalheal\",\r\n\t\tname: \"Natural Heal\",\r\n\t\tshortDesc: \"Restores 1/3 max HP and cures non-volatile status on switch-out.\",\r\n\t\tonCheckShow(pokemon) {\r\n\t\t\t// This is complicated\r\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\r\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\r\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\r\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\r\n\t\t\tif (pokemon.side.active.length === 1) return;\r\n\t\t\tif (pokemon.showCure === true || pokemon.showCure === false) return;\r\n\r\n\t\t\tconst cureList = [];\r\n\t\t\tlet noCureCount = 0;\r\n\t\t\tfor (const curPoke of pokemon.side.active) {\r\n\t\t\t\t// pokemon not statused\r\n\t\t\t\tif (!curPoke || !curPoke.status) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (curPoke.showCure) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Cure already known\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst species = curPoke.species;\r\n\t\t\t\t// pokemon can't get Natural Cure\r\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') && !Object.values(species.abilities).includes('Natural Heal')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Cure\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon's ability is known to be Natural Cure\r\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon isn't switching this turn\r\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curPoke.hasAbility('naturalcure') || curPoke.hasAbility('naturalheal')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (and is)\");\r\n\t\t\t\t\tcureList.push(curPoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (but isn't)\");\r\n\t\t\t\t\tnoCureCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!cureList.length || !noCureCount) {\r\n\t\t\t\t// It's possible to know what pokemon were cured\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// It's not possible to know what pokemon were cured\r\n\r\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\r\n\t\t\t\tthis.add('-message', \"(\" + cureList.length + \" of \" + pokemon.side.name + \"'s pokemon \" + (cureList.length === 1 ? \"was\" : \"were\") + \" cured by Natural Heal.)\");\r\n\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\tif (!pokemon.status) return;\r\n\r\n\t\t\t// if pokemon.showCure is undefined, it was skipped because its ability\r\n\t\t\t// is known\r\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\r\n\r\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Natural Heal');\r\n\t\t\tpokemon.setStatus('');\r\n\r\n\t\t\t// only reset .showCure if it's false\r\n\t\t\t// (once you know a Pokemon has Natural Cure, its cures are always known)\r\n\t\t\tif (!pokemon.showCure) pokemon.showCure = undefined;\r\n\t\t},\r\n\t},\r\n\twonderguard: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && ['stealthrock', 'spikes', 'hail', 'sandstorm', 'lifeorb'].includes(effect.id)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.category === 'Status' || move.type === '???' || move.id === 'struggle') return;\r\n\t\t\tif (move.id === 'skydrop' && !source.volatiles['skydrop']) return;\r\n\t\t\tthis.debug('Wonder Guard immunity: ' + move.id);\r\n\t\t\tif (target.runEffectiveness(move) <= 0) {\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Wonder Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, failskillswap: 1, breakable: 1},\r\n\t\tname: \"Wonder Guard\",\r\n\t\tshortDesc: \"This Pokemon can only be damaged by supereffective moves and status effects.\",\r\n\t\trating: 5,\r\n\t\tnum: 25,\r\n\t},\r\n\tbulletpecks: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet'] || move.name === 'Crunch' || move.name === 'Crush Claw' || move.name === 'Fire Lash' || move.name === 'Grav Apple' || move.name === 'Iron Tail' || move.name === 'Leer' || move.name === 'Liquidation' || move.name === 'Octolock' || move.name === 'Razor Shell' || move.name === 'Rock Smash' || move.name === 'Screech' || move.name === 'Secret Power' || move.name === 'Shadow Bone' || move.name === 'Tail Whip' || move.name === 'Thunderous Kick' || move.name === 'Tickle') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Bulletpecks');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bulletpecks\",\r\n\t\tshortDesc: \"This Pokemon is immune to ballistic moves and moves that lower Defense.\",\r\n\t},\r\n\tignorant: {\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category !== 'Status' && !move.ignoreImmunity) {\r\n\t\t\t\tmove.ignoreImmunity = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ignorant\",\r\n\t\tshortDesc: \"This Pokemon's attacking moves ignore type immunities.\",\r\n\t},\r\n\texecutioner: {\r\n\t\tdesc: \"When this Pok\u00E9mon's target has 1/2 or less of its maximum HP, rounded down, its attacking stat is multiplied by 1.5 while using an attack.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacking stat is 1.5x when its target has 1/2 or less HP.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (defender.hp <= defender.maxhp / 2) {\r\n\t\t\t\tthis.debug('Executioner boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (defender.hp <= defender.maxhp / 2) {\r\n\t\t\t\tthis.debug('Executioner boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Executioner\",\r\n\t\trating: 4,\r\n\t\tnum: -13,\r\n\t},\r\n\ttoxicboost: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif ((attacker.status === 'psn' || attacker.status === 'tox') && move.category === 'Physical') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxic Boost\",\r\n\t\tshortDesc: \"If Pokemon is poisoned, physical attacks have 1.3x power. Immunity to Poison status.\",\r\n\t\trating: 2.5,\r\n\t\tnum: 137,\r\n\t},\r\n\tlowflight: {\r\n\t\tname: \"Low Flight\",\r\n\t\tshortDesc: \"User takes half damage when switching in or at full HP.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (!target.activeTurns) {\r\n\t\t\t\tthis.debug('Low Flight weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t} else if (target.hp >= target.maxhp) {\r\n\t\t\t\tthis.debug('Low Flight weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 0,\r\n\t\tnum: 123009,\r\n\t},\r\n\tmythicalpresence: {\r\n\t\tshortDesc: \"Lowers adjacent opponents' Special Attack on entry.\", // this happened twice independently haha\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Mythical Presence', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mythical Presence\",\r\n\t\trating: 4,\r\n\t\tnum: -1013,\r\n\t},\r\n\tkalibersfury: {\r\n\t\tshortDesc: \"Any attacks with 60 bp or less get a +1 to priority.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move, basePower) {\r\n\t\t\tif (move.category !== \"Status\" && move.basePower <= 60) { return priority + 1; }\r\n\t\t},\r\n\t\tid: \"kalibersfury\",\r\n\t\tname: \"Kaliber's Fury\",\r\n\t},\r\n\tpersistent: {\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Persistent\",\r\n\t\t// implemented in the corresponding move\r\n\t\trating: 3,\r\n\t\tnum: -4,\r\n\t},\r\n\tveteran: {\r\n\t\tshortDesc: \"Sniper + Merciless; If a move crits, it poisons the target.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && ['psn', 'tox'].includes(target.status)) return 5;\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.crit) {\r\n\t\t\t\tthis.debug('Sniper boost');\r\n\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Veteran\",\r\n\t},\r\n\tmythicswordsman: {\r\n\t\tshortDesc: \"The Pok\u00E9mon's contact moves become special.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (move.category !== 'Special') move.category = 'Special';\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mythic Swordsman\",\r\n\t\trating: 3,\r\n\t\tnum: -1012,\r\n\t},\r\n\tgunkmissile: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.transformed || target.isSemiInvulnerable()) return;\r\n\t\t\tif (['cramorantalolagulping', 'cramorantalolagorging'].includes(target.species.id)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\tif (target.species.id === 'cramorantalolagulping') {\r\n\t\t\t\t\tthis.boost({spd: -1}, source, target, null, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.trySetStatus('psn', target, move);\r\n\t\t\t\t}\r\n\t\t\t\ttarget.formeChange('cramorantalola', move);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// The Dive part of this mechanic is implemented in Dive's `onTryMove` in moves.ts\r\n\t\tonSourceTryPrimaryHit(target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.id === 'sludgewave' || effect.id === 'gunkshot' && source.hasAbility('gunkmissile') &&\r\n\t\t\t\tsource.species.name === 'Cramorant-Alola' && !source.transformed\r\n\t\t\t) {\r\n\t\t\t\tconst forme = source.hp <= source.maxhp / 2 ? 'cramorantalolagorging' : 'cramorantalolagulping';\r\n\t\t\t\tsource.formeChange(forme, effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Gunk Missile\",\r\n\t\tshortDesc: \"When hit after Sludge Wave/Gunk Shot, attacker takes 1/4 max HP and -1 Sp. Def. or poisons.\",\r\n\t\trating: 2.5,\r\n\t\tnum: 241,\r\n\t},\r\n\tultraimpulse: {\r\n\t\tshortDesc: \"If this Pokemon is statused, its highest stat is 1.5x; ignores burn halving physical damage.\",\r\n\t\tname: \"Ultra Impulse\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'atk') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'def') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spa') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spd') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spe') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tleviflame: {\r\n\t\tname: \"Leviflame\",\r\n\t\tshortDesc: \"Levitate + Flame Body\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leviflame');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ticeface: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.isWeather('hail') && pokemon.species.id === 'escavaliereiscuenoice' && !pokemon.transformed) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = false;\r\n\t\t\t\tpokemon.formeChange('Escavalier-Eiscue', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.effectType === 'Move' && effect.category === 'Physical' &&\r\n\t\t\t\ttarget.species.id === 'escavaliereiscue' && !target.transformed\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (move.category !== 'Physical' || target.species.id !== 'escavaliereiscue' || target.transformed) return;\r\n\t\t\tif (target.volatiles['substitute'] && !(move.flags['authentic'] || move.infiltrates)) return;\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (move.category !== 'Physical' || target.species.id !== 'escavaliereiscue' || target.transformed) return;\r\n\t\t\tif (target.volatiles['substitute'] && !(move.flags['authentic'] || move.infiltrates)) return;\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.species.id === 'escavaliereiscue' && this.effectState.busted) {\r\n\t\t\t\tpokemon.formeChange('Escavalier-Eiscue-Noice', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyWeatherStart() {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (this.field.isWeather('hail') && pokemon.species.id === 'escavaliereiscuenoice' && !pokemon.transformed) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = false;\r\n\t\t\t\tpokemon.formeChange('Escavalier-Eiscue', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Ice Face\",\r\n\t\tshortDesc: \"If Escavalier-Eiscue, the first physical hit it takes deals 0 damage. This effect is restored in Hail.\",\r\n\t\trating: 3,\r\n\t\tnum: 248,\r\n\t},\r\n\tflamingskin: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flaming Skin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeBasePowerPriority: 17,\r\n\t\tonFoeBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.target !== defender) return;\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flaming Skin\",\r\n\t\tshortDesc: \"Dry Skin + Flame Body\",\r\n\t},\r\n\tfromashes: {\r\n\t\tshortDesc: \"This Pokemon is healed by 1/8 of its max HP each turn when burned; ignores burn's effects.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'brn') {\r\n\t\t\t\tthis.heal(target.maxhp / 8);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"fromashes\",\r\n\t\tname: \"From Ashes\",\r\n\t},\r\n\tsandbubbler: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Sand Bubbler boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sand Bubbler\",\r\n\t\tshortDesc: \"Sand Stream + Iron Fist.\",\r\n\t},\r\n\tdebilitate: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Debilitate', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Debilitate\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Sp. Atk of adjacent opponents by 1 stage.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 22,\r\n\t},\r\n\toblivious: {\r\n\t\tinherit: true,\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Oblivious');\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Oblivious');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tinnerfocus: {\r\n\t\tinherit: true,\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Focus');\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Focus');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\towntempo: {\r\n\t\tinherit: true,\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Own Tempo');\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Own Tempo');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trattled: {\r\n\t\tinherit: true,\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'intimidate' || effect && effect.id === 'debilitate') {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tscrappy: {\r\n\t\tinherit: true,\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Scrappy');\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Scrappy');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tlethalleafage: {\r\n\t\tonBasePowerPriority: 8,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact'] || move.type === 'Grass') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lethal Leafage\",\r\n\t\tshortDesc: \"This Pokemon's contact and Grass-type moves are boost by 1.3x.\",\r\n\t\tnum: -100000,\r\n\t},\r\n\tevolutionburst: {\r\n\t\tonModifyAtkPriority: 2,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.nfe) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 2,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.nfe) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 2,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.nfe) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 2,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.nfe) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Evolution Burst\",\r\n\t\tshortDesc: \"If pokemon's species can evolve, its Atk, Def, Sp. Atk and Sp. Def are 1.5x.\",\r\n\t\trating: 4,\r\n\t\tnum: 23,\r\n\t},\r\n\twetreflection: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wet Reflection\",\r\n\t\tshortDesc: \"Magic Bounce + Swift Swim\",\r\n\t\trating: 5,\r\n\t\tnum: -19,\r\n\t},\r\n\tsandveiljolte: {\r\n\t\tdesc: \"If Sandstorm is active, this Pokemon's SpD is multiplied by 1.5. This Pokemon takes no damage from Sandstorm.\",\r\n\t\tshortDesc: \"If Sandstorm is active, this Pokemon's SpD is boosted 1.5x; immunity to Sandstorm.\",\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"sandveiljolte\",\r\n\t\tname: \"Sand Veil (Jolte)\",\r\n\t\trating: 3,\r\n\t\tnum: 146,\r\n\t},\r\n\tdivinegrace: {\r\n\t\tshortDesc: \"This Pokemon's healing moves are boosted 1.5x.\",\r\n\t\tname: \"Divine Grace\",\r\n\t\trating: 3,\r\n\t\tnum: -1020,\r\n\t},\r\n\tallseeingeye: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.type === 'Psychic' && move.category === 'Status') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"All-Seeing Eye\",\r\n\t\tshortDesc: \"This Pokemon's Psychic-type status moves heal it for 1/4 max HP.\",\r\n\t\tnum: -1017,\r\n\t},\r\n\tretribution: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect?.effectType !== 'Move') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (source.species.id === 'greninja' && source.hp && !source.transformed && source.side.foe.pokemonLeft) {\r\n\t\t\t\tthis.add('-activate', source, 'ability: Battle Bond');\r\n\t\t\t\tsource.formeChange('Greninja-Ash', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && target.species.id === 'thunjust' && target.hp && !target.transformed && target.side.foe.pokemonLeft) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Retribution');\r\n\t\t\t\ttarget.formeChange('Thunjust-Super', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (move.id === 'boltarang' && attacker.species.name === 'Thunjust-Super') {\r\n\t\t\t\tmove.multihit = 3;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Retribution\",\r\n\t\tshortDesc: \"When this Pokemon has a stat raised or lowered (including self-inflicted changes), it transforms into Super form. Boltarang: 25 power, hits 3x.\",\r\n\t\trating: 4,\r\n\t\tnum: -100,\r\n\t},\r\n\ttacticschange: {\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif ((attacker.species.baseSpecies !== 'Aegislash' && !attacker.species.name.includes('Ancient')) || attacker.transformed) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'foragerspoise') return;\r\n\t\t\tconst targetForme = (move.id === 'foragerspoise' ? 'Aegislash-Ancient' : 'Aegislash-Ancient-Hunter');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Tactics Change\",\r\n\t\tshortDesc: \"If Aegislash-Ancient, changes Forme to Ancient-Hunter before attacks and Ancient before King's Shield.\",\r\n\t\trating: 5,\r\n\t\tnum: -117,\r\n\t},\r\n\trefreshment: {\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 16);\r\n\t\t},\r\n\t\tname: \"Refreshment\",\r\n\t\trating: 4.5,\r\n\t\tnum: -118,\r\n\t\tshortDesc: \"(Partially functional) When the user switches in, all non-fainted team members regain 1/16 HP.\",\r\n\t},\r\n\t\"nocturnalflash\": {\r\n\t\tshortDesc: \"Attacks have 1.5x power and a 30% chance to Poison if it moves last.\",\r\n\t\tid: \"nocturnalflash\",\r\n\t\tname: \"Nocturnal Flash\",\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Nocturnal Flash boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!move || move.target === 'self') return;\r\n\t\t\tif (!boosted) return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'psn',\r\n\t\t\t\tability: this.dex.abilities.get('nocturnalflash'),\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\ttoxicboostjolte: {\r\n\t\tshortDesc: \"1.5x Attack and Defense while poisoned; Immune to poison status damage.\",\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif ((attacker.status === 'psn' || attacker.status === 'tox') && move.category === 'Physical') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\treturn false;\r\n\t\t\t }\r\n\t\t},\r\n\t\tname: \"Toxic Boost (Jolte)\",\r\n\t\trating: 2.5,\r\n\t},\r\n\tterabyte: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Terabyte\",\r\n\t\tshortDesc: \"This Pokemon's biting moves become Electric-type.\",\r\n\t},\r\n\tpillage: {\r\n\t\tid: \"pillage\",\r\n\t\tname: \"Pillage\",\r\n\t\tshortDesc: \"On switch-in, swaps ability with the opponent.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif ((pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) ||\r\n\t\t\tpokemon.species.id !== 'yaciancrowned' && pokemon.species.id !== 'porygrigus' && pokemon.species.id !== 'porymask' && pokemon.species.id !== 'hatterune' && pokemon.species.id !== 'hatamaskgalar') {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tif (!this.effectState.switchingIn) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion', 'pillage',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'ecopy', 'lemegeton', 'modeshift', 'rebootsystem', 'concussion',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.setAbility('pillage', pokemon);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Pillage');\r\n\t\t\t\tthis.add('-activate', pokemon, 'Skill Swap', '', '', '[of] ' + target);\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + ability.name);\r\n\t\t\t\tthis.add('-activate', target, 'ability: Pillage');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfowlbehavior: {\r\n\t\tid: \"fowlbehavior\",\r\n\t\tname: \"Fowl Behavior\",\r\n\t\tshortDesc: \"This Pokemon's Sp. Atk is 1.5x, but it can only select the first move it executes.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityData.choiceLock && pokemon.abilityData.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Fowl Behavior\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityData.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityData.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, pokemon, move) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Fowl Behavior Sp. Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityData.choiceLock) return;\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityData.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t},\r\n\t},\r\n\tshortcircuit: {\r\n\t\tshortDesc: \"Electric moves fail and instead cause every pokemon to lose 25% of its max HP.\",\r\n\t\tonAnyTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tlet activated = false;\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tif (pokemon.hasAbility(\"Short Circuit\") && !activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Short Circuit');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tif (pokemon.fainted) continue;\r\n\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 4, pokemon, target);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Short Circuit\",\r\n\t\trating: 3,\r\n\t\tnum: 1003,\r\n\t},\r\n\t\"ironfistviabilities\": {\r\n\t\tshortDesc: \"This Pokemon's punch-based attacks are SE against Fairy-types.\",\r\n\t\tonSourceEffectiveness(move, typeMod, type, pokemon) {\r\n\t\t\tif (type == 'Fairy' && move.flags['punch']) {\r\n\t\t\t\treturn typeMod > 0 ? typeMod + 1 : 1;\r\n\t\t\t} else if (typeMod < 0 && pokemon.hasType('Fairy')) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Iron Fist (ViAbilities)\",\r\n\t\trating: 3,\r\n\t\tnum: 89,\r\n\t},\r\n\tklutzviabilities: {\r\n\t\tdesc: \"The user's\u00A0contact moves will remove the opponent's items, but it will\u00A0lose its own item upon being hit\u00A0by any attack.\",\r\n\t\tshortDesc: \"Removes Item when making contact, loses Item when receiving contact.\",\r\n\t\tonAfterMoveSecondary(target, source, move) { // inspired to Knock Off\r\n\t\t\tif (target !== source && move.flags['contact'] && source.hp) {\r\n\t\t\t\tconst item = target.takeItem();\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tthis.add('-enditem', target, item.name, '[from] move: Knock Off', '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) { // inspired to Pickpocket\r\n\t\t\tif (target !== source && move.flags['contact'] && source.hp) {\r\n\t\t\t\tconst item = target.takeItem();\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tthis.add('-enditem', target, item.name, '[from] move: Knock Off', '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"klutzviabilities\",\r\n\t\tname: \"Klutz (ViAbilities)\",\r\n\t\trating: -1,\r\n\t\tnum: 103,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target"]
}
