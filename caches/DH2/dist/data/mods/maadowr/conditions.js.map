{
  "version": 3,
  "sources": ["../../../../data/mods/maadowr/conditions.ts"],
  "sourcesContent": ["export const Conditions: {[k: string]: ConditionData} = {\r\n\tbrn: {\r\n\t\tname: 'brn',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect && sourceEffect.id === 'flameorb') {\r\n\t\t\t\tthis.add('-status', target, 'brn', '[from] item: Flame Orb');\r\n\t\t\t} else if (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'brn', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'brn');\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Damage reduction is handled directly in the sim/battle.js damage function\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.damage(pokemon.baseMaxhp / 16);\r\n\t\t},\r\n\t},\r\n\tpar: {\r\n\t\tname: 'par',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'par', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'par');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t// Paralysis occurs after all other Speed modifiers, so evaluate all modifiers up to this point first\r\n\t\t\tspe = this.finalModify(spe);\r\n\t\t\tif (!pokemon.hasAbility('quickfeet')) {\r\n\t\t\t\tspe = Math.floor(spe * 50 / 100);\r\n\t\t\t}\r\n\t\t\treturn spe;\r\n\t\t},\r\n\t\tonBeforeMovePriority: 1,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (this.randomChance(1, 4)) {\r\n\t\t\t\tthis.add('cant', pokemon, 'par');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tslp: {\r\n\t\tname: 'slp',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'slp', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else if (sourceEffect && sourceEffect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-status', target, 'slp', '[from] move: ' + sourceEffect.name);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'slp');\r\n\t\t\t}\r\n\t\t\t// 1-3 turns\r\n\t\t\tthis.effectState.startTime = this.random(2, 5);\r\n\t\t\tthis.effectState.time = this.effectState.startTime;\r\n\r\n\t\t\tif (target.removeVolatile('nightmare')) {\r\n\t\t\t\tthis.add('-end', target, 'Nightmare', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 10,\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (pokemon.hasAbility('earlybird')) {\r\n\t\t\t\tpokemon.statusState.time--;\r\n\t\t\t}\r\n\t\t\tpokemon.statusState.time--;\r\n\t\t\tif (pokemon.statusState.time <= 0) {\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('cant', pokemon, 'slp');\r\n\t\t\tif (move.sleepUsable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tfrz: {\r\n\t\tname: 'frz',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'frz', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'frz');\r\n\t\t\t}\r\n\t\t\tif (target.species.name === 'Shaymin-Sky' && target.baseSpecies.baseSpecies === 'Shaymin') {\r\n\t\t\t\ttarget.formeChange('Shaymin', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 10,\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.flags['defrost']) return;\r\n\t\t\tif (this.randomChance(1, 5)) {\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('cant', pokemon, 'frz');\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.flags['defrost']) {\r\n\t\t\t\tthis.add('-curestatus', pokemon, 'frz', '[from] move: ' + move);\r\n\t\t\t\tpokemon.clearStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (move.thawsTarget) {\r\n\t\t\t\ttarget.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Fire' && move.category !== 'Status') {\r\n\t\t\t\ttarget.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpsn: {\r\n\t\tname: 'psn',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'psn', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'psn');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 9,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.volatiles['malwarepoisoned']) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 16);\r\n\t\t\t} else {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttox: {\r\n\t\tname: 'tox',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tthis.effectState.stage = 0;\r\n\t\t\tif (sourceEffect && sourceEffect.id === 'toxicorb') {\r\n\t\t\t\tthis.add('-status', target, 'tox', '[from] item: Toxic Orb');\r\n\t\t\t} else if (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'tox', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'tox');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn() {\r\n\t\t\tthis.effectState.stage = 0;\r\n\t\t},\r\n\t\tonResidualOrder: 9,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.effectState.stage < 15) {\r\n\t\t\t\tthis.effectState.stage++;\r\n\t\t\t}\r\n\t\t\tthis.damage(this.clampIntRange(pokemon.baseMaxhp / 16, 1) * this.effectState.stage);\r\n\t\t},\r\n\t},\r\n\tconfusion: {\r\n\t\tname: 'confusion',\r\n\t\t// this is a volatile status\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect?.id === 'lockedmove') {\r\n\t\t\t\tthis.add('-start', target, 'confusion', '[fatigue]');\r\n\t\t\t} else if (sourceEffect?.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-start', target, 'confusion', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-start', target, 'confusion');\r\n\t\t\t}\r\n\t\t\tconst min = sourceEffect?.id === 'axekick' ? 3 : 2;\r\n\t\t\tthis.effectState.time = this.random(min, 6);\r\n\t\t},\r\n\t\tonEnd(target) {\r\n\t\t\tthis.add('-end', target, 'confusion');\r\n\t\t},\r\n\t\tonBeforeMovePriority: 3,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tpokemon.volatiles['confusion'].time--;\r\n\t\t\tif (!pokemon.volatiles['confusion'].time) {\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-activate', pokemon, 'confusion');\r\n\t\t\tif (!this.randomChance(33, 100)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.activeTarget = pokemon;\r\n\t\t\tconst damage = this.actions.getConfusionDamage(pokemon, 40);\r\n\t\t\tif (typeof damage !== 'number') throw new Error(\"Confusion damage not dealt\");\r\n\t\t\tconst activeMove = {id: this.toID('confused'), effectType: 'Move', type: '???'};\r\n\t\t\tthis.damage(damage, pokemon, pokemon, activeMove as ActiveMove);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tflinch: {\r\n\t\tname: 'flinch',\r\n\t\tduration: 1,\r\n\t\tonBeforeMovePriority: 8,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tthis.add('cant', pokemon, 'flinch');\r\n\t\t\tthis.runEvent('Flinch', pokemon);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\ttrapped: {\r\n\t\tname: 'trapped',\r\n\t\tnoCopy: true,\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.tryTrap();\r\n\t\t},\r\n\t\tonStart(target) {\r\n\t\t\tthis.add('-activate', target, 'trapped');\r\n\t\t},\r\n\t},\r\n\ttrapper: {\r\n\t\tname: 'trapper',\r\n\t\tnoCopy: true,\r\n\t},\r\n\tpartiallytrapped: {\r\n\t\tname: 'partiallytrapped',\r\n\t\tduration: 5,\r\n\t\tdurationCallback(target, source) {\r\n\t\t\tif (source?.hasItem('gripclaw')) return 8;\r\n\t\t\treturn this.random(5, 7);\r\n\t\t},\r\n\t\tonStart(pokemon, source) {\r\n\t\t\tthis.add('-activate', pokemon, 'move: ' + this.effectState.sourceEffect, '[of] ' + source);\r\n\t\t\tthis.effectState.boundDivisor = source.hasItem('bindingband') ? 6 : 8;\r\n\t\t},\r\n\t\tonResidualOrder: 13,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst source = this.effectState.source;\r\n\t\t\t// G-Max Centiferno and G-Max Sandblast continue even after the user leaves the field\r\n\t\t\tconst gmaxEffect = ['gmaxcentiferno', 'gmaxsandblast'].includes(this.effectState.sourceEffect.id);\r\n\t\t\tif (source && (!source.isActive || source.hp <= 0 || !source.activeTurns) && !gmaxEffect) {\r\n\t\t\t\tdelete pokemon.volatiles['partiallytrapped'];\r\n\t\t\t\tthis.add('-end', pokemon, this.effectState.sourceEffect, '[partiallytrapped]', '[silent]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.damage(pokemon.baseMaxhp / this.effectState.boundDivisor);\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, this.effectState.sourceEffect, '[partiallytrapped]');\r\n\t\t},\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tconst gmaxEffect = ['gmaxcentiferno', 'gmaxsandblast'].includes(this.effectState.sourceEffect.id);\r\n\t\t\tif (this.effectState.source?.isActive || gmaxEffect) pokemon.tryTrap();\r\n\t\t},\r\n\t},\r\n\tlockedmove: {\r\n\t\t// Outrage, Thrash, Petal Dance...\r\n\t\tname: 'lockedmove',\r\n\t\tduration: 2,\r\n\t\tonResidual(target) {\r\n\t\t\tif (target.status === 'slp') {\r\n\t\t\t\t// don't lock, and bypass confusion for calming\r\n\t\t\t\tdelete target.volatiles['lockedmove'];\r\n\t\t\t}\r\n\t\t\tthis.effectState.trueDuration--;\r\n\t\t},\r\n\t\tonStart(target, source, effect) {\r\n\t\t\tthis.effectState.trueDuration = this.random(2, 4);\r\n\t\t\tthis.effectState.move = effect.id;\r\n\t\t},\r\n\t\tonRestart() {\r\n\t\t\tif (this.effectState.trueDuration >= 2) {\r\n\t\t\t\tthis.effectState.duration = 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(target) {\r\n\t\t\tif (this.effectState.trueDuration > 1) return;\r\n\t\t\ttarget.addVolatile('confusion');\r\n\t\t},\r\n\t\tonLockMove(pokemon) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\treturn this.effectState.move;\r\n\t\t},\r\n\t},\r\n\ttwoturnmove: {\r\n\t\t// Skull Bash, SolarBeam, Sky Drop...\r\n\t\tname: 'twoturnmove',\r\n\t\tduration: 2,\r\n\t\tonStart(attacker, defender, effect) {\r\n\t\t\t// (\"attacker\" is the Pokemon using the two turn move and the Pokemon this condition is being applied to)\r\n\t\t\tthis.effectState.move = effect.id;\r\n\t\t\tattacker.addVolatile(effect.id);\r\n\t\t\t// lastMoveTargetLoc is the location of the originally targeted slot before any redirection\r\n\t\t\t// note that this is not updated for moves called by other moves\r\n\t\t\t// i.e. if Dig is called by Metronome, lastMoveTargetLoc will still be the user's location\r\n\t\t\tlet moveTargetLoc: number = attacker.lastMoveTargetLoc!;\r\n\t\t\tif (effect.sourceEffect && this.dex.moves.get(effect.id).target !== 'self') {\r\n\t\t\t\t// this move was called by another move such as Metronome\r\n\t\t\t\t// and needs a random target to be determined this turn\r\n\t\t\t\t// it will already have one by now if there is any valid target\r\n\t\t\t\t// but if there isn't one we need to choose a random slot now\r\n\t\t\t\tif (defender.fainted) {\r\n\t\t\t\t\tdefender = this.sample(attacker.foes(true));\r\n\t\t\t\t}\r\n\t\t\t\tmoveTargetLoc = attacker.getLocOf(defender);\r\n\t\t\t}\r\n\t\t\tattacker.volatiles[effect.id].targetLoc = moveTargetLoc;\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t// Run side-effects normally associated with hitting (e.g., Protean, Libero)\r\n\t\t\tthis.runEvent('PrepareHit', attacker, defender, effect);\r\n\t\t},\r\n\t\tonEnd(target) {\r\n\t\t\ttarget.removeVolatile(this.effectState.move);\r\n\t\t},\r\n\t\tonLockMove() {\r\n\t\t\treturn this.effectState.move;\r\n\t\t},\r\n\t\tonMoveAborted(pokemon) {\r\n\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t},\r\n\t},\r\n\tchoicelock: {\r\n\t\tname: 'choicelock',\r\n\t\tnoCopy: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif (!this.activeMove.id || this.activeMove.hasBounced || this.activeMove.sourceEffect === 'snatch') return false;\r\n\t\t\tthis.effectState.move = this.activeMove.id;\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (!pokemon.getItem().isChoice) {\r\n\t\t\t\tpokemon.removeVolatile('choicelock');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t!pokemon.ignoringItem() && !pokemon.volatiles['dynamax'] &&\r\n\t\t\t\tmove.id !== this.effectState.move && move.id !== 'struggle'\r\n\t\t\t) {\r\n\t\t\t\t// Fails unless the Choice item is being ignored, and no PP is lost\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Choice item lock\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.getItem().isChoice || !pokemon.hasMove(this.effectState.move)) {\r\n\t\t\t\tpokemon.removeVolatile('choicelock');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.ignoringItem() || pokemon.volatiles['dynamax']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== this.effectState.move) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmustrecharge: {\r\n\t\tname: 'mustrecharge',\r\n\t\tduration: 2,\r\n\t\tonBeforeMovePriority: 11,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tthis.add('cant', pokemon, 'recharge');\r\n\t\t\tpokemon.removeVolatile('mustrecharge');\r\n\t\t\tpokemon.removeVolatile('truant');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-mustrecharge', pokemon);\r\n\t\t},\r\n\t\tonLockMove: 'recharge',\r\n\t},\r\n\tfuturemove: {\r\n\t\t// this is a slot condition\r\n\t\tname: 'futuremove',\r\n\t\tduration: 3,\r\n\t\tonResidualOrder: 3,\r\n\t\tonEnd(target) {\r\n\t\t\tconst data = this.effectState;\r\n\t\t\t// time's up; time to hit! :D\r\n\t\t\tconst move = this.dex.moves.get(data.move);\r\n\t\t\tif (target.fainted || target === data.source) {\r\n\t\t\t\tthis.hint(`${move.name} did not hit because the target is ${(target.fainted ? 'fainted' : 'the user')}.`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.add('-end', target, 'move: ' + move.name);\r\n\t\t\ttarget.removeVolatile('Protect');\r\n\t\t\ttarget.removeVolatile('Endure');\r\n\r\n\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t}\r\n\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t}\r\n\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\r\n\t\t\tthis.actions.trySpreadMoveHit([target], data.source, hitMove, true);\r\n\t\t\tif (data.source.isActive && data.source.hasItem('lifeorb') && this.gen >= 5) {\r\n\t\t\t\tthis.singleEvent('AfterMoveSecondarySelf', data.source.getItem(), data.source.itemState, data.source, target, data.source.getItem());\r\n\t\t\t}\r\n\t\t\tthis.activeMove = null;\r\n\r\n\t\t\tthis.checkWin();\r\n\t\t},\r\n\t},\r\n\thealreplacement: {\r\n\t\t// this is a slot condition\r\n\t\tname: 'healreplacement',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tthis.effectState.sourceEffect = sourceEffect;\r\n\t\t\tthis.add('-activate', source, 'healreplacement');\r\n\t\t},\r\n\t\tonSwitchInPriority: 1,\r\n\t\tonSwitchIn(target) {\r\n\t\t\tif (!target.fainted) {\r\n\t\t\t\ttarget.heal(target.maxhp);\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] move: ' + this.effectState.sourceEffect, '[zeffect]');\r\n\t\t\t\ttarget.side.removeSlotCondition(target, 'healreplacement');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tstall: {\r\n\t\t// Protect, Detect, Endure counter\r\n\t\tname: 'stall',\r\n\t\tduration: 2,\r\n\t\tcounterMax: 729,\r\n\t\tonStart() {\r\n\t\t\tthis.effectState.counter = 3;\r\n\t\t},\r\n\t\tonStallMove(pokemon) {\r\n\t\t\t// this.effectState.counter should never be undefined here.\r\n\t\t\t// However, just in case, use 1 if it is undefined.\r\n\t\t\tconst counter = this.effectState.counter || 1;\r\n\t\t\tthis.debug(\"Success chance: \" + Math.round(100 / counter) + \"%\");\r\n\t\t\tconst success = this.randomChance(1, counter);\r\n\t\t\tif (!success) delete pokemon.volatiles['stall'];\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tonRestart() {\r\n\t\t\tif (this.effectState.counter < (this.effect as Condition).counterMax!) {\r\n\t\t\t\tthis.effectState.counter *= 3;\r\n\t\t\t}\r\n\t\t\tthis.effectState.duration = 2;\r\n\t\t},\r\n\t},\r\n\r\n\t/*\r\n\t// start writing condition for Porygon-Z-Ma'adowr swapped stats after it uses Reboot. Needs a lot of fixing\r\n\tswpzm: {\r\n\t\t// this is a slot condition\r\n\t\tname: 'swpzm',\r\n\t\t// Logic for switching out\r\n\t\tonSwitchOut(pokemon) {\r\n    \t// No need to reset anything for swapped stats since they are managed by volatiles\r\n\t\t\t},\r\n\t\t// Logic for switching back in\r\n\t\tonSwitchIn(pokemon) {\r\n    \t\tif (pokemon.baseSpecies.baseSpecies === 'Porygon-Z-Ma\\'adowr' && pokemon.volatiles['swpzm']) {\r\n        \t\t// Ensure the swapped stats are retained\r\n        \t\tthis.add('-setboost', pokemon, 'atk', pokemon.storedStats.atk, '[from] move: Reboot');\r\n        \t\tthis.add('-setboost', pokemon, 'spa', pokemon.storedStats.spa, '[from] move: Reboot');\r\n        \t\tthis.add('-setboost', pokemon, 'def', pokemon.storedStats.def, '[from] move: Reboot');\r\n        \t\tthis.add('-setboost', pokemon, 'spd', pokemon.storedStats.spd, '[from] move: Reboot');\r\n    \t\t}\r\n\t\t},\r\n\t\t// When the effect ends (if you want to remove the volatile effect at some point)\r\n\t\tonEnd(pokemon) {\r\n    \t\tif (pokemon.baseSpecies.baseSpecies === 'Porygon-Z-Ma\\'adowr' && pokemon.volatiles['swpzm']) {\r\n        \t\tdelete pokemon.volatiles['swpzm']; // Clear the volatile effect\r\n        \t// Optionally, reset the stats back to their original values if needed\r\n    \t\t}\r\n\t\t},\r\n\t},\r\n\t// end */\r\n\tgem: {\r\n\t\tname: 'gem',\r\n\t\tduration: 1,\r\n\t\taffectsFainted: true,\r\n\t\tonBasePowerPriority: 14,\r\n\t\tonBasePower(basePower, user, target, move) {\r\n\t\t\tthis.debug('Gem Boost');\r\n\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t},\r\n\r\n\t// weather is implemented here since it's so important to the game\r\n\r\n\traindance: {\r\n\t\tname: 'RainDance',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 5,\r\n\t\tdurationCallback(source, effect) {\r\n\t\t\tif (source?.hasItem('damprock')) {\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\t\t\treturn 5;\r\n\t\t},\r\n\t\tonWeatherModifyDamage(damage, attacker, defender, move) {\r\n\t\t\t// start: Incandescent Flame, making sure it is unaffected by Rain\r\n\t\t\tif (move.id === 'incandescentflame' && !attacker.hasItem('utilityumbrella')) {\r\n\t\t\t\tthis.debug('rain Incandescent Flame boost');\r\n\t\t\t\treturn this.chainModify(1);\r\n\t\t\t} // end\r\n\t\t\tif (defender.hasItem('utilityumbrella')) return;\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('rain water boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('rain fire suppress');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\tif (this.gen <= 5) this.effectState.duration = 0;\r\n\t\t\t\tthis.add('-weather', 'RainDance', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-weather', 'RainDance');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'RainDance', '[upkeep]');\r\n\t\t\tthis.eachEvent('Weather');\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\tprimordialsea: {\r\n\t\tname: 'PrimordialSea',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 0,\r\n\t\tonTryMovePriority: 1,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && move.id !== 'incandescentflame' && move.category !== 'Status') { // ensures Incandescent Flame does damage in Primordial Sea\r\n\t\t\t\tthis.debug('Primordial Sea fire suppress');\r\n\t\t\t\tthis.add('-fail', attacker, move, '[from] Primordial Sea');\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherModifyDamage(damage, attacker, defender, move) {\r\n\t\t\tif (defender.hasItem('utilityumbrella')) return;\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Rain water boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tthis.add('-weather', 'PrimordialSea', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'PrimordialSea', '[upkeep]');\r\n\t\t\tthis.eachEvent('Weather');\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\tsunnyday: {\r\n\t\tname: 'SunnyDay',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 5,\r\n\t\tdurationCallback(source, effect) {\r\n\t\t\tif (source?.hasItem('heatrock')) {\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\t\t\treturn 5;\r\n\t\t},\r\n\t\tonWeatherModifyDamage(damage, attacker, defender, move) {\r\n\t\t\tif (move.id === 'hydrosteam' && !attacker.hasItem('utilityumbrella')) {\r\n\t\t\t\tthis.debug('Sunny Day Hydro Steam boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (defender.hasItem('utilityumbrella')) return;\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Sunny Day fire boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Sunny Day water suppress');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(battle, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\tif (this.gen <= 5) this.effectState.duration = 0;\r\n\t\t\t\tthis.add('-weather', 'SunnyDay', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-weather', 'SunnyDay');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (pokemon.hasItem('utilityumbrella')) return;\r\n\t\t\tif (type === 'frz') return false;\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'SunnyDay', '[upkeep]');\r\n\t\t\tthis.eachEvent('Weather');\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\tdesolateland: {\r\n\t\tname: 'DesolateLand',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 0,\r\n\t\tonTryMovePriority: 1,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && move.category !== 'Status') {\r\n\t\t\t\tthis.debug('Desolate Land water suppress');\r\n\t\t\t\tthis.add('-fail', attacker, move, '[from] Desolate Land');\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherModifyDamage(damage, attacker, defender, move) {\r\n\t\t\tif (defender.hasItem('utilityumbrella')) return;\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Sunny Day fire boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tthis.add('-weather', 'DesolateLand', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (pokemon.hasItem('utilityumbrella')) return;\r\n\t\t\tif (type === 'frz') return false;\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'DesolateLand', '[upkeep]');\r\n\t\t\tthis.eachEvent('Weather');\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\tsandstorm: {\r\n\t\tname: 'Sandstorm',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 5,\r\n\t\tdurationCallback(source, effect) {\r\n\t\t\tif (source?.hasItem('smoothrock')) {\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\t\t\treturn 5;\r\n\t\t},\r\n\t\t// This should be applied directly to the stat before any of the other modifiers are chained\r\n\t\t// So we give it increased priority.\r\n\t\tonModifySpDPriority: 10,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (pokemon.hasType('Rock') && this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.modify(spd, 1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\tif (this.gen <= 5) this.effectState.duration = 0;\r\n\t\t\t\tthis.add('-weather', 'Sandstorm', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-weather', 'Sandstorm');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'Sandstorm', '[upkeep]');\r\n\t\t\tif (this.field.isWeather('sandstorm')) this.eachEvent('Weather');\r\n\t\t},\r\n\t\tonWeather(target) {\r\n\t\t\tthis.damage(target.baseMaxhp / 16);\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\thail: {\r\n\t\tname: 'Hail',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 5,\r\n\t\tdurationCallback(source, effect) {\r\n\t\t\tif (source?.hasItem('icyrock')) {\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\t\t\treturn 5;\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\tif (this.gen <= 5) this.effectState.duration = 0;\r\n\t\t\t\tthis.add('-weather', 'Hail', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-weather', 'Hail');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'Hail', '[upkeep]');\r\n\t\t\tif (this.field.isWeather('hail')) this.eachEvent('Weather');\r\n\t\t},\r\n\t\tonWeather(target) {\r\n\t\t\tthis.damage(target.baseMaxhp / 16);\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\tsnow: {\r\n\t\tname: 'Snow',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 5,\r\n\t\tdurationCallback(source, effect) {\r\n\t\t\tif (source?.hasItem('icyrock')) {\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\t\t\treturn 5;\r\n\t\t},\r\n\t\tonModifyDefPriority: 10,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.hasType('Ice') && this.field.isWeather('snow')) {\r\n\t\t\t\treturn this.modify(def, 1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\tif (this.gen <= 5) this.effectState.duration = 0;\r\n\t\t\t\tthis.add('-weather', 'Snow', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-weather', 'Snow');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'Snow', '[upkeep]');\r\n\t\t\tif (this.field.isWeather('snow')) this.eachEvent('Weather');\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\tdeltastream: {\r\n\t\tname: 'DeltaStream',\r\n\t\teffectType: 'Weather',\r\n\t\tduration: 0,\r\n\t\tonEffectivenessPriority: -1,\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (move && move.effectType === 'Move' && move.category !== 'Status' && type === 'Flying' && typeMod > 0) {\r\n\t\t\t\tthis.add('-fieldactivate', 'Delta Stream');\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFieldStart(field, source, effect) {\r\n\t\t\tthis.add('-weather', 'DeltaStream', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t},\r\n\t\tonFieldResidualOrder: 1,\r\n\t\tonFieldResidual() {\r\n\t\t\tthis.add('-weather', 'DeltaStream', '[upkeep]');\r\n\t\t\tthis.eachEvent('Weather');\r\n\t\t},\r\n\t\tonFieldEnd() {\r\n\t\t\tthis.add('-weather', 'none');\r\n\t\t},\r\n\t},\r\n\r\n\tdynamax: {\r\n\t\tname: 'Dynamax',\r\n\t\tnoCopy: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.effectState.turns = 0;\r\n\t\t\tpokemon.removeVolatile('minimize');\r\n\t\t\tpokemon.removeVolatile('substitute');\r\n\t\t\tif (pokemon.volatiles['torment']) {\r\n\t\t\t\tdelete pokemon.volatiles['torment'];\r\n\t\t\t\tthis.add('-end', pokemon, 'Torment', '[silent]');\r\n\t\t\t}\r\n\t\t\tif (['cramorantgulping', 'cramorantgorging'].includes(pokemon.species.id) && !pokemon.transformed) {\r\n\t\t\t\tpokemon.formeChange('cramorant');\r\n\t\t\t}\r\n\t\t\tthis.add('-start', pokemon, 'Dynamax', pokemon.gigantamax ? 'Gmax' : '');\r\n\t\t\tif (pokemon.baseSpecies.name === 'Shedinja') return;\r\n\r\n\t\t\t// Changes based on dynamax level, 2 is max (at LVL 10)\r\n\t\t\tconst ratio = 1.5 + (pokemon.dynamaxLevel * 0.05);\r\n\r\n\t\t\tpokemon.maxhp = Math.floor(pokemon.maxhp * ratio);\r\n\t\t\tpokemon.hp = Math.floor(pokemon.hp * ratio);\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') return null;\r\n\t\t},\r\n\t\tonBeforeSwitchOutPriority: -1,\r\n\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\tpokemon.removeVolatile('dynamax');\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.id === 'behemothbash' || move.id === 'behemothblade' || move.id === 'dynamaxcannon') {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDragOutPriority: 2,\r\n\t\tonDragOut(pokemon) {\r\n\t\t\tthis.add('-block', pokemon, 'Dynamax');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonResidualPriority: -100,\r\n\t\tonResidual() {\r\n\t\t\tthis.effectState.turns++;\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, 'Dynamax');\r\n\t\t\tif (pokemon.baseSpecies.name === 'Shedinja') return;\r\n\t\t\tpokemon.hp = pokemon.getUndynamaxedHP();\r\n\t\t\tpokemon.maxhp = pokemon.baseMaxhp;\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t},\r\n\t},\r\n\r\n\t// start: Engraving\r\n\tgrassengravingeffect: {\r\n\t\tname: 'Grass Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Grass Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Grass')) {\r\n                pokemon.addVolatile('grassfeature');\r\n            } else {\r\n                pokemon.removeVolatile('grassfeature');\r\n            }\r\n        },\r\n\t},\r\n\tbugengravingeffect: {\r\n\t\tname: 'Bug Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Bug Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Bug')) {\r\n                pokemon.addVolatile('bugfeature');\r\n            } else {\r\n                pokemon.removeVolatile('bugfeature');\r\n            }\r\n        },\r\n\t},\r\n\tfireengravingeffect: {\r\n\t\tname: 'Fire Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Fire Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Fire')) {\r\n                pokemon.addVolatile('firefeature');\r\n            } else {\r\n                pokemon.removeVolatile('firefeature');\r\n            }\r\n        },\r\n\t},\r\n\twaterengravingeffect: {\r\n\t\tname: 'Water Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Water Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Water')) {\r\n                pokemon.addVolatile('waterfeature');\r\n            } else {\r\n                pokemon.removeVolatile('waterfeature');\r\n            }\r\n        },\r\n\t},\r\n\ticeengravingeffect: {\r\n\t\tname: 'Ice Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Ice Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Ice')) {\r\n                pokemon.addVolatile('icefeature');\r\n            } else {\r\n                pokemon.removeVolatile('icefeature');\r\n            }\r\n        },\r\n\t},\r\n\telectricengravingeffect: {\r\n\t\tname: 'Electric Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Ice Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Electric')) {\r\n                pokemon.addVolatile('electricfeature');\r\n            } else {\r\n                pokemon.removeVolatile('electricfeature');\r\n            }\r\n        },\r\n\t},\r\n\tpsychicengravingeffect: {\r\n\t\tname: 'Psychic Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Psychic Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Psychic')) {\r\n                pokemon.addVolatile('psychicfeature');\r\n            } else {\r\n                pokemon.removeVolatile('psychicfeature');\r\n            }\r\n        },\r\n\t},\r\n\tghostengravingeffect: {\r\n\t\tname: 'Ghost Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Ghost Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Ghost')) {\r\n                pokemon.addVolatile('ghostfeature');\r\n            } else {\r\n                pokemon.removeVolatile('ghostfeature');\r\n            }\r\n        },\r\n\t},\r\n\tpoisonengravingeffect: {\r\n\t\tname: 'Poison Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Poison Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Poison')) {\r\n                pokemon.addVolatile('poisonfeature');\r\n            } else {\r\n                pokemon.removeVolatile('poisonfeature');\r\n            }\r\n        },\r\n\t},\r\n\tfightingengravingeffect: {\r\n\t\tname: 'Fighting Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Fighting Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Fighting')) {\r\n                pokemon.addVolatile('fightingfeature');\r\n            } else {\r\n                pokemon.removeVolatile('fightingfeature');\r\n            }\r\n        },\r\n\t},\r\n\trockengravingeffect: {\r\n\t\tname: 'Rock Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Rock Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Rock')) {\r\n                pokemon.addVolatile('rockfeature');\r\n            } else {\r\n                pokemon.removeVolatile('rockfeature');\r\n            }\r\n        },\r\n\t},\r\n\tgroundengravingeffect: {\r\n\t\tname: 'Ground Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Ground Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Ground')) {\r\n                pokemon.addVolatile('groundfeature');\r\n            } else {\r\n                pokemon.removeVolatile('groundfeature');\r\n            }\r\n        },\r\n\t},\r\n\tnormalengravingeffect: {\r\n\t\tname: 'Normal Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Normal Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Normal')) {\r\n                pokemon.addVolatile('normalfeature');\r\n            } else {\r\n                pokemon.removeVolatile('normalfeature');\r\n            }\r\n        },\r\n\t},\r\n\tflyingengravingeffect: {\r\n\t\tname: 'Flying Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Flying Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n\t\t  // Aegislash-Ma'adowr (Grass, Steel) should now be able to benefit from the effect once the Engraving is activated and if it switches to its blade-form (Grass, Flying)\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Flying') || (pokemon.baseSpecies.name === 'Aegislash-Ma\\'adowr' && \r\n\t\t\t\t((pokemon.hasType('Grass') && pokemon.hasType('Steel')) || (pokemon.hasType('Grass') && pokemon.hasType('???'))))) {\r\n                pokemon.addVolatile('flyingfeature');\r\n            } else {\r\n                pokemon.removeVolatile('flyingfeature');\r\n            }\r\n        },\r\n\t},\r\n\tdragonengravingeffect: {\r\n\t\tname: 'Dragon Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Dragon Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Dragon')) {\r\n                pokemon.addVolatile('dragonfeature');\r\n            } else {\r\n                pokemon.removeVolatile('dragonfeature');\r\n            }\r\n        },\r\n\t},\r\n\tsteelengravingeffect: {\r\n\t\tname: 'Steel Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Steel Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Steel')) {\r\n                pokemon.addVolatile('steelfeature');\r\n            } else {\r\n                pokemon.removeVolatile('steelfeature');\r\n            }\r\n        },\r\n\t},\r\n\tdarkengravingeffect: {\r\n\t\tname: 'Dark Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Dark Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Dark')) {\r\n                pokemon.addVolatile('darkfeature');\r\n            } else {\r\n                pokemon.removeVolatile('darkfeature');\r\n            }\r\n        },\r\n\t},\r\n\tfairyengravingeffect: {\r\n\t\tname: 'Fairy Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Fairy Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (pokemon.hasType('Fairy')) {\r\n                pokemon.addVolatile('fairyfeature');\r\n            } else {\r\n                pokemon.removeVolatile('fairyfeature');\r\n            }\r\n        },\r\n\t},\r\n\t// end\r\n\tanquiterraengravingeffect: {\r\n\t\tname: 'Anquiterra Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Anquiterra Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n    \t    if (!pokemon.volatiles['anquiterrafeature']) {\r\n                pokemon.addVolatile('anquiterrafeature');\r\n            }\r\n        },\r\n\t},\r\n\tarastinithengravingeffect: {\r\n\t\tname: 'Arastinith Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Arastinith Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['arastinithfeature']) {\r\n                pokemon.addVolatile('arastinithfeature');\r\n           }\r\n        },\r\n\t},\r\n\tbarbaraclemaadowrengravingeffect: {\r\n\t\tname: 'Barbaracle-Ma\\'adowr Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Barbaracle-Ma'adowr Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['barbaraclemaadowrfeature']) {\r\n                pokemon.addVolatile('barbaraclemaadowrfeature');\r\n            }\r\n        },\r\n\t},\r\n\tbeheeyemengravingeffect: {\r\n\t\tname: 'Beheeyem Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Beheeyem Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['beheeyemfeature']) {\r\n                pokemon.addVolatile('beheeyemfeature');\r\n            }\r\n        },\r\n\t},\r\n\tchantyrusengravingeffect: {\r\n\t\tname: 'Chantyrus Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Chantyrus Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['chantyrusfeature']) {\r\n                pokemon.addVolatile('chantyrusfeature');\r\n            }\r\n        },\r\n\t},\r\n\tcraftenirengravingeffect: {\r\n\t\tname: 'Craftenir Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Craftenir Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['craftenirfeature']) {\r\n                pokemon.addVolatile('craftenirfeature');\r\n            }\r\n        },\r\n\t},\r\n\tequinoqueengravingeffect: {\r\n\t\tname: 'Equinoque Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Equinoque Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['equinoquefeature']) {\r\n                pokemon.addVolatile('equinoquefeature');\r\n        //    } else {\r\n        //        pokemon.removeVolatile('equinoquefeature');\r\n            }\r\n        },\r\n\t},\r\n\tgolurkengravingeffect: {\r\n\t\tname: 'Golurk Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Golurk Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['golurkfeature']) {\r\n                pokemon.addVolatile('golurkfeature');\r\n            }\r\n        },\r\n\t},\r\n\tgrapplinengravingeffect: {\r\n\t\tname: 'Grapplin Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Grapplin Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['grapplinfeature']) {\r\n                pokemon.addVolatile('grapplinfeature');\r\n            }\r\n        },\r\n\t},\r\n\tiblissengravingeffect: {\r\n\t\tname: 'Ibliss Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Ibliss Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['iblissfeature']) {\r\n                pokemon.addVolatile('iblissfeature');\r\n            }\r\n        },\r\n\t},\r\n\tkenuterraengravingeffect: {\r\n\t\tname: 'Kenuterra Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Kenuterra Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['kenuterrafeature']) {\r\n                pokemon.addVolatile('kenuterrafeature');\r\n            }\r\n        },\r\n\t},\r\n\tklinklangengravingeffect: {\r\n\t\tname: 'Klinklang Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Klinklang Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['klinklangfeature']) {\r\n                pokemon.addVolatile('klinklangfeature');\r\n            }\r\n        },\r\n\t},\r\n\tmaudiorengravingeffect: {\r\n\t\tname: 'Maudior Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Maudior Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['maudiorfeature']) {\r\n                pokemon.addVolatile('maudiorfeature');\r\n            }\r\n        },\r\n\t},\r\n\torasundraengravingeffect: {\r\n\t\tname: 'Orasundra Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Orasundra Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['orasundrafeature']) {\r\n                pokemon.addVolatile('orasundrafeature');\r\n            }\r\n        },\r\n\t},\r\n\tparascentengravingeffect: {\r\n\t\tname: 'Parascent Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Parascent Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['parascentfeature']) {\r\n                pokemon.addVolatile('parascentfeature');\r\n            }\r\n        },\r\n\t},\r\n\trabscaengravingeffect: {\r\n\t\tname: 'Rabsca Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Rabsca Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['rabscafeature']) {\r\n                pokemon.addVolatile('rabscafeature');\r\n            }\r\n        },\r\n\t},\r\n\tsneezibiaengravingeffect: {\r\n\t\tname: 'Sneezibia Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Sneezibia Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['sneezibiafeature']) {\r\n                pokemon.addVolatile('sneezibiafeature');\r\n            }\r\n        },\r\n\t},\r\n\tspiritombengravingeffect: {\r\n\t\tname: 'Spiritomb Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Spiritomb Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['spiritombfeature']) {\r\n                pokemon.addVolatile('spiritombfeature');\r\n            }\r\n        },\r\n\t},\r\n\ttinkatonengravingeffect: {\r\n\t\tname: 'Tinkaton Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Tinkaton Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['tinkatonfeature']) {\r\n                pokemon.addVolatile('tinkatonfeature');\r\n            }\r\n        },\r\n\t},\r\n\tzebsonavoltengravingeffect: {\r\n\t\tname: 'Zebsonavolt Engraving Effect',\r\n\t\tnoCopy: true,\r\n\t\t/*onStart(side) {\r\n            this.add('-message', `The Zebsonavolt Engraving was activated on ${side.name}'s side!`);\r\n        },*/\r\n        onUpdate(pokemon) {\r\n            if (!pokemon.volatiles['zebsonavoltfeature']) {\r\n                pokemon.addVolatile('zebsonavoltfeature');\r\n            }\r\n        },\r\n\t},\r\n\t// end\r\n\r\n\t// start: List of Engrave effects\r\n\tgrassfeature: {\r\n\t\tname: 'Grass Feature',\r\n\t\tnoCopy: true,\r\n\t\tonStart(pokemon) {\r\n\t\t//\tthis.add('-start', pokemon, 'Grass Feature');\r\n\t\t\tthis.effectState.faintedCount = 0; // Initialize the fainted count\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Count the number of fainted Grass-type Pok\u00E9mon on the user's side\r\n\t\t\tconst faintedGrassTypes = pokemon.side.pokemon.filter(p => p.fainted && p.hasType('Grass')).length;\r\n\t\t\t\r\n\t\t\tif (faintedGrassTypes !== this.effectState.faintedCount) {\r\n\t\t\t\tthis.effectState.faintedCount = faintedGrassTypes; // Update the fainted count\r\n\t\t\t\tthis.add('-anim', pokemon, \"Cosmic Power\");\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s Grass Engraving boosts its power!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t// Update the fainted count again just before the attack\r\n\t\t\tconst faintedGrassTypes = attacker.side.pokemon.filter(p => p.fainted && p.hasType('Grass')).length;\r\n\t\t\tthis.effectState.faintedCount = faintedGrassTypes; // Update the count for the current attack\r\n\t\r\n\t\t\tif (this.effectState.faintedCount > 0) {\r\n\t\t\t\t// Increase the base power based on the number of fainted Grass-type Pok\u00E9mon\r\n\t\t\t\tconst powerBoost = [4096, 4506, 4915, 5325, 5734, 6144];\r\n\t\t\t\tconst boostIndex = Math.min(this.effectState.faintedCount, powerBoost.length - 1);\r\n\t\t\t\tthis.debug(`Grass Feature boost: ${powerBoost[boostIndex]}/4096`);\r\n\t\t\t\treturn this.chainModify([powerBoost[boostIndex], 4096]); // Modify the base power\r\n\t\t\t}\r\n\t\t},\r\n\t//\tonEnd(pokemon) {\r\n\t//\t\tthis.add('-end', pokemon, 'Grass Engraving');\r\n\t//\t},\r\n\t},\r\n\tbugfeature: {\r\n\t\tname: 'Bug Feature',\r\n\t\tnoCopy: true,\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\t// Store boosts for all targets affected by the move\r\n\t\t\tif (move && move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...foe.boosts };\r\n\t\t\t\t\t\tfoe.addVolatile('siphoning', source);\r\n\t\t\t\t\t\tfoe.volatiles['siphoning'].boosts = boosts;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'allAdjacent') {\r\n\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...adjacent.boosts };\r\n\t\t\t\t\t\tadjacent.addVolatile('siphoning', source);\r\n\t\t\t\t\t\tadjacent.volatiles['siphoning'].boosts = boosts;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'normal') {\r\n\t\t\t\tconst boosts = { ...target.boosts };\r\n\t\t\t\ttarget.addVolatile('siphoning', source);\r\n\t\t\t\ttarget.volatiles['siphoning'].boosts = boosts;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\t// Check if the target has fainted\r\n\t\t\tif (target.fainted) return;\r\n\t\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\ttype BoostStatistics = typeof stats[number];\r\n\t\r\n\t\t\t// Iterate through all active Pok\u00E9mon to check for stat changes\r\n\t\t\tfor (const activeTarget of this.getAllActive()) {\r\n\t\t\t\tif (!activeTarget.volatiles['siphoning']) continue;\r\n\t\r\n\t\t\t\tconst storedBoosts = activeTarget.volatiles['siphoning'].boosts;\r\n\t\t\t\tconst currentBoosts = activeTarget.boosts;\r\n\t\t\t\tlet statLowered = false;\r\n\t\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\t// Check if the current boost is less than the stored boost\r\n\t\t\t\t\tif (currentBoosts[stat] < storedBoosts[stat]) {\r\n\t\t\t\t\t\tstatLowered = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (statLowered) {\r\n\t\t\t\t\tconst damage = Math.floor(target.maxhp / 8);\r\n\t\t\t\t\tthis.damage(damage, activeTarget, source); // Apply damage to the affected target\r\n\t\t\t\t//\tthis.add('-message', `${activeTarget.name} took chip damage from ${source.name}'s Bug Engraving!`);\r\n\t\r\n\t\t\t\t\tif (source.hp < source.maxhp) {\r\n\t\t\t\t\t\tconst healAmount = Math.min(damage, source.maxhp - source.hp);\r\n\t\t\t\t\t\tthis.heal(healAmount, source);\r\n\t\t\t\t//\t\tthis.add('-message', `${source.name} recovered health from the Bug Engraving!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Clean up the volatile after processing\r\n\t\t\t\tdelete activeTarget.volatiles['siphoning'];\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfirefeature: {\r\n\t\tname: 'Fire Feature',\r\n\t\tnoCopy: true,\r\n\t\tonFaint(target, source, effect) {\r\n\t\t\tif (!source || !effect || target.side === source.side) return;\r\n\t\t\tif (effect.effectType === 'Move' && !effect.flags['futuremove']) {\r\n\t\t\t\tthis.add('-ability', target, 'Amaterasu');\r\n\t\t\t//\ttarget.setStatus('brn');\r\n\t\t\t\tconst bannedAbilities = [\r\n\t\t\t\t\t'battlebond', 'comatose', 'disguise', 'multitype', 'powerconstruct', 'rkssystem', 'schooling', 'shieldsdown', 'skyrider', 'stancechange', 'truant', 'zenmode',\r\n\t\t\t\t];\r\n\t\t\t\tif (bannedAbilities.includes(source.ability) || source.hasType('Fire')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.setAbility('amaterasu');\r\n\t\t\t\t\tsource.baseAbility = 'amaterasu' as ID;\r\n\t\t\t\t\tsource.ability = 'amaterasu' as ID;\r\n\t\t\t\t\tthis.add('-ability', source, 'Amaterasu', '[from] Ability: Amaterasu');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\twaterfeature: {\r\n\t\tname: 'Water Feature',\r\n\t\tnoCopy: true,\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'Water Engraving');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] Water Engraving');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonResidualOrder: 6,\r\n\t    onResidual(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t},\r\n\t},\r\n\ticefeature: {\r\n\t\tname: 'Ice Feature',\r\n\t\tnoCopy: true,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect.effectType === \"Move\" &&\r\n\t\t\t\t!effect.multihit &&\r\n\t\t\t\t(!effect.negateSecondary && !(effect.hasSheerForce && source.hasAbility('sheerforce')))\r\n\t\t\t) {\r\n\t\t\t\tthis.effectState.checkedAngerShell = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.effectState.checkedAngerShell = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItem(item) {\r\n\t\t\tconst healingItems = [\r\n\t\t\t\t'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry', 'berryjuice',\r\n\t\t\t];\r\n\t\t\tif (healingItems.includes(item.id)) {\r\n\t\t\t\treturn this.effectState.checkedAngerShell;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tthis.effectState.checkedAngerShell = true;\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.boost({atk: 1, spa: 1, spe: 1, def: -1, spd: -1}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\telectricfeature: {\r\n\t\tname: 'Electric Feature',\r\n\t\tnoCopy: true,\r\n\t\tonModifyCritRatio(critRatio, source) {\r\n\t\t\tconst hpPercentage = source.hp / source.maxhp; // Calculate remaining HP percentage\r\n\t\t\tconst hpFactor = Math.floor((1 - hpPercentage) * 100); // Convert to a scale of 0-100\r\n\t\t\t\t\r\n\t\t\t// Increase critical hit ratio based on remaining HP\r\n\t\t\t// The more HP lost, the higher the critical hit ratio\r\n\t\t\tcritRatio += Math.min(hpFactor, 100); // Cap the increase at 100\r\n\t\t\t\r\n\t\t\treturn critRatio; // Return the modified critical hit ratio\r\n\t\t},\r\n\t},\r\n\tpsychicfeature: {\r\n\t\tname: 'Psychic Feature',\r\n\t\tnoCopy: true,\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Psychic'] = true;\r\n\t\t\t}\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t},\r\n\tghostfeature: {\r\n\t\tname: 'Ghost Feature',\r\n\t\tnoCopy: true,\r\n\t\tonFaint(target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move' && !effect.flags['futuremove'] && !source.volatiles['curse']) {\r\n\t\t\t\tsource.addVolatile('curse', target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpoisonfeature: {\r\n\t\tname: 'Poison Feature',\r\n\t\tnoCopy: true,\r\n\t\tonFaint(target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move' && !effect.flags['futuremove']) {\r\n\t\t\t  source.addVolatile('contamination', target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfightingfeature: {\r\n\t\tname: 'Fighting Feature',\r\n\t\tnoCopy: true,\r\n\t\tonAnyModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target === this.effectState.target) {\r\n\t\t\t\tthis.debug('Fighting Engraving weaken');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(critical, source, target) {\r\n\t\t\tif (target === this.effectState.target) {\r\n\t\t\t\tthis.debug('Fighting Engraving prevents critical hit');\r\n\t\t\t\treturn false; // Prevent the critical hit\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (target === this.effectState.target)) {\r\n\t\t\t\treturn true; // Always hit if the target is the user of the fightingfeature\r\n\t\t\t}\r\n\t\t\treturn accuracy; // Return the original accuracy for all other cases\r\n\t\t},\r\n\t},\r\n\trockfeature: {\r\n\t\tname: 'Rock Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceModifyAccuracyPriority: -1,\r\n\t\tonSourceModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t    \tthis.debug('Rock Engraving - enhancing accuracy');\r\n\t\t\treturn this.chainModify([4915, 4096]); // translates to 20% more accuracy\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\tthis.debug('Rock Engraving - increasing critical hit ratio');\r\n\t\t\treturn critRatio + 2; // Increase critical hit ratio by 2\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (source === this.effectState.target) {\r\n\t\t\t\tthis.debug('Rock Engraving - reducing damage by 25%');\r\n\t\t\t\treturn this.chainModify(0.75); // Reduce user's damage by 25%\r\n\t\t\t}\r\n\t\t\treturn damage; // Return original damage for all other cases\r\n\t\t},\r\n\t},\r\n\tgroundfeature: {\r\n\t\tname: 'Ground Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (source === this.effectState.target && !source.activeTurns) {\r\n\t\t\t\tthis.debug('Ground Engraving - reducing damage by 50% on switch-in');\r\n\t\t\t\treturn this.chainModify(0.5); // Reduce damage by 50%\r\n\t\t\t}\r\n\t\t\treturn damage; // Return original damage for all other cases\r\n\t\t},\r\n\t},\r\n    normalfeature: {\r\n\t\tname: 'Normal Feature',\r\n\t\tnoCopy: true,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\t// Check if the damage is indirect\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tthis.debug('Normal Engraving blocking indirect damage');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tflyingfeature: {\r\n\t\tname: 'Flying Feature',\r\n\t\tnoCopy: true,\r\n\t\tonBasePowerPriority: 30,\r\n    \tonBasePower(basePower, attacker, defender, move) {\r\n        const basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n        this.debug('Base Power: ' + basePowerAfterMultiplier);\r\n        if (basePowerAfterMultiplier <= 60 && (attacker.hasType('Flying') || \r\n\t\t\t(attacker.baseSpecies.name === 'Aegislash-Ma\\'adowr' && ((attacker.hasType('Grass') && attacker.hasType('Steel')) ||\r\n\t\t\t(attacker.hasType('Grass') && attacker.hasType('???')))))) {\r\n            this.debug('Flying Engraving boost');\r\n            return this.chainModify(1.5); // Boost base power by 50%\r\n        \t}\r\n    \t},\r\n\t},\r\n\tdragonfeature: {\r\n\t\tname: 'Dragon Feature',\r\n\t\tnoCopy: true,\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Dragon' && move.category !== 'Status' && defender.hp <= defender.maxhp / 2) {\r\n\t\t\t\tthis.debug('Dragon Engraving boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Dragon' && move.category !== 'Status' && defender.hp <= defender.maxhp / 2) {\r\n\t\t\t\tthis.debug('Dragon Engraving boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsteelfeature: {\r\n\t\tname: 'Steel Feature',\r\n\t\tnoCopy: true,\r\n\t\tonModifySecondaries(secondaries) {\r\n\t\t\tthis.debug('Steel Engraving prevent secondary');\r\n\t\t\treturn secondaries.filter(effect => !!(effect.self || effect.dustproof));\r\n\t\t},\r\n\t},\r\n\tdarkfeature: {\r\n\t\tname: 'Dark Feature',\r\n\t\tnoCopy: true,\r\n\t\tonUpdate(this: Battle, pokemon: Pokemon) {\r\n\t\t\tif (pokemon.moveSlots.length < 4) {\r\n\t\t\t  const move = this.dex.moves.get('exhume');\r\n\t\t\t  if (move.exists) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'Dark Feature');\r\n\t\t\t\tpokemon.moveSlots.push({\r\n\t\t\t\t  move: move.name,\r\n\t\t\t\t  id: move.id,\r\n\t\t\t\t  pp: move.pp,\r\n\t\t\t\t  maxpp: move.pp,\r\n\t\t\t\t  target: move.target,\r\n\t\t\t\t  disabled: false,\r\n\t\t\t\t  used: false,\r\n\t\t\t\t  virtual: true,\r\n\t\t\t\t});\r\n\t\t\t\tthis.add('-message', `${pokemon.name} learned Exhume!`);\r\n\t\t\t\tpokemon.removeVolatile('darkfeature');\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  },\r\n\t},\r\n\tfairyfeature: {\r\n\t\tname: 'Fairy Feature',\r\n\t\tnoCopy: true,\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (!move || !target || source.switchFlag === true) return;\r\n\t  \r\n\t\t\t// Check if the move is not a status move and the target is not the source\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t  // Check if the source has an item and if it's Fairy Engraving\r\n\t\t\t  if (source.item === 'fairyengraving') {\r\n\t\t\t\tconst targetItem = target.takeItem(source); // Try to take the target's item\r\n\t\t\t\tif (targetItem) {\r\n\t\t\t\t  // Replace the Fairy Engraving item with the stolen item\r\n\t\t\t\t  const stolenItem = source.setItem(targetItem);\r\n\t\t\t\t  if (!stolenItem) {\r\n\t\t\t\t\ttarget.item = targetItem.id; // Bypass setItem to avoid breaking choicelock or anything\r\n\t\t\t\t  }\r\n\t\t\t\t  this.add('-item', source, targetItem, '[from] Fairy Feature', '[of] ' + target);\r\n\t\t\t\t}\r\n\t\t\t  } else {\r\n\t\t\t\t// Standard item stealing logic if not using Fairy Engraving\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t  \r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t  \r\n\t\t\t\t// Set the item for the source\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t  target.item = yourItem.id; // Bypass setItem to avoid breaking choicelock or anything\r\n\t\t\t\t  return;\r\n\t\t\t\t}\r\n\t  \r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] item: Fairy Engraving', '[of] ' + target);\r\n\t\t\t  }\r\n\t  \r\n\t\t\t  // If the target is still alive, give it Black Sludge\r\n\t\t\t  if (target.hp > 0) {\r\n\t\t\t\ttarget.setItem('blacksludge'); // Give Black Sludge to the target\r\n\t\t\t\tthis.add('-item', target, 'Black Sludge', '[from] Fairy Feature');\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  },\r\n\t},\r\n\t// end\r\n\tanquiterrafeature: {\r\n\t\tname: 'Anquiterra Feature',\r\n\t\tnoCopy: true,\r\n \t    onModifySpe(spe, pokemon) {\r\n        // Check if the Pok\u00E9mon is grounded and its HP is at or below 50%\r\n        \tif (pokemon.isGrounded() && pokemon.hp <= pokemon.maxhp / 2) {\r\n            \tthis.debug('Anquiterra Feature speed boost');\r\n            \treturn this.chainModify(1.5); // Increase speed by 50%\r\n        \t}\r\n        \treturn spe; // Return original speed if conditions are not met\r\n    \t},\r\n\t},\r\n\tarastinithfeature: {\r\n\t\tname: 'Arastinith Feature',\r\n\t\tnoCopy: true,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target === this.effectState.target && source !== target && !source.volatiles['mentaldamage']) {\r\n\t\t\t\tsource.addVolatile('mentaldamage', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, targets, move) {\r\n\t\t\t// Check if the source is the effect target\r\n\t\t\tif (source !== this.effectState.target) return;\r\n\t\r\n\t\t\t// Ensure targets is treated as an array\r\n\t\t\tconst affectedTargets = Array.isArray(targets) ? targets : [targets];\r\n\t\r\n\t\t\t// Prevent applying 'mentaldamage' if the source used a move that targets itself\r\n\t\t\tif (affectedTargets.includes(source)) return;  // Check if the source is one of the targets\r\n\t\r\n\t\t\t// Determine the type of spread move and apply 'mentaldamage' accordingly\r\n\t\t\tif (move && move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\tif (!foe.volatiles['mentaldamage']) {\r\n\t\t\t\t\t\t\tfoe.addVolatile('mentaldamage', source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'allAdjacent') {\r\n\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\tif (!adjacent.volatiles['mentaldamage']) {\r\n\t\t\t\t\t\t\tadjacent.addVolatile('mentaldamage', source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'normal') {\r\n\t\t\t\t// Apply to the specific target of the move\r\n\t\t\t\tconst firstTarget = affectedTargets[0]; // Access the first target safely\r\n\t\t\t\tif (firstTarget && firstTarget !== source && !firstTarget.volatiles['mentaldamage']) {\r\n\t\t\t\t\tfirstTarget.addVolatile('mentaldamage', source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Additional cases can be added here for other types of spread moves if needed\r\n\t\t},\r\n\t},\r\n\tbarbaraclemaadowrfeature: {\r\n\t\tname: 'Barbaracle-Ma\\'adowr Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Barbaracle-Ma\\'adowr Feature neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbeheeyemfeature: {\r\n\t\tname: 'Beheeyem Feature',\r\n\t\tnoCopy: true,\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (effect?.id === 'beheeyemfeature') return;\r\n\t\t\tconst partner = target.side.active.find(pokemon => pokemon && pokemon !== target && !pokemon.fainted);\r\n\t\t\tif (!partner || !partner.volatiles['beheeyemfeature']) return;\r\n\t\r\n\t\t\tconst beheeyemBoost: SparseBoostsTable = {};\r\n\t\t\tlet activated = false;\r\n\t\r\n\t\t\t// Check for decreases in stats with safe access\r\n\t\t\tif (boost.atk !== undefined && boost.atk < 0) {\r\n\t\t\t\tbeheeyemBoost.spa = -boost.atk; // If user lowers Atk, raise ally's SpA\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.spa !== undefined && boost.spa < 0) {\r\n\t\t\t\tbeheeyemBoost.atk = -boost.spa; // If user lowers SpA, raise ally's Atk\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.def !== undefined && boost.def < 0) {\r\n\t\t\t\tbeheeyemBoost.spd = -boost.def; // If user lowers Def, raise ally's SpD\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.spd !== undefined && boost.spd < 0) {\r\n\t\t\t\tbeheeyemBoost.def = -boost.spd; // If user lowers SpD, raise ally's Def\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (activated) {\r\n\t\t\t\tthis.add('-activate', target, 'Beheeyem Feature');\r\n\t\t\t\tthis.boost(beheeyemBoost, partner, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t},\r\n\tchantyrusfeature: {\r\n\t\tname: 'Chantyrus Feature',\r\n\t\tnoCopy: true,\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'colourmegone', 'judgment', 'multiattack', 'naturalgift', 'pincerattack', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcraftenirfeature: {\r\n\t\tname: 'Craftenir Feature',\t\r\n\t\tnoCopy: true,\t\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if the Pok\u00E9mon has no item\r\n\t\t\tif (!pokemon.item && !pokemon.volatiles['jewellimit']) {\r\n\t\t\t\t// Get the current primary type of the Pok\u00E9mon\r\n\t\t\t\tconst currentType = pokemon.types[0]; // Get the current primary type\r\n\r\n\t\t\t\t// Determine the primary type based on the species\r\n\t\t\t\tconst speciesPrimaryType = pokemon.species.types[0]; // Get the original primary type from species\r\n\t\r\n\t\t\t\t// Assign a jewel based on the current or species primary type\r\n\t\t\t\tlet jewel;\r\n            \tconst typeToUse = currentType === '???' ? speciesPrimaryType : currentType; // Use species type if current is ???\r\n\t\t\t\tswitch (typeToUse) {\r\n\t\t\t\t\tcase 'Grass':\r\n\t\t\t\t\t\tjewel = 'Grass Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Bug':\r\n\t\t\t\t\t\tjewel = 'Bug Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Fire':\r\n\t\t\t\t\t\tjewel = 'Fire Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Water':\r\n\t\t\t\t\t\tjewel = 'Water Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Ice':\r\n\t\t\t\t\t\tjewel = 'Ice Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Electric':\r\n\t\t\t\t\t\tjewel = 'Electric Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Psychic':\r\n\t\t\t\t\t\tjewel = 'Psychic Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Ghost':\r\n\t\t\t\t\t\tjewel = 'Ghost Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Ground':\r\n\t\t\t\t\t\tjewel = 'Ground Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Rock':\r\n\t\t\t\t\t\tjewel = 'Rock Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Fighting':\r\n\t\t\t\t\t\tjewel = 'Fighting Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Normal':\r\n\t\t\t\t\t\tjewel = 'Normal Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Flying':\r\n\t\t\t\t\t\tjewel = 'Flying Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Dragon':\r\n\t\t\t\t\t\tjewel = 'Dragon Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Steel':\r\n\t\t\t\t\t\tjewel = 'Steel Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Dark':\r\n\t\t\t\t\t\tjewel = 'Dark Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Fairy':\r\n\t\t\t\t\t\tjewel = 'Fairy Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tjewel = `${typeToUse} Gem`; // Default to the user's original primary type gem if ??? type\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Assign the jewel to the Pok\u00E9mon\r\n\t\t\t\tpokemon.setItem(jewel);\r\n\t\t\t\tthis.add('-item', pokemon, jewel);\r\n\t\t\t\t// Mark that this Pok\u00E9mon has received a jewel and can no longer receive another jewel unless it reenters the field\r\n\t\t\t\tpokemon.volatiles['jewellimit'] = { id: 'jewellimit' };\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tequinoquefeature: {\r\n\t\tname: 'Equinoque Feature',\r\n\t\tnoCopy: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.sideConditions['tailwind']) {\r\n\t\t\t\tthis.boost({spe: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySideConditionStart(target, source, sideCondition) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (sideCondition.id === 'tailwind') {\r\n\t\t\t\tthis.boost({spe: 1}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tgolurkfeature: {\r\n\t\tname: 'Golurk Feature',\r\n\t\tnoCopy: true,\r\n\t//\tonStart(pokemon) {\r\n\t//\t\tthis.add('-start', pokemon, 'Golurk Lock');\r\n    //    \tthis.add('-message', `${pokemon.name} will be locked into a move at 33% HP or below!`);\r\n    //\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst hpThreshold = pokemon.maxhp / 3; // Calculate HP threshold\r\n\t\t\t// Check if the Pok\u00E9mon's HP is above or below the threshold\r\n\t\t\tif (pokemon.hp > hpThreshold) {\r\n\t\t\t\t// Remove Golurk Lock if HP is above threshold\r\n\t\t\t\tif (pokemon.volatiles['golurklock'] &&\r\n\t\t\t\t\t!['choicescarf', 'choiceband', 'choicespecs'].includes(pokemon.item)) {\r\n\t\t\t\t\tpokemon.removeVolatile('golurklock');\r\n\t\t\t\t}\r\n\t\t\t} else if (pokemon.hp <= hpThreshold) {\r\n\t\t\t\t// Add Golurk Lock if HP is below threshold\r\n\t\t\t\tif (!pokemon.volatiles['golurklock'] &&\r\n\t\t\t\t\t!['choicescarf', 'choiceband', 'choicespecs'].includes(pokemon.item)) {\r\n\t\t\t\t\tpokemon.addVolatile('golurklock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Golurk Feature boost');\r\n\t\t\t\treturn this.chainModify(1.5); // Boost Attack by 1.5x\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Golurk Feature boost');\r\n\t\t\t\treturn this.chainModify(1.5); // Boost Special Attack by 1.5x\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tgrapplinfeature: {\r\n\t\tname: 'Grapplin Feature',\r\n\t\tnoCopy: true,\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.side.sideConditions['tailwind']) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t},\r\n\tiblissfeature: {\r\n\t\tname: 'Ibliss Feature',\r\n\t\tnoCopy: true,\r\n\t//\tduration: 1,\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.actions.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tkenuterrafeature: {\r\n\t\tname: 'Kenuterra Feature',\r\n\t\tnoCopy: true,\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && pokemon.isGrounded()) {\r\n\t\t\t\tthis.debug('Kenuterra Feature boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && pokemon.isGrounded()) {\r\n\t\t\t\tthis.debug('Kenuterra Feature boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tklinklangfeature: {\r\n\t\tname: 'Klinklang Feature',\r\n\t\tnoCopy: true,\r\n\t\tonResidualOrder: 26,\r\n    \tonResidual(pokemon) {\r\n\t\t\t// Check if the Pok\u00E9mon is Electric or Steel\r\n\t\t\t/*if ((pokemon.types.includes('Electric') || pokemon.types.includes('Rock') || pokemon.types.includes('Steel')) && this.field.isTerrain('electricterrain')) {\r\n\t\t\t\t// Apply Magnet Rise effect if not already active\r\n\t\t\t\tif (!pokemon.volatiles['magnetrise']) {\r\n\t\t\t\t\tpokemon.addVolatile('magnetrise');\r\n\t\t\t\t//\tthis.add('-activate', pokemon, 'move: Magnet Rise');\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\t\r\n\t\t\t// Determine the turn number\r\n\t\t\tconst turnNumber = this.turn; // Assuming 'this.turn' gives the current turn number\r\n\t\t\t// Check for the presence of Plus and Minus abilities as well as Magnet Modul item among active Pok\u00E9mon\r\n\r\n\t\t\tconst hasPlusAllyMinus = pokemon.hasAbility('plus') && pokemon.side.active.some(ally => ally && ally !== pokemon && (ally.hasAbility('minus') \r\n\t\t\t|| (ally.hasItem('magnetmodule') && (ally.hasType('Electric') || ally.hasType('Rock') || ally.hasType('Steel')))));\r\n\t\t\tconst hasMinusAllyPlus = pokemon.hasAbility('minus') && pokemon.side.active.some(ally => ally && ally !== pokemon && (ally.hasAbility('plus') \r\n\t\t\t|| (ally.hasItem('magnetmodule') && (ally.hasType('Electric') || ally.hasType('Rock') || ally.hasType('Steel')))));\r\n\t\t\tconst hasMagnetModuleAllyPlusMinus = pokemon.hasItem('magnetmodule') && pokemon.side.active.some(ally => ally && ally !== pokemon && (ally.hasAbility('plus') || ally.hasAbility('minus')));\r\n\r\n\t\t\t// Apply boosts based on the conditions\r\n            if (turnNumber % 2 === 0 && (hasPlusAllyMinus || hasMinusAllyPlus || hasMagnetModuleAllyPlusMinus)) { // Even turn\r\n                this.boost({atk: 1, spa: 1}, pokemon); // Boost Atk and SpA\r\n            } else if (turnNumber % 2 === 1 && (hasPlusAllyMinus || hasMinusAllyPlus || hasMagnetModuleAllyPlusMinus)) { // Odd turn\r\n                this.boost({def: 1, spd: 1}, pokemon); // Boost Def and SpD\r\n            }\r\n\t\t\r\n\t\t},\r\n\t},\r\n\tlanturnfeature: {\r\n\t\tname: 'Lanturn Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceModifyAccuracy(accuracy, source, target) {\r\n\t\t\tif (typeof accuracy === 'number') {\r\n\t\t\t\treturn this.chainModify([1300, 1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAccuracy(accuracy, target, source) {\r\n\t\t\tif (typeof accuracy === 'number') {\r\n\t\t\t\treturn this.chainModify([1300, 1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmaudiorfeature: {\r\n\t\tname: 'Maudior Feature',\r\n\t\tnoCopy: true,\r\n\t},\r\n\torasundrafeature: {\r\n\t\tname: 'Orasundra Feature',\r\n\t\tnoCopy: true,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target === this.effectState.target && source !== target && !source.volatiles['paradamage']) {\r\n\t\t\t  source.addVolatile('paradamage', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, targets, move) {\r\n\t\t\t// Check if the source is the effect target\r\n\t\t\tif (source !== this.effectState.target) return;\r\n\t\r\n\t\t\t// Ensure targets is treated as an array\r\n\t\t\tconst affectedTargets = Array.isArray(targets) ? targets : [targets];\r\n\t\r\n\t\t\t// Prevent applying 'paradamage' if the source used a move that targets itself\r\n\t\t\tif (affectedTargets.includes(source)) return;  // Check if the source is one of the targets\r\n\t\r\n\t\t\t// Determine the type of spread move and apply 'paradamage' accordingly\r\n\t\t\tif (move && move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\tif (!foe.volatiles['paradamage']) {\r\n\t\t\t\t\t\t\tfoe.addVolatile('paradamage', source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'allAdjacent') {\r\n\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\tif (!adjacent.volatiles['paradamage']) {\r\n\t\t\t\t\t\t\tadjacent.addVolatile('paradamage', source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'normal') {\r\n\t\t\t\t// Apply to the specific target of the move\r\n\t\t\t\tconst firstTarget = affectedTargets[0]; // Access the first target safely\r\n\t\t\t\tif (firstTarget && firstTarget !== source && !firstTarget.volatiles['paradamage']) {\r\n\t\t\t\t\tfirstTarget.addVolatile('paradamage', source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Additional cases can be added here for other types of spread moves if needed\r\n\t\t},\r\n\t\r\n\t},\r\n\tparascentfeature: {\r\n\t\tname: 'Parascent Feature',\r\n\t\tnoCopy: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tif (!source.volatiles['hayfever']) {\r\n\t\t\t\t\tif (!source.hasType('Grass') && !source.hasItem('Safety Goggles') && !source.hasAbility('Overcoat')) {\r\n\t\t\t\t\t\tsource.addVolatile('hayfever');\r\n\t\t\t\t\t\tthis.add('-start', source, 'Hay Fever');\r\n                    \tthis.add('-message', `${source.name} caught Hay Fever from the Parascent Engraving!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trabscafeature: {\r\n\t\tname: 'Rabsca Feature',   \r\n\t\tnoCopy: true, \r\n\t\tonHit(target, source, move) {\r\n\t\t\tconst isMultihit = move.multihit; // Check if the move is multihit\r\n\t\t\tconst hasParentalBond = source.hasAbility('parentalbond'); // Check for Parental Bond\r\n\t\r\n\t\t\t// If the move is a multihit move\r\n\t\t\tif (isMultihit) {\r\n\t\t\t\t// Heal only for the first hit\r\n\t\t\t\tif (move.hit === 1) { // Check if this is the first hit\r\n\t\t\t\t\tconst typeMod = target.getMoveHitData(move).typeMod; // Get the effectiveness of the move\r\n\t\t\t\t\tif (typeMod > 0) {\r\n\t\t\t\t\t\tthis.heal(target.baseMaxhp / 4); // Heal the target\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn; // Stop further healing from subsequent hits\r\n\t\t\t}\r\n\t\r\n\t\t\t// If the move is not a multihit move\r\n\t\t\tif (!isMultihit) {\r\n\t\t\t\tif (hasParentalBond) {\r\n\t\t\t\t\t// Heal only for the first hit if the source has Parental Bond\r\n\t\t\t\t\tif (move.hit === 1) { // Check if this is the first hit\r\n\t\t\t\t\t\tconst typeMod = target.getMoveHitData(move).typeMod; // Get the effectiveness of the move\r\n\t\t\t\t\t\tif (typeMod > 0) {\r\n\t\t\t\t\t\t\tthis.heal(target.baseMaxhp / 4); // Heal the target\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Heal normally if the source does not have Parental Bond\r\n\t\t\t\t\tconst typeMod = target.getMoveHitData(move).typeMod; // Get the effectiveness of the move\r\n\t\t\t\t\tif (typeMod > 0) {\r\n\t\t\t\t\t\tthis.heal(target.baseMaxhp / 4); // Heal the target\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsneezibiafeature: {\r\n\t\tname: 'Sneezibia Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.hp >= target.maxhp && target.hasType('Ice')) {\r\n\t\t\t\tthis.debug('Sneezibia Feature weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tspiritombfeature: {\r\n\t\tname: 'Spiritomb Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\t// Check if the source used a move that's super effective and not status\r\n\t\t\tif (target !== source && !target.volatiles['embargo'] &&\r\n\t\t\t\tmove.category !== 'Status' && target.getMoveHitData(move).typeMod > 0 &&\r\n\t\t\t\t!target.volatiles['stall']) {\r\n\t\t\t\t// Inflict Embargo on the target\r\n\t\t\t\ttarget.addVolatile('embargo');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttinkatonfeature: {\r\n\t\tname: 'Tinkaton Feature',\r\n        noCopy: true,\r\n    \tonStart(pokemon) {\r\n\t\t\tthis.effectState.recycled = false;\r\n\t\t},\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon === this.effectState.target && !this.effectState.recycled) {\r\n\t\t\t\tconst success = this.actions.useMove('recycle', pokemon);\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tthis.effectState.recycled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n    \r\n\t},\r\n\tzebsonavoltfeature: {\r\n\t\tname: 'Zebsonavolt Feature',\r\n\t\tnoCopy: true,\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status' && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\ttarget.trySetStatus('brn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// end\r\n\r\n\t// start: Golurk Lock, from Golurk Feature\r\n\tgolurklock: {\r\n    \tname: 'Golurk Lock',\r\n    \tnoCopy: true,\r\n    \tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (!pokemon.volatiles['golurklock'].lockedMove) {\r\n\t\t\t\t// First move used after getting the volatile becomes the locked move\r\n\t\t\t\tpokemon.volatiles['golurklock'].lockedMove = move.id;\r\n\t\t\t\tthis.add('-message', `${pokemon.name} locked into ${move.name}!`);\r\n\t\t\t} else if (pokemon.volatiles['golurklock'].lockedMove !== move.id) {\r\n\t\t\t\t// If trying to use a different move, fail\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is locked into ${this.dex.moves.get(pokemon.volatiles['golurklock'].lockedMove).name}!`);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// If using the locked move, allow it to proceed\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (pokemon.volatiles['golurklock'].lockedMove) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id !== pokemon.volatiles['golurklock'].lockedMove) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, 'Golurk Lock');\r\n\t\t\tthis.add('-message', `${pokemon.name} is no longer locked into a move.`);\r\n\t\t},\r\n    \r\n\t},\r\n\t// end\r\n\r\n\t// start: Hayy Fever, bound by Parascent Engraving\r\n\thayfever: {\r\n\t\tname: 'Hay Fever',\r\n\t\tnoCopy: true,\r\n\t//\tonStart(pokemon) {\r\n\t//\t\tthis.add('-start', pokemon, 'Hay Fever');\r\n\t//\t},\r\n\t\tonResidualOrder: 9,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.damage(pokemon.baseMaxhp / 8);\r\n\t\t//\tthis.add('-damage', pokemon, pokemon.getHealth, '[from] Hay Fever');\r\n\t\t},\r\n\t\tonAnyTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) {\r\n\t\t\t\tlet showMsg = false;\r\n\t\t\t\tfor (let i in boost) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tif (boost[i] > 0) {\r\n\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\tboost[i] = 0;\r\n\t\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add('-fail', target, 'Hay Fever');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, 'Hay Fever');\r\n\t\t},\r\n\t},\r\n\t// end\r\n\r\n\t// start: Mental Damage, bound by Arastinith Engraving\r\n\tmentaldamage: {\r\n\t\tname: 'Mental Damage',\r\n  \t\tonStart(pokemon, source) {\r\n    \t\tthis.add('-start', pokemon, 'Mental Damage', '[silent]');\r\n    \t\tthis.effectState.source = source;\r\n  \t\t},\r\n  \t\tonResidualOrder: 10,\r\n  \t\tonResidual(pokemon) {\r\n\t\t\tconst conditions = ['attract', 'taunt', 'encore', 'torment', 'disable', 'healblock'];\r\n    \t\tif (conditions.some(condition => pokemon.volatiles[condition])) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, this.effectState.source);\r\n\t\t\t}\r\n  \t\t},\r\n\t\tonEnd(pokemon) {\r\n    \t\tthis.add('-end', pokemon, 'Mental Damage');\r\n  \t\t},\r\n\t},\r\n\t// end\r\n\r\n\t// start: Para Damage, bound by Orasundra Engraving\r\n\tparadamage: {\r\n\t\tname: 'Para Damage',\r\n\t\tonStart(pokemon, source) {\r\n\t\t  this.add('-start', pokemon, 'Para Damage', '[silent]');\r\n\t\t  this.effectState.source = source;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t  if (pokemon.status === 'par') {\r\n\t\t\treturn this.chainModify(0.5);\r\n\t\t  }\r\n\t\t},\r\n\t\tonResidualOrder: 11,\r\n\t\tonResidual(pokemon) {\r\n\t\t  if (pokemon.status === 'par') {\r\n\t\t\tthis.damage(pokemon.baseMaxhp / 16, pokemon, this.effectState.source);\r\n\t\t  }\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t  this.add('-end', pokemon, 'Para Damage');\r\n\t\t},\r\n\t},\r\n\t// end\r\n\r\n\t// start: Contamination from Poison Feature\r\n\tcontamination: {\r\n\t\tname: 'Contamination',\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-start', pokemon, 'contamination');\r\n\t\t\tthis.effectState.checkedAlly = false;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.hasType('Poison') && !pokemon.hasType('Steel') && !pokemon.status) {\r\n\t\t\t\tif (pokemon.isGrounded() && this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.hasAbility('immunity')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.hasAbility('comatose')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.side.getSideCondition('safeguard')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.hasItem('sunring') && (pokemon.baseSpecies.baseSpecies === 'Horizonoc')) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Check if the ally is Horizonoc and Sun or Desolate Land is active\r\n\t\t\t\t\tconst allyPresent = pokemon.side.active.some(ally => ally && ally !== pokemon && ally.baseSpecies.baseSpecies === 'Horizonoc' && ally.hasItem('sunring'));\r\n\t\t\t\t\tif (allyPresent && ['sunnyday', 'desolateland'].includes(this.field.effectiveWeather())) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\tpokemon.setStatus('psn', pokemon, this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 11,\r\n\t\tonResidual(pokemon) {\r\n\t\t\t// Check for allies every turn after the first turn\r\n\t\t\tif (!this.effectState.checkedAlly) {\r\n\t\t\t\tthis.effectState.checkedAlly = true;\r\n\t\t\t} else {\r\n\t\t\tconst ally = pokemon.side.active.find(p => p && p !== pokemon && !p.volatiles['contamination']);\r\n\t\t\tif (ally) {\r\n\t\t\t\tally.addVolatile('contamination', pokemon);\r\n\t\t\t\tthis.add('-message', `${ally.name} was contaminated by ${pokemon.name}'s toxin!`);\r\n\t\t\t\tthis.effectState.checkedAlly = false; // Reset the check for the newly contaminated ally\r\n\t\t\t\t}\r\n\t\t  \t}\r\n\t\t},\r\n\t\tonFaint(pokemon, source, effect) {\r\n\t\t\t// Check if the Pok\u00E9mon fainted from an attack\r\n\t\t\tif (effect && effect.effectType === 'Move' && !effect.flags['futuremove']) {\r\n\t\t\t\tif (source && source.hp && source.isActive) {\r\n\t\t\t  \tsource.addVolatile('contamination', pokemon);\r\n\t\t\t  \tthis.add('-message', `${source.name} was contaminated by ${pokemon.name}'s toxin!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// end\r\n\r\n\tsteeldenial: {\r\n\t\tname: \"Steel Denial\",\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\t// If the Pok\u00E9mon has the Steel type, replace it with \"???\"\r\n\t\t\tif (pokemon.hasType('Steel')) {\r\n\t\t\t\tconst oldTypes = pokemon.types.slice();\r\n\t\t\t\tpokemon.setType(pokemon.types.map(type => type === 'Steel' ? '???' : type));\r\n\t\t\t\t// Check if the types actually changed\r\n\t\t\t\tif (oldTypes.join('/') !== pokemon.types.join('/')) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Steel Denial');\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon.types = pokemon.types.filter(type => type !== 'Steel'); // Remove Steel type rather than replacing it with ???\r\n\r\n\t\t\t\t/*// Check if the types actually changed visually\r\n\t\t\t\tif (oldTypes.length !== pokemon.types.length) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Steel Denial');\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// If the Pok\u00E9mon has the Steel type, replace it with \"???\"\r\n\t\t\tif (pokemon.hasType('Steel')) {\r\n\t\t\t\tconst oldTypes = pokemon.types.slice();\r\n\t\t\t\tpokemon.setType(pokemon.types.map(type => type === 'Steel' ? '???' : type));\r\n\t\t\t\t// Check if the types actually changed\r\n\t\t\t\tif (oldTypes.join('/') !== pokemon.types.join('/')) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Steel Denial');\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon.types = pokemon.types.filter(type => type !== 'Steel'); // Remove Steel type rather than replacing it with ???\r\n\r\n\t\t\t\t/*// Check if the types actually changed visually\r\n\t\t\t\tif (oldTypes.length !== pokemon.types.length) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Steel Denial');\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t},\r\n\t// end\r\n\t// start: Aegislash-Ma'adowr is the only Pkm who could get this volatile if hit by Soak\r\n\tsoaksteeldenial: {\r\n\t\tname: 'Soak Steel Denial',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\t// Aegislash-Ma'adowr is just soaked and will turn into mono Water\r\n\t\t\tif (pokemon.types.join() !== 'Water' && !pokemon.volatiles['typetracker']) {\r\n\t\t\t\tpokemon.setType('Water');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// When ally Craftenir is present: Water, blade -> Grass/Steel, shield -> Water/???, shield\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Steel') && pokemon.volatiles['typetracker'] && pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType(['Water', '???']);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// When ally Craftenir is present: Water/???, shield -> (Grass/Flying, blade) -> Water, blade\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Flying') && pokemon.volatiles['typetracker'] && pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType('Water');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// Water/Steel (Steel regained), shield -> (Grass/Flying, blade) -> Water, blade\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Flying') && pokemon.volatiles['typetracker'] && !pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType('Water');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// Water, blade -> (Grass/Steel, shield) -> Water/Steel, shield\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Steel') && pokemon.volatiles['typetracker'] && !pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType(['Water', 'Steel']);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Aegislash-Ma'adowr is just soaked and will turn into mono Water\r\n\t\t\tif (pokemon.types.join() !== 'Water' && !pokemon.volatiles['typetracker']) {\r\n\t\t\t\tpokemon.setType('Water');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// When ally Craftenir is present: Water, blade -> Grass/Steel, shield -> Water/???, shield\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Steel') && pokemon.volatiles['typetracker'] && pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType(['Water', '???']);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// When ally Craftenir is present: Water/???, shield -> (Grass/Flying, blade) -> Water, blade\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Flying') && pokemon.volatiles['typetracker'] && pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType('Water');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// Water/Steel (Steel regained), shield -> (Grass/Flying, blade) -> Water, blade\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Flying') && pokemon.volatiles['typetracker'] && !pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType('Water');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t\t// Water, blade -> (Grass/Steel, shield) -> Water/Steel, shield\r\n\t\t\tif (pokemon.types.join() !== 'Water' && pokemon.hasType('Grass') && pokemon.hasType('Steel') && pokemon.volatiles['typetracker'] && !pokemon.volatiles['chainlink']) {\r\n\t\t\t\tpokemon.setType(['Water', 'Steel']);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] Soak Steel Denial');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttypetracker: {\r\n\t\tname: 'Type Tracker',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\tif (pokemon.volatiles['chainlink']) {\r\n\t\t\t\t// ally Craftenir borrows Steel from non soaked Aegislash-Ma'adowr\r\n\t\t\t\tif (pokemon.baseSpecies.name === 'Aegislash-Ma\\'adowr' && pokemon.hasType('Steel') && !pokemon.volatiles['soaksteeldenial']) {\r\n\t\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tif (!pokemon.volatiles['chainlink']) {\r\n\t\t\t\t// ally Craftenir switches out; typetracker ensures Aegislash-Ma'adowr was the Pkm that gave its Steel-type to ally Craftenir\r\n\t\t\t\tif (pokemon.baseSpecies.name === 'Aegislash-Ma\\'adowr' && pokemon.species.name !== 'Aegislash-Blade-Ma\\'adowr' && pokemon.hasType('Water') \r\n\t\t\t\t\t&& !pokemon.hasType('Steel') && pokemon.volatiles['soaksteeldenial']) {\r\n\t\t\t\t\tpokemon.addType('Steel');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Soak Steel Denial');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} gained the Steel type!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['chainlink']) {\r\n\t\t\t\t// ally Craftenir borrows Steel from non soaked Aegislash-Ma'adowr\r\n\t\t\t\tif (pokemon.baseSpecies.name === 'Aegislash-Ma\\'adowr' && pokemon.hasType('Steel') && !pokemon.volatiles['soaksteeldenial']) {\r\n\t\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tif (!pokemon.volatiles['chainlink']) {\r\n\t\t\t\t// ally Craftenir switches out; typetracker ensures Aegislash-Ma'adowr was the Pkm that gave its Steel-type to ally Craftenir\r\n\t\t\t\tif (pokemon.baseSpecies.name === 'Aegislash-Ma\\'adowr' && pokemon.species.name !== 'Aegislash-Blade-Ma\\'adowr' && pokemon.hasType('Water') \r\n\t\t\t\t\t&& !pokemon.hasType('Steel') && pokemon.volatiles['soaksteeldenial']) {\r\n\t\t\t\t\tpokemon.addType('Steel');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Soak Steel Denial');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} gained the Steel type!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// start: Wind Blessing from Eye of the Sun move\r\n\twindblessing: {\r\n\t\tname: 'Wind Blessing',\r\n\t\tnoCopy: true,\r\n\t\tduration: 5,\r\n\t\tonSideStart(side, source) {\r\n\t\t\tthis.add('-sidestart', side, 'Wind Blessing');\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Wind Blessing neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSideResidualOrder: 26,\r\n\t\tonSideResidualSubOrder: 6,\r\n\t\tonSideEnd(side) {\r\n\t\t\tthis.add('-sideend', side, 'Wind Blessing');\r\n\t\t},\r\n\t},\r\n\t// end\r\n\t\r\n\t// start: Time Crystals from Time Compressor\r\n\ttimecrystals: {\r\n\t\tname: 'Time Crystals',\r\n\t\tnoCopy: true,\r\n\t\tduration: 3,\r\n\t\tonSideStart(side) {\r\n\t\t\tthis.add('-sidestart', side, 'Time Crystals');\r\n\t\t},\r\n\t\tonSideEnd(side) {\r\n\t\t\tthis.add('-message', 'The time crystals unleashed a great amount of energy and...');\r\n\t\t\tthis.add('-fieldstart', 'move: Trick Room');\r\n\t\t\tthis.add('-sideend', side, 'Time Crystals');\r\n\t\t},\r\n\t},\r\n\t// end\r\n\r\n\t// Commander needs two conditions so they are implemented here\r\n\t// Dondozo\r\n\tcommanded: {\r\n\t\tname: \"Commanded\",\r\n\t\tnoCopy: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.boost({atk: 2, spa: 2, spe: 2, def: 2, spd: 2}, pokemon);\r\n\t\t},\r\n\t\tonDragOutPriority: 2,\r\n\t\tonDragOut() {\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t// Prevents Shed Shell allowing a swap\r\n\t\tonTrapPokemonPriority: -11,\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.trapped = true;\r\n\t\t},\r\n\t},\r\n\t// Tatsugiri\r\n\tcommanding: {\r\n\t\tname: \"Commanding\",\r\n\t\tnoCopy: true,\r\n\t\tonDragOutPriority: 2,\r\n\t\tonDragOut() {\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t// Prevents Shed Shell allowing a swap\r\n\t\tonTrapPokemonPriority: -11,\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.trapped = true;\r\n\t\t},\r\n\t\t// Override No Guard\r\n\t\tonInvulnerabilityPriority: 2,\r\n\t\tonInvulnerability(target, source, move) {\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonBeforeTurn(pokemon) {\r\n\t\t\tthis.queue.cancelAction(pokemon);\r\n\t\t},\r\n\t},\r\n\r\n\t// start: Escavalier + Grapplin Combo\r\n\tskyriderally: {\r\n\t\tname: \"Sky Rider Ally\",\r\n\t\tnoCopy: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.types.includes('Steel')) {\r\n\t\t\t\tpokemon.types = [...pokemon.types, 'Steel']; // Spread operator to create a new array\r\n\t\t\t\tthis.add('-message', `${pokemon.name} received armor from Escavalier! ${pokemon.name} let out a cry.`);\r\n\t\t\t\t// here, I would have added a sound for the battle cry. Perhaps, one day, I'll know how to add it\r\n\t\t\t\t// this.add('-cries', pokemon, 'Eternatus');\r\n\t\t\t\tthis.add('-anim', pokemon, 'Roar');\r\n\t\t\t\tthis.add('-message', `The battle intensifies as ${pokemon.name} gains extra reinforcement!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\tif (pokemon.types.includes('Steel')) {\r\n\t\t\tpokemon.types = pokemon.types.filter(type => type !== 'Steel'); // Remove Steel type\r\n\t\t\tthis.add('-message', `${pokemon.name}'s armor was taken down. ${pokemon.name} is upset, feeling the loss of its protection!`);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tskyriding: {\r\n\t\tname: \"Sky Riding\",\r\n\t\tnoCopy: true,\r\n\t\tonPrepareHit(pokemon, target, move) {\r\n\t\t\tconst escavalier = pokemon.side.active.find(ally => ally.species.name === 'Escavalier' && (ally.hasAbility('skyrider')));\r\n   \t\t\tif (!escavalier) return; // Ensure Escavalier is present\r\n\r\n\t\t\t// Check if the move is not a status move\r\n\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t// Loop through the action queue\r\n\t\t\t\tfor (const action of this.queue.list as MoveAction[]) {\r\n\t\t\t\t\t// Check if the action is valid\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!action.move || !action.pokemon?.isActive ||\r\n\t\t\t\t\t\taction.pokemon.fainted || action.maxMove || action.zmove\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue; // Skip invalid actions\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t// Check if the action belongs specifically to the ally; indirectly, that's Escavalier\r\n\t\t\t\t\tif (action.pokemon.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.queue.prioritizeAction(action, move); // Prioritize the action\r\n\t\t\t\t\t\tthis.add('-waiting', pokemon, action.pokemon); // Notify that Escavalier is waiting\r\n\t\t\t\t\t\tbreak; // Exit the loop but not the function, meaning user's move should be able to do damage now\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t},\r\n\t// end\r\n\r\n\t// Arceus and Silvally's actual typing is implemented here.\r\n\t// Their true typing for all their formes is Normal, and it's only\r\n\t// Multitype and RKS System, respectively, that changes their type,\r\n\t// but their formes are specified to be their corresponding type\r\n\t// in the Pokedex, so that needs to be overridden.\r\n\t// This is mainly relevant for Hackmons Cup and Balanced Hackmons.\r\n\tarceus: {\r\n\t\tname: 'Arceus',\r\n\t\tonTypePriority: 1,\r\n\t\tonType(types, pokemon) {\r\n\t\t\tif (pokemon.transformed || pokemon.ability !== 'multitype' && this.gen >= 8) return types;\r\n\t\t\tlet type: string | undefined = 'Normal';\r\n\t\t\tif (pokemon.ability === 'multitype') {\r\n\t\t\t\ttype = pokemon.getItem().onPlate;\r\n\t\t\t\tif (!type) {\r\n\t\t\t\t\ttype = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [type];\r\n\t\t},\r\n\t},\r\n\tsilvally: {\r\n\t\tname: 'Silvally',\r\n\t\tonTypePriority: 1,\r\n\t\tonType(types, pokemon) {\r\n\t\t\tif (pokemon.transformed || pokemon.ability !== 'rkssystem' && this.gen >= 8) return types;\r\n\t\t\tlet type: string | undefined = 'Normal';\r\n\t\t\tif (pokemon.ability === 'rkssystem') {\r\n\t\t\t\ttype = pokemon.getItem().onMemory;\r\n\t\t\t\tif (!type) {\r\n\t\t\t\t\ttype = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [type];\r\n\t\t},\r\n\t},\r\n\trolloutstorage: {\r\n\t\tname: 'rolloutstorage',\r\n\t\tduration: 2,\r\n\t\tonBasePower(relayVar, source, target, move) {\r\n\t\t\tlet bp = Math.max(1, move.basePower);\r\n\t\t\tbp *= Math.pow(2, source.volatiles['rolloutstorage'].contactHitCount);\r\n\t\t\tif (source.volatiles['defensecurl']) {\r\n\t\t\t\tbp *= 2;\r\n\t\t\t}\r\n\t\t\tsource.removeVolatile('rolloutstorage');\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
