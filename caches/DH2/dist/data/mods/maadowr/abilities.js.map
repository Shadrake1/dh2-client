{
  "version": 3,
  "sources": ["../../../../data/mods/maadowr/abilities.ts"],
  "sourcesContent": ["export const Abilities: { [abilityid: string]: ModdedAbilityData } = {\r\n  absorption: {\r\n\t  shortDesc: \"Increases user's base Def or SpD in terrain.\",\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain') || this.field.isTerrain('electricterrain')) return this.chainModify(1.5);\r\n\t\t},\r\n\t   onModifySpDPriority: 6,\r\n\t\tonModifySpD(pokemon) {\r\n\t\t\tif (this.field.isTerrain('acidicterrain') || this.field.isTerrain('mistyterrain') || this.field.isTerrain('psychicterrain')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Absorption\",\r\n\t\trating: 2,\r\n\t\tnum: -1,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tacidicsurge: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Acidic Terrain for 5 turns. During the effect, the power of Poison-type attacks made by grounded Pok\u00E9mon is multiplied by 1.3, and grounded Steel-types are not immune to Poison-type damage. Steel-type Pok\u00E9mon are still immune to being poisoned and badly poisoned, except by Pok\u00E9mon with Corrosion. Camouflage transforms the user into a Poison-type, Nature Power becomes Sludge Bomb, and Secret Power has a 30% chance to cause poison. Lasts for 8 turns if the user is holding a Terrain Extender (such as through Skill Swap).\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Poison power, Steel not immune to Poison type.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Acidic Surge\",\r\n\t\trating: 4,\r\n\t\tnum: -2,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tmimicry: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tlet types;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\tcase 'electricterrain':\r\n\t\t\t\ttypes = ['Electric'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grassyterrain':\r\n\t\t\t\ttypes = ['Grass'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mistyterrain':\r\n\t\t\t\ttypes = ['Fairy'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psychicterrain':\r\n\t\t\t\ttypes = ['Psychic'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'acidicterrain':\r\n\t\t\t\ttypes = ['Poison'];\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault:\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t}\r\n\t\t\tconst oldTypes = pokemon.getTypes();\r\n\t\t\tif (oldTypes.join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\tif (this.field.terrain || pokemon.transformed) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'), '[from] ability: Mimicry');\r\n\t\t\t\tif (!this.field.terrain) this.hint(\"Transform Mimicry changes you to your original un-transformed types.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Mimicry');\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mimicry\",\r\n\t\trating: 0,\r\n\t\tnum: 250,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tagitation: {\r\n\t\tdesc: \"When this Pok\u00E9mon raises or lowers another Pok\u00E9mon's stat stages, the effect is increased by one stage for each affected stat.\",\r\n\t\tshortDesc: \"Increases stat stage changes the Pok\u00E9mon inflicts by 1 stage.\",\r\n\t\tonAnyTryBoost(boost, target, source, effect) {\r\n\t\t\t// Prevent the effect if it's a Z-Power move\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\r\n\t\t\t// Ensure that the target and source are valid and not the same\r\n\t\t\tif (!target || !source || target === source || source !== this.effectState.target) return;\r\n\t\r\n\t\t\t// Iterate through the boost object to modify stat changes\r\n\t\t\tfor (const stat in boost) {\r\n\t\t\t\t// Type assertion to ensure stat is a key of BoostsTable\r\n\t\t\t\tconst boostValue = boost[stat as keyof BoostsTable];\r\n\t\t\t\tif (boostValue !== undefined) {\r\n\t\t\t\t\tif (boostValue < 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue - 1; // Exacerbate debuffs\r\n\t\t\t\t\t} else if (boostValue > 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue + 1; // Augment buffs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Agitation\",\r\n\t\trating: 4,\r\n\t\tnum: -3,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n   ampup: {\r\n\t\tdesc: \"When this Pok\u00E9mon's move misses, raises its Speed by 2 stages.\",\r\n\t\tshortDesc: \"Raises user's Speed by 2 stages if its move misses.\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.moveThisTurnResult === false) {\r\n\t\t\t\tthis.boost({spe: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Amp Up\",\r\n\t   rating: 2,\r\n\t   num: -4,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n   buzz: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Sound move, the target(s) will be inflicted with a Torment effect.\",\r\n\t\tshortDesc: \"Inflicts Torment effect if the Pok\u00E9mon uses a Sound move.\",\r\n\t\tonAfterMove(source: Pokemon, target: Pokemon, move: ActiveMove) {\r\n\t\t\tif (!move.flags['sound']) return;\r\n\t\r\n\t\t\tconst applyTorment = (pokemon: Pokemon) => {\r\n\t\t\t\tif (pokemon && !pokemon.hasAbility('soundproof') && !pokemon.volatiles['torment'] && !pokemon.volatiles['stall']) {\r\n\t\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Torment', '[from] ability: Buzz');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tswitch (move.target) {\r\n\t\t\t\tcase 'all':\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tapplyTorment(pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'allAdjacent':\r\n\t\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\t\tapplyTorment(adjacent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'allAdjacentFoes':\r\n\t\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\t\tapplyTorment(foe);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'normal':\r\n\t\t\t\t\tapplyTorment(target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'self':\r\n\t\t\t\t\tapplyTorment(source);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(`Unhandled move target: ${move.target}`); // notifier in case there's a type of Sound move I forgot to handle\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t    name: \"Buzz\",\r\n\t\trating: 3,\r\n\t\tnum: -5,\r\n\t},\t\t\r\n\t// end\r\n\r\n\t// start: look for typetracker and soaksteeldenial in condition.ts, Soak in moves.ts\r\n\t// If someone wishes to copy this ability, make sure you account for Magic Powder and special form changes from certain Pkm (like\r\n\t// my own Aegislash-Ma'adowr which is Grass / Steel in shield form and Grass / Flying in blade form. Form changes override any\r\n\t// temporary type change effect from stuff like Soak or Burn Up, etc.! Magic Powder isn't in my regional dex, so, that's one stuff\r\n\t// less to worry about.)\r\n   chainlink: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon steals its partner's Steel type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tif (!pokemon.hasType('Steel')) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\t\tif (ally.hasAbility('chainlink')) continue; // don't bounce back and forth indefinitely\r\n\t\t\t\t\tif (ally.hasType('Steel') && pokemon.addType('Steel')) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Chain Link');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} stole its partner's armor!`);\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Ability: Chain Link');\r\n\t\t\t\t\t\tally.addVolatile('chainlink');\r\n\t\t\t\t\t\tally.addVolatile('typetracker'); // New Inclusion to keep track of fringe cases...\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.hasType('Steel')) return;\r\n\t\t\t// doesn't happen twice if the ally has already returned the armor\r\n\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\tally.removeVolatile('chainlink');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) { // it seems like volatiles may not run onEnd on their own the way Abilities do\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) { // revert Chain Link user's type first\r\n\t\t\t\t\tif (ally.hasAbility('chainlink') && ally.hasType('Steel')) {\r\n\t\t\t\t\t\tconst currentTypes = ally.getTypes();\r\n                \t\tconst newTypes = currentTypes.filter(type => type !== 'Steel'); // Remove Steel type\r\n                \t\tally.setType(newTypes); // Set the new types without Steel\r\n               \t\t \tthis.add('-ability', ally, 'Chain Link');\r\n                \t\tthis.add('-message', `${ally.name} returned its partner's armor!`);\r\n                \t\tthis.add('-start', ally, 'typechange', ally.types.join('/'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Now we handle the Pok\u00E9mon and add a special case for Mechatauro as it could theoretically have ???-typing twice through\r\n\t\t\t\t// Chain Link and Burn Up\r\n\t\t\t\tif (pokemon.hasType('???')) {\r\n\t\t\t\t\tif (pokemon.baseSpecies.name === 'Mechatauro') {\r\n\t\t\t\t\t\t// Replace only the first instance of ??? with Steel for Mechatauro\r\n\t\t\t\t\t\tconst currentTypes = pokemon.getTypes();\r\n\t\t\t\t\t\tconst newTypes = [];\r\n\t\t\t\t\t\tlet replaced = false; // Flag to track if we've replaced the first ???\r\n\t\t\t\t\r\n\t\t\t\t\t\tfor (const type of currentTypes) {\r\n\t\t\t\t\t\t\tif (type === '???' && !replaced) {\r\n\t\t\t\t\t\t\t\tnewTypes.push('Steel'); // Replace the first ??? with Steel\r\n\t\t\t\t\t\t\t\treplaced = true; // Set the flag to true after replacement\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewTypes.push(type); // Keep the other types as they are\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\tpokemon.setType(newTypes); // Set the new types with Steel replacing the first ???\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Replace all instances of ??? with Steel for other Pok\u00E9mon\r\n\t\t\t\t\t\tconst currentTypes = pokemon.getTypes();\r\n\t\t\t\t\t\tconst newTypes = currentTypes.filter(type => type !== '???').concat('Steel');\r\n\t\t\t\t\t\tpokemon.setType(newTypes); // Set the new types including Steel\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.volatiles['typetracker'] && pokemon.baseSpecies.name !== 'Aegislash-Ma\\'adowr' &&\r\n\t\t\t\t\tpokemon.baseSpecies.name !== 'Aegislash-Blade-Ma\\'adowr' && pokemon.hasType('Water')) {\r\n\t\t\t\t\t// Add Steel type to the Pok\u00E9mon\r\n    \t\t\t\tif (!pokemon.hasType('Steel')) {\r\n        \t\t\t\tpokemon.addType('Steel'); // Add Steel type if it doesn't already have it; it's just to be safe even if I cannot imagine how the Pkm would have gained Steel beforehand...\r\n        \t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Typetracker');\r\n        \t\t\t\tthis.add('-message', `${pokemon.name} gained its Steel type back!`);\r\n    \t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chain Link\",\r\n\t\trating: 3,\r\n\t\tnum: -6,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcoupdegrass: {\r\n\t\tdesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less of its maximum HP, rounded down. Does not affect moves that have multiple targets.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less HP.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\tif (!action) return;\r\n\t\t\tconst target = this.getTarget(action.pokemon, action.move, action.targetLoc);\r\n\t\t\tif (!target) return;\r\n\t\t\t// Check if the target's HP is at or below half\r\n\t\t\tif (target.hp <= Math.floor(target.maxhp / 2)) {\r\n\t\t\t\t// Check if the move is not a spread move\r\n\t\t\t\tif (action.move.target !== 'allAdjacent' && action.move.target !== 'all') {\r\n\t\t\t\t\tpokemon.addVolatile('coupdegrass');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\t\tif (action) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Coup de Grass');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} prepared to move immediately!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority) {\r\n\t\t\t\treturn priority + 0.1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Coup de Grass\",\r\n\t\trating: 3,\r\n\t\tnum: -7,\r\n\t},\r\n\t// end\r\n\r\n\t// start: revisit later to check if ally also gets healed\r\n\tcultivation: {\r\n\t\tshortDesc: \"User and ally recover 1/16 of their HP in terrain.\",\r\n\t\tonResidualOrder: 26,\r\n    \tonResidual(pokemon) {\r\n\t\t//onTerrainChange(target, source) {\r\n\t\t\t// Check if any relevant terrain is active\r\n\t\t\tif (this.field.isTerrain('electricterrain') || \r\n\t\t\t\tthis.field.isTerrain('grassyterrain') || \r\n\t\t\t\tthis.field.isTerrain('mistyterrain') || \r\n\t\t\t\tthis.field.isTerrain('psychicterrain') || \r\n\t\t\t\tthis.field.isTerrain('acidicterrain')) {\r\n\t\t\t\t\r\n\t\t\t\t// Heal the user by 1/16 of its max HP\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t\t\t\r\n\t\t\t\t// Heal the ally by 1/16 of their max HP\r\n\t\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon && !ally.fainted);\r\n\t\t\t\t\tif (ally) {\r\n\t\t\t\t\t\tthis.heal(ally.baseMaxhp / 16, ally);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Cultivation\",\r\n\t\trating: 2,\r\n\t\tnum: -8,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tgraviton: {\r\n\t\tshortDesc: \"Summons Gravity when replacing a fainted Pok\u00E9mon.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (!source.side.faintedThisTurn) return; // this is a new line added to balance the ability\r\n\t\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Graviton\",\r\n\t\trating: 4,\r\n\t\tnum: -9,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tillwind: {\r\n\t\tshortDesc: \"Sets Tailwind when user replaces a fainted ally.\",\r\n\t\t//onAfterMega(pokemon) {\r\n\t\t//\tif (!pokemon.side.faintedLastTurn) return;\r\n\t\t//\tthis.field.addPseudoWeather('tailwind');\r\n\t  // },\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tpokemon.side.addSideCondition('tailwind');\r\n       \t\tthis.add('-sidestart', pokemon.side, 'move: Tailwind');\r\n    \t},\r\n\t\tflags: {},\r\n\t\tname: \"Ill Wind\",\r\n\t\trating: 5,\r\n\t\tnum: -10,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tinoculum: {\r\n\t\tname: \"Inoculum\",\r\n\t\tshortDesc: \"Heatproof for user and ally.\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Fire') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Inoculum damage reduction from Fire-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Inoculum, reducing damage from the Fire-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Inoculum damage reduction for burn damage');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Inoculum, reducing burn damage!`);\r\n\t\t\t\t\treturn damage / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\t\r\n\t\tflags: {},\r\n\t\trating: 2,\r\n\t\tnum: -11,\r\n\t},\r\n\t\r\n\t// end\r\n\r\n\t// start\r\n\tinterference: {\r\n\t\tshortDesc: \"When attacked, inflicts Torment on the attacker.\",\r\n   \t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t//if (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tsource.addVolatile('torment', this.effectState.target);\r\n\t\t\t//}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Interference\",\r\n\t\trating: 3,\r\n\t\tnum: -12,\r\n\t},\r\n\t// end\r\n\t\r\n\t// start: Malware\r\n\tmalware: {\r\n\t\tname: \"Malware\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Malware');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Malware is active!`);\r\n\t\t\tthis.effectState.malwareUser = pokemon;\r\n\t\t\tthis.eachEvent('Update');\r\n\t\t},\r\n\t\tonAnyDragOut(pokemon) {\r\n\t\t\tpokemon.removeVolatile('malwarepoisoned');\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon === this.effectState.malwareUser) {\r\n\t\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\t\tif (target !== pokemon && !target.hasType('Poison') && !target.hasType('Steel') && !target.status) {\r\n\t\t\t\t\t\t// Check for immunity to poison\r\n\t\t\t\t\t\tif (target.isGrounded() && this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Misty Terrain!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasAbility('immunity')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name}'s Immunity prevents it from being poisoned!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasAbility('comatose')) {\r\n\t\t\t\t\t\t\t//\tthis.add('-message', `${target.name}'s Immunity prevents it from being poisoned!`);\r\n\t\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.getSideCondition('safeguard')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Safeguard!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasItem('sunring') && (target.baseSpecies.baseSpecies === 'Horizonoc')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Sun Ring!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Check if the ally is Horizonoc and Sun or Desolate Land is active\r\n\t\t\t\t\t\tconst allyPresent = target.side.active.some(ally => ally && ally !== target && ally.baseSpecies.baseSpecies === 'Horizonoc' && ally.hasItem('sunring'));\r\n\t\t\t\t\t\tif (allyPresent && ['sunnyday', 'desolateland'].includes(this.field.effectiveWeather())) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected from being poisoned because its ally Horizonoc is present with Sun Ring and the weather is active!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.add('-message', `${target.name} is affected by Malware!`);\r\n\t\t\t\t\t\ttarget.setStatus('psn', pokemon, null, true);\r\n\t\t\t\t\t\ttarget.addVolatile('malwarepoisoned');\r\n\t\t\t\t\t//\tthis.add('-start', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); //this is internal check\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t//\tonResidualOrder: 26,\r\n\t//\tonResidualSubOrder: 1,\r\n\t//\tonResidual(pokemon) {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\t// Remove all Malware poison effects when the user switches out\r\n\t\tfor (const target of this.getAllActive()) {\r\n\t\t\tif (target.volatiles['malwarepoisoned']) {\r\n\t\t\t\ttarget.removeVolatile('malwarepoisoned');\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tthis.add('-end', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\t\tthis.add('-message', `${target.name} is cured of Malware poison.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// This method handles when any Pok\u00E9mon switches out\r\n\t\tonAnySwitchOut(pokemon) {\r\n\t\t// Check if the switching Pok\u00E9mon has the malwarepoisoned status\r\n\t\tif (pokemon.volatiles['malwarepoisoned']) {\r\n\t\t\tpokemon.removeVolatile('malwarepoisoned'); // Remove the malwarepoisoned volatile status\r\n\t\t\tif (pokemon.status === 'psn') {\r\n\t\t\t\tpokemon.cureStatus(); // Cure the poison status if it exists\r\n\t\t\t\t}\r\n\t\t\t//\tthis.add('-end', pokemon, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is cured of Malware poison.`);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonFaint(pokemon) {\r\n\t\t// Remove all Malware poison effects when the user faints\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.volatiles['malwarepoisoned']) {\r\n\t\t\t\t\ttarget.removeVolatile('malwarepoisoned');\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tthis.add('-end', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\t\tthis.add('-message', `${target.name} is cured of Malware poison.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n//\t\tonDamage(damage, target, source, effect) {\r\n//\t\t\tif (effect && effect.id === 'psn' && (target.volatiles['malwarepoisoned'])) {\r\n//\t\t\t\treturn damage / 2;\r\n//\t\t\t}\r\n//\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\trating: 4,\r\n\t\tnum: -13,\r\n\t},\r\n\t// end\r\n\t\r\n\t// start\r\n\tmasquerade: {\r\n\t\tdesc: \"This Pok\u00E9mon inherits the Ability of the last unfainted Pokemon in its party until it takes direct damage from another Pok\u00E9mon's attack. Abilities that cannot be copied are \\\"No Ability\\\", As One, Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Gulp Missile, Hunger Switch, Ice Face, Illusion, Imposter, Multitype, Neutralizing Gas, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, Wonder Guard, and Zen Mode.\",\r\n\t\tshortDesc: \"Inherits the Ability of the last party member. Wears off when attacked.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || pokemon.volatiles['masquerade']) return;\r\n\t\t\tpokemon.addVolatile('masquerade');\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (!pokemon.side.pokemon[i]) continue;\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hugepower', 'hungerswitch', 'illusion', 'imposter', 'neutralizinggas',\r\n\t\t\t\t\t'powerofalchemy', 'purepower', 'receiver', 'trace', 'wonderguard',\r\n\t\t\t\t];\r\n\t\t\t\tif (\r\n\t\t\t\t\tpokemon.side.pokemon[i].fainted ||\r\n\t\t\t\t\t(pokemon.side.pokemon[i].getAbility() as any).isPermanent || additionalBannedAbilities.includes(pokemon.side.pokemon[i].ability)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i] || pokemon === pokemon.side.pokemon[i]) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst masquerade = pokemon.side.pokemon[i];\r\n\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\tpokemon.setAbility(masquerade.ability);\r\n\t\t\tthis.hint(`${pokemon.name} inherited ${this.dex.abilities.get(pokemon.ability).name} from ${masquerade.name}!`);\r\n\t\t\tthis.add('-ability', pokemon, this.dex.abilities.get(pokemon.ability).name, '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (pokemon.hasAbility('masquerade')) return;\r\n\t\t\t\tif (this.effectState.busted) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name}'s Masquerade wore off!`);\r\n\t\t\t\t\tpokemon.setAbility('masquerade');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Masquerade\",\r\n\t\trating: 3,\r\n\t\tnum: -14,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpermafrost: {\r\n\t\tshortDesc: \"Boosts Ice moves by 50% on user's side.\",\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Permafrost boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Permafrost\",\r\n\t\trating: 3.5,\r\n\t\tnum: -15,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpoisonspit: {\r\n\t\tshortDesc: \"Sets Acidic Terrain when hurt.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Poison Spit\",\r\n\t\trating: 2,\r\n\t\tnum: -16,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\treconfiguration: {\r\n\t\tshortDesc: \"Boosts user's stat depending on target's best stat.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst foes = pokemon.side.foe.active;\r\n\t\t\tconst target = foes[foes.length - 1 - pokemon.position];\r\n\t\t\tif (!target) return;\r\n\t\t\tthis.boost({[target.getBestStat(false,true)]: 1});\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Reconfiguration\",\r\n\t\trating: 3,\r\n\t\tnum: -17,\r\n\t},\r\n\t// end\r\n\r\n\t// start: \r\n\trewind: {\r\n\t\tshortDesc: \"Recovers items on user's side if at 50% or below due to attacker.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\t// Check if the target's HP is brought to 50% or below after damage is applied\r\n\t\t\tif (target.hp - damage <= target.maxhp / 2) {\r\n\t\t\t\tthis.effectState.rewindTriggered = true; // Mark that the ability has been triggered\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\t// Check if the ability was triggered\r\n\t\t\tif (this.effectState.rewindTriggered) {\r\n\t\t\t\tthis.effectState.rewindTriggered = false; // Reset the trigger\r\n\t\t\t\t// Recover items from all Pok\u00E9mon on the user's side that don't already have an item\r\n\t\t\t\tfor (const ally of target.side.pokemon) {\r\n\t\t\t\t\tif (ally && !ally.item) { // Only recover items for allies without items\r\n\t\t\t\t\t\t// Use Recycle to recover the item\r\n\t\t\t\t\t\tthis.actions.useMove('Recycle', ally);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rewind\",\r\n\t\trating: 4,\r\n\t\tnum: -18,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tscaleshift: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon copies its partner's first type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tlet newtype = null;\r\n\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\tif (ally && ally !== pokemon && !ally.fainted && !ally.hasAbility('scaleshift') &&\r\n\t\t\t\t\tally.types[0] !== pokemon.baseSpecies.types[0] &&\r\n\t\t\t\t\tally.types[0] !== pokemon.baseSpecies.types[1]) {\r\n\t\t\t\t\tnewtype = ally.types[0];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newtype) {\r\n\t\t\t\tconst typecombo = [newtype, pokemon.baseSpecies.types[1]];\r\n\t\t\t\tif (pokemon.getTypes().join() === typecombo.join() || !pokemon.setType(typecombo)) return;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.getTypes().join() === pokemon.baseSpecies.types.join() || !pokemon.setType(pokemon.baseSpecies.types)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Scale Shift\",\r\n\t\trating: 3,\r\n\t\tnum: -19,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsolarcore: {\r\n\t\tshortDesc: \"During intense sunlight, this Pok\u00E9mon can skip the charging turn of its moves.\",\r\n\t\tonChargeMove(pokemon, target, move) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Solar Core - remove charge turn for ' + move.id);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', pokemon, move.name, target);\r\n\t\t\t\treturn false; // skip charge turn\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Solar Core\",\r\n\t\trating: 2,\r\n\t\tnum: -20,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsteelbreaker: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacks are critical hits if the target is a Steel-type Pok\u00E9mon.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && target.hasType('Steel')) return 5;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Steelbreaker\",\r\n\t\trating: 3,\r\n\t\tnum: -21,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\ttempestuous: {\r\n\t\tdesc: \"When replacing a fainted party member, this Pok\u00E9mon's Special Defense is boosted, and it charges power to double the power of its Electric-type move on its first turn.\",\r\n\t\tshortDesc: \"Gains the effect of Charge when replacing a fainted ally.\",\r\n\t//\tonAfterMega(pokemon) {\r\n\t//\t\tif (!pokemon.side.faintedLastTurn) return;\r\n\t//\t\tthis.boost({spd: 1}, pokemon);\r\n\t//\t\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t//\t\tpokemon.addVolatile('charge');\r\n\t//\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tthis.boost({spd: 1}, pokemon);\r\n\t\t\t// Check if Charge is already active\r\n\t\t\tif (!pokemon.volatiles['charge']) {\r\n\t\t\t//\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t\t\t\tpokemon.addVolatile('charge'); // Apply Charge effect\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tempestuous\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\t// thermal expansion\r\n\tthermalexpansion: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (!target.hasType('Ice')) return;\r\n\t\t\tif (effect && effect.id === 'stealthrock') {\r\n\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes().join('/'));\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (!target.hasType('Ice')) return;\r\n\t\t\tif (move.type === 'Rock') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Thermal Expansion');\r\n\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes().join('/'));\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (target.hasType('Ice')) return;\r\n\t\t\tif (!target.addType('Ice')) return false;\r\n\t\t\tif (effect.id === 'snow') {\r\n\t\t\t\tthis.add('-start', target, 'typeadd', 'Ice', '[from] ability: Thermal Expansion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Thermal Expansion\",\r\n\t\tshortDesc: \"If user is Ice-type, immunity to Stealth Rock and Rock-type moves. On immunity, lose Ice-type. Regain in Snow or switch.\",\r\n\t\trating: 4,\r\n\t\tnum: -23,\r\n\t},\r\n\r\n\t// end\r\n\r\n\t// start\r\n\tvampirism: {\r\n\t\tshortDesc: \"Replaces target's ability with Vampirism if user made contact.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tconst sourceAbility = source.getAbility();\r\n\t\t\tconst targetAbility = target.getAbility();\r\n\t\r\n\t\t\t// Check if the target's ability can be suppressed\r\n\t\t\tif (targetAbility.flags['cantsuppress'] || targetAbility.id === 'vampirism') {\r\n\t\t\t\treturn; // Exit if the target's ability cannot be replaced or is already Vampirism\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check if the move makes contact\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, !source.isAlly(target))) {\r\n\t\t\t\t// Replace the target's ability with Vampirism\r\n\t\t\t\tconst oldAbility = target.setAbility('vampirism', source);\r\n\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Vampirism', this.dex.abilities.get(oldAbility).name, '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vampirism\",\r\n\t\trating: 3,\r\n\t\tnum: -24,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\twoodstove: {\r\n\t\tshortDesc: \"Ice does 50% less damage against user's side.\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Ice') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Wood Stove damage reduction from Ice-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Wood Stove, reducing damage from the Ice-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if the user or any ally is frozen\r\n\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tif (ally.status === 'frz') {\r\n\t\t\t\t\tthis.add('-activate', ally, 'ability: Wood Stove');\r\n\t\t\t\t\tally.cureStatus(); // Cure the frozen status for the ally\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t // Also check the user of the ability\r\n\t\t\t if (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Wood Stove');\r\n\t\t\t\tpokemon.cureStatus(); // Cure the frozen status for the user\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\t// Grant immunity to freeze for the user and their allies\r\n\t\t\tif (type === 'frz') {\r\n\t\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\t\tfor (const ally of allies) {\r\n\t\t\t\t\tif (ally === pokemon || ally.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.add('-immune', ally, 'ability: Wood Stove');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // Prevent the freeze status from being applied\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wood Stove\",\r\n\t\trating: 2,\r\n\t\tnum: -25,\r\n\t},\r\n\t// end\r\n\r\n\t// start: Volatiles are handled in script\r\n\tskyrider: {\r\n\t\tshortDesc: \"Tag Team: Escavalier and Grapplin.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst grapplin = pokemon.side.active.find(ally => ally.species.name === 'Grapplin');\r\n\r\n    \t\tif (!grapplin) return; // Ensure Grapplin is present\r\n\r\n\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\tif ((grapplin) && !grapplin.volatiles['skyriding']) {\r\n\t\t\t\tgrapplin.addVolatile('skyriding')\r\n\t\t\t} // end\r\n\r\n    \t\tif (pokemon.hasType('Steel')) {\r\n        \t\t// If the user is Steel and Grapplin is not Steel, add skyriderally to Grapplin\r\n        \t\tif (!grapplin.hasType('Steel')) {\r\n            \t\tgrapplin.addVolatile('skyriderally');\r\n        \t\t}\r\n    \t\t} else {\r\n        \t\t// If the user is not Steel, remove skyriderally from Grapplin\r\n        \t\tif (grapplin.volatiles['skyriderally']) {\r\n            \t\tgrapplin.removeVolatile('skyriderally');\r\n        \t\t}\r\n    \t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\tif (ally && ally.volatiles['skyriderally']) {\r\n\t\t\t\t\tally.removeVolatile('skyriderally');\r\n\t\t\t\t}\r\n\t\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['skyriding']) {\r\n\t\t\t\t\tally.removeVolatile('skyriding')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\tif (ally && ally.volatiles['skyriderally']) {\r\n\t\t\t\t\tally.removeVolatile('skyriderally');\r\n\t\t\t\t}\r\n\t\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['skyriding']) {\r\n\t\t\t\t\tally.removeVolatile('skyriding')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\tif (ally && ally.volatiles['skyriderally']) {\r\n\t\t\t\t\tally.removeVolatile('skyriderally');\r\n\t\t\t\t}\r\n\t\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['skyriding']) {\r\n\t\t\t\t\tally.removeVolatile('skyriding')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonPrepareHit(pokemon, target, move) {\r\n\t\t\tconst grapplin = pokemon.side.active.find(ally => ally.species.name === 'Grapplin');\r\n   \t\t\tif (!grapplin) return; // Ensure Grapplin is present\r\n\r\n\t\t\t// Check if the move is not a status move\r\n\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t// Loop through the action queue\r\n\t\t\t\tfor (const action of this.queue.list as MoveAction[]) {\r\n\t\t\t\t\t// Check if the action is valid\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!action.move || !action.pokemon?.isActive ||\r\n\t\t\t\t\t\taction.pokemon.fainted || action.maxMove || action.zmove\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue; // Skip invalid actions\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t// Check if the action belongs specifically to the ally; indirectly, that's Grapplin\r\n\t\t\t\t\tif (action.pokemon.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.queue.prioritizeAction(action, move); // Prioritize the action\r\n\t\t\t\t\t\tthis.add('-waiting', pokemon, action.pokemon); // Notify that Grapplin is waiting\r\n\t\t\t\t\t\tbreak; // Exit the loop but not the function, meaning user's move should be able to do damage now\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Sky Rider\",\r\n\t\trating: 0,\r\n\t\tnum: -26,\r\n\t},\r\n\t// end\r\n\t// start: Amaterasu, bound by volatile and Engraving. So, there's no real natural user of Amaterasu\r\n\tamaterasu: {\r\n\t\tshortDesc: \"User burns and suffers 1/8 Burn damage.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if the Pok\u00E9mon has the Amaterasu ability and is not already burned, etc.\r\n\t\t\tif (pokemon.hasAbility('amaterasu') && !pokemon.status && !pokemon.hasType('Fire')) {\r\n\t\t\t\tif (pokemon.isGrounded() && this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.side.getSideCondition('safeguard')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hasItem('sunring') && (pokemon.baseSpecies.baseSpecies === 'Horizonoc')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Check if the ally is Horizonoc and Sun or Desolate Land is active\r\n\t\t\t\tconst allyPresent = pokemon.side.active.some(ally => ally && ally !== pokemon && ally.baseSpecies.baseSpecies === 'Horizonoc' && ally.hasItem('sunring'));\r\n\t\t\t\tif (allyPresent && ['sunnyday', 'desolateland'].includes(this.field.effectiveWeather())) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.setStatus('brn', pokemon, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\tif (target === this.effectState.target) {\r\n\t\t\t\t\tthis.debug('Amaterasu damage increase for burn damage');\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tonFaint(target, source, effect) {\r\n\t\t\tif (!source || !effect || target.side === source.side) return;\r\n\t\t\tif (effect.effectType === 'Move' && !effect.flags['futuremove']) {\r\n\t\t\t\tthis.add('-ability', target, 'Amaterasu');\r\n\t\t\t\tconst bannedAbilities = [\r\n\t\t\t\t\t'battlebond', 'comatose', 'disguise', 'multitype', 'powerconstruct', 'rkssystem', 'schooling', 'shieldsdown', 'skyrider', 'stancechange', 'truant', 'zenmode',\r\n\t\t\t\t];\r\n\t\t\t\tif (bannedAbilities.includes(source.ability) || source.hasType('Fire')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.setAbility('amaterasu');\r\n\t\t\t\t\tsource.baseAbility = 'amaterasu' as ID;\r\n\t\t\t\t\tsource.ability = 'amaterasu' as ID;\r\n\t\t\t\t\tthis.add('-ability', source, 'Amaterasu', '[from] Ability: Amaterasu');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Amaterasu\",\r\n\t\trating: 0,\r\n\t\tnum: -29,\r\n\t},\r\n\t// end\r\n\r\n\t// start: Archetype (Reserve Idea for New Project)\r\n\tarchetype: {\r\n\t\tshortDesc: \"Gains opposite effect of target's lowered stat.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move && move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...foe.boosts };\r\n\t\t\t\t\t\tfoe.addVolatile('archetype', source);\r\n\t\t\t\t\t\tfoe.volatiles['archetype'].boosts = boosts;\r\n\t\t\t\t\t//\tthis.add('-start', foe, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t\t\t//\tthis.add('-message', `${foe.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'allAdjacent') {\r\n\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...adjacent.boosts };\r\n\t\t\t\t\t\tadjacent.addVolatile('archetype', source);\r\n\t\t\t\t\t\tadjacent.volatiles['archetype'].boosts = boosts;\r\n\t\t\t\t\t//\tthis.add('-start', adjacent, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t\t\t//\tthis.add('-message', `${adjacent.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'normal') {\r\n\t\t\t\tconst boosts = { ...target.boosts };\r\n\t\t\t\ttarget.addVolatile('archetype', source);\r\n\t\t\t\ttarget.volatiles['archetype'].boosts = boosts;\r\n\t\t\t//\tthis.add('-start', target, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t//\tthis.add('-message', `${target.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (target === source) return;\r\n\t\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\ttype BoostStatistics = typeof stats[number];\r\n\t\t\tconst boostGains: Partial<Record<BoostStatistics, number>> = {};\r\n\t\r\n\t\t\tfor (const activeTarget of this.getAllActive()) {\r\n\t\t\t\tif (!activeTarget.volatiles['archetype']) continue;\r\n\t\r\n\t\t\t\tconst storedBoosts = activeTarget.volatiles['archetype'].boosts;\r\n\t\t\t\tconst currentBoosts = activeTarget.boosts;\r\n\t\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\tif (currentBoosts[stat] < storedBoosts[stat] || \r\n\t\t\t\t\t\t(currentBoosts[stat] < 0 && currentBoosts[stat] < storedBoosts[stat])) {\r\n\t\t\t\t\t\tconst difference = storedBoosts[stat] - currentBoosts[stat];\r\n\t\t\t\t\t\tboostGains[stat] = (boostGains[stat] || 0) + difference;\r\n\t\r\n\t\t\t\t\t//\tthis.add('-message', `${source.name} gains ${difference} ${stat} boost from ${activeTarget.name}'s lower boost.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdelete activeTarget.volatiles['archetype'];\r\n\t\t\t//\tthis.add('-end', activeTarget, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t}\r\n\t\r\n\t\t\t// Apply all boost gains at once and trigger visual display\r\n\t\t\tif (Object.keys(boostGains).length > 0) {\r\n\t\t\t\tthis.boost(boostGains, source, source, this.effect);\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tflags: {},\r\n\t\tname: \"Archetype\",\r\n\t\trating: 4,\r\n\t\tnum: -27,\r\n\t},\r\n\t// end\r\n\t// start: Reserve Idea for New Project\r\n\tparasignal: {\r\n\t\tshortDesc: \"Sets Psychic Terrain when hurt.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Parasignal\",\r\n\t\trating: 2,\r\n\t\tnum: -28,\r\n\t},\r\n\t// end\r\n\r\n\t// start: modifying vanilla abilities\r\n\tleafguard: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n    \tonModifyDef(pokemon) {\r\n        // Check if the weather is sunny or Desolate Land\r\n\t\tif (this.field.isWeather('sunnyday') || this.field.isWeather('desolateland')) {\r\n            \treturn this.chainModify(1.5); // Increase Defense by 50%\r\n        \t}\r\n    \t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Leaf Guard\",\r\n\t\trating: 0.5,\r\n\t\tnum: 102,\r\n\t},\r\n\r\n\tmagmaarmor: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Magma Armor');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'frz') return false; // Prevent freezing\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t// Check if the move is Ice-type and reduce damage by 50%\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Magma Armor damage reduction from Ice-type move');\r\n\t\t\t\treturn this.chainModify(0.5); // Reduce damage by 50%\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magma Armor\",\r\n\t\trating: 0.5,\r\n\t\tnum: 40,\r\n\t},\r\n\r\n\tpixilate: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'colourmegone', 'judgment', 'multiattack', 'naturalgift', 'pincerattack', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pixilate\",\r\n\t\trating: 4,\r\n\t\tnum: 182,\r\n\t},\r\n\r\n\trivalry: {\r\n\t\tonBasePowerPriority: 24,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t// Check if the attacker has an ally and both share the same gender\r\n\t\t\tconst ally = attacker.side.active.find(pokemon => pokemon && pokemon !== attacker);\r\n\t\t\tif (ally && attacker.gender && ally.gender) {\r\n\t\t\t\tif (attacker.gender === ally.gender) {\r\n\t\t\t\t\tthis.debug('Rivalry boost');\r\n\t\t\t\t\treturn this.chainModify(1.25); // Increase damage by 25%\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rivalry\",\r\n\t\trating: 0,\r\n\t\tnum: 79,\r\n\t},\r\n\r\n\tflowergift: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (!pokemon.isActive || pokemon.baseSpecies.baseSpecies !== 'Cherrim' || pokemon.transformed) return;\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tif (pokemon.species.id !== 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim-Sunshine', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifyAtkPriority: 3,\r\n\t\tonAllyModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.baseSpecies.baseSpecies !== 'Hieroturoc') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifySpDPriority: 4,\r\n\t\tonAllyModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.baseSpecies.baseSpecies !== 'Hieroturoc') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, breakable: 1},\r\n\t\tname: \"Flower Gift\",\r\n\t\trating: 1,\r\n\t\tnum: 122,\r\n\t},\r\n\r\n\tstancechange: {\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (\r\n\t\t\t\t(!attacker.species.name.startsWith('Aegislash') && !attacker.species.name.startsWith('Ma\\'adowr')) || attacker.transformed\r\n\t\t\t) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;//if using a non-kings-shield status move, or if using Flurry\r\n\t\t\tif (attacker.species.name === 'Aegislash' || attacker.species.name === 'Aegislash-Blade') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else if (attacker.species.name === 'Aegislash-Ma\\'adowr' || attacker.species.name === 'Aegislash-Blade-Ma\\'adowr') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash-Ma\\'adowr' : 'Aegislash-Blade-Ma\\'adowr');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t\tthis.add('-message', `${attacker.name} changed to ${move.id === 'kingsshield' ? 'Shield Forme' : 'Blade Forme'}!`);\r\n\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Condana\r\n\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Stance Change\",\r\n\t\trating: 4,\r\n\t\tnum: 176,\r\n\t},\r\n\r\n\tzenmode: {\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst baseSpecies = pokemon.baseSpecies.baseSpecies;\r\n\t\t\tconst forme = pokemon.species.forme;\r\n\t\t\tif (!['Darmanitan', 'Immanicus'].includes(baseSpecies) || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen', 'Galar-Zen'].includes(forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen', 'Galar-Zen'].includes(forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Zen forms\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (['Darmanitan', 'Immanicus'].includes(pokemon.species.baseSpecies) && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst speciesId = pokemon.species.id;\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (speciesId === 'darmanitanzen' || speciesId === 'immanicuszen') return;\r\n\t\t\t\t\tif (speciesId === 'darmanitan') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t\tif (speciesId === 'immanicus') pokemon.formeChange('Immanicus-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (speciesId !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\r\n\trunaway: {\r\n\t\tinherit: true,\r\n\t\tonTrapPokemonPriority: -10,\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.trapped = pokemon.maybeTrapped = false;\r\n\t\t},\r\n\t\tshortDesc: \"Cannot be trapped.\",\r\n\t\tflags: {},\r\n\t\tname: \"Run Away\",\r\n\t\trating: 0,\r\n\t\tnum: 50,\r\n\t},\r\n\t// end\r\n\r\n\tcursedbody: {\r\n\t\tonDamagingHit(damage, target, source, move) {\t\t\r\n\t\t\tif (source.volatiles['disable']) return; // Prevent reapplying disable\r\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle') {\r\n\t\t\t\tif (this.randomChance(3, 10) && !target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Cursed Body', target);\r\n\t\t\t\t\tsource.addVolatile('disable', target);\r\n\t\t\t\t} else if (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Cursed Body', target);\r\n\t\t\t\t\tsource.addVolatile('disable', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Cursed Body\",\r\n\t\trating: 2,\r\n\t\tnum: 130,\r\n\t},\r\n\tcutecharm: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['attract']) return;\r\n\t\t\t// Existing logic for Cute Charm\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tif (this.randomChance(3, 10) && !target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Cute Charm', target);\r\n\t\t\t\t\tsource.addVolatile('attract', target);\r\n\t\t\t\t} else if (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Cute Charm', target);\r\n\t\t\t\t\tsource.addVolatile('attract', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Cute Charm\",\r\n\t\trating: 0.5,\r\n\t\tnum: 56,\r\n\t},\r\n\t// Effect Spore\r\n\teffectspore: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t// Check if the move makes contact, the source has no status, and is not immune to powder\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target) && !source.status && source.runStatusImmunity('powder')) {\r\n\t\t\t\t// Check if the source has the Maudior Feature as a volatile\r\n\t\t\t\tif (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t// If the user has Maudior Feature, guarantee one of the status effects\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Effect Spore', target);\r\n\t\t\t\t\tconst r = this.random(3); // Generate a random number from 0 to 2\r\n\t\t\t\t\tif (r === 0) {\r\n\t\t\t\t\t\tsource.setStatus('slp', target); // Sleep\r\n\t\t\t\t\t} else if (r === 1) {\r\n\t\t\t\t\t\tsource.setStatus('par', target); // Paralysis\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsource.setStatus('psn', target); // Poison\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Existing logic for Effect Spore\r\n\t\t\t\t\tconst r = this.random(100); // Generate a random number from 0 to 99\r\n\t\t\t\t\tif (r < 11) {\r\n\t\t\t\t\t\tsource.setStatus('slp', target); // Sleep\r\n\t\t\t\t\t} else if (r < 21) {\r\n\t\t\t\t\t\tsource.setStatus('par', target); // Paralysis\r\n\t\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\t\tsource.setStatus('psn', target); // Poison\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Effect Spore\",\r\n\t\trating: 2,\r\n\t\tnum: 27,\r\n\t},\r\n\t// End\r\n\tflamebody: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.status) {\r\n\t\t\t// Existing logic for Flame Body\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tif (this.randomChance(3, 10) && !target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t\t} else if (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Flame Body\",\r\n\t\trating: 2,\r\n\t\tnum: 49,\r\n\t},\r\n\tharvest: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\t// Check if the source has the Maudior Feature\r\n\t\t\tif (pokemon.volatiles['maudiorfeature']) {\r\n\t\t\t\t// If the user has Maudior Feature, guarantee the Berry restoration\r\n\t\t\t\tif (pokemon.hp && !pokemon.item && this.dex.items.get(pokemon.lastItem).isBerry) {\r\n\t\t\t\t\tpokemon.setItem(pokemon.lastItem);\r\n\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Harvest');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Existing logic for Harvest\r\n\t\t\t\tif (this.field.isWeather(['sunnyday', 'desolateland']) || this.randomChance(1, 2)) {\r\n\t\t\t\t\tif (pokemon.hp && !pokemon.item && this.dex.items.get(pokemon.lastItem).isBerry) {\r\n\t\t\t\t\t\tpokemon.setItem(pokemon.lastItem);\r\n\t\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Harvest');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Harvest\",\r\n\t\trating: 2.5,\r\n\t\tnum: 139,\r\n\t},\r\n\thealer: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 3,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tfor (const allyActive of pokemon.adjacentAllies()) {\r\n\t\t\t\t// Check if the Pok\u00E9mon has the Maudior Feature as a volatile\r\n\t\t\t\tif (pokemon.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t// If the user has Maudior Feature, guarantee the status cure\r\n\t\t\t\t\tif (allyActive.status) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Healer');\r\n\t\t\t\t\t\tallyActive.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Existing logic for Healer\r\n\t\t\t\t\tif (allyActive.status && this.randomChance(3, 10)) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Healer');\r\n\t\t\t\t\t\tallyActive.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Healer\",\r\n\t\trating: 0,\r\n\t\tnum: 131,\r\n\t},\r\n\tpoisonpoint: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.status) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tif (this.randomChance(3, 10) && !target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t\t} else if (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Poison Point\",\r\n\t\trating: 1.5,\r\n\t\tnum: 38,\r\n\t},\r\n\tpoisontouch: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Check if the target has Shield Dust or Covert Cloak\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak') || (target.status)) return;\r\n\t\r\n\t\t\t\t// Check if the source has the Maudior Feature as a volatile\r\n\t\t\t\tif (source.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t// If the user has Maudior Feature, guarantee the poison effect\r\n\t\t\t\t//\tthis.add('-activate', source, 'ability: Poison Touch', target);\r\n\t\t\t\t\ttarget.trySetStatus('psn', source);\r\n\t\t\t\t} else {\r\n\t\t\t\t// Existing logic for Poison Touch\r\n\t\t\t\tif (this.checkMoveMakesContact(move, target, source)) {\r\n\t\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\t\ttarget.trySetStatus('psn', source);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Poison Touch\",\r\n\t\trating: 2,\r\n\t\tnum: 143,\r\n\t},\r\n\tshedskin: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 3,\r\n\t\tonResidual(pokemon) {\r\n\t\t\t// Check if the Pok\u00E9mon has the Maudior Feature as a volatile\r\n\t\t\tif (pokemon.volatiles['maudiorfeature']) {\r\n\t\t\t\t// If the user has Maudior Feature, guarantee the status cure\r\n\t\t\t\tif (pokemon.hp && pokemon.status) {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Shed Skin');\r\n\t\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Existing logic for Shed Skin\r\n\t\t\t\tif (pokemon.hp && pokemon.status && this.randomChance(33, 100)) {\r\n\t\t\t\t\tthis.debug('shed skin');\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Shed Skin');\r\n\t\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shed Skin\",\r\n\t\trating: 3,\r\n\t\tnum: 61,\r\n\t},\r\n\tstatic: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!source.status) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tif (this.randomChance(3, 10) && !target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t\t} else if (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Static\",\r\n\t\trating: 2,\r\n\t\tnum: 9,\r\n\t},\r\n\tstench: {\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\t\t// Check if the Pok\u00E9mon has the Maudior Feature as a volatile\r\n\t\t\tconst source = this.effectState.source; // Get the source of the move\r\n\t\t\tif (source.volatiles['maudiorfeature']) {\r\n\t\t\t\t// If the user has Maudior Feature, guarantee the flinch effect\r\n\t\t\t\tthis.debug('Adding guaranteed Stench flinch');\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\t// Remove any existing flinch secondary\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.volatileStatus === 'flinch') return;\r\n\t\t\t\t}\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100, // Set chance to 100% for guaranteed flinch\r\n\t\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Existing logic for Stench\r\n\t\t\t\tif (move.category !== \"Status\") {\r\n\t\t\t\t\tthis.debug('Adding Stench flinch');\r\n\t\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\t\tif (secondary.volatileStatus === 'flinch') return;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\t\tchance: 10, // Original chance for flinch\r\n\t\t\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stench\",\r\n\t\trating: 0.5,\r\n\t\tnum: 1,\r\n\t},\r\n\twonderskin: {\r\n\t\tonModifyAccuracyPriority: 10,\r\n\t\tonModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\t// Check if the Pok\u00E9mon has the Maudior Feature as a volatile\r\n\t\t\tif (target.volatiles['maudiorfeature']) {\r\n\t\t\t\t// If the user has Maudior Feature, set accuracy to 0 for status moves\r\n\t\t\t\tif (move.category === 'Status' && typeof accuracy === 'number') {\r\n\t\t\t\t\tthis.debug('Wonder Skin with Maudior Feature - setting accuracy to 0');\r\n\t\t\t\t\treturn 0; // Guarantee 0% accuracy for status moves\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Existing logic for Wonder Skin\r\n\t\t\t\tif (move.category === 'Status' && typeof accuracy === 'number') {\r\n\t\t\t\t\tthis.debug('Wonder Skin - setting accuracy to 50');\r\n\t\t\t\t\treturn 50; // Set accuracy to 50% for status moves\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Wonder Skin\",\r\n\t\trating: 2,\r\n\t\tnum: 147,\r\n\t},\r\n\t\r\n};\r\n"],
  "mappings": "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",
  "names": ["ally"]
}
