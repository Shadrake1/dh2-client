{
  "version": 3,
  "sources": ["../../../../data/mods/abilitypos/abilities.ts"],
  "sourcesContent": ["/*\r\nRatings and how they work:\r\n-1: Detrimental\r\n\t  An ability that severely harms the user.\r\n\tex. Defeatist, Slow Start\r\n 0: Useless\r\n\t  An ability with no overall benefit in a singles battle.\r\n\tex. Color Change, Plus\r\n 1: Ineffective\r\n\t  An ability that has minimal effect or is only useful in niche situations.\r\n\tex. Light Metal, Suction Cups\r\n 2: Useful\r\n\t  An ability that can be generally useful.\r\n\tex. Flame Body, Overcoat\r\n 3: Effective\r\n\t  An ability with a strong effect on the user or foe.\r\n\tex. Chlorophyll, Sturdy\r\n 4: Very useful\r\n\t  One of the more popular abilities. It requires minimal support to be effective.\r\n\tex. Adaptability, Magic Bounce\r\n 5: Essential\r\n\t  The sort of ability that defines metagames.\r\n\tex. Imposter, Shadow Tag\r\n*/\r\n\r\nexport const Abilities: {[abilityid: string]: AbilityData} = {\r\n\toverflow: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Overflow boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Overflow boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Overflow\",\r\n\t\tdesc: \"This Pok\u00E9mon\u2019s Water moves deal 1.5x damage.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 300,\r\n\t},\r\n\tabhorrent: {\r\n\t\t// upokecenter says this is implemented as an added secondary effect\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !move.flags['contact'] || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 100,\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tatk: -1,\r\n\t\t\t\t},\r\n\t\t\t\tability: this.dex.abilities.get('abhorrent'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tname: \"Abhorrent\",\r\n\t\tdesc: \"This Pokemon's contact moves lower the opponent's Attack by 1.\",\r\n\t\trating: 2,\r\n\t\tnum: 301,\r\n\t},\r\n\thostabsorb: {\r\n\t\t// upokecenter says this is implemented as an added secondary effect\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !move.flags['contact'] || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 100,\r\n\t\t\t\tvolatileStatus: 'leechseed',\r\n\t\t\t\tability: this.dex.abilities.get('hostabsorb'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tname: \"Host Absorb\",\r\n\t\tdesc: \"This Pok\u00E9mon's contact moves apply Leech Seed to its target.\",\r\n\t\trating: 2,\r\n\t\tnum: 302,\r\n\t},\r\n\tworm: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === source) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted && move.type === 'Bug') {\r\n\t\t\t\tthis.debug('Worm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Worm\",\r\n\t\tdesc: \"If this Pok\u00E9mon moves last in a turn, it's Bug moves deal 1.5x damage.\",\r\n\t\trating: 2.5,\r\n\t\tnum: 303,\r\n\t},\r\n\tdeathmetal: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Ghost' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tmove.deathmetalBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.deathmetalBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Death Metal\",\r\n\t\tdesc: \"This Pokemon's Ghost moves become Steel moves and deal 1.2x damage.\",\r\n\t\trating: 4,\r\n\t\tnum: 304,\r\n\t},\r\n\tgraze: {\r\n\t\tonAccuracyPriority: -2,\r\n\t\tonAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (accuracy !== true && !this.randomChance(accuracy, 100)) {\r\n\t\t\t\tmove.graze = true;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!move.totalDamage || move.graze !== true) return;\r\n\t\t\tconst damage = move.totalDamage;\r\n\t\t\tthis.damage(move.totalDamage / 4, target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Graze\",\r\n\t\tdesc: \"(Bugged)If this Pok\u00E9mon misses a damaging move, the target takes damage equal to 1/4 of the damage they would've taken. Secondary effects don't activate.\",\r\n\t\trating: 4.5,\r\n\t\tnum: 305,\r\n\t},\r\n\tmeaneye: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Mean Eye', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mean Eye\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Special attack of adjacent opponents by 1 stage.\",\r\n\t\trating: 1.5,\r\n\t\tnum: 306,\r\n\t},\r\n\tcleftbody: {\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.add('-sideend', pokemon.side, 'move: Stealth Rock', '[of] ' + pokemon);\r\n\t\t\tpokemon.side.removeSideCondition('stealthrock');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Cleft Body');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cleft Body\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Ground moves; Ground immunity. Absorbs Stealth Rock on switch in.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 11,\r\n\t},\r\n\tsimmerfocus: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category !== 'Status') {\r\n\t\t\t\tmove.simmerfocusBoosted = true;\r\n\t\t\t\treturn priority - 3;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (!pokemon.hurtThisTurn) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Simmer Focus\",\r\n\t\trating: 4,\r\n\t\tshortDesc: \"This Pokemon\u2019s damaging moves have -3 Priority, if it isnt hit by a damaging move before it attacks, its attack does 1.5x damage.\",\r\n\t\tnum: 158,\r\n\t},\r\n\tfeeler: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon's Defense or Special Defense is raised by 1 stage based on the weaker combined attacking stat of all opposing Pok\u00E9mon. Special Defense is raised if their Special Attack is higher, and Defense is raised if their Attack is the same or higher.\",\r\n\t\tshortDesc: \"On switch-in, Def or Sp. Def is raised 1 stage based on the foes' higher Attack.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totalatk = 0;\r\n\t\t\tlet totalspa = 0;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\ttotalatk += target.getStat('atk', false, true);\r\n\t\t\t\ttotalspa += target.getStat('spa', false, true);\r\n\t\t\t}\r\n\t\t\tif (totalatk && totalatk >= totalspa) {\r\n\t\t\t\tthis.boost({def: 1});\r\n\t\t\t} else if (totalspa) {\r\n\t\t\t\tthis.boost({spd: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Feeler\",\r\n\t\trating: 4,\r\n\t\tnum: -35,\r\n\t},\r\n\tjellyarmor: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.category === 'Physical') {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Jelly Armor\",\r\n\t\trating: 3,\r\n\t\tshortDesc: \"This Pokemon takes 3/4 damage from physical attacks.\",\r\n\t\tnum: 111,\r\n\t},\r\n\ttrickyrat: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move) delete move.flags['protect'];\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tname: \"Tricky Rat\",\r\n\t\trating: 2.5,\r\n\t\tshortDesc: \"This Pokemon's moves break protection and ignore substitutes and foe's Reflect/Light Screen/Safeguard/Mist/Aurora Veil.\",\r\n\t\tnum: 151,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target"]
}
