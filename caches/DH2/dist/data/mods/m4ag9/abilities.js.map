{
  "version": 3,
  "sources": ["../../../../data/mods/m4ag9/abilities.ts"],
  "sourcesContent": ["export const Abilities: { [abilityid: string]: ModdedAbilityData; } = {\r\n\t// Gen 9 stuff\r\n\tbattlebond: {\r\n\t\tinherit: true,\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect?.effectType !== 'Move') return;\r\n\t\t\tif (source.abilityState.battleBondTriggered) return;\r\n\t\t\tif (source.species.id === 'greninjabond' && source.hp && !source.transformed && source.side.foePokemonLeft()) {\r\n\t\t\t\tthis.boost({atk: 1, spa: 1, spe: 1}, source, source, this.effect);\r\n\t\t\t\tthis.add('-activate', source, 'ability: Battle Bond');\r\n\t\t\t\tsource.abilityState.battleBondTriggered = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, attacker) {},\r\n\t},\r\n\tcompetitive: {\r\n\t\tinherit: true,\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdauntlessshield: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.shieldBoost) return;\r\n\t\t\tpokemon.shieldBoost = true;\r\n\t\t\tthis.boost({def: 1}, pokemon);\r\n\t\t},\r\n\t},\r\n\tdefiant: {\r\n\t\tinherit: true,\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tgulpmissile: {\r\n\t\tinherit: true,\r\n\t\tflags: {cantsuppress: 1, notransform: 1},\r\n\t},\r\n\theatproof: {\r\n\t\tinherit: true,\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof Atk weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof SpA weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {},\r\n\t},\r\n\tilluminate: {\r\n\t\tinherit: true,\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Illuminate\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t},\r\n\tintrepidsword: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.swordBoost) return;\r\n\t\t\tpokemon.swordBoost = true;\r\n\t\t\tthis.boost({atk: 1}, pokemon);\r\n\t\t},\r\n\t},\r\n\tlibero: {\r\n\t\tinherit: true,\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (this.effectState.libero) return;\r\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch' || move.callsMove) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.effectState.libero = true;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Libero');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn() {\r\n\t\t\tdelete this.effectState.libero;\r\n\t\t},\r\n\t},\r\n\tprotean: {\r\n\t\tinherit: true,\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (this.effectState.protean) return;\r\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch' || move.callsMove) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.effectState.protean = true;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Protean');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tdelete this.effectState.protean;\r\n\t\t},\r\n\t},\r\n\tsnowwarning: {\r\n\t\tinherit: true,\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('snow');\r\n\t\t},\r\n\t},\r\n\ttransistor: {\r\n\t\tinherit: true,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tthis.debug('Transistor boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tthis.debug('Transistor boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// M4A Paldea\r\n\taccumulate: {\r\n\t\tdesc: \"If this Pok\u00E9mon is a Mega Brambleghast, it calls for help and changes form at the end of each full turn it has been on the field, building up to Mega Brambleghast (Tangled Form) over five turns.\",\r\n\t\tshortDesc: \"More Brambleghast tangle up at the end of each turn.\",\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Brambleghast' || pokemon.transformed || !pokemon.hp || !pokemon.activeTurns ||\r\n\t\t\t\tpokemon.species.id === 'brambleghast' || pokemon.species.id === 'brambleghastmegatangled'\r\n\t\t\t) return;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Accumulate');\r\n\t\t\tthis.add('-message', `${pokemon.name} called for help!`);\r\n\t\t\tif (pokemon.species.id === 'brambleghastmega') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-1', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega1') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-2', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega2') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-3', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega3') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-4', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'brambleghastmega4') {\r\n\t\t\t\tpokemon.formeChange('Brambleghast-Mega-Tangled', this.effect, true);\r\n\t\t\t}\r\n\t\t\tthis.add('-message', `More of ${pokemon.name}'s friends are getting tangled up!`);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tconst type2 = species.types[1];\r\n\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\t// no HP change unlike Wishiwashi\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1 },\r\n\t\tname: \"Accumulate\",\r\n\t\trating: 5,\r\n\t\tnum: -2001,\r\n\t},\r\n\trenaturalization: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards. If it lands on any type of entry hazard, it clears the hazard and sets Grassy Terrain.\",\r\n\t\tshortDesc: \"Hazard immunity. Clears hazards, sets Grassy Terrain if switched in on them.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['gmaxsteelsurge', 'spikes', 'stealthrock', 'stickyweb', 'toxicspikes']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) && !this.field.getPseudoWeather('stickyresidues')) {\r\n\t\t\t\t\tif (!activated && !this.field.setTerrain('grassyterrain')) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Renaturalization');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] Ability: Renaturalization', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thazardImmune: true,\r\n\t\tname: \"Renaturalization\",\r\n\t\trating: 5,\r\n\t\tnum: -2002,\r\n\t},\r\n\tpavise: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tif (!this.boost({ spa: 1 })) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Pavise');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Dark') return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Pavise');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tdesc: \"This Pokemon is immune to Dark-type moves and raises its Special Attack by 1 stage when hit by a Dark-type move. If this Pokemon is not the target of a single-target Dark-type move used by another Pokemon, this Pokemon redirects that move to itself if it is within the range of that move. If multiple Pokemon could redirect with this Ability, it goes to the one with the highest Speed, or in the case of a tie to the one that has had this Ability active longer.\",\r\n\t\tshortDesc: \"This Pokemon draws Dark moves to itself to raise Sp. Atk by 1; Dark immunity.\",\r\n\t\tname: \"Pavise\",\r\n\t\trating: 3,\r\n\t\tnum: -2003,\r\n\t},\r\n\ttarslosh: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Tar Slosh', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({ spe: -1 }, target, pokemon, null, true);\r\n\t\t\t\t\ttarget.addVolatile('tarslosh');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Tar', '[from] ability: Tar Slosh', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\t\tif (effect && effect.effectType === 'Move' && effect.type === 'Fire' && target === this.effectState.target) {\r\n\t\t\t\t\treturn damage * 2;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"On switch-in, lowers the Speed of every other Pokemon by 1 stage and makes them weak to Fire moves.\",\r\n\t\tname: \"Tar Slosh\",\r\n\t\trating: 3.5,\r\n\t\tnum: -2005,\r\n\t},\r\n\tcolorspray: {\r\n\t\tdesc: \"The first damaging move used against a target since it has switched in turns the target into that type.\",\r\n\t\tshortDesc: \"Turns a target into the type of the first damaging move used against it.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp) return;\r\n\t\t\tif (this.effectState.colorspray) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (\r\n\t\t\t\ttarget.isActive && move.effectType === 'Move' && move.category !== 'Status' &&\r\n\t\t\t\ttype !== '???' && !target.hasType(type)\r\n\t\t\t) {\r\n\t\t\t\tif (!target.setType(type)) return false;\r\n\t\t\t\tthis.effectState.colorspray = true;\r\n\t\t\t\tthis.add('-start', target, 'typechange', type, '[from] ability: Color Change');\r\n\r\n\t\t\t\tif (target.side.active.length === 2 && target.position === 1) {\r\n\t\t\t\t\t// Curse Glitch\r\n\t\t\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\t\t\tif (action && action.move.id === 'curse') {\r\n\t\t\t\t\t\taction.targetLoc = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tdelete this.effectState.colorspray;\r\n\t\t},\r\n\t\tname: \"Color Spray\",\r\n\t\trating: 4,\r\n\t\tnum: -2008,\r\n\t},\r\n\tendlessdream: {\r\n\t\tdesc: \"While this Pokemon is active, every other Pokemon is treated as if it has the Comatose ability. Pokemon that are either affected by Sweet Veil, or have Insomnia or Vital Spirit as their abilities are immune this effect.\",\r\n\t\tshortDesc: \"All Pokemon are under Comatose effect.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-ability', source, 'Endless Dream');\r\n\t\t\tthis.field.addPseudoWeather('endlessdream');\r\n\t\t\tthis.hint(\"All Pokemon are under Comatose effect!\");\r\n\t\t},\r\n\t\tonResidualOrder: 21,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.field.removePseudoWeather('endlessdream');\r\n\t\t},\r\n\t\tname: \"Endless Dream\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\thairtrigger: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (pokemon.activeMoveActions < 1) {\r\n\t\t\t\treturn priority + 0.1;\r\n\t\t\t}\r\n\t\t\treturn priority;\r\n\t\t},\r\n\t\tdesc: \"The user moves first in their priority bracket on the first turn after switching in.\",\r\n\t\tshortDesc: \"Moves first in priority bracket on the first turn after switching in.\",\r\n\t\tname: \"Hair Trigger\",\r\n\t\trating: 5,\r\n\t\tnum: -23,\r\n\t},\r\n\tpowdercoat: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Powder Coat Atk weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Powder Coat SpA weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tname: \"Powder Coat\",\r\n\t\tdesc: \"This Pokemon takes 1/2 damages from indirect damage and water type moves.\",\r\n\t\tshortDesc: \"This Pokemon takes 1/2 damages from indirect damage and water type moves.\",\r\n\t\trating: 2,\r\n\t\tnum: -24,\r\n\t},\r\n\tlatedelivery: {\r\n\t\tdesc: \"This Pok\u00E9mon's non-contact Rock-type moves take effect two turns after being used. At the end of that turn, the damage is calculated at that time and dealt to the Pok\u00E9mon at the position the target had when the move was used. Only one move can be delayed at a time. If the user is no longer active at the time an attacking move should hit, damage is calculated based on the user's natural Attack or Special Attack stat, types, and level, with no boosts from its held item or Ability. Status moves are used by the Pok\u00E9mon at the position the user had when the move was used.\",\r\n\t\tshortDesc: \"Non-contact Rock-type moves delayed until two turns later, but only one at a time.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (\r\n\t\t\t\tmove && move.type === 'Rock' && !move.flags['contact'] && source.hasAbility('clairvoyance') &&\r\n\t\t\t\tsource.side.addSlotCondition(source, 'clairvoyance')\r\n\t\t\t) {\r\n\t\t\t\tObject.assign(source.side.slotConditions[source.position]['clairvoyance'], {\r\n\t\t\t\t\tduration: 3,\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\ttarget: null,\r\n\t\t\t\t\tmove: move,\r\n\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\tside: target.side,\r\n\t\t\t\t\tmoveData: this.dex.moves.get(move),\r\n\t\t\t\t});\r\n\t\t\t\tthis.add('-ability', source, 'Late Delivery');\r\n\t\t\t\tthis.add('-message', `${source.name} cast ${move.name} into the future!`);\r\n\t\t\t\tsource.deductPP(move.id, 1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonResidualOrder: 3,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get(data.move);\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Late Delivery');\r\n\t\t\t\tif (!data.target) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because there was no target.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.add('-message', `${this.effectState.source.name}'s ${move.name} took effect!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\t\t\t\tdata.moveData.isFutureMove = true;\r\n\t\t\t\tdelete data.moveData.flags['contact'];\r\n\t\t\t\tdelete data.moveData.flags['protect'];\r\n\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\tthis.actions.useMove(move, target, data.target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\t\tif (data.source.isActive) {\r\n\t\t\t\t\t\tthis.add('-anim', data.source, hitMove, data.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Clairvoyance\",\r\n\t\trating: 3,\r\n\t\tnum: -25,\r\n\t},\r\n\ttoxicdrain: {\r\n\t\tshortDesc: \"Removes Poison typing from adjacent Pokemon on switch-in. User gains +1 SpA for each Poison typing removed.\",\r\n\t\tdesc: \"Upon switch-in, the Poison typing is removed from all adjacent Pokemon. The user gains +1 SpA for each Poison typing removed.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (!target || target === pokemon) continue;\r\n\t\t\t\tif (target.hasType('Poison') && target.isAdjacent(this.effectState.target)) {\r\n\t\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Poison\" ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.types.join('/'), '[from] ability: Toxic Drain', '[of] ' + pokemon);\r\n\t\t\t\t\tthis.boost({ spa: 1 }, pokemon);\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Toxic Drain');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxic Drain\",\r\n\t\trating: 4,\r\n\t\tnum: -26,\r\n\t},\r\n\t/*congestion: { //rn it only works with one move at a time; will have to correct that\r\n\t\tdesc: \"This Pok\u00E9mon's status moves don't take effect until the user is switching out.\",\r\n\t\tshortDesc: \"Status moves don't effect until the user switches out.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (\r\n\t\t\t\tmove && move.category === 'Status' && source.hasAbility('congestion') &&\r\n\t\t\t\tsource.side.addSlotCondition(source, 'congestion')\r\n\t\t\t) {\r\n\t\t\t\tObject.assign(source.side.slotConditions[source.position]['congestion'], {\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\ttarget: null,\r\n\t\t\t\t\tmove: move,\r\n\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\tside: target.side,\r\n\t\t\t\t\tmoveData: this.dex.moves.get(move),\r\n\t\t\t\t});\r\n\t\t\t\tthis.add('-ability', source, 'Congestion');\r\n\t\t\t\tthis.add('-message', `${source.name} will cast ${move.name} when it goes!`);\r\n\t\t\t\tsource.deductPP(move.id, 1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonResidualOrder: 3,\r\n\t\t\tonSwitchOut(target) {\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get(data.move);\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Congestion');\r\n\t\t\t\tif (!data.target) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because there was no target.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.add('-message', `${this.effectState.source.name}'s ${move.name} took effect!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\t\t\t\tdata.moveData.isFutureMove = true;\r\n\t\t\t\tdelete data.moveData.flags['contact'];\r\n\t\t\t\tdelete data.moveData.flags['protect'];\r\n\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\tthis.actions.useMove(move, target, data.target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Congestion\",\r\n\t\trating: 3,\r\n\t\tnum: -27,\r\n\t},*/\r\n\tcongestion: {\r\n\t\t\tname: \"Congestion\",\r\n\t\t\tshortDesc: \"All status moves are delayed until all Congestion users are gone.\",\r\n\t\t\trating: 3,\r\n\t\t\tnum: -27,\r\n\t\t\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\t// Loop over all active Pok\u00E9mon\r\n\t\t\t\tfor (const p of this.getAllActive()) {\r\n\t\t\t\t\tconst slot = p.position;\r\n\t\t\t\t\tconst side = p.side;\r\n\t\t\r\n\t\t\t\t\t// Apply the congestionstatus slot condition if not present\r\n\t\t\t\t\tif (!side.slotConditions[slot]?.congestionstatus) {\r\n\t\t\t\t\t\tside.addSlotCondition(p, 'congestionstatus');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\ttwinheart: {\r\n\t\tshortDesc: \"Switches to Nocturnal form before using a Physical move, and to Diurnal form before using a Special move.\",\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Farigiraf' || attacker.transformed) return;\r\n\t\t\tif (move.category === 'Status') return;\r\n\t\t\tconst targetForme = (move.category === 'Special' ? 'Farigiraf-Mega' : 'Farigiraf-Mega-Nocturnal');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst newatk = attacker.storedStats.spa;\r\n\t\t\tconst newspa = attacker.storedStats.atk;\r\n\t\t\tattacker.storedStats.atk = newatk;\r\n\t\t\tattacker.storedStats.spa = newspa;\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1 },\r\n\t\tname: \"Twin Heart\",\r\n\t\trating: 4,\r\n\t\tnum: -29,\r\n\t},\r\n\tsugarrush: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fairy') {\r\n\t\t\t\tif (!this.boost({ spe: 12 })) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Sugar Rush');\r\n\t\t\t\t}\r\n\t\t\t\ttarget.addVolatile('sugarrush');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.volatiles['sugarrush']) {\r\n\t\t\t\tthis.boost({ spe: -2 }, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tname: \"Sugar Rush\",\r\n\t\tshortDesc: \"When hit by a fairy type move, gain +12 speed, which will then decrease by 2 stages at the end of every turn until the user switches out. Fairy Immunity.\",\r\n\t\trating: 3,\r\n\t\tnum: -30,\r\n\t},\r\n\tresidualdrain: {\r\n\t\tdesc: \"Every time another Pok\u00E9mon is damaged indirectly, this Pok\u00E9mon's HP is restored by the same amount.\",\r\n\t\tshortDesc: \"Heals from the indirect damage dealt to others.\",\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (effect.effectType !== 'Move' && target !== pokemon && effect.id !== 'leechseed') {\r\n\t\t\t\tpokemon.heal(damage);\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Residual Drain\",\r\n\t\trating: 4,\r\n\t\tnum: -31,\r\n\t},\r\n\tagitation: { // Thank you BlueRay lol\r\n\t\tdesc: \"When this Pok\u00E9mon raises or lowers another Pok\u00E9mon's stat stages, the effect is increased by one stage for each affected stat.\",\r\n\t\tshortDesc: \"Increases stat stage changes the Pok\u00E9mon inflicts by 1 stage.\",\r\n\t\tonAnyTryBoost(boost, target, source, effect) {\r\n\t\t\t// Prevent the effect if it's a Z-Power move\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\r\n\t\t\t// Ensure that the target and source are valid and not the same\r\n\t\t\tif (!target || !source || target === source || source !== this.effectState.target) return;\r\n\t\r\n\t\t\t// Iterate through the boost object to modify stat changes\r\n\t\t\tfor (const stat in boost) {\r\n\t\t\t\t// Type assertion to ensure stat is a key of BoostsTable\r\n\t\t\t\tconst boostValue = boost[stat as keyof BoostsTable];\r\n\t\t\t\tif (boostValue !== undefined) {\r\n\t\t\t\t\tif (boostValue < 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue - 1; // Exacerbate debuffs\r\n\t\t\t\t\t} else if (boostValue > 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue + 1; // Augment buffs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Agitation\",\r\n\t\trating: 4,\r\n\t\tnum: -32,\r\n\t},\r\n\tvengeful: {\r\n\t\tdesc: \"If the user's previous move failed, the user's next attack deals 2x damage (Stomping Tantrum parameters).\",\r\n\t\tshortDesc: \"If the user's previous move failed, the user's next attack deals 2x damage (Stomping Tantrum parameters).\",\r\n\t\tonBasePowerPriority: 8,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (pokemon.moveLastTurnResult === false) {\r\n\t\t\t\tthis.debug('doubling ', move, ' BP due to previous move failure');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tname: \"Vengeful\",\r\n\t\trating: 3,\r\n\t\tnum: -33,\r\n\t},\r\n\tfrostaura: {\r\n\t\tshortDesc: \"Turns all Water-type Pok\u00E9mon into Ice-type Pok\u00E9mon, and Water-type moves into Ice-type moves until a thawing move is used.\",\r\n\t\tdesc: \"While this Pok\u00E9mon is on the field, all Water-type Pok\u00E9mon become Ice-type Pok\u00E9mon, and all Water-type moves become Ice-type moves. This effect ends when a thawing move is used.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (!target.hasType('Water')) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Frost Aura', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttarget.addVolatile('frostaura');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Frost', '[from] ability: Frost Aura', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonModifyTypePriority: -1,\r\n\t\t\tonModifyType(move, pokemon) {\r\n\t\t\t\tconst noModifyType = [\r\n\t\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t\t];\r\n\t\t\t\tif (move.type === 'Water' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\t\tif (!target || target === pokemon) continue;\r\n\t\t\t\t\tif (target.hasType('Water') && target.isAdjacent(this.effectState.target)) {\r\n\t\t\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Water\" ? \"Ice\" : type));\r\n\t\t\t\t\t\tthis.add('-start', target, 'typechange', target.types.join('/'), '[from] ability: Frost Aura', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\t\tif (move.flags['defrost']) {\r\n\t\t\t\t\ttarget.removeVolatile('frostaura');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Frost Aura\",\r\n\t\trating: 4,\r\n\t\tnum: -35,\r\n\t},\r\n\tgrudgefultablets: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Grudgeful Tablets');\r\n\t\t},\r\n\t\tonAnyBasePowerPriority: 20,\r\n\t\tonAnyBasePower(basePower, source, target, move) {\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (source.hasAbility('Grudgeful Tablets')) return;\r\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\r\n\t\t\tif (move.ruinedAtk !== abilityHolder) return;\r\n\t\t\tif (source.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Grudgeful Tablets drop');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tshortDesc: \"All other Pok\u00E9mon without this ability deal 3/4 damage with Super Effective hits.\",\r\n\t\tdesc: \"All other Pok\u00E9mon without this ability deal 3/4 damage with Super Effective hits.\",\r\n\t\tname: \"Grudgeful Tablets\",\r\n\t\trating: 4.5,\r\n\t\tnum: -36,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["pokemon"]
}
