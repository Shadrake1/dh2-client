{
  "version": 3,
  "sources": ["../../../../data/mods/gen8feuu/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedabilityState} = {\r\n\t// Set 1\r\n\tporous: {// Feel like this might be wrong\r\n\t\tid: \"porous\",\r\n\t\tname: \"Porous\",\r\n\t\tshortDesc: \"Unaware + Water Absorb.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Water')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Porous');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tif (pokemon === this.activeTarget) {\r\n\t\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t},\r\n\tdespicable: {\r\n\t\tid: \"despicable\",\r\n\t\tname: \"Despicable\",\r\n\t\tshortDesc: \"This Pokemon's attacks are critical hits if the target is burned or poisoned.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && ['psn', 'tox', 'brn'].includes(target.status)) return 5;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tkingsguard: {\r\n\t\tid: \"kingsguard\",\r\n\t\tname: \"King's Guard\",\r\n\t\tshortDesc: \"Protected from enemy priority moves and Attack reduction.\",\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.atk && boost.atk < 0) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Attack\", \"[from] ability: King's Guard\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', dazzlingHolder, \"ability: King's Guard\", move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tgrowthveil: { // Too long\r\n\t\tid: \"growthveil\",\r\n\t\tname: \"Growth Veil\",\r\n\t\tshortDesc: \"Regenerator + Flower Veil.\",\r\n\t\tdesc: \"Restores 1/3 max HP on switch-out; ally Grass-types can't have stats lowered or status inflicted.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonAllyTryBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source) || !target.hasType('Grass')) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (target.hasType('Grass') && source && target !== source && effect && effect.id !== 'yawn') {\r\n\t\t\t\tthis.debug('interrupting setStatus with Growth Veil');\r\n\t\t\t\tif (effect.name === 'Synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (target.hasType('Grass') && status.id === 'yawn') {\r\n\t\t\t\tthis.debug('Growth Veil blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t},\r\n\tsurgeoneye: {\r\n\t\tid: \"surgeoneye\",\r\n\t\tname: \"Surgeon Eye\",\r\n\t\tshortDesc: \"Regenerator + Analytic.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue; // PLACEHOLDER\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Surgeon Eye boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\t// Set 2\r\n\troughresult: { // Too long\r\n\t\tid: \"roughresult\",\r\n\t\tname: \"Rough Result\",\r\n\t\tshortDesc: \"Foes making contact lose 1/8 max HP; if KOed by contact, attacker loses 1/4 max HP.\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / (target.hp ? 8 : 4), source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\teyeforaneye: {\r\n\t\tid: \"eyeforaneye\",\r\n\t\tname: \"Eye for an Eye\",\r\n\t\tshortDesc: \"This Pokemon blocks Dark-type moves and bounces them back to the user.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || move.type !== 'Dark') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || move.type !== 'Dark') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t},\r\n\tnaturalheal: {\r\n\t\tid: \"naturalheal\",\r\n\t\tname: \"Natural Heal\",\r\n\t\tshortDesc: \"Regenerator + Natural Cure.\",\r\n\t\tonCheckShow(pokemon) {\r\n\t\t\t// This is complicated\r\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\r\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\r\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\r\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\r\n\t\t\tif (pokemon.side.active.length === 1) return;\r\n\t\t\tif (pokemon.showCure === true || pokemon.showCure === false) return;\r\n\r\n\t\t\tconst cureList = [];\r\n\t\t\tlet noCureCount = 0;\r\n\t\t\tfor (const curPoke of pokemon.side.active) {\r\n\t\t\t\t// pokemon not statused\r\n\t\t\t\tif (!curPoke || !curPoke.status) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (curPoke.showCure) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Cure already known\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst species = curPoke.species;\r\n\t\t\t\t// pokemon can't get Natural Cure\r\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') && !Object.values(species.abilities).includes('Natural Heal')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Cure\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon's ability is known to be Natural Cure\r\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon isn't switching this turn\r\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curPoke.hasAbility('naturalcure') || curPoke.hasAbility('naturalheal')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (and is)\");\r\n\t\t\t\t\tcureList.push(curPoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (but isn't)\");\r\n\t\t\t\t\tnoCureCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!cureList.length || !noCureCount) {\r\n\t\t\t\t// It's possible to know what pokemon were cured\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// It's not possible to know what pokemon were cured\r\n\r\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\r\n\t\t\t\tthis.add('-message', \"(\" + cureList.length + \" of \" + pokemon.side.name + \"'s pokemon \" + (cureList.length === 1 ? \"was\" : \"were\") + \" cured by Natural Heal.)\");\r\n\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\tif (!pokemon.status) return;\r\n\r\n\t\t\t// if pokemon.showCure is undefined, it was skipped because its ability\r\n\t\t\t// is known\r\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\r\n\r\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Natural Heal');\r\n\t\t\tpokemon.setStatus('');\r\n\r\n\t\t\t// only reset .showCure if it's false\r\n\t\t\t// (once you know a Pokemon has Natural Cure, its cures are always known)\r\n\t\t\tif (!pokemon.showCure) pokemon.showCure = undefined;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\toverseeingmonarch: {\r\n\t\tname: \"Overseeing Monarch\",\r\n\t\tdesc: \"On switch-in, identifies foes' items; on switch-out, restores 1/3 max HP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (target.item) {\r\n\t\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Overseeing Monarch', '[of] ' + pokemon, '[identify]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t},\r\n\tporousfat: {\r\n\t\tid: \"porousfat\",\r\n\t\tname: \"Porous Fat\",\r\n\t\tshortDesc: \"Fire/Ice/Water moves against this Pokemon deal damage with a halved attacking stat.\",\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire' || move.type === 'Water') {\r\n\t\t\t\tthis.debug('Porous Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire' || move.type === 'Water') {\r\n\t\t\t\tthis.debug('Porous Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// set 3\r\n\tnullsystem: {\r\n\t\tid: \"nullsystem\",\r\n\t\tname: \"Null System\",\r\n\t\tshortDesc: \"This Pokemon can be any type (selected in teambuilder).\",\r\n\t},\r\n\t/*\r\n\tinthicktrator: {\r\n\t\tid: \"inthicktrator\",\r\n\t\tname: \"Inthicktrator\",\r\n\t\tshortDesc: \"This Pokemon's moves ignore Screens/Substitutes/Abilities.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\t///////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\tconsole.log(\"Target has Sturdy Mold\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else console.log(\"Target does not have Sturdy Mold\");\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t///////////END PLACEHOLDER\r\n\t\t\tmove.infiltrates = true;\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t},\r\n*/\r\n\tinthicktrator: {\r\n\t\tid: \"inthicktrator\",\r\n\t\tname: \"Inthicktrator\",\r\n\t\tshortDesc: \"This Pokemon's moves ignore Screens/Substitutes/Resistance-based Abilities.\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t\tif (target.hasAbility(['gulprock','fatfulfloat','porousfat','fridge'])) {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmagicsurge: {\r\n\t\tid: \"magicsurge\",\r\n\t\tname: \"Magic Surge\",\r\n\t\tshortDesc: \"Summons Magic Room for 5 turns when switching in.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-activate', source, 'ability: Magic Surge');\r\n\t\t\tthis.field.addPseudoWeather('magicroom');\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tmultiantlers: {\r\n\t\tid: \"multiantlers\",\r\n\t\tname: \"Multi Antlers\",\r\n\t\tshortDesc: \"User takes half damage when switching in or at full HP.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (!target.activeTurns) {\r\n\t\t\t\tthis.debug('Multi Antlers weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t\tif (target.hp >= target.maxhp) {\r\n\t\t\t\tthis.debug('Multi Antlers weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tconcussion: {// test\r\n\t\tid: \"concussion\",\r\n\t\tname: \"Concussion\",\r\n\t\tshortDesc: \"While this Pokemon is active, the opponents' held items have no effect.\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of source.side.foe.active) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Concussion');\r\n\t\t\t\t}\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tif (!pokemon.volatiles['embargo']) {\r\n\t\t\t\t\tpokemon.addVolatile('embargo');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tif (pokemon === source) return;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tif (!target.volatiles['embargo']) {\r\n\t\t\t\t\ttarget.addVolatile('embargo');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\ttarget.removeVolatile('embargo');\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 4,\r\n\t\tnum: 109,\r\n\t},\r\n\tnotfunny: {\r\n\t\tid: \"notfunny\",\r\n\t\tname: \"Not Funny\",\r\n\t\tshortDesc: \"No Guard + Prankster.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tfowlbehavior: {\r\n\t\tid: \"fowlbehavior\",\r\n\t\tname: \"Fowl Behavior\",\r\n\t\tshortDesc: \"This Pokemon's Sp. Atk is 1.5x, but it can only select the first move it executes.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityState.choiceLock && pokemon.abilityState.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Fowl Behavior\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityState.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityState.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, pokemon, move) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Fowl Behavior Sp. Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityState.choiceLock) return;\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityState.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tpillage: {\r\n\t\tid: \"pillage\",\r\n\t\tname: \"Pillage\",\r\n\t\tshortDesc: \"On switch-in, swaps ability with the opponent.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif ((pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) ||\r\n\t\t\tpokemon.species.id !== 'yaciancrowned' && pokemon.species.id !== 'porygrigus' && pokemon.species.id !== 'porymask' && pokemon.species.id !== 'hatterune' && pokemon.species.id !== 'hatamaskgalar') {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || !this.effectState.switchingIn) return;\r\n\t\t\tconst possibleTargets = pokemon.foes().filter(foeActive => foeActive && !foeActive.getAbility().flags['notrace']\r\n\t\t\t\t&& !foeActive.getAbility().flags['failskillswap'] && foeActive.isAdjacent(pokemon));\r\n\t\t\tif (!possibleTargets.length) return;\r\n\t\t\tconst rand = (possibleTargets.length > 1) ? this.random(possibleTargets.length) : 0;\r\n\t\t\tconst target = possibleTargets[rand];\r\n\t\t\tconst pillageAbil = pokemon.getAbility();\r\n\t\t\tconst ability = target.getAbility();\r\n\t\t\tif (!this.runEvent('SetAbility', target, pokemon, this.effect, pillageAbil)\r\n\t\t\t   || !this.runEvent('SetAbility', pokemon, pokemon, this.effect, ability)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Pillage');\r\n\t\t\tthis.add('-activate', pokemon, 'move: Skill Swap', ability, pillageAbil, '[of] ' + target);\r\n\t\t\tthis.singleEvent('End', pillageAbil, pillageAbil.abilityState, pokemon);\r\n\t\t\tthis.singleEvent('End', ability, ability.abilityState, target);\r\n\t\t\tpokemon.ability = ability.id\r\n\t\t\tpokemon.abilityState = {id: this.toID(pokemon.ability), target: pokemon};\r\n\t\t\ttarget.ability = pillageAbil.id;\r\n\t\t\ttarget.abilityState = {id: this.toID(pillageAbil.id), target: target};\r\n\t\t\tthis.singleEvent('Start', ability, pokemon.abilityState, pokemon);\r\n\t\t\tthis.singleEvent('Start', pillageAbil, target.abilityState, target);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t},\r\n\t/*\r\n\tmagneticwaves: {\r\n\t\tid: \"magneticwaves\",\r\n\t\tname: \"Magnetic Waves\",\r\n\t\tshortDesc: \"Normal moves: Electric type, 1.2x power. Immune to Ground moves.\",\r\n\t\t// airborneness implemented in sim/pokemon.js:Pokemon#isGrounded (via scripts.ts in this case)\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\t///////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t///////////END PLACEHOLDER\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.galvanizeBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.galvanizeBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown'] ) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Magnetic Waves');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n*/\r\n\tdoggysmaw: {\r\n\t\tid: \"doggysmaw\",\r\n\t\tname: \"Doggy's Maw\",\r\n\t\tshortDesc: \"This Pokemon's Normal, Fighting and Dragon moves ignore type-based immunities and this Pokemon's Normal-type moves deal 1.5x damage.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Normal') {\r\n\t\t\t\tthis.debug('Doggy\\'s Maw boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Normal') {\r\n\t\t\t\tthis.debug('Doggy\\'s Maw boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Dragon'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Doggy\\'s Maw', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Doggy\\'s Maw', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Doggy\\'s Maw', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Doggy\\'s Maw', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Doggy\\'s Maw', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// slate 5\r\n\tsturdymold: {// this one's gonna be a fucking adventure\r\n\t\tname: \"Sturdy Mold\",\r\n\t\tshortDesc: \"Sturdy + Mold Breaker.\",\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Sturdy Mold');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Sturdy Mold');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Sturdy Mold');\r\n\t\t},\r\n\t\tonFoeBeforeMovePriority: 13,\r\n\t\tonFoeBeforeMove(attacker, defender, move) {\r\n\t\t\tattacker.addVolatile('sturdymold');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonAfterMove(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('sturdymold');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\t// I'm gonna figure out how to code this legit at some point, I swear,\r\n\t\t// but for now, since we have so few abilities,\r\n\t\t// I'm just gonna hard-code it into everything.\r\n\t},\r\n\ttherapeutic: {\r\n\t\tid: \"therapeutic\",\r\n\t\tname: \"Therapeutic\",\r\n\t\tshortDesc: \"Poison Heal effects. Upon losing its item, this Pokemon poisons itself.\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon !== this.effectState.target) return;\r\n\t\t\tpokemon.trySetStatus('psn', pokemon);\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tpokemon.trySetStatus('psn', pokemon);\r\n\t\t},\r\n\t},\r\n\tsolarpanel: {\r\n\t\tid: \"solarpanel\",\r\n\t\tname: \"Solar Panel\",\r\n\t\tshortDesc: \"If hit by Electric or Fire: +1 SpA; Electric/Fire immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Electric' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Solar Panel');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tscrappy: {\r\n\t\tinherit: true,\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Scrappy', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Scrappy', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Scrappy', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Scrappy', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Scrappy', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbigpressure: {\r\n\t\tname: \"Big Pressure\",\r\n\t\tshortDesc: \"Moves targeting this Pokemon lose 1 additional PP; Foes cannot lower its Defense.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Big Pressure');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Big Pecks\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfriendshield: {\r\n\t\tname: \"Friend Shield\",\r\n\t\tshortDesc: \"Gets +1 Def and SpD on switch-in. Allies recieve 3/4 damage from foes' attacks.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.boost({def: 1, spd: 1}, pokemon);\r\n\t\t},\r\n\t\tonAnyModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target !== this.effectState.target && target.side === this.effectState.target.side) {\r\n\t\t\t\tthis.debug('Friend Shield weaken');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdebilitate: {\r\n\t\tname: \"Debilitate\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Special Attack of adjacent opponents by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Debilitate', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tleafyarmor: {// unsure\r\n\t\tname: \"Leafy Armor\",\r\n\t\tshortDesc: \"If a status condition is inflicted on this Pokemon: Cure status, -1 Defense, +2 Speed.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status && !pokemon.m.orbItemStatus) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Leafy Armor');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\tthis.boost({def: -1, spe: 2}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsurroundsound: {// unsure\r\n\t\tname: \"Surround Sound\",\r\n\t\tshortDesc: \"This Pokemon recieves 1/2 damage from multitarget moves. Its own have 1.3x power.\",\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (['allAdjacent', 'allAdjacentFoes', 'all'].includes(move.target)) {\r\n\t\t\t\tthis.debug('Surround Sound boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (['allAdjacent', 'allAdjacentFoes', 'all'].includes(move.target)) {\r\n\t\t\t\tthis.debug('Surround Sound weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tspikyhold: {\r\n\t\tname: \"Spiky Hold\",\r\n\t\tshortDesc: \"Cannot lose held item due to others' attacks; others making contact lose 1/8 max HP.\",\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Spiky Hold');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// slate 7\r\n\tsinkorswim: {\r\n\t\tname: \"Sink or Swim\",\r\n\t\tshortDesc: \"On switch-in, lowers adjacent opponents' Speed by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Sink or Swim', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdownpour: {\r\n\t\tname: \"Downpour\",\r\n\t\tshortDesc: \"If targeted by a foe's move: move loses 1 extra PP, this Pokemon restores 1/16 max HP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Downpour');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\trating: 2.5,\r\n\t\tnum: 46,\r\n\t},\r\n\t/* //No longer in use\r\n\toverclock: {\r\n\t\tname: \"Overclock\",\r\n\t\tshortDesc: \"If stats are lowered by foe or if hit by Electric move: Atk +2.\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Defiant only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Overclock');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tthis.boost({atk: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t*/\r\n\tmagicmissile: {\r\n\t\t/*\r\n\t\tNeed to test:\r\n\t\t- any Berry\r\n\t\t- Toxic Orb, Flame Orb or Light Ball (just one they're the same code)\r\n\t\t- White Herb\r\n\t\t- Mental Herb\r\n\t\t- um, I guess making sure Razor Claw or Razor Fang (just one they're the same code) doesn't immediately crash,\r\n\t\tbut it would be basically impossible for them to cause a flinch in a singles context\r\n\t\t(how does this behave with Instruct? maybe you could test with that if you're doing the doubles format Aquatic mentioned)\r\n\t\t*/\r\n\t\tname: \"Magic Missile\",\r\n\t\tshortDesc: \"If hit by a contact move while holding an item: lose item, apply item Fling effects, attacker loses 1/4 max HP. If hitting a foe with a contact move while not holding an item: steals the foe's item.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Magic Missile', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.isSemiInvulnerable()) return;\r\n\t\t\tif (target.ignoringItem()) return false;\r\n\t\t\tconst item = target.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, target.itemData, target, target, move, item)) return false;\r\n\t\t\tif (item.id && !item.megaStone) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\ttarget.addVolatile('fling');\r\n\t\t\t\tif (item.is\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, source, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', source, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') source.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) source.ateBerry = true;\r\n\t\t\t\t} else if (item.id === 'mentalherb') {\r\n\t\t\t\t\tconst conditions = ['attract', 'taunt', 'encore', 'torment', 'disable', 'healblock'];\r\n\t\t\t\t\tfor (const firstCondition of conditions) {\r\n\t\t\t\t\t\tif (source.volatiles[firstCondition]) {\r\n\t\t\t\t\t\t\tfor (const secondCondition of conditions) {\r\n\t\t\t\t\t\t\t\tsource.removeVolatile(secondCondition);\r\n\t\t\t\t\t\t\t\tif (firstCondition === 'attract' && secondCondition === 'attract') {\r\n\t\t\t\t\t\t\t\t\tthis.add('-end', source, 'move: Attract', '[from] item: Mental Herb');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (item.id === 'whiteherb') {\r\n\t\t\t\t\tlet activate = false;\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tlet i: BoostName;\r\n\t\t\t\t\tfor (i in source.boosts) {\r\n\t\t\t\t\t\tif (source.boosts[i] < 0) {\r\n\t\t\t\t\t\t\tactivate = true;\r\n\t\t\t\t\t\t\tboosts[i] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (activate) {\r\n\t\t\t\t\t\tsource.setBoost(boosts);\r\n\t\t\t\t\t\tthis.add('-clearnegativeboost', source, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (item.fling && item.fling.status) {\r\n\t\t\t\t\t\tsource.trySetStatus(item.fling.status, target);\r\n\t\t\t\t\t} else if (item.fling && item.fling.volatileStatus) {\r\n\t\t\t\t\t\tsource.addVolatile(item.fling.volatileStatus, target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// slate 8\r\n\tfatproof: {\r\n\t\tname: \"Fat Proof\",\r\n\t\tshortDesc: \"Ice, Fire attacks against this Pokemon use a halved attack stat; Fire moves 1/2 BP.\",\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Fat Proof weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Fat Proof weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tleviflame: {\r\n\t\tname: \"Leviflame\",\r\n\t\tshortDesc: \"30% chance a Pokemon making contact with this Pokemon will be burned. Immune to Ground.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown'] && !this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leviflame');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tprophylaxis: {\r\n\t\tname: \"Prophylaxis\",\r\n\t\tshortDesc: \"Regenerator + Anticipation.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Prophylaxis');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t},\r\n\tfeelnopain: {\r\n\t\tname: \"Feel No Pain\",\r\n\t\tshortDesc: \"Poison Heal + Levitate\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown'] && !this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Feel No Pain');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\terosion: {\r\n\t\tname: \"Erosion\",\r\n\t\tshortDesc: \"Sand Stream + Lightning Rod.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Erosion');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Electric' || move.flags['pledgecombo']) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Lightning Rod');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t},\r\n\tstatusabsorbtion: {\r\n\t\tname: \"Status Absorbtion\",\r\n\t\tshortDesc: \"Water Veil + Immunity.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (['tox','brn','psn'].includes(pokemon.status)) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Status Absorbtion');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (!['tox','brn','psn'].includes(pokemon.status)) return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Status Absorbtion');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tlevitability: {\r\n\t\tname: \"Levitability\",\r\n\t\tshortDesc: \"STAB moves are boosted an additional 1.5x; immune to Ground.\",\r\n\t\tonModifySTAB(stab, source, target, move) {\r\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\r\n\t\t\t\tif (stab === 2) {\r\n\t\t\t\t\treturn 3;\r\n\t\t\t\t}\r\n\t\t\t\treturn 2.25;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Implement immunity for Intimidate clones:\r\n\toblivious: {\r\n\t\tinherit: true,\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Oblivious', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Oblivious', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Oblivious', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Oblivious', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Oblivious', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\towntempo: {\r\n\t\tinherit: true,\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trattled: {\r\n\t\tinherit: true,\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (!effect) return;\r\n\t\t\tlet boosted = false;\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tboosted = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tboosted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tboosted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Own Tempo', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (effect && ['intimidate', 'debilitate', 'sinkorswim', 'scarilyadorable', 'peckingorder'].includes(effect.id)) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// new slate\r\n\tchivalry: {\r\n\t\tshortDesc: \"For each stat lowered by a foe: +2 Atk, +1 Spe.\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Defiant only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (boost[i] < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Chivalry');\r\n\t\t\t\tthis.boost({atk: 2, spe: 1}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Chivalry\",\r\n\t},\r\n\thauntedtech: {\r\n\t\tshortDesc: \"Moves 60 power or less: 1.5x power. If hit by an attack, 30% chance to disable that move.\",\r\n\t\tname: \"Haunted Tech\",\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isFutureMove) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tstickyfloat: {\r\n\t\t// Groundedness implemented in scripts.ts\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Sticky Float');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown'] && !this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Sticky Float');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sticky Float\",\r\n\t\tshortDesc: \"Effects of Sticky Hold + Levitate\",\r\n\t},\r\n\tterrorizer: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle' && this.randomChance(3, 10)) {\r\n\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Terrorizer\",\r\n\t\tshortDesc: \"Sheer Force + Cursed Body\",\r\n\t},\r\n\tdarkhumour: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif ((source && target === source) || move.category !== 'Status') return;\r\n\t\t\tthis.add('-ability', target, 'Dark Humour');\r\n\t\t\tthis.boost({atk: 1}, target, target, null, true);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Dark Humour\",\r\n\t\tshortDesc: \"Status moves +1 priority. If targeted by a status move, +1 Atk.\",\r\n\t},\r\n\tspeedy: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({spe: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Speedy\",\r\n\t\tshortDesc: \"Speed raises by 1 stage if it attacks and KO's another Pokemon.\",\r\n\t},\r\n\tultrahealth: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-activate', source, 'ability: Ultra Health');\r\n\t\t\t\tthis.heal(source.baseMaxhp / 3, source, source, effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Health\",\r\n\t\tshortDesc: \"On switching out or landing a KO, heal for 1/3 max HP.\",\r\n\t},\r\n\tdustdevil: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (!target.addVolatile('dustdevil')) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Dust Devil');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('dustdevil');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-ability', target, 'Dust Devil');\r\n\t\t\t\tthis.add('-start', target, 'Flash Fire', '[silent]');\r\n\t\t\t\tthis.add('-message', `The power of ${target.name}'s Fire-type moves rose!`);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('dustdevil')) {\r\n\t\t\t\t\tthis.debug('Dust Devil boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('dustdevil')) {\r\n\t\t\t\t\tthis.debug('Dust Devil boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Flash Fire', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Dust Devil\",\r\n\t\tshortDesc: \"Sand Rush + Flash Fire.\",\r\n\t},\r\n\tsolidskill: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif ((target.getMoveHitData(move).typeMod > 0) || move.multihit) {\r\n\t\t\t\tthis.debug('Solid Skill neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Solid Skill\",\r\n\t\tflags: {breakable: 1},\r\n\t\tshortDesc: \"3/4 damage from super-effective and multihit moves.\",\r\n\t},\r\n\tmodeshift: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Sableior' || pokemon.transformed) return;\r\n\t\t\tif (pokemon.species.forme !== 'Meteor') {\r\n\t\t\t\tpokemon.formeChange('Sableior-Meteor');\r\n\t\t\t} else \r\n\t\t\t\tif (pokemon.species.forme === 'Meteor') {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.set.species);\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Sableior' || attacker.transformed) return;\r\n\t\t\tconst targetForme = (move.category === 'Status' ? 'Sableior-Meteor' : 'Sableior');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\tif (attacker.canMegaEvo) {\r\n\t\t\t\tattacker.canMegaEvo = (targetForme === 'Sableior-Meteor' ? 'sableiormeteormega' : 'sableiormega');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Mode Shift\",\r\n\t\tshortDesc: \"Status moves +1 priority. Changes to Meteor Form before using a status move.\",\r\n\t},\r\n\tlemegeton: {\r\n\t\t// Ability suppression implemented in sim/pokemon.ts:Pokemon#ignoringAbility\r\n\t\t// TODO Will abilities that already started start again? (Intimidate seems like a good test case)\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Lemegeton');\r\n\t\t\tpokemon.abilityState.ending = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.illusion) {\r\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityState, target, pokemon, 'lemegeton');\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['slowstart']) {\r\n\t\t\t\t\tdelete target.volatiles['slowstart'];\r\n\t\t\t\t\tthis.add('-end', target, 'Slow Start', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(source) {\r\n\t\t\t// FIXME this happens before the pokemon switches out, should be the opposite order.\r\n\t\t\t// Not an easy fix since we cant use a supported event. Would need some kind of special event that\r\n\t\t\t// gathers events to run after the switch and then runs them when the ability is no longer accessible.\r\n\t\t\t// (If your tackling this, do note extreme weathers have the same issue)\r\n\r\n\t\t\t// Mark this pokemon's ability as ending so Pokemon#ignoringAbility skips it\r\n\t\t\tsource.abilityState.ending = true;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon !== source) {\r\n\t\t\t\t\t// Will be suppressed by Pokemon#ignoringAbility if needed\r\n\t\t\t\t\tthis.singleEvent('Start', pokemon.getAbility(), pokemon.abilityState, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lemegeton\",\r\n\t\tshortDesc: \"Beast Boost + Neutralizing Gas\",\r\n\t},\r\n\t// a\r\n\tmagicbeast: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tconst bestStat = source.getBestStat(true, true);\r\n\t\t\t\tthis.boost({[bestStat]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magic Beast\",\r\n\t\tshortDesc: \"Magic Bounce + Beast Boost.\",\r\n\t},\r\n\tsoundneigh: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({atk: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.target !== 'self' && move.flags['sound']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Sound Neigh');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.add('-immune', this.effectState.target, '[from] ability: Sound Neigh');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Sound Neigh\",\r\n\t\tshortDesc: \"Chilling Neigh + Soundproof.\",\r\n\t},\r\n\tecopy: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\r\n\t\t\tif (pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'pillage', 'ecopy', 'lemegeton', 'modeshift',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-ability', pokemon, ability, '[from] ability: E-Copy', '[of] ' + target);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"E-Copy\",\r\n\t\tshortDesc: \"Sets Electric Terrain, and then copies the foe's Ability.\",\r\n\t},\r\n\ttrace: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'pillage', 'ecopy', 'lemegeton', 'modeshift',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-ability', pokemon, ability, '[from] ability: Trace', '[of] ' + target);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Trace\",\r\n\t\trating: 2.5,\r\n\t\tnum: 36,\r\n\t},\r\n\twetbugs: {\r\n\t\tonStart(source) {\r\n\t\t\tfor (const action of this.queue) {\r\n\t\t\t\tif (action.choice === 'runPrimal' && action.pokemon === source && source.species.id === 'kyottler') return;\r\n\t\t\t\tif (action.choice !== 'runSwitch' && action.choice !== 'runPrimal') break;\r\n\t\t\t}\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wet Bugs\",\r\n\t\tshortDesc: \"Drizzle + Swarm.\",\r\n\t},\r\n\thydrauliccannon: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tif (move.flags['pulse']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hydraulic Cannon\",\r\n\t\tshortDesc: \"Mega Launcher + Swift Swim.\",\r\n\t},\r\n\tbattletheme: {\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Meloslash' || attacker.transformed) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;\r\n\t\t\tconst targetForme = ((move.secondaries || move.id === 'kingsshield') ? 'Meloslash' : 'Meloslash-Melee');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\tif (move.id === 'relicsong') {\r\n\t\t\t\tmove.willChangeForme = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.willChangeForme) {\r\n\t\t\t\tpokemon.formeChange('Meloslash-Melee');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Battle Theme\",\r\n\t\tshortDesc: \"Meloslash: change forme to Range before using move with secondary, change form to Melee otherwise. Secondary effect chances are doubled.\",\r\n\t},\r\n\tflashyjokes: {\r\n\t\tshortDesc: \"Flash Fire + Prankster.\",\r\n\t\tname: \"Flashy Jokes\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (!target.addVolatile('flashyjokes')) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flashy Jokes');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('flashyjokes');\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-ability', target, 'Flashy Jokes');\r\n\t\t\t\tthis.add('-start', target, 'Flash Fire', '[silent]');\r\n\t\t\t\tthis.add('-message', `The power of ${target.name}'s Fire-type moves rose!`);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('flashyjokes')) {\r\n\t\t\t\t\tthis.debug('Flashy Jokes boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('flashyjokes')) {\r\n\t\t\t\t\tthis.debug('Flashy Jokes boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Flash Fire', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tteachingtech: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.category === 'Status') return;\r\n\t\t\tconsole.log('Teaching Tech: Move BP = ' + move.basePower);\r\n\t\t\tconst targetAbility = target.getAbility();\r\n\t\t\tif (targetAbility.isPermanent || targetAbility.id === 'teachingtech') return;\r\n\t\t\tif (move.basePower <= 60) {\r\n\t\t\t\tconst oldAbility = target.setAbility('teachingtech', source);\r\n\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Teaching Tech');\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Teaching Tech');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Teaching Tech\",\r\n\t\tshortDesc: \"Moves <=60 BP: 1.5x power. If hitting something with such a move: changes their ability to Teaching Tech.\",\r\n\t},\r\n\tscrappyarmor: {\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Scrappy Armor', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Scrappy Armor', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Scrappy Armor', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Scrappy Armor', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Scrappy Armor', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === 'Physical') {\r\n\t\t\t\tthis.boost({def: -1, spe: 2}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Scrappy Armor\",\r\n\t\tshortDesc: \"Scrappy + Weak Armor\",\r\n\t},\r\n\tolfactoryarmor: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Steel') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!(source ||= this.effectState.target) || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Steel')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Prism Armor neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 5,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Olfactory Armor\",\r\n\t\tshortDesc: \"Traps Steels + Takes 3/4 damage from Super Effective and Steel-type attacks.\",\r\n\t},\r\n\tgutsyjaw: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gutsy Jaw\",\r\n\t\tshortDesc: \"Guts + Strong Jaw\",\r\n\t},\r\n\tfinalargument: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tonSwitchOut(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Final Argument\",\r\n\t\tshortDesc: \"Summons Psychic Terrain when switched in or out.\",\r\n\t},\r\n\tmosscoat: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass' && !this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.debug('Moss Coat boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (!move.type === 'Grass' && !this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.debug('Moss Coat boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) return;\r\n\t\t\tif (move.id === 'earthquake' || move.id === 'magnitude' || move.id === 'bulldoze') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!this.field.isTerrain('grassyterrain')) this.heal(pokemon.maxhp / 16);\r\n\t\t},\r\n\t\tonTerrain(pokemon) {\r\n\t\t\tif (!this.field.isTerrain('grassyterrain')) this.heal(pokemon.maxhp / 16);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Moss Coat\",\r\n\t\tshortDesc: \"This Pokemon is considered to be under the effects of Grassy Terrain.\",\r\n\t},\r\n\ttoxicplay: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Toxic Play');\r\n\t\t\tthis.add('-message', pokemon.name + ` breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Toxic Play\",\r\n\t\tshortDesc: \"Mold Breaker + Corrosion.\",\r\n\t},\r\n\tcovertops: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Covert Ops only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Covert Ops\",\r\n\t\tshortDesc: \"Infiltrator + Competitive.\",\r\n\t},\r\n\tdeluge: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Deluge');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Deluge\",\r\n\t\tshortDesc: \"Water Absorb effects. This Pokemon's Water moves have 1.3x power.\",\r\n\t},\r\n\tcontraryboost: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet success = false;\r\n\t\t\t\tlet i: BoostName;\r\n\t\t\t\tfor (i in source.boosts) {\r\n\t\t\t\t\tif (source.boosts[i] === 0) continue;\r\n\t\t\t\t\tsource.boosts[i] = -source.boosts[i];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (!success) return false;\r\n\t\t\t\tthis.add('-invertboost', source, '[from] ability: Contrary Boost');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Contrary Boost\",\r\n\t\tshortDesc: \"Reverses stat changes after attacking and KOing a Pokemon.\",\r\n\t},\r\n\titemboost: {\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon === this.effectState.target) pokemon.addVolatile('unburden');\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tpokemon.addVolatile('unburden');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('unburden');\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({[this.effectState.bestStat ||= source.getBestStat(true, true)]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Item Boost\",\r\n\t\tshortDesc: \"Unburden + Beast Boost.\",\r\n\t},\r\n\tultrascout: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Ultra Scout');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tconst bestStat = target.getBestStat(true, true);\r\n\t\t\t\tconst targetAppearance = target.illusion || target;\r\n\t\t\t\tconst statNames = {\r\n\t\t\t\t\t'atk': 'Attack',\r\n\t\t\t\t\t'def': 'Defense',\r\n\t\t\t\t\t'spa': 'Special Attack', \r\n\t\t\t\t\t'spd': 'Special Defense', \r\n\t\t\t\t\t'spe': 'Speed'\r\n\t\t\t\t};\r\n\t\t\t\tthis.add('-message', `${targetAppearance.name} is most proficient in ${statNames[bestStat]}!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ultra Scout\",\r\n\t\trating: 1.5,\r\n\t\tflags: {breakable: 1},\r\n\t\tshortDesc: \"On switch-in, this Pokemon identifies the foe's highest stat.\",\r\n\t},\r\n\tscarilyadorable: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Scarily Adorable', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1, spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Scarily Adorable\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Attack and Speed of adjacent opponents by 1 stage.\",\r\n\t},\r\n\tsolarboiler: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Water' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Solar Boiler');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Solar Boiler\",\r\n\t\tshortDesc: \"immune to Water and Fire-type attacks, heals 25% when hit by one; Heals 12.5% per turn in Rain; Has 4x Spe in Sun.\",\r\n\t},\r\n\tvoltophyll: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Electric' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Voltophyll');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Voltophyll\",\r\n\t\tshortDesc: \"2x Speed in Sun; Heals 25% when hit by a Fire or Electric move; Fire/Electric immunity\",\r\n\t},\r\n\tweatherpower: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland', 'raindance', 'primordialsea', 'hail', 'sandstorm', 'deltastream'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'sunnyday' || effect.id === 'desolateland' || effect.id === 'raindance' || effect.id === 'primordialsea' || effect.id === 'hail' || effect.id === 'sandstorm' || effect.id === 'deltastream') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Weather Power\",\r\n\t\tshortDesc: \"1.5x SpA while under any weather. User loses 12.5% of its HP in any weather.\",\r\n\t},\r\n\tplotarmor: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\t\tthis.debug('Plot Armor boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp && effect && (effect.id === 'recoil' || ((effect.id === 'jumpkick' || effect.id === 'highjumpkick') && source === target))) {\r\n\t\t\t\tthis.add('-ability', target, 'Plot Armor');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Plot Armor\",\r\n\t\tshortDesc: \"Reckless + If this Pokemon would faint due to recoil or crash damage, it will instead survive with 1 HP.\",\r\n\t},\r\n\treversegear: {\r\n\t\tname: \"Reverse Gear\",\r\n\t\tonChangeBoost(boost) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tif (boost.spe) boost.spe *= -1;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tshortDesc: \"Stat boosts to the Speed stat are inversed.\",\r\n\t},\r\n\tinnerfocus: {\r\n\t\tinherit: true,\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Inner Focus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Inner Focus\",\r\n\t},\r\n\tfairygust: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.type === 'Flying' && pokemon.hp === pokemon.maxhp) return priority + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fairy Gust\",\r\n\t\tshortDesc: \"Pixilate + Gale Wings.\",\r\n\t},\r\n\tleafstream: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Stream');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Stream');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tfor (const action of this.queue) {\r\n\t\t\t\tif (action.choice === 'runPrimal' && action.pokemon === source && source.species.id === 'groudon') return;\r\n\t\t\t\tif (action.choice !== 'runSwitch' && action.choice !== 'runPrimal') break;\r\n\t\t\t}\r\n\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Leaf Stream\",\r\n\t\tshortDesc: \"Leaf Guard + Summons Sunny Day on switch-in.\",\r\n\t},\r\n\tjawofthelaw: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Jaw of the Law boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Jaw of the Law boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Jaw of the Law\",\r\n\t\tshortDesc: \"Strong Jaw + Stakeout.\",\r\n\t},\r\n\tmystic: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('mistyterrain');\r\n\t\t},\r\n\t\t// The rest is implemented in moves.ts\r\n\t\tflags: {},\r\n\t\tname: \"Mystic\",\r\n\t\tshortDesc: \"Misty Surge + This Pokemon's moves ignore the effects of Misty Terrain.\",\r\n\t},\r\n\tpeckingorder: {\r\n\t\tname: \"Pecking Order\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Defense of adjacent opponents by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Pecking Order', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({def: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tmarblegarden: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source)) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Marble Garden', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (source && target !== source && effect && effect.id !== 'yawn') {\r\n\t\t\t\tthis.debug('interrupting setStatus with Marble Garden');\r\n\t\t\t\tif (effect.id === 'synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Marble Garden', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.debug('Marble Garden blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Marble Garden', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Marble Garden\",\r\n\t\tshortDesc: \"Protects the user from Recoil and status infliction/stat reduction from other Pok\u00E9mon.\",\r\n\t},\r\n\tdevilsadvocate: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Unnerve');\r\n\t\t\tthis.effectState.unnerved = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.effectState.unnerved) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Unnerve');\r\n\t\t\tthis.effectState.unnerved = true;\r\n\t\t},\r\n\t\tonEnd() {\r\n\t\t\tthis.effectState.unnerved = false;\r\n\t\t},\r\n\t\tonFoeTryEatItem() {\r\n\t\t\treturn !this.effectState.unnerved;\r\n\t\t},\r\n\t\tonChangeBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Devil's Advocate\",\r\n\t\tshortDesc: \"Unnerve + Contrary\",\r\n\t},\r\n\tsnowglobe: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('hail');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isWeather('hail')) {\r\n\t\t\t\tif (['Rock', 'Ground', 'Steel'].includes(move.type)) {\r\n\t\t\t\t\tthis.debug('Snow Globe boost');\r\n\t\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'hail') return false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Snow Globe\",\r\n\t\tshortDesc: \"Summons Hail on switch-in. Steel, Ground, and Rock moves deal 1.3x damage in Hail; Hail immunity.\",\r\n\t},\r\n\tbugscicle: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Bug' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bugscicle\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Bug-Type moves become Ice-Type and deal 1.2x damage.\",\r\n\t},\r\n\tmagicfist: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (!attacker.item) {\r\n\t\t\t\tthis.debug('Magic Fist boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Magic Fist\",\r\n\t\tshortDesc: \"If this Pokemon has no item, its attacks have 1.2x power.\",\r\n\t},\r\n\tsandbubbler: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Sand Bubbler boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sand Bubbler\",\r\n\t\tshortDesc: \"Sand Stream + Iron Fist.\",\r\n\t},\r\n\tbombardier: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bombardier\",\r\n\t\tshortDesc: \"Bullet and Bomb moves have 1.5x power.\",\r\n\t},\r\n\tasonekecleon: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'As One');\r\n\t\t\tthis.add('-ability', pokemon, 'Unnerve', pokemon.side.foe);\r\n\t\t},\r\n\t\tonFoeTryEatItem: false,\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({spa: length}, source, source, this.dex.abilities.get('grimneigh'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!target.hp) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (\r\n\t\t\t\ttarget.isActive && move.effectType === 'Move' && move.category !== 'Status' &&\r\n\t\t\t\ttype !== '???' && !target.hasType(type)\r\n\t\t\t) {\r\n\t\t\t\tif (!target.setType(type)) return false;\r\n\t\t\t\tthis.add('-start', target, 'typechange', type, '[from] ability: Color Change');\r\n\r\n\t\t\t\tif (target.side.active.length === 2 && target.position === 1) {\r\n\t\t\t\t\t// Curse Glitch\r\n\t\t\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\t\t\tif (action && action.move.id === 'curse') {\r\n\t\t\t\t\t\taction.targetLoc = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"As One (Kecleon)\",\r\n\t\tshortDesc: \"As One (Spectrier) + Color Change.\",\r\n\t},\r\n\theavyarmor: {\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Heavy Armor\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Heavy Armor\",\r\n\t\tshortDesc: \"Prevents other Pokemon from lowering this Pokemon's stat stages. This Pokemon cannot be struck by a critical hit.\",\r\n\t},\r\n\tmagicwand: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['contact'];\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Magic Wand\",\r\n\t\tshortDesc: \"Long Reach + Magic Guard\",\r\n\t},\r\n\tsportsshowtime: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Sports Showtime');\r\n\t\t\t\tthis.heal(source.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sports Showtime\",\r\n\t\tshortDesc: \"Changes to the type of its used move and heals 1/16 of its max HP before dealing damage\",\r\n\t},\r\n\tfirestarter: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Poison Touch's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\t\t\tif (this.checkMoveMakesContact(move, target, source)) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\ttarget.trySetStatus('brn', source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fire Starter\",\r\n\t\tshortDesc: \"30% chance to burn opponent when using a contact move or when the opponent makes contact with this Pokemon\",\r\n\t},\r\n\tparasomnia: {\r\n\t\tshortDesc: \"Upon landing a KO or falling asleep, highest stat +1.\",\r\n\t\tname: \"Parasomnia\",\r\n\t\tonSourceFaint(target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({[source.getBestStat(true, true)]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id === 'slp') {\r\n\t\t\t\tthis.boost({[target.getBestStat(true, true)]: length}, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\twillfulcharge: {\r\n\t\t onTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Willful Charge');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tmove.ignoreDefensive = true;\r\n\t\t\t\tmove.ignoreEvasion = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Willful Charge\",\r\n\t\tshortDesc: \"Ignores opponent\u2019s stat changes when doing damage with Electric-type moves and recovers 1/4 max HP when hit by an electric type move; Electric immunity.\",\r\n\t},\r\n\tsheerheart: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.category === 'Special') return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (boost.spa && (boost.spa < 0 || boost.spa > 0)) {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Special Attack\", \"[from] ability: Sheer Heart\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sheer Heart\",\r\n\t\tshortDesc: \"Special attacks have 1.3x power; stat changes to the Special Attack stat have no effect.\",\r\n\t},\r\n\tberrynice: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isWeather(['sunnyday', 'desolateland']) || this.randomChance(1, 2)) {\r\n\t\t\t\tif (pokemon.hp && !pokemon.item && this.dex.items.get(pokemon.lastItem).isBerry) {\r\n\t\t\t\t\tpokemon.setItem(pokemon.lastItem);\r\n\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Berry Nice');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tif (!effect) return;\r\n\t\t\tif (effect.name === 'Berry Juice' || effect.name === 'Leftovers') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Berry Nice');\r\n\t\t\t}\r\n\t\t\tif ((effect as Item).isBerry) return this.chainModify(2);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && (effect as Item).isBerry) {\r\n\t\t\t\tlet b: BoostName;\r\n\t\t\t\tfor (b in boost) {\r\n\t\t\t\t\tboost[b]! *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamagePriority: -1,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.abilityState.berryWeaken) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItemPriority: -1,\r\n\t\tonTryEatItem(item, pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Berry Nice');\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tconst weakenBerries = [\r\n\t\t\t\t'Babiri Berry', 'Charti Berry', 'Chilan Berry', 'Chople Berry', 'Coba Berry', 'Colbur Berry', 'Haban Berry', 'Kasib Berry', 'Kebia Berry', 'Occa Berry', 'Passho Berry', 'Payapa Berry', 'Rindo Berry', 'Roseli Berry', 'Shuca Berry', 'Tanga Berry', 'Wacan Berry', 'Yache Berry',\r\n\t\t\t];\r\n\t\t\t// Record if the pokemon ate a berry to resist the attack\r\n\t\t\tpokemon.abilityState.berryWeaken = weakenBerries.includes(item.name);\r\n\t\t},\r\n\t\tname: \"Berry Nice\",\r\n\t\tshortDesc: \"Chlorophyll + Harvest + Berries eaten by this Pokemon have their effect doubled.\",\r\n\t},\r\n\tswiftretreat: {\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: Swift Retreat');\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Swift Retreat\",\r\n\t\tshortDesc: \"Emergency Exit + Swift Swim.\",\r\n\t},\r\n\tmagneticwaves: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magnetic Waves\",\r\n\t\tshortDesc: \"Galvanize + Levitate.\",\r\n\t},\r\n\tfridge: {\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tif (!effect) return;\r\n\t\t\tif (effect.name === 'Berry Juice' || effect.name === 'Leftovers') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Fridge');\r\n\t\t\t}\r\n\t\t\tif ((effect as Item).isBerry) return this.chainModify(2);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && (effect as Item).isBerry) {\r\n\t\t\t\tlet b: BoostName;\r\n\t\t\t\tfor (b in boost) {\r\n\t\t\t\t\tboost[b]! *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamagePriority: -1,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.abilityState.berryWeaken) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItemPriority: -1,\r\n\t\tonTryEatItem(item, pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Fridge');\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tconst weakenBerries = [\r\n\t\t\t\t'Babiri Berry', 'Charti Berry', 'Chilan Berry', 'Chople Berry', 'Coba Berry', 'Colbur Berry', 'Haban Berry', 'Kasib Berry', 'Kebia Berry', 'Occa Berry', 'Passho Berry', 'Payapa Berry', 'Rindo Berry', 'Roseli Berry', 'Shuca Berry', 'Tanga Berry', 'Wacan Berry', 'Yache Berry',\r\n\t\t\t];\r\n\t\t\t// Record if the pokemon ate a berry to resist the attack\r\n\t\t\tpokemon.abilityState.berryWeaken = weakenBerries.includes(item.name);\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof Atk weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof SpA weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Fridge\",\r\n\t\tshortDesc: \"Ripen + Heatproof.\",\r\n\t},\r\n\tmonarchyenforcement: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', dazzlingHolder, 'ability: Monarchy Enforcement', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Monarchy Enforcement\",\r\n\t\tshortDesc: \"Sheer Force + Queenly Majesty.\",\r\n\t},\r\n\tyakultian: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({atk: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('hail');\r\n\t\t},\r\n\t\tname: \"Yakultian\",\r\n\t\tshortDesc: \"Chilling Neigh + Snow Warning.\",\r\n\t},\r\n\tacceleration: {\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Acceleration only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tthis.boost({spe: 2}, target, target, null, false, true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Acceleration\",\r\n\t\tshortDesc: \"+1 Speed end of turn, +2 Speed when a stat is lowered.\",\r\n\t},\r\n\textremophile: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland', 'hail'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Extremophile\",\r\n\t\tshortDesc: \"Slush Rush + Chlorophyll.\",\r\n\t},\r\n\thivemind: {\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Clear Body\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Bug') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Hivemind');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hivemind\",\r\n\t\tshortDesc: \"This Pokemon is immune to having its stats lowered and Bug-type moves.\",\r\n\t},\r\n\tanatidaephobia: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Poison Touch's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\t\t\tif (['Normal', 'Fighting'].includes(move.type)) {\r\n\t\t\t\tthis.add('-ability', source, 'Anatidaephobia');\r\n\t\t\t\ttarget.tryAddVolatile('perishsong', source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Anatidaephobia', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Anatidaephobia', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Anatidaephobia', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Anatidaephobia', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Anatidaephobia', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Anatidaephobia\",\r\n\t\tshortDesc: \"Normal, Fighting hit Ghost and inflict Perish Song.\",\r\n\t},\r\n\tpermafrost: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Permafrost neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\ttarget.heal(target.baseMaxhp / 16);\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] ability: Permafrost');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Permafrost\",\r\n\t\tshortDesc: \"When hit by a super effective move, that move deals 3/4 damage and this Pokemon gets healed by 1/16 of its max HP.\",\r\n\t},\r\n\tgrassystream: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Grassy Stream\",\r\n\t\tshortDesc: \"Sets Grassy Terrain upon switch-in. 1.5x Def under Sandstorm.\",\r\n\t},\r\n\t/*\r\n\telectrolytes: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon, length) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\tthis.debug('electrolytes');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Electrolytes');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in pokemon.storedStats) {\r\n\t\t\t\t\tif (pokemon.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = pokemon.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Electrolytes\",\r\n\t\tshortDesc: \"When this Pokemon is statused by an opponent, the status is cured at the end of the turn and this Pokemon gains +1 to their highest non-HP stat.\",\r\n\t},\r\n*/\r\n\telectrolytes: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp && pokemon.status) {\r\n\t\t\t\tif (!pokemon.statusData.source || !pokemon.statusData.source.side || pokemon.statusData.source.side === pokemon.side) return;\r\n\t\t\t\tthis.debug('Electrolytes');\r\n\t\t\t\tthis.boost({[pokemon.getBestStat(true, true)]: 1}, pokemon);\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tconst bestStat = source.getBestStat(true, true);\r\n\t\t\t\tthis.boost({[source.getBestStat(true, true)]: length}, source);\r\n\t\t\t\tsource.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Electrolytes\",\r\n\t\trating: 4,\r\n\t\tshortDesc: \"When this Pokemon is statused by or KOes an opponent, the status is cured at the end of the turn and this Pokemon gains +1 to their highest non-HP stat.\",\r\n\t},\r\n\tworkability: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.stab = 2;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\tthis.debug('Workability boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\tthis.debug('Workability boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Workability\",\r\n\t\tshortDesc: \"This Pokemon's STAB boost is 2x instead of 1.5x. Steel-type moves are considered STAB for this Pokemon\",\r\n\t},\r\n\tdeusexmachina: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Wishirupti' || pokemon.level < 20 || pokemon.transformed) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'wishirupti') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti-School');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'wishiruptischool') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti');\r\n\t\t\t\t\tpokemon.setBoost({atk: 6});\r\n\t\t\t\t\tthis.add('-setboost', pokemon, 'atk', 12, '[from] ability: Deus Ex Machina');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Wishirupti' || pokemon.level < 20 ||\r\n\t\t\t\tpokemon.transformed || !pokemon.hp\r\n\t\t\t) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'wishirupti') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti-School');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'wishiruptischool') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti');\r\n\t\t\t\t\tpokemon.setBoost({atk: 6});\r\n\t\t\t\t\tthis.add('-setboost', pokemon, 'atk', 12, '[from] ability: Deus Ex Machina');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Deus Ex Machina\",\r\n\t\tshortDesc: \"Schooling effects. When this Pokemon enters Solo form, it gains +12 Attack.\",\r\n\t},\r\n\tneutralizinggas: {\r\n\t\t// Ability suppression implemented in sim/pokemon.ts:Pokemon#ignoringAbility\r\n\t\t// TODO Will abilities that already started start again? (Intimidate seems like a good test case)\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Neutralizing Gas');\r\n\t\t\tpokemon.abilityState.ending = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.illusion) {\r\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityState, target, pokemon, 'neutralizinggas');\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['slowstart']) {\r\n\t\t\t\t\tdelete target.volatiles['slowstart'];\r\n\t\t\t\t\tthis.add('-end', target, 'Slow Start', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (source.species.baseSpecies !== 'Weezlord-Galar') return;\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(source) {\r\n\t\t\t// FIXME this happens before the pokemon switches out, should be the opposite order.\r\n\t\t\t// Not an easy fix since we cant use a supported event. Would need some kind of special event that\r\n\t\t\t// gathers events to run after the switch and then runs them when the ability is no longer accessible.\r\n\t\t\t// (If your tackling this, do note extreme weathers have the same issue)\r\n\r\n\t\t\t// Mark this pokemon's ability as ending so Pokemon#ignoringAbility skips it\r\n\t\t\tsource.abilityState.ending = true;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon !== source) {\r\n\t\t\t\t\t// Will be suppressed by Pokemon#ignoringAbility if needed\r\n\t\t\t\t\tthis.singleEvent('Start', pokemon.getAbility(), pokemon.abilityState, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"While this Pokemon is active, Abilities have no effect. Weezlord: +1 to highest stat upon KO\",\r\n\t},\r\n\tundercut: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tthis.chainModify(0.75);\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.875);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Undercut\",\r\n\t\tshortDesc: \"This Pokemon's moves of 80 power or less have 1.40625x power, but its moves higher than 80 power have 0.75x power.\",\r\n\t},\r\n\theatgenerator: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Heat Generator');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Heat Generator');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Heat Generator\",\r\n\t\tshortDesc: \"Regenerator + Blaze\",\r\n\t},\r\n\tflamingskin: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water' && !move.ignoreAbility) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flaming Skin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeBasePowerPriority: 17,\r\n\t\tonFoeBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.target !== defender || move.ignoreAbility) return;\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flaming Skin\",\r\n\t\tshortDesc: \"Dry Skin + Flame Body\",\r\n\t},\r\n\tetativel: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown'] && !this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Etativel');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Etativel\",\r\n\t\tshortDesc: \"Contrary + Levitate\",\r\n\t},\r\n\tclutchfactor: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.category === 'Special' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Clutch Factor boost boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Clutch Factor\",\r\n\t\tshortDesc: \"Special Attacks are boosted by 1.5x at 1/3 HP or less.\",\r\n\t},\r\n\tstickysurge: {\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Sticky Surge');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Sticky Surge\",\r\n\t\tshortDesc: \"Sticky Hold + Electric Surge.\",\r\n\t},\r\n\tselfsacrifice: {\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'selfsacrifice');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.effectState.hp = source.maxhp / 4;\r\n\t\t\t},\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\tconst damage = this.heal(this.effectState.hp, target, target);\r\n\t\t\t\t\tif (damage) this.add('-heal', target, target.getHealth, '[from] ability: Self Sacrifice', '[of] ' + this.effectState.source);\r\n\t\t\t\t\ttarget.side.removeSlotCondition(target, 'selfsacrifice');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Self Sacrifice\",\r\n\t\tshortDesc: \"When this Pokemon faints, the replacement is healed by 1/4 of this Pokemon's max HP\",\r\n\t},\r\n\tlighthearted: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Lighthearted\",\r\n\t\tshortDesc: \"Prankster + Levitate\",\r\n\t},\r\n\ttigerpit: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.isAdjacent(this.effectState.target) && pokemon.isGrounded()) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif ((source ||= this.effectState.target) && pokemon.isAdjacent(source)\r\n\t\t\t\t\t&& pokemon.isGrounded(!pokemon.knownType)) { // Negate immunity if the type is unknown\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (!target.isGrounded()) {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move && target.isGrounded() && !target.hasType('Ghost')) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Tiger Pit\",\r\n\t\tshortDesc: \"Arena Trap + 1.5x power against grounded, 0.8x Accuracy against airborne.\",\r\n\t},\r\n\t/*\r\n\ttigerpit: {//test\r\n\t\tname: \"Tiger Pit\",\r\n\t\tshortDesc: \"Prevents grounded foes from switching and moves have 1.5x power against grounded foes. 0.8x Accuracy against airborne foes.\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of source.side.foe.active) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Tiger Pit');\r\n\t\t\t\t}\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tif (!pokemon.volatiles['trapped'] && (!pokemon.isGrounded() || pokemon.hasAbility('feelnopain') || !pokemon.hasAbility('magneticwaves') ||\r\n            !pokemon.hasAbility('stickyfloat') || !pokemon.hasAbility('etativel') || !pokemon.hasAbility('lighthearted')\r\n            || !pokemon.hasAbility('leviflame') || !pokemon.hasAbility('levitability') || !pokemon.hasAbility('feelsomepain') || !pokemon.hasAbility('aerialbreak') || !pokemon.hasAbility('floatguise') || !pokemon.hasAbility('clearlyfloating') || !pokemon.hasAbility('hoverboard') || !pokemon.hasAbility('levimetal') || !pokemon.hasAbility('levistatic') || !pokemon.hasAbility('lovelessfloat'))) {\r\n\t\t\t\t\tpokemon.addVolatile('trapped', source, 'trapper');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tif (pokemon === source) return;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tif (!target.volatiles['trapped'] && (!target.isGrounded() || target.hasAbility('feelnopain') || !target.hasAbility('magneticwaves') ||\r\n            !target.hasAbility('stickyfloat') || !target.hasAbility('etativel') || !target.hasAbility('lighthearted')\r\n            || !target.hasAbility('leviflame') || !target.hasAbility('levitability') || !target.hasAbility('feelsomepain') || !target.hasAbility('aerialbreak') || !target.hasAbility('floatguise') || !target.hasAbility('clearlyfloating') || !target.hasAbility('hoverboard') || !target.hasAbility('levimetal') || !target.hasAbility('levistatic') || !target.hasAbility('lovelessfloat'))) {\r\n\t\t\t\t\ttarget.addVolatile('trapped', source, 'trapper');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\ttarget.removeVolatile('trapped');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n*/\r\n\tvengefulshift: {\r\n\t\tonAfterSetStatus(status, target, source, effect) {\r\n\t\t\tif (!source || source === target) return;\r\n\t\t\tif (effect && effect.id === 'toxicspikes') return;\r\n\t\t\tif (status.id === 'slp' || status.id === 'frz') return;\r\n\t\t\tthis.add('-activate', target, 'ability: Vengeful Shift');\r\n\t\t\t// Hack to make status-prevention abilities think Vengeful Shift is a status move\r\n\t\t\t// and show messages when activating against it.\r\n\t\t\tsource.trySetStatus(status, target, {status: status.id, id: 'vengefulshift'} as Effect);\r\n\t\t\ttarget.cureStatus();\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vengeful Shift\",\r\n\t\tshortDesc: \"When this Pokemon is statused by another Pokemon, it will attempt to transfer its status condition to an opposing Pokemon at the end of each turn until it is cured.\",\r\n\t},\r\n\ttoughskin: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Tough Skin\",\r\n\t\tshortDesc: \"Foes making contact with this Pokemon lose 1/8 of their max HP. This Pokemon's contact moves have 1.2x power.\",\r\n\t},\r\n\thydraulicpress: {\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Hydraulic Press\",\r\n\t\tshortDesc: \"Sheer Force + Light Metal.\",\r\n\t},\r\n\tparroting: {\r\n\t\t// implemented in runMove in scripts.js\r\n\t\tname: \"Parroting\",\r\n\t\tshortDesc: \"After another Pokemon uses a status move, this Pokemon uses the same move.\",\r\n\t},\r\n\t/*\r\n\tlifedrain: {\r\n\t\tonPrepareHit(source, target, move, basePower) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.heal(source.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Life Drain boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Life Drain\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power and heal this Pokemon by 12.5%; Immune to poison damage.\",\r\n\t},\r\n*/\r\n\tlifedrain: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Life Drain boost');\r\n\t\t\t\tmove.lifeDrain = true;\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.lifeDrain) this.heal(target.baseMaxhp / 8);\r\n\t\t},\r\n\t\tname: \"Life Drain\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power and heal this Pokemon by 12.5%; Immune to poison damage.\",\r\n\t},\r\n\tmetalhead: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Metalhead', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Metalhead\",\r\n\t\tshortDesc: \"Intimidate + Heavy Metal\",\r\n\t},\r\n\tabsorbant: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Water' || move.type === 'Ground')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Absorbant');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Absorbant\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Water or Ground moves; Water & Ground immunity.\",\r\n\t},\r\n\twaterpressure: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Water Pressure');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.boost({def: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Water Pressure\",\r\n\t\tshortDesc: \"Pressure + Water Compaction\",\r\n\t},\r\n\tmusclemass: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\treturn this.chainModify([2731,4096]);\r\n\t\t},\r\n\t\tname: \"Muscle Mass\",\r\n\t\tshortDesc: \"This Pokemon has 1.5x Attack and 0.667x Speed\",\r\n\t},\r\n\tidiotsavant: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totaldef = 0;\r\n\t\t\tlet totalspd = 0;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\ttotaldef += target.getStat('def', false, true);\r\n\t\t\t\ttotalspd += target.getStat('spd', false, true);\r\n\t\t\t}\r\n\t\t\tif (totaldef) {\r\n\t\t\t\tif (totaldef >= totalspd) this.boost({spa: 1});\r\n\t\t\t} else if (totalspd) {\r\n\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Idiot Savant');\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'confusion') return null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move?.volatileStatus === 'confusion') {\r\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Idiot Savant');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Idiot Savant', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Idiot Savant', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Idiot Savant', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Idiot Savant', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Idiot Savant', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Idiot Savant\",\r\n\t\tshortDesc: \"Own Tempo + Download\",\r\n\t},\r\n\trebootsystem: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Reboot System\",\r\n\t\tshortDesc: \"RKS System + Regenerator\",\r\n\t},\r\n\tgracefulhealing: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.secondaries) this.heal(target.baseMaxhp / 8);\r\n\t\t},\r\n\t\tname: \"Graceful Healing\",\r\n\t\tshortDesc: \"Restores 12.5% max HP when using a move with secondary effects.\",\r\n\t},\r\n\therbivore: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Grass') {\r\n\t\t\t\tif (!this.boost({atk: 2})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Herbivore');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\tthis.boost({atk: 2}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Herbivore\",\r\n\t\tshortDesc: \"This Pokemon's Attack is raised 2 stage if hit by a Grass move; Grass immunity.\",\r\n\t},\r\n\tdiamondcore: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Diamond Core');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Diamond Core');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Diamond Core');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Diamond Core\",\r\n\t\tshortDesc: \"Pressure + Sturdy\",\r\n\t},\r\n\tcombustion: {\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tlet combustion = null;\r\n\t\t\tlet statDrop: BoostName;\r\n\t\t\tfor (statDrop in pokemon.boosts) {\r\n\t\t\t\tif (pokemon.boosts[statDrop] < 0) combustion = true;\r\n\t\t\t}\r\n\t\t\tif (pokemon.activeTurns && !combustion) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Combustion\",\r\n\t\tshortDesc: \"If this Pokemon has no negative stat changes, +1 Speed at the end of the turn.\",\r\n\t},\r\n\tscouttyping: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (target.item) {\r\n\t\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Scout Typing', '[of] ' + pokemon, '[identify]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Scout Typing');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Scout Typing\",\r\n\t\tshortDesc: \"Frisk + Protean\",\r\n\t},\r\n\tgutsguard: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Guts Guard\",\r\n\t\tshortDesc: \"When statused, this Pokemon Attack is boosted 1.5x and it takes 0.75x damage.\",\r\n\t},\r\n\tanesthesia: {\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target, source, effect) {\r\n\t\t\tif (['attract', 'disable', 'encore', 'healblock', 'taunt', 'torment'].includes(status.id)) {\r\n\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Anesthesia', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Anesthesia\",\r\n\t\tshortDesc: \"Aroma Veil + Unaware\",\r\n\t},\r\n\tstabilizer: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Stabilizer boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move, basePower) {\r\n\t\t\tif (move.basePower <= 60) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Stabilizer\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power. +1 Speed when hit by a move with \u226460 BP.\",\r\n\t},\r\n\theadtohead: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.target !== 'self' && (move.recoil || move.hasCrashDamage)) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Head-To-Head');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Head-To-Head\",\r\n\t\tshortDesc: \"This Pokemon is immune to recoil and recoil moves.\",\r\n\t},\r\n\tclearlyfloating: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Clearly Floating\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Clearly Floating\",\r\n\t\tshortDesc: \"Clear Body + Levitate\",\r\n\t},\r\n\tslowmage: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.item) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.item) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Slow Mage\",\r\n\t\tshortDesc: \"If this Pokemon is holding an item, its Attack and Speed are halved.\",\r\n\t},\r\n\tunseenmagic: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) delete move.flags['protect'];\r\n\t\t},\r\n\t\tname: \"Unseen Magic\",\r\n\t\tshortDesc: \"Magic Bounce + Unseen Fist\",\r\n\t},\r\n\tgulprock: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.transformed || target.isSemiInvulnerable()) return;\r\n\t\t\tif (['cramotricitygulping', 'cramotricitygorging'].includes(target.species.id)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\tif (target.species.id === 'cramotricitygulping') {\r\n\t\t\t\t\tthis.boost({def: -1}, source, target, null, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.trySetStatus('par', target, move);\r\n\t\t\t\t}\r\n\t\t\t\ttarget.formeChange('cramotricity', move);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// The Dive part of this mechanic is implemented in Dive's `onTryMove` in moves.ts\r\n\t\tonSourceTryPrimaryHit(target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.id === 'surf' && source.hasAbility('gulprock') &&\r\n\t\t\t\tsource.species.name === 'Cramotricity' && !source.transformed\r\n\t\t\t) {\r\n\t\t\t\tconst forme = source.hp <= source.maxhp / 2 ? 'cramotricitygorging' : 'cramotricitygulping';\r\n\t\t\t\tsource.formeChange(forme, effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 8,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.name === 'Surf' || move.name === 'Dive') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.name === 'Surf' || move.name === 'Dive') {\r\n\t\t\t\tthis.debug('Gulp Rock weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Gulp Rock\",\r\n\t\tshortDesc: \"Gulp Missile + Surf & Dive deal 1.3x and this Pokemon takes 50% damage from Surf and Dive.\",\r\n\t},\r\n\tflyingraijin: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flying Raijin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Electric' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Flying Raijin');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flying Raijin\",\r\n\t\tshortDesc: \"Infiltrator + Lightning Rod\",\r\n\t},\r\n\tzenmode: {\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Darmanitan-Prime' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Darmanitan-Zen\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (pokemon.species.baseSpecies === 'Darmanitan-Prime' && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitanprimezen') pokemon.formeChange('Darmanitan-Prime-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\texoskeleton: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Exoskeleton');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Exoskeleton');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Exoskeleton');\r\n\t\t\tthis.add('-message', `Pingar breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tname: \"Exoskeleton\",\r\n\t\tshortDesc: \"Mold Breaker + Immunity\",\r\n\t},\r\n\tbulletpecks: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet'] || move.name === 'Crunch' || move.name === 'Crush Claw' || move.name === 'Fire Lash' || move.name === 'Grav Apple' || move.name === 'Iron Tail' || move.name === 'Leer' || move.name === 'Liquidation' || move.name === 'Octolock' || move.name === 'Razor Shell' || move.name === 'Rock Smash' || move.name === 'Screech' || move.name === 'Secret Power' || move.name === 'Shadow Bone' || move.name === 'Tail Whip' || move.name === 'Thunderous Kick' || move.name === 'Tickle') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Bulletpecks');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bulletpecks\",\r\n\t\tshortDesc: \"This Pokemon is immune to ballistic moves and moves that lower Defense.\",\r\n\t},\r\n\tfloatguise: {\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.effectType === 'Move' &&\r\n\t\t\t\t['mimikyu', 'mimikyutotem', 'rotokyu'].includes(target.species.id) && !target.transformed\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Float Guise');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, source, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (!['mimikyu', 'rotokyu'].includes(target.species.id) || target.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['authentic'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (!['mimikyu', 'rotokyu'].includes(target.species.id) || target.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['authentic'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (['mimikyu', 'rotokyu'].includes(pokemon.species.id) && this.effectState.busted) {\r\n\t\t\t\tconst speciesid = pokemon.species.id === 'rotokyu' ? 'Rotokyu-Busted' : 'Mimikyu-Busted';\r\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get(speciesid));\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Float Guise\",\r\n\t\tshortDesc: \"Disguise + Levitate\",\r\n\t},\r\n\tragingrapids: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Raging Rapids', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 3 && target.hp + damage > target.maxhp / 3) {\r\n\t\t\t\tthis.boost({atk: -1}, source, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Raging Rapids\",\r\n\t\tshortDesc: \"Lowers the foe's Attack by 1 on switch-in and when this Pokemon falls under 1/3 max HP.\",\r\n\t},\r\n\tultrapresto: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Ultra Presto', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ultra Presto\",\r\n\t\tshortDesc: \"Magician + Beast Boost\",\r\n\t},\r\n\tundying: {\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.boost({spa: 1});\r\n\t\t\t\tthis.heal(target.baseMaxhp / 3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Undying\",\r\n\t\tshortDesc: \"When this Pokemon falls below 50% HP from an attack, it gains +1 SpA and heals 33% of its maximum HP.\",\r\n\t},\r\n\taerialbreak: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Aerial Break');\r\n\t\t\tthis.add('-message', pokemon.name + ` controls the skies!`);\r\n\t\t},\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (move.type === 'Ground' && (defender.isGrounded() === null) && move.category !== 'Status') {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Aerial Break\",\r\n\t\tshortDesc: \"This Pokemon is immune to Ground-type moves and ignores ability-based Ground immunities\",\r\n\t},\r\n\tcharybdis: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa) {\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tname: \"Charybdis\",\r\n\t\tshortDesc: \"This Pokemon's Special Attack is 1.5x.\",\r\n\t},\r\n\tfrozendish: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (source.hasType(move.type)) {\r\n\t\t\t\tthis.heal(source.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.stab = 2;\r\n\t\t},\r\n\t\tname: \"Frozen Dish\",\r\n\t\tshortDesc: \"This Pokemon's STAB bonus is 2x instead of 1.5x. Heals 1/16 of its max HP when using a STAB move.\",\r\n\t},\r\n\tspeedbreak: {\r\n\t\tname: \"Speed Break\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Speed Break');\r\n\t\t\tthis.add('-message', `Changes to the Speed stat are inverted!`);\r\n\t\t},\r\n\t\tonAnyBoost(boost, target, source, effect) {\r\n\t\t\tif (boost.spe) {\r\n      \t\t boost.spe *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"While this Pokemon is active, Speed is lowered when boosted and vice versa for all Pokemon.\",\r\n\t},\r\n\tcreepy: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (!move || !source) return;\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tlet activated = false;\r\n\t\t\t\tfor (const target of this.effectState.target.side.foe.active) {\r\n\t\t\t\t\tif (!target || !target.isAdjacent(this.effectState.target)) continue;\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.target, 'Creepy', 'boost');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((target.volatiles['substitute'] || target.hasType('Dark'))) {\r\n\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.boost({atk: -1}, target, this.effectState.target, null, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Creepy\",\r\n\t\tshortDesc: \"This Pokemon's Status moves have priority raised by 1 and lower the foe's Attack by 1, but Dark types are immune.\",\r\n\t},\r\n\ttoxiclook: {\r\n\t\tname: \"Toxic Look\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.debug('Toxic Look boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Tinted Lens + Poison Point\",\r\n\t},\r\n\tultraimpulse: {\r\n\t\tshortDesc: \"If this Pokemon is statused, its highest stat is 1.5x; ignores burn halving physical damage.\",\r\n\t\tname: \"Ultra Impulse\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'atk') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'def') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spa') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spd') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spe') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdemagnetize: {\r\n\t\tname: \"Demagnetize\",\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (defender.hasType('Steel')) {\r\n\t\t\t\tdefender.addVolatile('demagnetize');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('demagnetize');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('demagnetize');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tlet types = pokemon.baseSpecies.types;\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t\tif (pokemon.getTypes().join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"This Pokemon ignores the opponent's Steel-typing, Substitute, and screens when attacking\",\r\n\t},\r\n\teverywitchway: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Every Witch Way\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tname: \"Every Witch Way\",\r\n\t\tshortDesc: \"Magic Guard + Keen Eye\",\r\n\t},\r\n\tsheerluck: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t\tif (move.critRatio > 1) {\r\n\t\t\t\tmove.willCrit = false;\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Sheer Luck\",\r\n\t\tshortDesc: \"Sheer Force + Moves with an increased critical hit ratio deal 1.3x damage but can't critically hit.\",\r\n\t},\r\n\tbigpower: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tname: \"Big Power\",\r\n\t\tshortDesc: \"This Pokemon's Attack is boosted 1.5x.\",\r\n\t},\r\n\tlevimetal: {\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tname: \"Levimetal\",\r\n\t\tshortDesc: \"Light Metal + Levitate\",\r\n\t},\r\n\twaterbender: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Waterbender boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Waterbender boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Waterbender\",\r\n\t\tshortDesc: \"This Pokemon's Water-type moves deal 1.5x damage.\",\r\n\t},\r\n\thoverboard: {\r\n\t\tonModifySpe(spe) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hoverboard\",\r\n\t\tshortDesc: \"Levitate + Surge Surfer\",\r\n\t},\r\n\tfeverbreaker: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Fever Breaker');\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Fever Breaker');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Fever Breaker');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Fever Breaker\",\r\n\t\tshortDesc: \"Mold Breaker + Water Veil\",\r\n\t},\r\n\tspitefulwishcraft: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Spiteful Wishcraft only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Spiteful Wishcraft');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spiteful Wishcraft\",\r\n\t\tshortDesc: \"If this Pokemon has a stat lowered, it gains +2 Attack and disables the foe's last move\",\r\n\t},\r\n\tgnawrly: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Gnawrly\",\r\n\t\tshortDesc: \"Technician + Strong Jaw, in that order.\",\r\n\t},\r\n\tfungalfocus: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact'] && !source.status && source.runStatusImmunity('powder')) {\r\n\t\t\t\tconst r = this.random(100);\r\n\t\t\t\tif (r < 11) {\r\n\t\t\t\t\tsource.setStatus('slp', target);\r\n\t\t\t\t} else if (r < 21) {\r\n\t\t\t\t\tsource.setStatus('par', target);\r\n\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\tsource.setStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tname: \"Fungal Focus\",\r\n\t\tshortDesc: \"Effect Spore + No Guard\",\r\n\t},\r\n\tlovelessfloat: {\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Loveless Float');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Loveless Float');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Loveless Float\",\r\n\t\tshortDesc: \"Levitate + This Pokemon is immune to being infatuated.\",\r\n\t},\r\n\tphoenicoid: {\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox' || effect.id === 'brn') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 5,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status === 'par') {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Phoenicoid\",\r\n\t\tshortDesc: \"This Pok\u00E9mon is healed 1/8 of its max HP every turn when Burned/Poisoned/Paralyzed. Immune to Poison's and Burn's damage and Burn's Attack Drop.\",\r\n\t},\r\n\tfatfulfloat: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire' || move.type === 'Ground') {\r\n\t\t\t\tthis.debug('Fatful Float weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire' || move.type === 'Ground') {\r\n\t\t\t\tthis.debug('Fatful Float weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fatful Float\",\r\n\t\tshortDesc: \"This Pok\u00E9mon takes 0.5x damage from Fire, Ice, and Ground moves.\",\r\n\t},\r\n\tpercentyield: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Percent Yield neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0 && target.hp && !target.item && this.dex.items.get(target.lastItem).isBerry) {\r\n\t\t\t\ttarget.m.savedBerry = target.lastItem;\r\n\t\t\t\ttarget.lastItem = '';\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp && !pokemon.item && pokemon.m.savedBerry) {\r\n\t\t\t\tpokemon.setItem(pokemon.m.savedBerry);\r\n\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\tdelete pokemon.m.savedBerry;\r\n\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Percent Yield');\r\n\t\t\t}\r\n\t\t},\r\n\t\tisUnbreakable: true,\r\n\t\tname: \"Percent Yield\",\r\n\t\tshortDesc: \"This Pok\u00E9mon takes 0.75x damage from super effective moves and recycles its held berry when hit by one.\",\r\n\t},\r\n\tmotoroverdrive: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spe: 2})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Motor Drive');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Motor Overdrive\",\r\n\t\tshortDesc: \"This Pokemon's Speed is raised 2 stages if hit by an Electric move; Electric immunity.\",\r\n\t},\r\n\tcoldpressor: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Cold Pressor');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('hail')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cold Pressor\",\r\n\t\tshortDesc: \"Slush Rush + Pressure\",\r\n\t},\r\n\tproudpounce: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({atk: length, spa: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Proud Pounce\",\r\n\t\tshortDesc: \"This Pokemon's Atk & Sp. Atk are raised by 1 stage if it attacks and KOes another Pokemon.\",\r\n\t},\r\n\tdeadlydeft: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'par') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Deadly Deft');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'par') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Deadly Deft');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Deadly Deft\",\r\n\t\tshortDesc: \"Corrosion + Limber\",\r\n\t},\r\n\ttoxinrush: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Poison Touch's effect\r\n\t\t\t// if (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\t\t\tif (\r\n\t\t\t\t!target.hasAbility('shielddust') &&\r\n\t\t\t\tthis.checkMoveMakesContact(move, target, source) && \r\n\t\t\t\tthis.randomChance(3, this.field.isWeather('hail') ? 5 : 10) \r\n\t\t\t) {\r\n\t\t\t\ttarget.trySetStatus('psn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxin Rush\",\r\n\t\tshortDesc: \"User's contact moves have a 30% Poison chance, 60% under Hail.\",\r\n\t},\r\n\tliquidarmor: {\r\n\t\tonSourceTryHeal(damage, target, source, effect) {\r\n\t\t\tthis.debug(\"Heal is occurring: \" + target + \" <- \" + source + \" :: \" + effect.id);\r\n\t\t\tconst canOoze = ['drain', 'leechseed', 'strengthsap'];\r\n\t\t\tif (canOoze.includes(effect.id)) {\r\n\t\t\t\tthis.damage(damage);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tname: \"Liquid Armor\",\r\n\t\tshortDesc: \"Liquid Ooze + Shell Armor\",\r\n\t},\r\n\tbombshell: {\r\n\t\t/*\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Minimie' || attacker.transformed) return;\r\n\t\t\tif (this.queue.willMove(defender)) return;\r\n\t\t\tconst targetForme = (!this.queue.willMove(defender) ? 'Minimie' : 'Minimie-Core');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n*/\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Minimie' || attacker.transformed) return;\r\n\t\t\tif (!this.queue.willMove(defender) && defender !== attacker) {\r\n\t\t\t\tif (attacker.species.forme !== 'Core') {\r\n\t\t\t\t\tattacker.formeChange('Minimie-Core');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Bombshell boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Minimie' || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tif (pokemon.species.forme === 'Core') {\r\n\t\t\t\tpokemon.formeChange('Minimie');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (target.species.id !== 'Minimie' || target.transformed) return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Bombshell');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (target.species.id !== 'Minimie' || target.transformed) return;\r\n\t\t\tif (status.id !== 'yawn') return;\r\n\t\t\tthis.add('-immune', target, '[from] ability: Bombshell');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tisUnbreakable: true,\r\n\t\tname: \"Bombshell\",\r\n\t\tshortDesc: \"Analytic effects. Transforms into Core form when moving last or if the opponent switches. Transforms into Meteor at the end of each turn.\",\r\n\t},\r\n\teusocial: {\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', dazzlingHolder, 'ability: Eusocial', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.priority > 0.1) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Eusocial\",\r\n\t\tshortDesc: \"This Pokemon's team is immune to priority moves. 1.5x power on priority moves.\",\r\n\t},\r\n\tterabyte: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Terabyte\",\r\n\t\tshortDesc: \"This Pokemon's biting moves become Electric-type.\",\r\n\t},\r\n\tflamedrive: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spe: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Motor Drive');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flame Drive\",\r\n\t\tshortDesc: \"Flame Body + Motor Drive\",\r\n\t},\r\n\tfruitfulforce: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, pokemon) {\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (item.isBerry) {\r\n\t\t\t\tthis.debug('Fruitful Force boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fruitful Force\",\r\n\t\tshortDesc: \"If the user is holding a berry, the user's Special Attack is 1.5x.\",\r\n\t},\r\n\tbravado: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Bravado');\r\n\t\t\tthis.add('-message', `Herasir breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({atk: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bravado\",\r\n\t\tshortDesc: \"Moxie + Mold Breaker\",\r\n\t},\r\n\tsandmistsurge: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('mistyterrain');\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tname: \"Sandmist Surge\",\r\n\t\tshortDesc: \"Sand Stream + Misty Surge\",\r\n\t},\r\n\tfastmetabolism: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fast Metabolism\",\r\n\t\tshortDesc: \"When this Pokemon has 1/2 or less of its maximum HP, its Speed is doubled.\",\r\n\t},\r\n\tpsychicflow: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tthis.debug('Psychic Flow boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Psychic Flow\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon summons Psychic Terrain. Its Water-type moves deal 1.5x damage in Psychic Terrain.\",\r\n\t},\r\n\tsmokegun: {\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target !== source) return;\r\n\t\t\tif (boost.spa && (boost.spa < 0 || boost.spa > 0)) {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Special Attack\", \"[from] ability: Smoke Gun\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Smoke Gun\",\r\n\t\tshortDesc: \"This Pokemon cannot raise or lower its own Special Attack.\",\r\n\t},\r\n\tstagnantfumes: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Stagnant Fumes');\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon) {\r\n\t\t\t\tif (pokemon === this.activeTarget) {\r\n\t\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Stagnant Fumes\",\r\n\t\tshortDesc: \"While user is active, all stat changes are ignored by all active Pokemon.\",\r\n\t},\r\n\tironwill: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tlet activated = false;\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Iron Will', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Iron Will', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Iron Will', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Iron Will', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Iron Will', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (activated) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Iron Will\",\r\n\t\tshortDesc: \"If the foe makes contact with this Pok\u00E9mon or tries to Intimidate it, they lose 12.5% of their max HP; Intimidate immunity.\",\r\n\t},\r\n\tsweettooth: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Poison Touch's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\t\t\tif (this.checkMoveMakesContact(move, target, source)) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Sweet Tooth');\r\n\t\t\t\t\ttarget.addVolatile('taunt', source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sweet Tooth\",\r\n\t\tshortDesc: \"This Pok\u00E9mon\u2019s contact attacks have a 30% to inflict taunt on the opponent.\",\r\n\t},\r\n\tholdbreaker: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Hold Breaker');\r\n\t\t\tthis.add('-message', ` breaks the hold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Hold Breaker\",\r\n\t\tshortDesc: \"This Pokemon's moves and their effects ignore the abilities of other Pokemon and can't be removed due to another Pokemon's ability.\",\r\n\t},\r\n\timposingadipose: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Imposing Adipose neutralize');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Imposing Adipose\",\r\n\t\tshortDesc: \"This Pok\u00E9mon takes 50% damage from super effective moves.\",\r\n\t},\r\n\tfrozenfist: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Frozen Fist boost');\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\t if (move.flags['punch']) this.heal(target.baseMaxhp / 16);\r\n\t\t},\r\n\t\tname: \"Frozen Fist\",\r\n\t\tshortDesc: \"This Pokemon's punch-based attacks have 1.2x power and heal the user by 1/16th of their max HP.\",\r\n\t},\r\n\tshadowydreams: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Shadowy Dreams');\r\n\t\t\tthis.add('-message', pokemon.name + ` is drowsing!`);\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (target.item) {\r\n\t\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Shadowy Dreams', '[of] ' + pokemon, '[identify]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Shadowy Dreams');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tisUnbreakable: true,\r\n\t\tname: \"Shadowy Dreams\",\r\n\t\tshortDesc: \"Comatose + Frisk\",\r\n\t},\r\n\treguardless: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Reguardless');\r\n\t\t\tthis.add('-message', `Fraxblade breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tname: \"Reguardless\",\r\n\t\tshortDesc: \"Mold Breaker + No Guard\",\r\n\t},\r\n\tenvioussword: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.boost({spa: 1}, pokemon);\r\n\t\t},\r\n\t\tname: \"Envious Sword\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon's Special Attack is raised by 1 stage.\",\r\n\t},\r\n\ticebreaker: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect?.effectType !== 'Move') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (source.species.id === 'eiscudile' && source.hp && !source.transformed && source.side.foe.pokemonLeft) {\r\n\t\t\t\tthis.add('-activate', source, 'ability: Icebreaker');\r\n\t\t\t\tsource.formeChange('Eiscudile-Noice', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Icebreaker\",\r\n\t\tshortDesc: \"When this Pokemon KOes a Pokemon with an attack, it transforms into Noice form.\",\r\n\t},\r\n\tflameforce: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flame Force\",\r\n\t\tshortDesc: \"This Pokemon's moves deal 1.3x damage against burned opponents.\",\r\n\t},\r\n\thydroelectric: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water' && !move.ignoreAbility) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Hydroelectric');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hydroelectric\",\r\n\t\tshortDesc: \"Static + Water Absorb\",\r\n\t},\r\n\twaterbreak: {\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns % 2 === 0) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Water Break');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Water Break\",\r\n\t\tshortDesc: \"This Pokemon heals its status every other turn.\",\r\n\t},\r\n\tcatastrophic: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Catastrophic boost');\r\n\t\t\t\tmove.catastrophic = true;\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/*\r\n\t\tonAfterMove(basePower, source, target, move) {\r\n\t\t\tif (!move || !source) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tlet activated = false;\r\n\t\t\t\tfor (const target of this.effectState.target.side.foe.active) {\r\n\t\t\t\t\tif (!target || !target.isAdjacent(this.effectState.target)) continue;\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.target, 'Catastrophic', 'boost');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((target.volatiles['substitute'] || target.hasType('Dark'))) {\r\n\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.boost({atk: -1}, target, this.effectState.target, null, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !move.basePower > 60 || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 100,\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tatk: -1,\r\n\t\t\t\t},\r\n\t\t\t\tability: this.dex.abilities.get('catastrophic'),\r\n\t\t\t});\r\n\t\t},\r\n\t*/\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t   if (move.catastrophic) this.boost({atk: -1}, source);\r\n\t\t},\r\n\t\tname: \"Catastrophic\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power and lower the target's Attack by 1 stage.\",\r\n\t},\r\n\tbattletrance: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tsource.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Battle Trance\",\r\n\t\tshortDesc: \"Upon attacking and KOing a foe, this Pokemon's status is healed.\",\r\n\t},\r\n\trefocus: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') return null;\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Refocus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Refocus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Refocus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Refocus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Refocus', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Refocus\",\r\n\t\tshortDesc: \"Regenerator + Inner Focus\",\r\n\t},\r\n\t/*\r\n\tbeastlytwist: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statName === 'atk') {\r\n      \t\t boost.atk *= -1;\r\n\t\t\t}\r\n\t\tif (statName === 'def') {\r\n      \t\t boost.def *= -1;\r\n\t\t\t}\r\n\t\t\tif (statName === 'spa') {\r\n\t     \t\t boost.spa *= -1;\r\n\t\t\t}\r\n\t\t\tif (statName === 'spd') {\r\n     \t\t boost.spd *= -1;\r\n\t\t\t}\r\n\t\t\tif (statName === 'spe') {\r\n      \t\t boost.spe *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Beastly Twist\",\r\n\t\tshortDesc: \"(Mostly Non-Functional Placeholder) If this Pokemon's highest stat is raised, it is lowered instead, and vice versa.\",\r\n\t},\r\n*/\r\n\tbeastlytwist: {\r\n\t\tonChangeBoost(boost, target, source, effect) {\r\n\t\t\tconst bestStat = (this.effectState.bestStat ||= target.getBestStat(true,true));\r\n\t\t\tif ((effect && effect.id === 'zpower') || !boost[bestStat]) return;\r\n\t\t\tboost[bestStat] *= -1;\r\n\t\t},\r\n\t\tshortDesc: \"Inverts stat changes to highest stat.\",\r\n\t\tname: \"Beastly Twist\",\r\n\t},\r\n\twaterlogged: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Waterlogged');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\t// Air Lock does not activate when Skill Swapped or when Neutralizing Gas leaves the field\r\n\t\t\tpokemon.abilityState.ending = false; // Clear the ending flag\r\n\t\t\tif (this.effectState.switchingIn) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Waterlogged');\r\n\t\t\t\tthis.effectState.switchingIn = false;\r\n\t\t\t}\r\n\t\t\tthis.eachEvent('WeatherChange', this.effect);\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityState.ending = true;\r\n\t\t\tthis.eachEvent('WeatherChange', this.effect);\r\n\t\t},\r\n\t\tsuppressWeather: true,\r\n\t\tname: \"Waterlogged\",\r\n\t\tshortDesc: \"Water Absorb + Air Lock\",\r\n\t},\r\n\tmegawatt: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Megawatt');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Megawatt\",\r\n\t\tshortDesc: \"Speed Boost + Pressure\",\r\n\t},\r\n\trelentless: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in defender.boosts) {\r\n\t\t\t\tif (defender.boosts[i] < 0) {\r\n\t\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Relentless\",\r\n\t\tshortDesc: \"This Pokemon\u2019s attacks have 1.3x power against opponents with lowered stats.\",\r\n\t},\r\n\trainparade: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t},\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'raindance' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (this.field.weatherDataState.source !== pokemon) return;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('rainparade')) {\r\n\t\t\t\t\tthis.field.weatherDataState.source = target;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearWeather();\r\n\t\t},\r\n\t\tname: \"Rain Parade\",\r\n\t\tshortDesc: \"While this Pok\u00E9mon is active, Rain is active.\",\r\n\t},\r\n\tvigilance: {\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.boost({def: 1});\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Vigilance', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Vigilance', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Vigilance', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Vigilance', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Vigilance', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vigilance');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Vigilance');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vigilance');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ignoreAbility) return;\r\n\t\t\tif (move.id === 'attract' || move.id === 'captivate' || move.id === 'taunt') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Vigilance');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vigilance\",\r\n\t\tshortDesc: \"Stamina + Oblivious\",\r\n\t},\r\n\tfloodgates: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Floodgates');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 4);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Floodgates\",\r\n\t\tshortDesc: \"Heals 25% of the user's max HP upon switching out or getting hit by a Water move; Water immunity.\",\r\n\t},\r\n\tmagicarmour: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\t// Don't bounce self stat changes, or boosts that have already bounced\r\n\t\t\tif (target === source || !boost || effect.id === 'mirrorarmor' || effect.id === 'magicarmour') return;\r\n\t\t\tlet b: BoostName;\r\n\t\t\tfor (b in boost) {\r\n\t\t\t\tif (boost[b]! < 0) {\r\n\t\t\t\t\tif (target.boosts[b] === -6) continue;\r\n\t\t\t\t\tconst negativeBoost: SparseBoostsTable = {};\r\n\t\t\t\t\tnegativeBoost[b] = boost[b];\r\n\t\t\t\t\tdelete boost[b];\r\n\t\t\t\t\tthis.add('-ability', target, 'Magic Armour');\r\n\t\t\t\t\tthis.boost(negativeBoost, source, target, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magic Armour\",\r\n\t\tshortDesc: \"Magic Bounce + Mirror Armor.\",\r\n\t},\r\n\tdrakonblood: {\r\n\t\tshortDesc: \"Dragon moves used restore user's HP by 50% of the damage dealt.\",\r\n\t\tonAfterMoveSecondarySelfPriority: -1,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.type === 'Dragon' && move.category !== 'Status') {\r\n\t\t\t\tthis.heal(pokemon.lastDamage / 2, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Drakon Blood\",\r\n\t},\r\n\tultrahaircut: {\r\n\t\tshortDesc: \"Pok\u00E9mon making contact with this Pok\u00E9mon have their highest stat lowered by 1 stage.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\r\n\t\t\t\tthis.add('-ability', target, 'Ultra Haircut');\r\n\t\t\t\tthis.boost({[source.getBestStat(true, true)]: -1}, source, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ultra Haircut\",\r\n\t},\r\n\tbarbedarmour: {\r\n\t\tshortDesc: \"Iron Barbs + Battle Armor\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tname: \"Barbed Armour\",\r\n\t},\r\n\ttechnocrat: {\r\n\t  shortDesc: \"Technician + Super Luck\",\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technocrat boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t  name: \"Technocrat\",\r\n\t},\r\n\treload: {\r\n\t  shortDesc: \"33% chance to have its status cured and negative stats reset at the end of each turn.\",\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp && this.randomChance(1, 3)) {\r\n\t\t\t\tthis.debug('reload');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Reload');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\tlet i: BoostName;\r\n\t\t\t\tfor (i in pokemon.boosts) {\r\n\t\t\t\t\tif (pokemon.boosts[i] < 0) {\r\n\t\t\t\t\t\tboosts[i] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.setBoost(boosts);\r\n\t\t\t\tthis.add('-clearnegativeboost', pokemon, '[silent]');\r\n\t\t\t\tthis.add('-message', pokemon.name + \"'s negative stat changes were removed!\");\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Reload\",\r\n\t},\r\n\theatweight: {\r\n\t  shortDesc: \"Blaze + Heavy Metal\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Heat Weight boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Heat Weight boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t  name: \"Heat Weight\",\r\n\t},\r\n\thairlotion: {\r\n\t  shortDesc: \"Regenerator + Tangling Hair\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.add('-ability', target, 'Hair Lotion');\r\n\t\t\t\tthis.boost({spe: -1}, source, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t  name: \"Hair Lotion\",\r\n\t},\r\n\tironmaiden: {\r\n\t  shortDesc: \"Iron Barbs + Sticky Hold\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Iron Maiden');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Iron Maiden\",\r\n\t},\r\n\tmetamorphic: {\r\n\t  shortDesc: \"Stance Change + Sturdy\",\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Aegix' || attacker.transformed) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;\r\n\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegix' : 'Aegix-Blade');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Sturdy');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Metamorphic');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t  flags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t  name: \"Metamorphic\",\r\n\t},\r\n\tgalingsands: {\r\n\t  shortDesc: \"In Sandstorm, this Pokemon's Ground/Steel/Rock type moves have +1 priority.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif ((move?.type === 'Ground' || move?.type === 'Steel' || move?.type === 'Rock') && this.field.isWeather('sandstorm')) return priority + 1;\r\n\t\t},\r\n\t  name: \"Galing Sands\",\r\n\t},\r\n\texorcist: {\r\n\t  shortDesc: \"Screen Cleaner + Cursed Body\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['reflect', 'lightscreen', 'auroraveil']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Exorcist');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Exorcist');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.foe.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isFutureMove) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Exorcist\",\r\n\t},\r\n\tpeerpressure: {\r\n\t  shortDesc: \"When this Pokemon is targeted by a move, it takes 3/4th damage from it and that move loses 2 PP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Peer Pressure');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tthis.debug('Peer Pressure neutralize');\r\n\t\t\treturn this.chainModify(0.75);\r\n\t\t},\r\n\t  name: \"Peer Pressure\",\r\n\t},\r\n\ttestcram: {\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tname: \"Test Cram\",\r\n\t\tshortDesc: \"Levitate + Super Luck + Immune to critical hits\",\r\n\t},\r\n\tslowandsteady: {\r\n\t  shortDesc: \"If this Pokemon moves last, it takes 3/4 damage from all attacks.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Slow and Steady neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Slow and Steady\",\r\n\t},\r\n\tstresseating: {\r\n\t  shortDesc: \"On-switch, this Pokemon eats its berry.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (item.isBerry && pokemon.hp) {\r\n\t\t\t\tpokemon.eatItem(true);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Stress Eating\",\r\n\t},\r\n\tmephistospact: {\r\n\t  shortDesc: \"After this Pokemon lands a contact move, a target\u2019s ability is swapped with this one.\",\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tconst additionalBannedAbilities = ['noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion', 'pillage', 'magicmissile', 'ecopy', 'lemegeton', 'modeshift', 'rebootsystem', 'concussion', 'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode'];\r\n\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability) ||\r\n\t\t\t\tsource.volatiles['dynamax']\r\n\t\t\t) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tconst targetAbility = target.setAbility('mephistospact', target);\r\n\t\t\t\tif (!targetAbility) return;\r\n\t\t\t\tif (source.side === target.side) {\r\n\t\t\t\t\tthis.add('-activate', source, 'Skill Swap', '', '', '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Mephisto\\'s Pact', this.dex.abilities.get(targetAbility).name, 'Mephisto\\'s Pact', '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t\tsource.setAbility(targetAbility);\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Mephisto's Pact\",\r\n\t},\r\n\trealitysmasher: {\r\n\t  shortDesc: \"Mold Breaker + Defiant\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Reality Smasher');\r\n\t\t\tthis.add('-message', `Drudlinks breaks reality!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Reality Smasher only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Reality Smasher');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Reality Smasher\",\r\n\t},\r\n\ttoxinreplica: {\r\n\t  shortDesc: \"(Non-functional placeholder) If another Pokemon uses a move with a chance of poisoning, this Pokemon uses the same move.\",\r\n\t  name: \"Toxin Replica\",\r\n\t},\r\n\tfloatingreach: {\r\n\t\tshortDesc: \"Long Reach + Levitate\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['contact'];\r\n\t\t},\r\n\t\tname: \"Floating Reach\",\r\n\t},\r\n\r\n\t// LC Only Abilities\r\n\t\"aurevoir\": { // this one looks like EXACTLY the character limit\r\n\t\tshortDesc: \"Switches out when it reaches 1/2 or less of its max HP and restores 1/3 of its max HP.\",\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.effectState.exiting = true;\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: Au Revoir');\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (this.effectState.exiting === true) {\r\n\t\t\t\tthis.effectState.exiting = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"aurevoir\",\r\n\t\tname: \"Au Revoir\",\r\n\t},\r\n  \t\"clearcleaner\": { // Functional!\r\n\t\tshortDesc: \"On switch-in, Screens end for both sides. Other Pokemon cannot lower its stat stages.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['reflect', 'lightscreen', 'auroraveil']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Clear Cleaner');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Clear Cleaner');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.foe.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (boost[i] < 0) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(/** @type {ActiveMove} */(effect)).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Clear Cleaner\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"clearcleaner\",\r\n\t\tname: \"Clear Cleaner\",\r\n\t},\r\n\t\"unamused\": { // Functional!\r\n\t\tshortDesc: \"Ignores stat changes. Summons Sandstorm when taking or dealing damage.\",\r\n\t\tid: \"unamused\",\r\n\t\tname: \"Unamused\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon) {\r\n\t\t\t\tif (pokemon === this.activeTarget) {\r\n\t\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status' && !this.field.isWeather('sandstorm')) {\r\n\t\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\"unbullet\": { // Functional!\r\n\t\tshortDesc: \"Speed doubles if it uses an item; immunity to ballistic moves.\",\r\n\t\tid: \"unbullet\",\r\n\t\tname: \"Unbullet\",\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon !== this.effectState.target) return;\r\n\t\t\tpokemon.addVolatile('unburden');\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tpokemon.addVolatile('unburden');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('unburden');\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Unbullet');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\"nocturnalflash\": {\r\n\t\tshortDesc: \"Attacks have 1.3x power and a 30% chance to Poison if it moves last.\",\r\n\t\tid: \"nocturnalflash\",\r\n\t\tname: \"Nocturnal Flash\",\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Nocturnal Flash boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!move || move.target === 'self') return;\r\n\t\t\tif (!boosted) return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'psn',\r\n\t\t\t\tability: this.dex.abilities.get('nocturnalflash'),\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t\"fatalend\": {\r\n\t\tshortDesc: \"Punching moves 1.5x.\",\r\n\t\tid: \"fatalend\",\r\n\t\tname: \"Fatal End\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Fatal End boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\"faustianpact\": {\r\n\t\tshortDesc: \"Swaps abilities with target before landing a contact move.\",\r\n\t\tid: \"faustianpact\",\r\n\t\tname: \"Faustian Pact\",\r\n\t\t// Effect coded directly in scripts.ts.\r\n\t\t// It's hitchhiking on Spectral Thief's \"hitStepStealBoosts\" effect,\r\n\t\t// since I don't think I can add new scripts *specifically to the battle step order*\r\n\t\t// and Spectral Thief has basically the same place in the hitstep, so it probably is fine there.\r\n\t},\r\n\t\"abysmalsurge\": { // Seems functional\r\n\t\tshortDesc: \"Fire attacks have 45% brn chance; other attacks have 35% brn chance.\",\r\n\t\tid: \"abysmalsurge\",\r\n\t\tname: \"Abysmal Surge\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hasAbility('shielddust') && this.randomChance(move.type === 'Fire' ? 9 : 7, 20)) {\r\n\t\t\t\ttarget.trySetStatus('brn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tunusual: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (source.hasType(move.type)) {\r\n\t\t\t\tthis.debug('Unusual weaken');\r\n\t\t\t\treturn this.chainModify(0.67);\r\n\t\t\t}\r\n\t\t\tif (source.hasType(move.type) && (source.hasAbility('versatility') || source.hasAbility('levitability') || source.hasAbility('workability'))) {\r\n\t\t\t\tthis.debug('Unusual weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t\tif (move.type === 'Steel' && source.hasAbility('workability')) {\r\n\t\t\t\tthis.debug('Unusual weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Unusual\",\r\n\t\tshortDesc: \"The opponent's STAB bonus is ignored when targeting this Pokemon.\",\r\n\t},\r\n\ttoxincoat: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tconst r = this.random(100);\r\n\t\t\t\tif (r < 15) {\r\n\t\t\t\t\tsource.setStatus('par', target);\r\n\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\tsource.setStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxin Coat\",\r\n\t\tshortDesc: \"30% chance of poison or paralysis on others making contact with this Pokemon.\",\r\n\t},\r\n\twetfilling: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status || ['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wet Filling\",\r\n\t\tshortDesc: \"1.5x when statused or in the rain; Ignores burn Attack drop.\",\r\n\t},\r\n\tnoproprioception: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: No Proprioception', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: No Proprioception', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: No Proprioception', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: No Proprioception', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: No Proprioception', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: No Proprioception');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: No Proprioception');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: No Proprioception');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.id === 'attract' || move.id === 'captivate' || move.id === 'taunt') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: No Proprioception');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"No Proprioception\",\r\n\t\tshortDesc: \"Sheer Force + Oblivious\",\r\n\t},\r\n\troughtime: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Rough Time');\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'confusion') return null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move?.volatileStatus === 'confusion') {\r\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'catastrophic') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rough Time\",\r\n\t\tshortDesc: \"Tough Claws + Own Tempo\",\r\n\t},\r\n\tbigeyes: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Big Eyes\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Big Eyes\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tname: \"Big Eyes\",\r\n\t\tshortDesc: \"Keen Eye + Big Pecks\",\r\n\t},\r\n\tsoundsensitive: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (['allAdjacent', 'allAdjacentFoes', 'all'].includes(move.target)) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && ['intimidate', 'debilitate', 'sinkorswim', 'scarilyadorable', 'peckingorder'].includes(effect.id)) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sound Sensitive\",\r\n\t\tshortDesc: \"+1 Speed when hit by a spread move or Intimidated\",\r\n\t},\r\n\tfeelsomepain: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Feel Some Pain');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Feel Some Pain');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Feel Some Pain\",\r\n\t\tshortDesc: \"Immunity + Levitate\",\r\n\t},\r\n\tversatility: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tmove.stab = 2;\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Versatility\",\r\n\t\tshortDesc: \"Sheer Force + Adaptability\",\r\n\t},\r\n\tthickskull: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Thick Skull\",\r\n\t\tshortDesc: \"Sheer Force + Rock Head\",\r\n\t},\r\n\tfreehealthcare: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\tthis.debug('freehealthcare');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Free Healthcare');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Free Healthcare\",\r\n\t\tshortDesc: \"This Pokemon's status is cured at the end of every turn.\",\r\n\t},\r\n\tairheaded: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Airheaded');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.type === 'Flying' && pokemon.hp === pokemon.maxhp) return priority + 1;\r\n\t\t},\r\n\t\tname: \"Airheaded\",\r\n\t\tshortDesc: \"Anticipation + Gale Wings\",\r\n\t},\r\n\tinsidejob: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'catastrophic') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Inside Job');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Inside Job');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.id === 'attract' || move.id === 'captivate' || move.id === 'taunt') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Inside Job');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tname: \"Inside Job\",\r\n\t\tshortDesc: \"Oblivious + Infiltrator\",\r\n\t},\r\n\tsandcastles: {\r\n\t\tonStart(pokemon, source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Sandcastles');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sandcastles\",\r\n\t\tshortDesc: \"Summons sand on switch-in and when shuddering.\",\r\n\t},\r\n\tresilientfat: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Resilient Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Resilient Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Resilient Fat');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Resilient Fat');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Resilient Fat\",\r\n\t\tshortDesc: \"Thick Fat + Sturdy\",\r\n\t},\r\n\tnumskull: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Numskull\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Numskull\",\r\n\t\tshortDesc: \"Big Pecks + Rock Head\",\r\n\t},\r\n\tboulderfists: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Boulder Fists boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.boost({def: -1, spe: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Boulder Fists\",\r\n\t\tshortDesc: \"This Pokemon's punching moves have 1.2x and give it -1 Def & +2 Spe.\",\r\n\t},\r\n\tcherrybomb: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Cherry Bomb');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Cherry Bomb');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Cherry Bomb');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cherry Bomb\",\r\n\t\tshortDesc: \"Bulletproof + Leaf Guard\",\r\n\t},\r\n\trumenramming: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 5,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rumen Ramming\",\r\n\t\tshortDesc: \"1.5x Attack and Defense when statused; Ignores Attack burn drop\",\r\n\t},\r\n\tplaincool: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\tthis.add('-heal', target, target.getHealth, '[from] ability: Plain Cool');\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Plain Cool\",\r\n\t\tshortDesc: \"This Pokemon's stat changes are doubled. Heals 1/16 of its HP when a stat is changed.\",\r\n\t},\r\n\tcursedduck: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle' && this.randomChance(3, 10)) {\r\n\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreImmunity ||= {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Cursed Duck', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Cursed Duck', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Cursed Duck', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Cursed Duck', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Cursed Duck', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cursed Duck\",\r\n\t\tshortDesc: \"Scrappy + Cursed Body.\",\r\n\t},\r\n\tswiftmetal: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t\tname: \"Swift Metal\",\r\n\t\tshortDesc: \"Swift Swim + Heavy Metal\",\r\n\t},\r\n\tpoisoncontrol: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Poison Control boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Poison Control');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Poison Control');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Poison Control\",\r\n\t\tshortDesc: \"Technician + Immunity\",\r\n\t},\r\n\talluminiumbody: {\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Alluminium Body\",\r\n\t\tshortDesc: \"Light Metal + Hustle\",\r\n\t},\r\n\tswarmrush: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Swarm Rush\",\r\n\t\tshortDesc: \"Swarm + Sand Rush\",\r\n\t},\r\n\tcourageous: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Courageous\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Courageous\",\r\n\t\tshortDesc: \"Big Pecks + Guts\",\r\n\t},\r\n\tsuperhustle: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t\tname: \"Super Hustle\",\r\n\t\tshortDesc: \"Hustle + Super Luck\",\r\n\t},\r\n\tlevistatic: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact'] && this.randomChance(3, 10)) {\r\n\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Levistatic\",\r\n\t\tshortDesc: \"Levitate + Static\",\r\n\t},\r\n\tpolarattraction: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.status === 'par' && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.status === 'par') {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Polar Attraction\",\r\n\t\tshortDesc: \"Traps paralyzed opponents.\",\r\n\t},\r\n\tflawedjaw: {\r\n\t\tonTryMove(pokemon, target, move) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flawed Jaw\",\r\n\t\tshortDesc: \"This pok\u00E9mon cannot use Biting moves.\",\r\n\t},\r\n\tsubvergent: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Subvergent only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Subvergent');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t\tconst stats: BoostName[] = [];\r\n\t\t\t\tconst boost: SparseBoostsTable = {};\r\n\t\t\t\tlet statPlus: BoostName;\r\n\t\t\t\tfor (statPlus in target.boosts) {\r\n\t\t\t\t\tif (statPlus === 'accuracy' || statPlus === 'evasion') continue;\r\n\t\t\t\t\tif (target.boosts[statPlus] < 6) {\r\n\t\t\t\t\t\tstats.push(statPlus);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst randomStat: BoostName | undefined = stats.length ? this.sample(stats) : undefined;\r\n\t\t\t\tif (randomStat) boost[randomStat] = (randomStat === 'atk' ? 4 : 2);\r\n\t\t\t\tthis.boost(boost);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Subvergent\",\r\n\t\tshortDesc: \"Raises Atk and a random (non Acc/Eva) stat by 2 when its stats are lowered by an opponent.\",\r\n\t},\r\n\tstinkguard: {\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category !== \"Status\") {\r\n\t\t\t\tthis.debug('Adding Stench flinch');\r\n\t\t\t\tmove.secondaries ||= [];\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.volatileStatus === 'flinch') return;\r\n\t\t\t\t}\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tname: \"Stink Guard\",\r\n\t\tshortDesc: \"No Guard + Stench\",\r\n\t},\r\n\tvitalbody: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'slp') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vital Body');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'slp') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vital Body');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Vital Body\",\r\n\t\tshortDesc: \"Flame Body + Vital Spirit\",\r\n\t},\r\n\tshellbreaker: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Shell Breaker');\r\n\t\t\tthis.add('-message', pokemon.name + ` breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tname: \"Shell Breaker\",\r\n\t\tshortDesc: \"Shell Armor + Mold Breaker\",\r\n\t},\r\n\tapplearmor: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Apple Armor');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Apple Armor\",\r\n\t\tshortDesc: \"This Pokemon is immune to status conditions.\",\r\n\t},\r\n\twinterhoard: {\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.item) return;\r\n\t\t\tconst pickupTargets = [];\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.lastItem && target.usedItemThisTurn && pokemon.isAdjacent(target)) {\r\n\t\t\t\t\tpickupTargets.push(target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!pickupTargets.length) return;\r\n\t\t\tconst randomTarget = this.sample(pickupTargets);\r\n\t\t\tconst item = randomTarget.lastItem;\r\n\t\t\trandomTarget.lastItem = '';\r\n\t\t\tthis.add('-item', pokemon, this.dex.items.get(item), '[from] ability: Winter Hoard');\r\n\t\t\tpokemon.setItem(item);\r\n\t\t},\r\n\t\tname: \"Winter Hoard\",\r\n\t\tshortDesc: \"Heatproof + Pickup\",\r\n\t},\r\n\twetfood: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Wet Food boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Wet Food boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Wet Food', pokemon.side.foe);\r\n\t\t},\r\n\t\tonFoeTryEatItem: false,\r\n\t\tname: \"Wet Food\",\r\n\t\tshortDesc: \"Torrent + Unnerve\",\r\n\t},\r\n\tstoneage: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Stone Age boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Stone Age\",\r\n\t\tshortDesc: \"Rock Head + Technician\",\r\n\t},\r\n\thydroforce: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t  onAfterMove(target, source, move) {\r\n\t\t   if (move.hasSheerForce) source.cureStatus();\r\n\t\t},\r\n\t\tname: \"Hydroforce\",\r\n\t\tshortDesc: \"Moves with secondary effects have 1.3x power and heal this Pokemon's status.\",\r\n\t},\r\n\thumidatmosphere: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status && ['sunnyday', 'desolateland', 'raindance', 'primordialsea', 'hail', 'sandstorm', 'deltastream'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('humidatmosphere');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Humid Atmosphere');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Humid Atmosphere\",\r\n\t\tshortDesc: \"At the end of the turn, if any weather is active, this Pok\u00E9mon has its status condition healed.\",\r\n\t},\r\n\twimparmour: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Anticipation');\r\n\t\t\t\t\t\tthis.boost({spe: 2, def: -1}, pokemon);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wimp Armour\",\r\n\t\tshortDesc: \"On switch in, shrudders and gains -1 Def +2 Speed if foe has any Super-Effective or OHKO moves.\",\r\n\t},\r\n\tspiritascent: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['reflect', 'lightscreen', 'auroraveil']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Spirit Ascent');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Spirit Ascent');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.foe.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spirit Ascent\",\r\n\t\tshortDesc: \"Screen Cleaner + Levitate\",\r\n\t},\r\n\tghoulaway: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Ghoul Away neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ghoul Away\",\r\n\t\tshortDesc: \"Filter + Levitate\",\r\n\t},\r\n\tdizzyvenom: {\r\n\t  shortDesc: \"30% chance a Pokemon making contact with this Pokemon will be poisoned or confused. Immune to Confusion and Intimidate.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t\tsource.addVolatile('confusion', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Dizzy Venom');\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'confusion') return null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move?.volatileStatus === 'confusion') {\r\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Dizzy Venom');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tswitch (effect.name) {\r\n\t\t\t\tcase 'Scarily Adorable':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Dizzy Venom', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'Intimidate':\r\n\t\t\t\tcase 'Metalhead':\r\n\t\t\t\tcase 'Creepy':\r\n\t\t\t\tcase 'Catastrophic':\r\n\t\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Dizzy Venom', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pecking Order':\r\n\t\t\t\t\tif (boost.def) {\r\n\t\t\t\t\t\tdelete boost.def;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Defense', '[from] ability: Dizzy Venom', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Debilitate':\r\n\t\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Special Attack', '[from] ability: Dizzy Venom', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Sink or Swim':\r\n\t\t\t\t\tif (boost.spe) {\r\n\t\t\t\t\t\tdelete boost.spe;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Dizzy Venom', '[of] ' + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Dizzy Venom\",\r\n\t},\r\n\tlaststand: {\r\n\t  shortDesc: \"This Pokemon's attacks do not make contact with the target and, at 1/3 HP or less, deal 1.5x damage.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tmove.contactnt = true;\r\n\t\t\t\tdelete move.flags['contact'];\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.contactnt && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Last Stand boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.contactnt && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Last Stand boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t  name: \"Last Stand\",\r\n\t},\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": ["pokemon", "effect", "length", "target", "boost"]
}
