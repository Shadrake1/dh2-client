{
  "version": 3,
  "sources": ["../../../../data/mods/gen2crystalseviiislands/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: MoveData} = {\r\n\tswarmattack: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 10 + (move.hit * 10);\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Swarm Attack\",\r\n\t\tshortDesc: \"Hits 3 times. Power rises per hit.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, punch: 1},\r\n\t\tmultihit: 3,\r\n\t\tmultiaccuracy: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Attack Order\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t},\r\n\tblackhole: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 200,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Damages all Pokemon in 2 turns.\",\r\n\t\tname: \"Black Hole\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {authentic: 1},\r\n\t\twillCrit: false,\r\n\t\tisFutureMove: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Black hole Eclipse\", source);\r\n\t\t\tthis.add('-message', `${source.name} summoned a Black Hole!`);\r\n\t\t},\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tif (!source.side.addSlotCondition(source, 'futuremove')) return false;\r\n\t\t\tconst moveData = {\r\n\t\t\t\tname: \"Black Hole\",\r\n\t\t\t\tbasePower: 200,\r\n\t\t\t\tcategory: \"Special\",\r\n\t\t\t\tflags: {},\r\n\t\t\t\twillCrit: false,\r\n\t\t\t\ttype: '???',\r\n\t\t\t\tisFutureMove: true,\r\n\t\t\t} as unknown as ActiveMove;\r\n\t\t\tconst damage = this.getDamage(source, target, moveData, true);\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tObject.assign(pokemon.side.slotConditions[pokemon.position]['futuremove'], {\r\n\t\t\t\t\tduration: 3,\r\n\t\t\t\t\tmove: 'blackhole',\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\tmoveData: {\r\n\t\t\t\t\t\tid: 'blackhole',\r\n\t\t\t\t\t\tname: \"Black Hole\",\r\n\t\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\t\tbasePower: 0,\r\n\t\t\t\t\t\tdamage: damage,\r\n\t\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\t\tflags: {},\r\n\t\t\t\t\t\ttarget: \"normal\",\r\n\t\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\t\ttype: '???',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.add('-start', source.side, 'Black Hole');\r\n\t\t\tthis.add('-start', target.side, 'Black Hole');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Cosmic\",\r\n\t},\r\n\tparry: { // this move probably won't work correctly in double battles. Do not port blindly!\r\n\t\tnum: -3,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Reduces damage of incoming attacks. Uses another known move.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 1,\r\n\t\tflags: {contact: 1, protect: 1},\r\n\t\tvolatileStatus: 'parry',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\tif (pokemon.volatiles['substitute']) return false;\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t\tpokemon.addVolatile('parry');\r\n\t\t\tthis.add('-message', `${pokemon.name} is attempting to Parry!`);\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Harden\");\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singleturn', pokemon, 'move: Parry');\r\n\t\t\t},\r\n\t\t   \tonDamagePriority: -11,\r\n\t\t   \tonFoeAfterMoveSelf(target, source, attack) {\r\n\t\t\t\tif (target === source) return;\r\n\t\t\t\tif (attack.category === 'Status') return;\r\n\t\t\t\tif (target.lastDamage === 0) return;\r\n\r\n\t\t\t\tthis.add('-message', `${source.name} parried the attack!`);\r\n\t\t\t\tthis.add('-anim', target, \"Mimic\", source);\r\n\r\n\t\t\t\tconst NoParry = ['assist', 'beakblast', 'belch', 'bide', 'celebrate', 'chatter', 'copycat', 'dynamaxcannon', 'focuspunch', 'mefirst', 'metronome', 'mimic', 'mirrormove', 'naturepower', 'shelltrap', 'sketch', 'uproar', 'sketch', 'parry', 'protect', 'detect', 'endure'];\r\n\t\t\t\tconst moves = [];\r\n\t\t\t\tfor (const moveSlot of source.moveSlots) {\r\n\t\t\t\t\tconst move = moveSlot.id;\r\n\t\t\t\t\tif (move && !NoParry.includes(move) && !this.dex.moves.get(move).flags['charge']) {\r\n\t\t\t\t\t\tmoves.push(move);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet randomMove = '';\r\n\t\t\t\tif (moves.length) randomMove = this.sample(moves);\r\n\t\t\t\tif (!randomMove) return false;\r\n\t\t\t\tthis.useMove(randomMove, source);\r\n\t\t\t\tif (randomMove == 'sleeptalk') {\r\n\t\t\t\t\tsource.deductPP(randomMove, 2);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst ppDeducted = source.deductPP(randomMove, 1);\r\n\t\t\t\t\tif (!ppDeducted) return false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n       \t}, //\r\n\t\tname: \"Parry\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tsacredcandle: {\r\n\t\t  num: -4,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\t  name: \"Sacred Candle\",\r\n\t\t  pp: 10,\r\n\t\t  priority: 0,\r\n\t  \t  flags: {authentic: 1},\r\n\t\t  sideCondition: 'sacredcandle',\r\n\t\t  shortDesc: \"For 5 turns, grounded foes are burned after they move. Max 1 layer.\",\r\n\t\t  onPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Fire Spin\", target);\r\n\t\t},\r\n\t\t  condition: {\r\n\t\t   duration: 5,\r\n\t\t\t// this is a side condition\r\n\t\t   onStart(side) {\r\n\t\t\t\tif (!this.effectState.layers || this.effectState.layers === 0) {\r\n\t\t\t\t\tthis.add('-sidestart', side, 'move: Sacred Candle');\r\n\t\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t   }\r\n\t\t\t   },\r\n\t\t\t onAfterMoveSelf(pokemon, source, move) {\r\n\t\t\t\tif ((!pokemon.hasType('Fire')) && (!pokemon.hasType('Flying')) && (move.id !== 'rapidspin')) {\r\n\t\t\t\t\tpokemon.trySetStatus('brn', source);\r\n\t\t\t\t}\r\n \t\t\t},\r\n\t\t  onEnd(targetSide) {\r\n\t\t\t\tfor (const pokemon of targetSide.active) {\r\n        \t\t\tthis.add('-message', `Sacred Candle burnt out!`);\r\n\t\t\t\t\tthis.add('-sideend', targetSide, 'Sacred Candle');\r\n\t\t\t\t}\r\n\t\t  },\r\n\t\t  target: \"foeSide\",\r\n\t\t  type: \"Fire\",\r\n\t\t},\r\n\t},\r\n\tflowermortar: {\r\n\t\tnum: -5,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Flower Mortar\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, heal: 1},\r\n\t   drain: [1, 2],\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tsource.side.foe.addSideCondition('flowermortar');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonTryHit(target, source) {\r\n\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\tthis.add('-miss', target);\r\n\t\t\t\treturn null;\r\n\t\t\t} else { return true; }\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Petal Dance\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tdurationCallback(target, source) {\r\n\t\t\t\treturn this.random(1, 3);\r\n\t\t\t},\r\n\t\t\tonStart(targetSide, source) {\r\n\t\t\t\tthis.add('-message', `${source.name} shot petals into the air...`);\r\n\t\t\t\tthis.add('-sidestart', targetSide, 'Flower Mortar');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 5,\r\n\t\t\tonResidualSubOrder: 1.1,\r\n\t\t\tonResidual(targetSide) {\r\n\t\t\t\tfor (const pokemon of targetSide.active) {\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} was hit by petals!`);\r\n\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 16, pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(targetSide) {\r\n\t\t\t\tfor (const pokemon of targetSide.active) {\r\n        \t\t\tthis.add('-message', `${pokemon.name} was hit by petals!`);\r\n\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 16, pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-message', `Flower Mortar's petals scattered away!`);\r\n\t\t\t\tthis.add('-sideend', targetSide, 'Flower Mortar');\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"User recovers 50% of damage dealt. Damages target for 2-3 turns.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\thypeup: {\r\n\t\tnum: -6,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Hype Up\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, authentic: 1},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'hypeup',\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Uproar\", target);\r\n\t\t},\r\n\t\tonTryHit(target) {\r\n\t\t\tfor (const [i, allyActive] of target.side.active.entries()) {\r\n\t\t\t\tif (allyActive && allyActive.status === 'slp') allyActive.cureStatus();\r\n\t\t\t\tconst foeActive = target.side.foe.active[i];\r\n\t\t\t\tif (foeActive && foeActive.status === 'slp') foeActive.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'Hype Up');\r\n\t\t\t},\r\n\t\t\tonResidual(target) {\r\n\t\t\t\tif (target.lastMove && target.lastMove.id === 'struggle') {\r\n\t\t\t\t\t// don't lock\r\n\t\t\t\t\tdelete target.volatiles['hypeup'];\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', target, 'Hype Up', '[upkeep]');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Hype Up');\r\n\t\t\t},\r\n\t\t\tonLockMove: 'hypeup',\r\n\t\t\tonAnySetStatus(status, pokemon) {\r\n\t\t\t\tif (status.id === 'slp') {\r\n\t\t\t\t\tif (pokemon === this.effectState.target) {\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} is too hyped up to sleep.`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} is too hyped up to sleep.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Lasts 3 turns. Active Pokemon cannot fall asleep.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"Normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tbytetorment: {\r\n\t\tnum: -8,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Byte Torment\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Chatter\", target);\r\n\t\t},\r\n\t\tshortDesc: \"100% chance to lower the target's Attack by 1.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\texpel: {\r\n\t\tnum: -9,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Expel\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {defrost: 1, bypasssub: 1},\r\n\t\tsleepUsable: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Life Dew\", target);\r\n\t\t},\r\n\t\tonHit(source) {\r\n\t\t\tsource.cureStatus();\r\n\t\t\tsource.clearBoosts();\r\n\t\t\tthis.add('-clearboost', source);\r\n\t\t\tif (source.hp && source.removeVolatile('confusion')) {\r\n\t\t\t\tthis.add('-end', source, 'Confusion', '[from] move: Expel', '[of] ' + source);\r\n\t\t\t}\r\n\t\t\tif (source.hp && source.removeVolatile('attract')) {\r\n\t\t\t\tthis.add('-end', source, 'Infatuation', '[from] move: Expel', '[of] ' + source);\r\n\t\t\t}\r\n\t\t\tif (source.hp && source.removeVolatile('leechseed')) {\r\n\t\t\t\tthis.add('-end', source, 'Leech Seed', '[from] move: Expel', '[of] ' + source);\r\n\t\t\t}\r\n\t\t\tif (source.hp && source.removeVolatile('trapped')) {\r\n\t\t\t\tthis.add('-end', source, 'Trap', '[from] move: Expel', '[of] ' + source);\r\n\t\t\t}\r\n\t\t\tif (source.hp && source.removeVolatile('curse')) {\r\n\t\t\t\tthis.add('-end', source, 'Curse', '[from] move: Expel', '[of] ' + source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Cures the user's status. Resets the user's stat changes.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\r\n\tpreyingswipe: {\r\n\t\tnum: -10,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\t// You can't get here unless the pursuit succeeds\r\n\t\t\tif (target.beingCalledBack || target.switchFlag) {\r\n\t\t\t\tthis.debug('Pursuit damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Preying Swipe\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tbeforeTurnCallback(pokemon) {\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tif (side === pokemon.side) continue;\r\n\t\t\t\tside.addSideCondition('preyingswipe', pokemon);\r\n\t\t\t\tconst data = side.getSideConditionData('preyingswipe');\r\n\t\t\t\tif (!data.sources) {\r\n\t\t\t\t\tdata.sources = [];\r\n\t\t\t\t}\r\n\t\t\t\tdata.sources.push(pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove() {},\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\ttarget.side.removeSideCondition('preyingswipe');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\t\tthis.debug('Preyingswipe start');\r\n\t\t\t\tlet alreadyAdded = false;\r\n\t\t\t\tfor (const source of this.effectState.sources) {\r\n\t\t\t\t\tif (source.speed < pokemon.speed || (source.speed === pokemon.speed && this.random(2) === 0)) {\r\n\t\t\t\t\t\t// Destiny Bond ends if the switch action \"outspeeds\" the attacker, regardless of host\r\n\t\t\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.queue.cancelMove(source) || !source.hp) continue;\r\n\t\t\t\t\tif (!alreadyAdded) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'move: Preying Swipe');\r\n\t\t\t\t\t\talreadyAdded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Run through each action in queue to check if the Pursuit user is supposed to Mega Evolve this turn.\r\n\t\t\t\t\t// If it is, then Mega Evolve before moving.\r\n\t\t\t\t\tif (source.canMegaEvo || source.canUltraBurst) {\r\n\t\t\t\t\t\tfor (const [actionIndex, action] of this.queue.entries()) {\r\n\t\t\t\t\t\t\tif (action.pokemon === source && action.choice === 'megaEvo') {\r\n\t\t\t\t\t\t\t\tthis.actions.runMegaEvo(source);\r\n\t\t\t\t\t\t\t\tthis.queue.list.splice(actionIndex, 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.runMove('preyingswipe', source, this.getTargetLoc(pokemon, source));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Slash\", target);\r\n\t\t},\r\n\t\tshortDesc: \"Power doubles if the foe is switching out.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdraconicdrive: {\r\n\t\tnum: -11,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Draconic Drive\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dragon Pulse\", target);\r\n\t\t},\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tsoftshell: {\r\n\t\tnum: -12,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Soft Shell\",\r\n\t\tpp: 10,\r\n\t\tpriority: 1,\r\n\t\tflags: {heal: 1, bypasssub: 1},\r\n\t\theal: [1, 2],\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Withdraw\", target);\r\n\t\t},\r\n\t\tshortDesc: \"Heals the user by 50% of their health. Lowers the user's defenses. +1 Priority.\",\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tessencesteal: {\r\n\t\tnum: -13,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Essence Steal\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, heal: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dream Eater\", target);\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\tif (target.boosts.spa === -6) return false;\r\n\t\t\tconst success = this.boost({spa: -1}, target, source, null, false, true);\r\n\t\t\treturn !!(this.heal(source.level, source, target) || success);\r\n\t\t},\r\n\t\tshortDesc: \"Lowers the target's Sp. Atk. Heals user equal to the opponent's level.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmalnourish: {\r\n\t\tnum: -14,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Malnourish\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tvolatileStatus: 'malnourish',\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Venoshock\", target);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tif (pokemon.hasType('Poison')) return;\r\n\t\t\tif (pokemon.hasType('Steel')) return;\r\n\t\t\tpokemon.addVolatile('malnourish');\r\n\t\t\tthis.add('-start', pokemon, 'move: Malnourish');\r\n\t\t},\r\n\t\tshortDesc: \"Inverts the healing effects of a target's item.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Smart\",\r\n\t},\r\n\tboulderrush: {\r\n\t\tnum: -15,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Boulder Rush\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\trecoil: [50, 100],\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Wrecker\", target);\r\n\t\t},\r\n\t\tshortDesc: \"Has 1/2 Recoil.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t// hiddenpowercosmic: {\r\n\t// \tgen: 2,\r\n\t// \tnum: -16,\r\n\t// \taccuracy: 100,\r\n\t// \tbasePower: 70,\r\n\t// \tcategory: \"Special\",\r\n\t// \trealMove: \"Hidden Power\",\r\n\t// \tname: \"Hidden Power Cosmic\",\r\n\t// \tpp: 15,\r\n\t// \tpriority: 0,\r\n\t// \tflags: {protect: 1, mirror: 1},\r\n\t// \tsecondary: null,\r\n\t// \ttarget: \"normal\",\r\n\t// \ttype: \"Cosmic\",\r\n\t// \tcontestType: \"Clever\",\r\n\t// },\r\n\trapidspin: {\r\n\t\tinherit: true,\r\n\t\tonAfterHit(target, pokemon) {\r\n\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t}\r\n\t\t\tconst sideConditions = ['spikes', 'sacredcandle', 'flowermortar'];\r\n\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon) {\r\n\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t}\r\n\t\t\tconst sideConditions = ['spikes', 'sacredcandle', 'flowermortar'];\r\n\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsleeptalk: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst noSleepTalk = [\r\n\t\t\t\t'bide', 'focuspunch', 'metronome', 'mimic', 'mirrormove', 'naturepower', 'sketch', 'sleeptalk', 'hypeup',\r\n\t\t\t];\r\n\t\t\tconst moves = [];\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst moveid = moveSlot.id;\r\n\t\t\t\tif (!moveid) continue;\r\n\t\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\t\tif (noSleepTalk.includes(moveid) || move.flags['charge']) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\t\t\tlet randomMove = '';\r\n\t\t\tif (moves.length) randomMove = this.sample(moves);\r\n\t\t\tif (!randomMove) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.useMove(randomMove, pokemon);\r\n\t\t},\r\n\t},\r\n\tsubstitute: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'Substitute');\r\n\t\t\t\tif (target.item === 'wynaut') {\r\n\t\t\t\t\tthis.add('-item', target, 'Wynaut');\r\n\t\t\t\t\tthis.add('-activate', target, 'item: Wynaut');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.hp = Math.floor(target.maxhp / 4);\r\n\t\t\t\tdelete target.volatiles['partiallytrapped'];\r\n\t\t\t},\r\n\t\t\tonTryPrimaryHitPriority: -1,\r\n\t\t\tonTryPrimaryHit(target, source, move) {\r\n\t\t\t\tif (move.stallingMove) {\r\n\t\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (target === source) {\r\n\t\t\t\t\tthis.debug('sub bypass: self hit');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.id === 'twineedle') {\r\n\t\t\t\t\tmove.secondaries = move.secondaries!.filter(p => !p.kingsrock);\r\n\t\t\t\t}\r\n\t\t\t\tif (move.drain) {\r\n\t\t\t\t\tthis.add('-miss', source);\r\n\t\t\t\t\tthis.hint(\"In Gen 2, draining moves always miss against Substitute.\");\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\tconst SubBlocked = ['leechseed', 'lockon', 'mindreader', 'nightmare', 'painsplit', 'sketch'];\r\n\t\t\t\t\tif (move.id === 'swagger') {\r\n\t\t\t\t\t\t// this is safe, move is a copy\r\n\t\t\t\t\t\tdelete move.volatileStatus;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmove.status || (move.boosts && move.id !== 'swagger') ||\r\n                        move.volatileStatus === 'confusion' || SubBlocked.includes(move.id)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-activate', target, 'Substitute', '[block] ' + move.name);\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet damage = this.getDamage(source, target, move);\r\n\t\t\t\tif (!damage) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tdamage = this.runEvent('SubDamage', target, source, move, damage);\r\n\t\t\t\tif (!damage) {\r\n\t\t\t\t\treturn damage;\r\n\t\t\t\t}\r\n\t\t\t\tif (damage > target.volatiles['substitute'].hp) {\r\n\t\t\t\t\tdamage = target.volatiles['substitute'].hp as number;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.volatiles['substitute'].hp -= damage;\r\n\t\t\t\tsource.lastDamage = damage;\r\n\t\t\t\tif (target.volatiles['substitute'].hp <= 0) {\r\n\t\t\t\t\ttarget.removeVolatile('substitute');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'Substitute', '[damage]');\r\n\t\t\t\t}\r\n\t\t\t\tif (move.recoil) {\r\n\t\t\t\t\tthis.damage(1, source, target, 'recoil');\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('AfterSubDamage', target, source, move, damage);\r\n\t\t\t\treturn this.HIT_SUBSTITUTE;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Substitute');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\tmoonlight: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Cosmic\",\r\n\t},\r\n\tmorningsun: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Cosmic\",\r\n\t},\r\n\tcometpunch: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\ttype: \"Cosmic\",\r\n\t},\r\n\tswift: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\ttype: \"Cosmic\",\r\n\t},\r\n\tstarstorm: {\r\n\t\tnum: -17,\r\n\t\taccuracy: 75,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Star Storm\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\teva: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Make It Rain\", target);\r\n\t\t},\r\n\t\tshortDesc: \"30% chance to lower the target's Evasion by 1.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Cosmic\",\r\n\t\tcontestType: \"Beauty\",\r\n\t},\r\n\tcelestialbeam: {\r\n\t\tnum: -18,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Celestial Beam\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psybeam\", target);\r\n\t\t},\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Cosmic\",\r\n\t\tcontestType: \"Smart\",\r\n\t},\r\n\tvacuum: {\r\n\t\tnum: -19,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 24,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Vacuum\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Cosmic\",\r\n\t\tcontestType: \"Smart\",\r\n\t\tshortDesc: \"Prevents the target from switching for two to five turns.\",\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Salt Cure\", target);\r\n\t\t},\r\n\t},\r\n\tmeteorshard: {\r\n\t\tnum: -20,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Meteor Shard\",\r\n\t\tpp: 25,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'confusion',\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Swift\", target);\r\n\t\t},\r\n\t\tshortDesc: \"10% chance to confuse the target.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Cosmic\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t// cometcrash: {\r\n\t// \tnum: -21,\r\n\t// \taccuracy: 80,\r\n\t// \tbasePower: 50,\r\n\t// \tcategory: \"Special\",\r\n\t// \tname: \"Comet Crash\",\r\n\t// \tpp: 10,\r\n\t// \tpriority: 0,\r\n\t// \tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t// \tsecondary: {\r\n\t// \t\tchance: 30,\r\n\t// \t\tboosts: {\r\n\t// \t\t\teva: -1,\r\n\t// \t\t},\r\n\t// \t},\r\n\t// \tonPrepareHit: function(target, source, move) {\r\n\t// \t\tthis.attrLastMove('[still]');\r\n\t// \t\tthis.add('-anim', source, \"Rapid Spin\", target);\r\n\t// \t},\r\n\t// \tshortDesc: \"30% chance to boost a random stat by 1.\",\r\n\t// \ttarget: \"normal\",\r\n\t// \ttype: \"Cosmic\",\r\n\t// \tcontestType: \"Tough\",\r\n\t// },\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
