{
  "version": 3,
  "sources": ["../../../../data/mods/gen9evolutionproject/rulesets.ts"],
  "sourcesContent": ["export const Rulesets: {[k: string]: ModdedFormatData} = {\r\n\tdatamod: {\r\n\t\teffectType: 'Rule',\r\n\t\tname: 'Data Mod',\r\n\t\tdesc: 'When a new Pok\u00E9mon switches in for the first time, information about its types, stats and Abilities is displayed to both players.',\r\n\t\tonDataMod(pokemon) {\r\n\t\t\tlet species = this.dex.species.get(pokemon.species.name);\r\n\t\t\tif (species.copyData) { // all modded things in Evo have this\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tlet abilities = species.abilities[0];\r\n\t\t\t\tif (species.abilities[1]) abilities += ` / ${species.abilities[1]}`;\r\n\t\t\t\tif (species.abilities['H']) abilities += ` / ${species.abilities['H']}`;\r\n\t\t\t\tif (species.abilities['S']) abilities += ` / ${species.abilities['S']}`;\r\n\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\tconst type = species.types[0];\r\n\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t}\r\n\t\t\t\tif (species.creator) this.hint(`${species.name} was created by ${species.creator}!`);\r\n\t\t\t\t// might add movepool additions?\r\n\t\t\t\t// this.hint(`text goes here.`, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tconst switchedIn = pokemon.switchedIn;\r\n\t\t\tif (pokemon.illusion) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.illusion.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!pokemon.illusion.switchedIn) {\r\n\t\t\t\t\tlet species = this.dex.species.get(pokemon.illusion.species.name);\r\n\t\t\t\t\tlet abilities = species.abilities[0];\r\n\t\t\t\t\tif (species.abilities[1]) abilities += ` / ${species.abilities[1]}`;\r\n\t\t\t\t\tif (species.abilities['H']) abilities += ` / ${species.abilities['H']}`;\r\n\t\t\t\t\tif (species.abilities['S']) abilities += ` / ${species.abilities['S']}`;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (species.creator) this.hint(`${species.name} was created by ${species.creator}!`);\r\n\t\t\t\t\tpokemon.illusion.switchedIn = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!pokemon.switchedIn) {\r\n\t\t\t\t\tthis.runEvent('DataMod', pokemon);\r\n\t\t\t\t\tpokemon.switchedIn = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.hasAbility('illusion')) { // making sure the correct information is given when an Illusion breaks\r\n\t\t\t\tif (this.dex.species.get(target.species.name).copyData) { // if the target is modded\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\tif (!target.switchedIn) {\r\n\t\t\t\t\t\ttarget.switchedIn = true;\r\n\t\t\t\t\t\tthis.runEvent('DataMod', target);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = target.baseSpecies.types;\r\n\t\t\t\t\tif (target.getTypes().join() === types.join()) {\r\n\t\t\t\t\t\tthis.add('-end', target, 'typechange', '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
