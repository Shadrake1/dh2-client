{
  "version": 3,
  "sources": ["../../../../data/mods/gen9evolutionproject/scripts.ts"],
  "sourcesContent": ["export const Scripts: {[k: string]: ModdedBattleScriptsData} = {\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\t// sorting the teambuilder by slate / prompt\r\n\t\tcustomTiers: ['Pok\u00E9mon of the Day!', 'Evo!', '(Prevo)'],\r\n\t\tcustomDoublesTiers: ['Pok\u00E9mon of the Day!', 'Evo!', '(Prevo)'],\r\n\t},\r\n\tinit() {\r\n\t\tlet customList = [];\r\n\t\tfor (const id in this.dataCache.Pokedex) {\r\n\t\t\tconst notm = ['terablast', 'hiddenpower']; // certain moves don't count TMs\r\n\t\t\tconst gen9only = [\r\n\t\t\t\t'plankteenie', 'mareaniedrifter', 'toxapexglacial', 'nemesyst', 'numeldormant', 'dormedary', 'dormaderupt'\r\n\t\t\t]; // certain Fakemon are based on Gen IX movepools specifically\r\n\r\n\t\t\t// movepool corrections\r\n\t\t\tif (this.dataCache.Learnsets[id]) {\r\n\t\t\t\tfor (const moveid of notm) {\r\n\t\t\t\t\tif (this.dataCache.Learnsets[id].learnset && this.dataCache.Learnsets[id].learnset[moveid]) {\r\n\t\t\t\t\t\t// check if it learns the move naturally\r\n\t\t\t\t\t\tlet learns = false;\r\n\t\t\t\t\t\tfor (const method in this.dataCache.Learnsets[id].learnset[moveid]) {\r\n\t\t\t\t\t\t\tif (method.charAt(1) === 'L' || method.charAt(1) === 'E') learns = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!learns) delete this.modData('Learnsets', id).learnset[moveid];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fakemon creation\r\n\t\t\tconst newMon = this.dataCache.Pokedex[id];\r\n\t\t\tif (!newMon || !newMon.copyData) continue; // weeding out Pok\u00E9mon that aren't new\r\n\t\t\tconst copyData = this.dataCache.Pokedex[this.toID(newMon.copyData)];\r\n\r\n\t\t\tif (!newMon.types && copyData.types) newMon.types = copyData.types;\r\n\t\t\tif (!newMon.baseStats && copyData.baseStats) newMon.baseStats = copyData.baseStats;\r\n\t\t\tif (!newMon.abilities && copyData.abilities) newMon.abilities = copyData.abilities;\r\n\t\t\tif (!newMon.num && copyData.num) newMon.num = copyData.num * -1; // inverting the original's dex number\r\n\t\t\tif (!newMon.genderRatio && copyData.genderRatio) newMon.genderRatio = copyData.genderRatio;\r\n\t\t\tif (!newMon.heightm && copyData.heightm) newMon.heightm = copyData.heightm;\r\n\t\t\tif (!newMon.weightkg && copyData.weightkg) newMon.weightkg = copyData.weightkg;\r\n\t\t\tif (!newMon.color && copyData.color) newMon.color = copyData.color;\r\n\t\t\tif (!newMon.eggGroups && copyData.eggGroups) newMon.eggGroups = copyData.eggGroups;\r\n\r\n\t\t\tif (!newMon.evos) customList.push(id); // only fully-evolved Pok\u00E9mon of the Day!\r\n\r\n\t\t\tlet copyMoves = newMon.copyData;\r\n\t\t\tif (newMon.copyMoves) copyMoves = newMon.copyMoves;\r\n\t\t\tif (copyMoves) {\r\n\t\t\t\tif (!this.dataCache.Learnsets[id]) this.dataCache.Learnsets[id] = {learnset: {}}; // create a blank learnset entry so we don't need a learnsets file\r\n\t\t\t\tconst learnset = this.dataCache.Learnsets[this.toID(copyMoves)].learnset;\r\n\t\t\t\tfor (const moveid in learnset) {\r\n\t\t\t\t\tthis.modData('Learnsets', id).learnset[moveid] = learnset[moveid].filter(\r\n\t\t\t\t\t\t(method) => !(method.includes('S') || (notm.includes(moveid) && (method.includes('M') || method.includes('T'))) || (gen9only.includes(id) && !(method.startsWith('9'))))\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolAdditions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolAdditions) {\r\n\t\t\t\t\t\tthis.modData('Learnsets', this.toID(id)).learnset[this.toID(move)] = [\"9M\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolDeletions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolDeletions) {\r\n\t\t\t\t\t\tdelete this.modData('Learnsets', this.toID(id)).learnset[this.toID(move)];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet random1 = Math.floor(Math.random() * customList.length);\r\n\t\tlet random2 = Math.floor(Math.random() * (customList.length - 1));\r\n\t\tlet random3 = Math.floor(Math.random() * (customList.length - 2));\r\n\t\tif (random2 >= random1) random2 += 1;\r\n\t\tif (random3 >= random1) random3 += 1;\r\n\t\tif (random3 >= random2) random3 += 1;\r\n\t\tthis.modData('FormatsData', customList[random1]).tier = \"Pok\u00E9mon of the Day!\";\r\n\t\tthis.modData('FormatsData', customList[random2]).tier = \"Pok\u00E9mon of the Day!\";\r\n\t\tthis.modData('FormatsData', customList[random3]).tier = \"Pok\u00E9mon of the Day!\";\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
