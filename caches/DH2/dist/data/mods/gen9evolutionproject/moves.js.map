{
  "version": 3,
  "sources": ["../../../../data/mods/gen9evolutionproject/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: ModdedMoveData} = {\r\n\tshaveoff: {\r\n\t\tnum: -1,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Shave Off\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tif (this.field.isWeather('snow') || this.field.isWeather('hail')) {\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Chip Away\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Recovers half of max HP, or 2/3 in snow/hail.\",\r\n\t},\r\n\tfreezetag: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Freeze Tag\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonAfterHit(target) {\r\n\t\t\tif (target.hasType('Ice')) return;\r\n\t\t\tif (!target.addType('Ice')) return;\r\n\t\t\tthis.add('-start', target, 'typeadd', 'Ice');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Ice Spinner\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"Does damage and adds Ice to the target's type.\",\r\n\t},\r\n\tauroraburst: {\r\n\t\tnum: -3,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Aurora Burst\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {charge: 1, protect: 1, mirror: 1, metronome: 1, nosleeptalk: 1, failinstruct: 1},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\tthis.add('-anim', attacker, \"Subzero Slammer\", defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tthis.boost({spd: 1}, attacker, attacker, move);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Charges and raises Sp. Def, then attacks all adjacent foes.\",\r\n\t},\r\n\tbanefulbayonet: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Baneful Bayonet\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, heal: 1, metronome: 1, slicing: 1},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Poison Sting\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tshortDesc: \"Drains for 50% of the damage dealt; 20% poison chance.\",\r\n\t},\r\n\trenewingring: {\r\n\t\tnum: -5,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Renewing Ring\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1, heal: 1, metronome: 1},\r\n\t\tonTryMove(pokemon, target, move) {\r\n\t\t\tif (pokemon.hasType('Ice')) return;\r\n\t\t\tthis.add('-fail', pokemon, 'move: Renewing Ring');\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tonHit(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes().join('/'), '[from] move: Renewing Ring');\r\n\t\t\t},\r\n\t\t\tslotCondition: 'renewingring',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tif (this.activeMove.id !== 'renewingring' || !this.activeTarget.lastDamage) return false;\r\n\t\t\t\tthis.effectState.hp = this.activeTarget.lastDamage / 2;\r\n\t\t\t\tthis.add('-anim', source, \"Wish\", source);\r\n\t\t\t\tthis.add('-message', `${this.effectState.source.illusion ? this.effectState.source.illusion.name : this.effectState.source.name} made a wish for the new year!`);\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 4,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tif (target && !target.fainted) {\r\n\t\t\t\t\tconst damage = target.heal(this.effectState.hp);\r\n\t\t\t\t\tif (damage) {\r\n\t\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] move: Wish', '[wisher] ' + this.effectState.source.name); // I do want it to look like Wish\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Ice Hammer\", source);\r\n\t\t\tthis.add('-anim', source, \"Hyper Voice\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Sheds the Ice type; two turns later, heals for 50% damage dealt.\",\r\n\t},\r\n\tsnowroller: {\r\n\t\tnum: -6,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Snow Roller\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tboosts: {\r\n\t\t\tdef: 1,\r\n\t\t\taccuracy: 1,\r\n\t\t},\r\n\t\tvolatileStatus: 'defensecurl',\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonRestart: () => null,\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Barrier\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: {boost: {accuracy: 1}},\r\n\t\tcontestType: \"Cute\",\r\n\t\tshortDesc: \"Boosts Defense, accuracy, Rollout and Ice Ball.\",\r\n\t},\r\n\tblownfuse: {\r\n\t\tnum: -7,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Blown Fuse\",\r\n\t\tpp: 20,\r\n\t\tpriority: 4,\r\n\t\tflags: {reflectable: 1, metronome: 1},\r\n\t\tslotCondition: 'blownfuse',\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonClearFuse(target) {\r\n\t\t\t\ttarget.side.removeSlotCondition(target, 'blownfuse');\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\t\tif (move.category === 'Physical' && source.isGrounded() && !source.hasType('Electric') && move.id !== 'rapidspin' && move.id !== 'mortalspin') {\r\n\t\t\t\t\tsource.setStatus('brn', source, move);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-message', `A fuse short-circuited around ${target.illusion ? target.illusion.name : target.name}!`);\r\n\t\t\t\tthis.hint(`For 4 turns, using a physical move from where ${target.illusion ? target.illusion.name : target.name} is standing will result in a burn.`);\r\n\t\t\t\tthis.hint(`Electric-types and non-grounded Pok\u00E9mon are unaffected.`);\r\n\t\t\t\tthis.hint(`You can clear a blown fuse with moves like Rapid Spin and Defog!`);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-message', `The blown fuse around ${target.illusion ? target.illusion.name : target.name} disappeared.`);\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"First Impression\", target);\r\n\t\t\tthis.add('-anim', target, \"Spark\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"4 turns: grounded Pok\u00E9mon in target slot burned after using physical moves, except Electric-types.\",\r\n\t},\r\n\tshadowbox: {\r\n\t\tnum: -8,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Shadow Box\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Skitter Smack\", target);\r\n\t\t\tthis.add('-anim', source, \"Shadow Punch\", target); // wanted to use Soul-Stealing 7-Star Strike, but it uses the Z-Move visual...\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Ghost\",\r\n\t\tshortDesc: \"Hits adjacent foes and lowers their Attack, Sp. Atk.\",\r\n\t},\r\n\trekindle: {\r\n\t\tnum: -9,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Rekindle\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: null,\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tif (source.item || !source.lastItem) return;\r\n\t\t\t\tconst item = source.lastItem;\r\n\t\t\t\tsource.lastItem = '';\r\n\t\t\t\tthis.add('-item', source, this.dex.items.get(item), '[from] move: Recycle');\r\n\t\t\t\tsource.setItem(item);\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Mystical Fire\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Restores the user's item.\",\r\n\t},\r\n\tentanglement: {\r\n\t\tnum: -10,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Entanglement\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tvolatileStatus: 'entanglement',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.add('-start', pokemon, 'move: Entanglement');\r\n\t\t\t\tthis.effectState.boundDivisor = source.hasItem('bindingband') ? 6 : 8;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 13,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tconst source = this.effectState.source;\r\n\t\t\t\tif (source && (!source.isActive || source.hp <= 0 || source.fainted || !source.activeTurns)) {\r\n\t\t\t\t\tdelete pokemon.volatiles['entanglement'];\r\n\t\t\t\t\tthis.add('-end', pokemon, this.effectState.sourceEffect, '[entanglement]', '[silent]');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst damage = this.damage(pokemon.baseMaxhp / this.effectState.boundDivisor, pokemon, source);\r\n\t\t\t\tif (damage) {\r\n\t\t\t\t\tthis.add('-anim', source, \"Dream Eater\", pokemon);\r\n\t\t\t\t\tthis.add('-anim', source, \"Ingrain\", source);\r\n\t\t\t\t\tlet fakeSeed = {name: 'Leech Seed', id: 'leechseed'}; // silent visual + Big Root compatibility\r\n\t\t\t\t\tthis.heal(damage, source, pokemon, fakeSeed);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, this.effectState.sourceEffect, '[entanglement]');\r\n\t\t\t},\r\n\t\t\tonTrapPokemon(pokemon) {\r\n\t\t\t\tif (this.effectState.source?.isActive) pokemon.tryTrap();\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Anchor Shot\", target);\r\n\t\t\tthis.add('-anim', source, \"Embargo\", target);\r\n\t\t\tthis.add('-anim', source, \"Embargo\", source);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tsource.addVolatile('trapped', target, move, 'trapper');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tshortDesc: \"Traps user + target; pseudo Leech Seed.\",\r\n\t},\r\n\tmyceliate: {\r\n\t\tnum: -11,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status || target.hasAbility('comatose')) {\r\n\t\t\t\tthis.debug('BP doubled from status condition');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Myceliate\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Infestation\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {basePower: 160},\r\n\t\tcontestType: \"Clever\",\r\n\t\tshortDesc: \"Doubles BP if the target is statused.\",\r\n\t},\r\n\tdispersion: {\r\n\t\tnum: -12,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dispersion\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (pokemon.m.scaleshift) move.type = pokemon.m.scaleshift;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Silver Wind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Spread + changes type to match Scale Shift.\",\r\n\t},\r\n\r\n// modded canon moves\r\n\r\n\tdefog: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (this.runEvent('ClearFuse', pokemon)) success = true;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tgmaxwindrage: {\r\n\t\tinherit: true,\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tlet success = false;\r\n\t\t\t\tconst removeTarget = [\r\n\t\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb',\r\n\t\t\t\t];\r\n\t\t\t\tconst removeAll = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\t\tif (source.side.foe.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\t\tthis.add('-sideend', source.side.foe, this.dex.conditions.get(targetCondition).name, '[from] move: G-Max Wind Rage', '[of] ' + source);\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: G-Max Wind Rage', '[of] ' + source);\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tif (this.runEvent('ClearFuse', pokemon)) success = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn success;\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmortalspin: {\r\n\t\tinherit: true,\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('ClearFuse', pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('ClearFuse', pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trapidspin: {\r\n\t\tinherit: true,\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('ClearFuse', pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('ClearFuse', pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttidyup: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet success = false;\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tif (active.removeVolatile('substitute')) success = true;\r\n\t\t\t}\r\n\t\t\tconst removeAll = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\tconst sides = [pokemon.side, ...pokemon.side.foeSidesWithConditions()];\r\n\t\t\tfor (const side of sides) {\r\n\t\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\t\tif (side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', side, this.dex.conditions.get(sideCondition).name);\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (this.runEvent('ClearFuse', pokemon)) success = true;\r\n\t\t\t}\r\n\t\t\tif (success) this.add('-activate', pokemon, 'move: Tidy Up');\r\n\t\t\treturn !!this.boost({atk: 1, spe: 1}, pokemon, pokemon, null, false, true) || success;\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["pokemon"]
}
