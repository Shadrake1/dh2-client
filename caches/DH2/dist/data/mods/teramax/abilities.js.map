{
  "version": 3,
  "sources": ["../../../../data/mods/teramax/abilities.ts"],
  "sourcesContent": ["export const Abilities: import('../../../sim/dex-abilities').ModdedAbilityDataTable = {\r\n\tzenmode: {\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Darmanitan' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (move.category === 'Special' && !['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Zen Mode');\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitanzen') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\tshortDesc: \"This Pokemon transforms at the start of the turn if it selects a special move.\",\r\n\t\trating: 3,\r\n\t\tnum: 161,\r\n\t},\r\n\tgorillatactics: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t\tif (pokemon.hasItem('choiceband') || pokemon.hasItem('choicescarf') || pokemon.hasItem('choicespecs')) {\r\n\t\t\t\tpokemon.addVolatile('embargo');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityState.choiceLock && pokemon.abilityState.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Gorilla Tactics\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityState.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityState.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 1,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Gorilla Tactics Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityState.choiceLock) return;\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityState.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityState.choiceLock = \"\";\r\n\t\t},\r\n\t\tname: \"Gorilla Tactics\",\r\n\t\trating: 4,\r\n\t\tnum: 255,\r\n\t\tshortDesc: \"Pokemon's Atk is 1.5x, but it can only select one move. Choice items are disabled.\",\r\n\t},\r\n\tbeadsofruin: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Beads of Ruin');\r\n\t\t},\r\n\t\tonAnyModifyAccuracyPriority: -1,\r\n\t\tonAnyModifyAccuracy(accuracy, target, source) {\r\n\t\t\tif (source.isAlly(this.effectState.target) && typeof accuracy === 'number' && !target.hasAbility('Beads of Ruin')) {\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Beads of Ruin\",\r\n\t\trating: 4.5,\r\n\t\tnum: 284,\r\n\t\tshortDesc: \"Active Pokemon without this Ability have their Evasiveness multiplied by 0.75.\",\r\n\t},\r\n\tpowerspot: {\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tthis.debug('Power Spot boost');\r\n\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'powerspot');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is being powered up by the Power Spot!`);\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\treturn this.chainModify([5324, 4096]);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Power Spot\",\r\n\t\trating: 4,\r\n\t\tnum: 249,\r\n\t\tshortDesc: \"Active allies deal 1.3x more damage, as well as the next Pokemon in for one turn.\",\r\n\t},\r\n\ticeface: {\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Eiscue' || attacker.transformed) return;\r\n\t\t\tconst targetForme = (move.category === 'Status' ? 'Eiscue' : 'Eiscue-Noice');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Ice Face\",\r\n\t\trating: 3,\r\n\t\tnum: 248,\r\n\t\tshortDesc: \"If Eiscue, changes Forme to Noice before attacks and Base before a status move.\",\r\n\t},\r\n\tcommander: {\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tlet ratio = Math.floor(source.getStat('spe') / target.getStat('spe'));\r\n\t\t\tif (!isFinite(ratio)) ratio = 0;\r\n\t\t\tif (ratio > 0) {\r\n\t\t\t\tif (target.hasType('Water') || target.hasType('Dragon')) {\r\n\t\t\t\t\treturn this.chainModify([5324, 4096]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (this.gameType !== 'doubles') return;\r\n\t\t\tconst ally = pokemon.allies()[0];\r\n\t\t\tif (!ally || pokemon.transformed ||\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Tatsugiri' || ally.baseSpecies.baseSpecies !== 'Dondozo') {\r\n\t\t\t\t// Handle any edge cases\r\n\t\t\t\tif (pokemon.getVolatile('commanding')) pokemon.removeVolatile('commanding');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!pokemon.getVolatile('commanding')) {\r\n\t\t\t\t// If Dondozo already was commanded this fails\r\n\t\t\t\tif (ally.getVolatile('commanded')) return;\r\n\t\t\t\t// Cancel all actions this turn for pokemon if applicable\r\n\t\t\t\tthis.queue.cancelAction(pokemon);\r\n\t\t\t\t// Add volatiles to both pokemon\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Commander', '[of] ' + ally);\r\n\t\t\t\tpokemon.addVolatile('commanding');\r\n\t\t\t\tally.addVolatile('commanded', pokemon);\r\n\t\t\t\t// Continued in conditions.ts in the volatiles\r\n\t\t\t} else {\r\n\t\t\t\tif (!ally.fainted) return;\r\n\t\t\t\tpokemon.removeVolatile('commanding');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Commander\",\r\n\t\trating: 3,\r\n\t\tnum: 279,\r\n\t\tshortDesc: \"Slower Pokemon take 20% more damage. 30% if also Water or Dragon.\",\r\n\t},\r\n\tsteamengine: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Steam Engine');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Steam Engine boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Steam Engine');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Steam Engine weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Steam Engine weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Steam Engine\",\r\n\t\trating: 2,\r\n\t\tnum: 243,\r\n\t\tshortDesc: \"Burn immunity. Takes 0.5x from Fire/Water & summons Sun. 2x power on Fire.\",\r\n\t},/*\r\n\tgalewings: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (!this.queue.willMove(target) || move.type !== 'Flying') {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Gale Wings boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gale Wings\",\r\n\t\trating: 3,\r\n\t\tnum: 177,\r\n\t\tshortDesc: \"This Pokemon's Flying-type moves have 1.3x power if the user moves first.\",\r\n\t},*/\r\n\tgalewings: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tfor (const poke of this.getAllActive()) {\r\n\t\t\t\tif (poke.hasAbility('counteract') && poke.side.id !== pokemon.side.id && !poke.abilityState.ending) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move?.type === 'Flying' && pokemon.hp >= pokemon.maxhp / 2) return priority + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gale Wings\",\r\n\t\tshortDesc: \"If this Pokemon has 50% of its max HP or more, its Flying-type moves have their priority increased by 1.\",\r\n\t\trating: 3,\r\n\t\tnum: 177,\r\n\t},\r\n\tmyceliummight: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (move.category === 'Status' && move.target === 'normal') {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (!move || !target || source.switchFlag === true) return;\r\n\t\t\tif (move.category === 'Status' && move.target === 'normal') {\r\n\t\t\t\tif (!target.hasType('Grass')) {\r\n\t\t\t\t\ttarget.addVolatile('leechseed');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Single-target status moves move last, but ignore abilities and inflict Leech Seed.\",\r\n\t\trating: 3,\r\n\t},\r\n\ticescales: {\r\n\t\tinherit: true,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move' && target.hp >= target.maxhp) {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', target, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Takes 1/2 damage from special attacks. Full HP: No damage from indirect sources.\",\r\n\t},\r\n\tbattlebondcharizard: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect?.effectType !== 'Move') return;\r\n\t\t\tif (source.abilityState.battleBondcharizardTriggered) return;\r\n\t\t\tif (source.hp && source.side.foePokemonLeft()) {\r\n\t\t\t\tthis.boost({atk: 1, spa: 1, spe: 1}, source, source, this.effect);\r\n\t\t\t\tthis.add('-activate', source, 'ability: Battle Bond (Charizard)');\r\n\t\t\t\tsource.abilityState.battleBondcharizardTriggered = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Battle Bond (Charizard)\",\r\n\t\tdesc: \"If this Pokemon is a Charizard-Gmax, its Attack, Special Attack, and Speed are raised by 1 stage if it attacks and knocks out another Pokemon. This effect can only happen once per battle.\",\r\n\t\tshortDesc: \"After KOing a Pokemon: raises Attack, Sp. Atk, Speed by 1 stage. Once per battle.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 210,\r\n\t},\r\n\tstalwart: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove() {},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Stalwart');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -30,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Stalwart');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"This Pokemon heals 1/3 of its max when switching out. At full HP: Survives hit at 1 HP.\",\r\n\t},\r\n\tselfrepair: {\r\n\t\tonAfterMoveSecondarySelfPriority: -1,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Self-Repair\",\r\n\t\trating: 3,\r\n\t\tshortDesc: \"When this Pokemon uses a status move, this Pokemon heals 25% of its max HP.\",\r\n\t},\r\n\tcuriousmedicine: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.actions.useMove(\"Haze\", pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Curious Medicine\",\r\n\t\trating: 2,\r\n\t\tnum: 261,\r\n\t\tshortDesc: \"At the end of each turn, all stat changes are reset.\",\r\n\t},\r\n\thospitality: {\r\n\t\tinherit: true,\r\n\t\tonResidualOrder: 6,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'hospitality');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\tthis.heal(target.baseMaxhp / 4);\r\n\t\t\t\t\ttarget.side.removeSlotCondition(target, 'hospitality');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"User heals 1/16 of its HP per turn. Switch-in heals 1/4 once.\",\r\n\t},\r\n\tquickdraw: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect.effectType === \"Move\" &&\r\n\t\t\t\t!effect.multihit &&\r\n\t\t\t\t(!effect.negateSecondary && !(effect.hasSheerForce && source.hasAbility('sheerforce')))\r\n\t\t\t) {\r\n\t\t\t\tthis.effectState.checkedBerserk = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.effectState.checkedBerserk = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItem(item) {\r\n\t\t\tconst healingItems = [\r\n\t\t\t\t'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry', 'berryjuice',\r\n\t\t\t];\r\n\t\t\tif (healingItems.includes(item.id)) {\r\n\t\t\t\treturn this.effectState.checkedBerserk;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tthis.effectState.checkedBerserk = true;\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit && !move.smartTarget ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\ttarget.addVolatile('quickdraw');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Quick Draw');\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s next move will have +1 priority!`);\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Quick Draw\",\r\n\t\trating: 2.5,\r\n\t\tnum: 259,\r\n\t\tshortDesc: \"This Pokemon's next move has +1 Priority when it reaches 1/2 or less of its max HP\",\r\n\t},\r\n\tsupersweetsyrup: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!target.positiveBoosts()) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Supersweet Syrup', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -2}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Supersweet Syrup\",\r\n\t\trating: 2.5,\r\n\t\tnum: 306,\r\n\t\tshortDesc: \"On switch-in, the foe's Speed is lowered by 2 stages if it has a positive stat boost.\",\r\n\t},\r\n\tunseenfist: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.effectState.unseenFist) return;\r\n\t\t\tif (move.flags['contact']) delete move.flags['protect'];\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (!move || !target || source.switchFlag === true) return;\r\n\t\t\tif (target !== source && move.flags['contact'] && \r\n\t\t\t\t (target.volatiles['protect'] || target.volatiles['banefulbunker'] || target.volatiles['kingsshield'] ||\r\n\t\t\t\t  target.volatiles['spikyshield'] || target.side.getSideCondition('matblock') || target.volatiles['silktrap'] ||\r\n\t\t\t\t  target.volatiles['burningbulwark'])) {\r\n\t\t\t\tthis.effectState.unseenFist = true;\r\n\t\t\t\tthis.add('-activate', source, 'ability: Unseen Fist');\r\n\t\t\t\tthis.add('-message', `${source.name}'s ${move.name} broke through ${target.name}'s protection!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tdelete this.effectState.unseenFist;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Unseen Fist\",\r\n\t\trating: 2,\r\n\t\tnum: 260,\r\n\t\tshortDesc: \"Once per switch-in, this Pokemon's contact moves ignore protection, except Max Guard.\",\r\n\t},\r\n\tchillingneigh: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.heal(target.baseMaxhp / 8, target, target);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chilling Neigh\",\r\n\t\trating: 2,\r\n\t\tnum: 264,\r\n\t\tshortDesc: \"After being hit by an attack, this Pokemons heals 12.5% of its max HP.\",\r\n\t},\r\n\tgrimneigh: {\r\n\t\tonAfterMoveSecondarySelfPriority: -1,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Grim Neigh\",\r\n\t\trating: 2,\r\n\t\tnum: 265,\r\n\t\tshortDesc: \"After hitting an attack, this Pokemons heals 12.5% of its max HP.\",\r\n\t},\r\n\tpoisonpuppeteer: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.status === 'psn' || attacker.status === 'tox') {\r\n\t\t\t\tthis.debug('Poison Puppeteer weaken');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.status === 'psn' || attacker.status === 'tox') {\r\n\t\t\t\tthis.debug('Poison Puppeteer weaken');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Poison Puppeteer\",\r\n\t\trating: 3,\r\n\t\tnum: 310,\r\n\t\tshortDesc: \"This Pokemon takes 0.75x damage from poisoned foes.\",\r\n\t},\r\n\tstellarshift: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Terapagos') return;\r\n\t\t\tif (pokemon.species.forme !== 'Terastal') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Stellar Shift');\r\n\t\t\t\tpokemon.formeChange('Terapagos-Terastal', this.effect, true);\r\n\t\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\t\tconst newMaxHP = pokemon.baseMaxhp;\r\n\t\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t\tpokemon.setAbility('stellarshell', pokemon, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1, notransform: 1},\r\n\t\tname: \"Stellar Shift\",\r\n\t\trating: 3,\r\n\t\tshortDesc: \"If this Pokemon is a Terapagos, it transforms into its Terastal Form on entry.\",\r\n\t},\r\n\tstellarshell: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.terastallized) return;\r\n\t\t\tpokemon.canTerastallize = this.actions.canTerastallize(pokemon);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target || target.species.name !== 'Terapagos-Terastal') return;\r\n\t\t\tif (this.effectState.resisted) return -1; // all hits of multi-hit move should be not very effective\r\n\t\t\tif (move.category === 'Status' || move.id === 'struggle') return;\r\n\t\t\tif (!target.runImmunity(move.type)) return; // immunity has priority\r\n\t\t\tif (target.hp < target.maxhp) return;\r\n\t\t\tthis.add('-activate', target, 'ability: Stellar Shell');\r\n\t\t\tthis.effectState.resisted = true;\r\n\t\t\treturn -1;\r\n\t\t},\r\n\t\tonAnyAfterMove() {\r\n\t\t\tthis.effectState.resisted = false;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, breakable: 1},\r\n\t\tname: \"Stellar Shell\",\r\n\t\trating: 3.5,\r\n\t\tshortDesc: \"Terapagos: Effects of Tera Shell. Terastallize to become Terapagos-Stellar.\",\r\n\t},\r\n\tteraformzero: {\r\n\t\tonAfterTerastallization(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.name !== 'Terapagos-Stellar') return;\r\n\t\t\tif (this.field.weather || this.field.terrain) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Teraform Zero');\r\n\t\t\t\tthis.field.clearWeather();\r\n\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySTAB(stab, source, target, move) {\r\n\t\t\tif (move.id === 'teraformzero') {\r\n\t\t\t\tif (source.terastallized) {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1.5;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Teraform Zero\",\r\n\t\trating: 3,\r\n\t\tnum: 309,\r\n\t},\r\n\tstamina: {\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tif (target === source) return;\r\n\t\t\tthis.boost({def: 1});\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stamina\",\r\n\t\trating: 4,\r\n\t\tnum: 192,\r\n\t},\r\n\tintimidate: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (this.effectState.intim && this.gameType !== 'doubles') return;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Intimidate', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t\tthis.effectState.intim = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tdelete this.effectState.intim;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Intimidate\",\r\n\t\trating: 3.5,\r\n\t\tnum: 22,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
