{
  "version": 3,
  "sources": ["../../../../data/mods/gen6megasrevisited/random-teams.ts"],
  "sourcesContent": ["/* eslint max-len: [\"error\", 240] */\r\n\r\nimport {TeamData} from '../../random-teams';\r\nimport RandomGen7Teams from '../gen7/random-teams';\r\nimport {PRNG, PRNGSeed} from '../../../sim/prng';\r\n\r\nexport class RandomGen6Teams extends RandomGen7Teams {\r\n\tconstructor(format: Format | string, prng: PRNG | PRNGSeed | null) {\r\n\t\tsuper(format, prng);\r\n\t}\r\n\r\n\trandomSet(species: string | Species, teamDetails: RandomTeamsTypes.TeamDetails = {}, isLead = false): RandomTeamsTypes.RandomSet {\r\n\t\tspecies = this.dex.species.get(species);\r\n\t\tlet forme = species.name;\r\n\r\n\t\tif (species.battleOnly && typeof species.battleOnly === 'string') {\r\n\t\t\t// Only change the forme. The species has custom moves, and may have different typing and requirements.\r\n\t\t\tforme = species.battleOnly;\r\n\t\t}\r\n\t\tif (species.cosmeticFormes) {\r\n\t\t\tforme = this.sample([species.name].concat(species.cosmeticFormes));\r\n\t\t}\r\n\r\n\t\tconst movePool = (species.randomBattleMoves || Object.keys(this.dex.data.Learnsets[species.id]!.learnset!)).slice();\r\n\t\tconst rejectedPool = [];\r\n\t\tconst moves: string[] = [];\r\n\t\tlet ability = '';\r\n\t\tlet item = '';\r\n\t\tconst evs = {\r\n\t\t\thp: 85,\r\n\t\t\tatk: 85,\r\n\t\t\tdef: 85,\r\n\t\t\tspa: 85,\r\n\t\t\tspd: 85,\r\n\t\t\tspe: 85,\r\n\t\t};\r\n\t\tlet ivs = {\r\n\t\t\thp: 31,\r\n\t\t\tatk: 31,\r\n\t\t\tdef: 31,\r\n\t\t\tspa: 31,\r\n\t\t\tspd: 31,\r\n\t\t\tspe: 31,\r\n\t\t};\r\n\t\tconst hasType: {[k: string]: true} = {};\r\n\t\thasType[species.types[0]] = true;\r\n\t\tif (species.types[1]) {\r\n\t\t\thasType[species.types[1]] = true;\r\n\t\t}\r\n\t\tconst hasAbility: {[k: string]: true} = {};\r\n\t\thasAbility[species.abilities[0]] = true;\r\n\t\tif (species.abilities[1]) {\r\n\t\t\thasAbility[species.abilities[1]] = true;\r\n\t\t}\r\n\t\tif (species.abilities['H']) {\r\n\t\t\thasAbility[species.abilities['H']] = true;\r\n\t\t}\r\n\t\tlet availableHP = 0;\r\n\t\tfor (const setMoveid of movePool) {\r\n\t\t\tif (setMoveid.startsWith('hiddenpower')) availableHP++;\r\n\t\t}\r\n\r\n\t\t// These moves can be used even if we aren't setting up to use them:\r\n\t\tconst SetupException = ['closecombat', 'diamondstorm', 'extremespeed', 'suckerpunch', 'superpower', 'dracometeor'];\r\n\r\n\t\tconst counterAbilities = ['Adaptability', 'Contrary', 'Iron Fist', 'Skill Link', 'Strong Jaw'];\r\n\t\tconst ateAbilities = ['Aerilate', 'Pixilate', 'Refrigerate'];\r\n\r\n\t\tlet hasMove: {[k: string]: boolean} = {};\r\n\t\tlet counter;\r\n\r\n\t\tdo {\r\n\t\t\t// Keep track of all moves we have:\r\n\t\t\thasMove = {};\r\n\t\t\tfor (const setMoveid of moves) {\r\n\t\t\t\tif (setMoveid.startsWith('hiddenpower')) {\r\n\t\t\t\t\thasMove['hiddenpower'] = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasMove[setMoveid] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Choose next 4 moves from learnset/viable moves and add them to moves list:\r\n\t\t\twhile (moves.length < 4 && movePool.length) {\r\n\t\t\t\tconst moveid = this.sampleNoReplace(movePool);\r\n\t\t\t\tif (moveid.substr(0, 11) === 'hiddenpower') {\r\n\t\t\t\t\tavailableHP--;\r\n\t\t\t\t\tif (hasMove['hiddenpower']) continue;\r\n\t\t\t\t\thasMove['hiddenpower'] = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasMove[moveid] = true;\r\n\t\t\t\t}\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\t\t\twhile (moves.length < 4 && rejectedPool.length) {\r\n\t\t\t\tconst moveid = this.sampleNoReplace(rejectedPool);\r\n\t\t\t\thasMove[moveid] = true;\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\r\n\t\t\tcounter = this.queryMoves(moves, hasType, hasAbility, movePool);\r\n\r\n\t\t\t// Iterate through the moves again, this time to cull them:\r\n\t\t\tfor (const [i, setMoveid] of moves.entries()) {\r\n\t\t\t\tconst move = this.dex.moves.get(setMoveid);\r\n\t\t\t\tconst moveid = move.id;\r\n\t\t\t\tlet rejected = false;\r\n\t\t\t\tlet isSetup = false;\r\n\r\n\t\t\t\tswitch (moveid) {\r\n\t\t\t\t// Not very useful without their supporting moves\r\n\t\t\t\tcase 'cottonguard': case 'defendorder':\r\n\t\t\t\t\tif (!counter['recovery'] && !hasMove['rest']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focuspunch':\r\n\t\t\t\t\tif (!hasMove['substitute'] || counter.damagingMoves.length < 2) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'perishsong':\r\n\t\t\t\t\tif (!hasMove['protect']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'reflect':\r\n\t\t\t\t\tif (!hasMove['calmmind'] && !hasMove['lightscreen']) rejected = true;\r\n\t\t\t\t\tif (movePool.length > 1) {\r\n\t\t\t\t\t\tconst screen = movePool.indexOf('lightscreen');\r\n\t\t\t\t\t\tif (screen >= 0) this.fastPop(movePool, screen);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rest':\r\n\t\t\t\t\tif (movePool.includes('sleeptalk')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sleeptalk':\r\n\t\t\t\t\tif (!hasMove['rest']) rejected = true;\r\n\t\t\t\t\tif (movePool.length > 1) {\r\n\t\t\t\t\t\tconst rest = movePool.indexOf('rest');\r\n\t\t\t\t\t\tif (rest >= 0) this.fastPop(movePool, rest);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'storedpower':\r\n\t\t\t\t\tif (!counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo': case 'trick':\r\n\t\t\t\t\tif (counter.Physical + counter.Special < 3 || !!counter['priority']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Set up once and only if we have the moves for it\r\n\t\t\t\tcase 'bellydrum': case 'bulkup': case 'coil': case 'curse': case 'dragondance': case 'honeclaws': case 'swordsdance':\r\n\t\t\t\t\tif (counter.setupType !== 'Physical' || counter['physicalsetup'] > 1) {\r\n\t\t\t\t\t\tif (!hasMove['growth'] || hasMove['sunnyday']) rejected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (counter.Physical + counter['physicalpool'] < 2 && (!hasMove['rest'] || !hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tif (moveid === 'bellydrum' && !hasAbility['Unburden'] && !counter['priority']) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'calmmind': case 'geomancy': case 'nastyplot': case 'quiverdance': case 'tailglow':\r\n\t\t\t\t\tif (counter.setupType !== 'Special' || counter['specialsetup'] > 1) rejected = true;\r\n\t\t\t\t\tif (counter.Special + counter['specialpool'] < 2 && (!hasMove['rest'] || !hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tif (hasType['Dark'] && hasMove['darkpulse']) {\r\n\t\t\t\t\t\tcounter.setupType = 'Special';\r\n\t\t\t\t\t\trejected = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'growth': case 'shellsmash': case 'workup':\r\n\t\t\t\t\tif (counter.setupType !== 'Mixed' || counter['mixedsetup'] > 1) rejected = true;\r\n\t\t\t\t\tif (counter.damagingMoves.length + counter['physicalpool'] + counter['specialpool'] < 2) rejected = true;\r\n\t\t\t\t\tif (moveid === 'growth' && !hasMove['sunnyday']) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'agility': case 'autotomize': case 'rockpolish': case 'shiftgear':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (!counter.setupType) isSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'flamecharge':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 3 && !counter.setupType) rejected = true;\r\n\t\t\t\t\tif (hasMove['dracometeor'] || hasMove['overheat']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Bad after setup\r\n\t\t\t\tcase 'circlethrow': case 'dragontail':\r\n\t\t\t\t\tif (counter.setupType && ((!hasMove['rest'] && !hasMove['sleeptalk']) || hasMove['stormthrow'])) rejected = true;\r\n\t\t\t\t\tif (!!counter['speedsetup'] || hasMove['encore'] || hasMove['raindance'] || hasMove['roar'] || hasMove['trickroom'] || hasMove['whirlwind']) rejected = true;\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tif ((counter[move.type] > 1 && counter.Status > 1) || (hasAbility['Sheer Force'] && !!counter['sheerforce'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'defog':\r\n\t\t\t\t\tif (counter.setupType || hasMove['spikes'] || hasMove['stealthrock'] || (hasMove['rest'] && hasMove['sleeptalk']) || teamDetails.defog) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fakeout': case 'tailwind':\r\n\t\t\t\t\tif (counter.setupType || hasMove['substitute'] || hasMove['switcheroo'] || hasMove['trick']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'foulplay':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || counter['Dark'] > 2 || hasMove['clearsmog'] || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (counter.damagingMoves.length - 1 === counter['priority']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'haze': case 'spikes':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['trickroom']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healbell': case 'technoblast':\r\n\t\t\t\t\tif (counter['speedsetup']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healingwish': case 'memento':\r\n\t\t\t\t\tif (counter.setupType || !!counter['recovery'] || hasMove['substitute']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed': case 'roar': case 'whirlwind':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['dragontail']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'nightshade': case 'seismictoss': case 'superfang':\r\n\t\t\t\t\tif (counter.damagingMoves.length > 1 || counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'protect':\r\n\t\t\t\t\tif (counter.setupType && !hasMove['wish']) rejected = true;\r\n\t\t\t\t\tif (hasMove['rest'] || hasMove['lightscreen'] && hasMove['reflect']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'pursuit':\r\n\t\t\t\t\tif (counter.setupType || counter.Status > 1 || counter['Dark'] > 2 || hasMove['knockoff'] && !hasType['Dark']) rejected = true;\r\n\t\t\t\t\tif (hasMove['nightslash']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rapidspin':\r\n\t\t\t\t\tif (counter.setupType || teamDetails.rapidSpin) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealthrock':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['rest'] || hasMove['substitute'] || hasMove['trickroom'] || teamDetails.stealthRock) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stickyweb':\r\n\t\t\t\t\tif (teamDetails.stickyWeb) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'toxicspikes':\r\n\t\t\t\t\tif (counter.setupType || teamDetails.toxicSpikes) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'trickroom':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || counter.damagingMoves.length < 2) rejected = true;\r\n\t\t\t\t\tif (hasMove['lightscreen'] || hasMove['reflect']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'uturn':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasType['Bug'] && counter.stab < 2 && counter.damagingMoves.length > 2 && !hasAbility['Adaptability'] && !hasAbility['Download']) rejected = true;\r\n\t\t\t\t\tif ((hasAbility['Speed Boost'] && hasMove['protect']) || (hasAbility['Protean'] && counter.Status > 2)) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'voltswitch':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['raindance'] || hasMove['uturn']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Bit redundant to have both\r\n\t\t\t\t// Attacks:\r\n\t\t\t\tcase 'bugbite': case 'bugbuzz': case 'infestation': case 'signalbeam':\r\n\t\t\t\t\tif (hasMove['uturn'] && !counter.setupType && !hasAbility['Tinted Lens']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'darkpulse':\r\n\t\t\t\t\tif ((hasMove['crunch'] || hasMove['knockoff'] || hasMove['hyperspacefury']) && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'suckerpunch':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || hasMove['glare'] || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (counter['Dark'] > 1 && !hasType['Dark']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dragonclaw':\r\n\t\t\t\t\tif (hasMove['dragontail'] || hasMove['outrage']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dracometeor':\r\n\t\t\t\t\tif (hasMove['swordsdance'] || counter.setupType === 'Physical' && counter['Dragon'] > 1) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dragonpulse': case 'spacialrend':\r\n\t\t\t\t\tif (hasMove['dracometeor'] || hasMove['outrage'] || hasMove['dragontail'] && !counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'outrage':\r\n\t\t\t\t\tif (hasMove['dracometeor'] && counter.damagingMoves.length < 3) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'thunderbolt':\r\n\t\t\t\t\tif (hasMove['discharge'] || (hasMove['voltswitch'] && hasMove['wildcharge'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dazzlinggleam':\r\n\t\t\t\t\tif (hasMove['playrough'] && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'aurasphere': case 'focusblast':\r\n\t\t\t\t\tif ((hasMove['closecombat'] || hasMove['superpower']) && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'drainpunch':\r\n\t\t\t\t\tif (!hasMove['bulkup'] && (hasMove['closecombat'] || hasMove['highjumpkick'])) rejected = true;\r\n\t\t\t\t\tif ((hasMove['focusblast'] || hasMove['superpower']) && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'closecombat': case 'highjumpkick':\r\n\t\t\t\t\tif ((hasMove['aurasphere'] || hasMove['focusblast'] || movePool.includes('aurasphere')) && counter.setupType === 'Special') rejected = true;\r\n\t\t\t\t\tif (hasMove['bulkup'] && hasMove['drainpunch']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'machpunch':\r\n\t\t\t\t\tif (hasType['Fighting'] && counter.stab < 2 && !hasAbility['Technician']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stormthrow':\r\n\t\t\t\t\tif (hasMove['circlethrow'] && hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'superpower':\r\n\t\t\t\t\tif (counter['Fighting'] > 1 && counter.setupType) rejected = true;\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk'] && !hasAbility['Contrary']) rejected = true;\r\n\t\t\t\t\tif (hasAbility['Contrary']) isSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'vacuumwave':\r\n\t\t\t\t\tif ((hasMove['closecombat'] || hasMove['machpunch']) && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fierydance': case 'firefang': case 'flamethrower':\r\n\t\t\t\t\tif (hasMove['blazekick'] || hasMove['overheat']) rejected = true;\r\n\t\t\t\t\tif ((hasMove['fireblast'] || hasMove['lavaplume']) && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tif (moveid === 'flamethrower' && hasMove['drainpunch'] && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fireblast':\r\n\t\t\t\t\tif (hasMove['flareblitz'] && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tif (hasMove['lavaplume'] && !counter.setupType && !counter['speedsetup']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'lavaplume':\r\n\t\t\t\t\tif (hasMove['firepunch'] || hasMove['fireblast'] && (counter.setupType || !!counter['speedsetup'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'airslash': case 'hurricane':\r\n\t\t\t\t\tif (hasMove['bravebird']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowball':\r\n\t\t\t\t\tif (hasMove['darkpulse'] || hasMove['hex'] && hasMove['willowisp']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowclaw':\r\n\t\t\t\t\tif (hasMove['shadowforce'] || hasMove['shadowsneak']) rejected = true;\r\n\t\t\t\t\tif (hasMove['shadowball'] && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowsneak':\r\n\t\t\t\t\tif (hasType['Ghost'] && species.types.length > 1 && counter.stab < 2) rejected = true;\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gigadrain': case 'powerwhip':\r\n\t\t\t\t\tif (hasMove['seedbomb'] || hasMove['petaldance'] || hasMove['sunnyday'] && hasMove['solarbeam']) rejected = true;\r\n\t\t\t\t\tif (counter.Special < 4 && !counter.setupType && hasMove['leafstorm']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leafblade': case 'woodhammer':\r\n\t\t\t\t\tif (hasMove['gigadrain'] && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tif (hasMove['hornleech'] && counter.Physical < 4) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leafstorm':\r\n\t\t\t\t\tif (counter['Grass'] > 1 && counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'solarbeam':\r\n\t\t\t\t\tif ((!hasAbility['Drought'] && !hasMove['sunnyday']) || hasMove['gigadrain'] || hasMove['leafstorm']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bonemerang': case 'precipiceblades':\r\n\t\t\t\t\tif (hasMove['earthquake']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'earthpower':\r\n\t\t\t\t\tif (hasMove['earthquake'] && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'freezedry':\r\n\t\t\t\t\tif (hasMove['icebeam'] || hasMove['icywind'] || counter.stab < 2) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bodyslam': case 'return':\r\n\t\t\t\t\tif (hasMove['doubleedge'] || hasMove['glare'] && hasMove['headbutt']) rejected = true;\r\n\t\t\t\t\tif (moveid === 'return' && hasMove['bodyslam']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'endeavor':\r\n\t\t\t\t\tif (!isLead && !hasAbility['Defeatist']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'explosion':\r\n\t\t\t\t\tif (counter.setupType || (hasAbility['Refrigerate'] && hasMove['freezedry']) || hasMove['wish']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'extremespeed':\r\n\t\t\t\t\tif (counter.setupType !== 'Physical' && hasMove['vacuumwave']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'facade':\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hiddenpower':\r\n\t\t\t\t\tif (hasMove['rest'] || !counter.stab && counter.damagingMoves.length < 2) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hypervoice':\r\n\t\t\t\t\tif (hasMove['blizzard'] || hasMove['return']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'judgment':\r\n\t\t\t\t\tif (counter.setupType !== 'Special' && counter.stab > 1) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'quickattack':\r\n\t\t\t\t\tif (hasType['Normal'] && (!counter.stab || counter['Normal'] > 2)) rejected = true;\r\n\t\t\t\t\tif (hasType['Rock'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'weatherball':\r\n\t\t\t\t\tif (!hasMove['raindance'] && !hasMove['sunnyday']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'poisonjab':\r\n\t\t\t\t\tif (hasMove['gunkshot']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'acidspray': case 'sludgewave':\r\n\t\t\t\t\tif (hasMove['poisonjab'] || hasMove['sludgebomb']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychic':\r\n\t\t\t\t\tif (hasMove['psyshock']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychocut': case 'zenheadbutt':\r\n\t\t\t\t\tif ((hasMove['psychic'] || hasMove['psyshock']) && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psyshock':\r\n\t\t\t\t\tconst psychic = movePool.indexOf('psychic');\r\n\t\t\t\t\tif (psychic >= 0) this.fastPop(movePool, psychic);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'headsmash':\r\n\t\t\t\t\tif (hasMove['stoneedge']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rockblast': case 'rockslide':\r\n\t\t\t\t\tif (hasMove['headsmash'] || hasMove['stoneedge']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bulletpunch':\r\n\t\t\t\t\tif (hasType['Steel'] && counter.stab < 2 && !hasAbility['Adaptability'] && !hasAbility['Technician']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'flashcannon':\r\n\t\t\t\t\tif ((hasMove['ironhead'] || hasMove['meteormash']) && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hydropump':\r\n\t\t\t\t\tif (hasMove['razorshell'] || hasMove['waterfall'] || (hasMove['rest'] && hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tif (hasMove['scald'] && (counter.Special < 4 || species.types.length > 1 && counter.stab < 3)) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'originpulse': case 'surf':\r\n\t\t\t\t\tif (hasMove['hydropump'] || hasMove['scald']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\t\tif (hasMove['waterfall'] || hasMove['waterpulse']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Status:\r\n\t\t\t\tcase 'glare': case 'headbutt':\r\n\t\t\t\t\tif (hasMove['bodyslam'] || !hasMove['glare']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stunspore': case 'thunderwave':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || (hasMove['rest'] && hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tif (hasMove['discharge'] || hasMove['spore'] || hasMove['toxic'] || hasMove['trickroom'] || hasMove['yawn']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'toxic':\r\n\t\t\t\t\tif (hasMove['hypnosis'] || hasMove['sleeppowder'] || hasMove['willowisp'] || hasMove['yawn']) rejected = true;\r\n\t\t\t\t\tif (counter.setupType || hasMove['flamecharge'] || hasMove['raindance']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'willowisp':\r\n\t\t\t\t\tif (hasMove['scald']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tif (counter.Physical + counter.Special < 2 || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (!hasType['Water'] && !counter['Water']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tif (counter.Physical + counter.Special < 2 || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (!hasAbility['Chlorophyll'] && !hasAbility['Flower Gift'] && !hasMove['solarbeam']) rejected = true;\r\n\t\t\t\t\tif (rejected && movePool.length > 1) {\r\n\t\t\t\t\t\tconst solarbeam = movePool.indexOf('solarbeam');\r\n\t\t\t\t\t\tif (solarbeam >= 0) this.fastPop(movePool, solarbeam);\r\n\t\t\t\t\t\tif (movePool.length > 1) {\r\n\t\t\t\t\t\t\tconst weatherball = movePool.indexOf('weatherball');\r\n\t\t\t\t\t\t\tif (weatherball >= 0) this.fastPop(movePool, weatherball);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'milkdrink': case 'moonlight': case 'painsplit': case 'recover': case 'roost': case 'synthesis':\r\n\t\t\t\t\tif (hasMove['leechseed'] || hasMove['rest'] || hasMove['wish']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'safeguard':\r\n\t\t\t\t\tif (hasMove['destinybond']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tif (hasMove['dracometeor'] || hasMove['leafstorm'] && !hasAbility['Contrary']) rejected = true;\r\n\t\t\t\t\tif (hasMove['pursuit'] || hasMove['rest'] || hasMove['taunt'] || hasMove['uturn'] || hasMove['voltswitch'] || hasMove['whirlwind']) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('copycat')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// This move doesn't satisfy our setup requirements:\r\n\t\t\t\tif ((move.category === 'Physical' && counter.setupType === 'Special') || (move.category === 'Special' && counter.setupType === 'Physical')) {\r\n\t\t\t\t\t// Reject STABs last in case the setup type changes later on\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tconst stabs = counter[species.types[0]] + (counter[species.types[1]] || 0);\r\n\t\t\t\t\tif (!SetupException.includes(moveid) && (!hasType[move.type] || stabs > 1 || counter[move.category] < 2)) rejected = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tcounter.setupType && !isSetup && counter.setupType !== 'Mixed' && move.category !== counter.setupType &&\r\n\t\t\t\t\tcounter[counter.setupType] < 2 && (move.category !== 'Status' || !move.flags.heal) &&\r\n\t\t\t\t\tmoveid !== 'sleeptalk' && !hasType['Dark'] && !hasMove['darkpulse']\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Mono-attacking with setup and RestTalk is allowed\r\n\t\t\t\t\t// Reject Status moves only if there is nothing else to reject\r\n\t\t\t\t\tif (move.category !== 'Status' || counter[counter.setupType] + counter.Status > 3 && counter['physicalsetup'] + counter['specialsetup'] < 2) {\r\n\t\t\t\t\t\trejected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (counter.setupType === 'Special' && moveid === 'hiddenpower' && species.types.length > 1 && counter['Special'] <= 2 && !hasType[move.type] && !counter['Physical'] && counter['specialpool']) {\r\n\t\t\t\t\t// Hidden Power isn't good enough\r\n\t\t\t\t\trejected = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pokemon should have moves that benefit their Type/Ability/Weather, as well as moves required by its forme\r\n\t\t\t\tif (!rejected && (\r\n\t\t\t\t\tcounter['physicalsetup'] + counter['specialsetup'] < 2 &&\r\n\t\t\t\t\t(!counter.setupType || counter.setupType === 'Mixed' || (move.category !== counter.setupType && move.category !== 'Status') || counter[counter.setupType] + counter.Status > 3)\r\n\t\t\t\t) && (\r\n\t\t\t\t\t(!counter.stab && !hasMove['nightshade'] && !hasMove['seismictoss'] && (\r\n\t\t\t\t\t\tspecies.types.length > 1 || (species.types[0] !== 'Normal' && species.types[0] !== 'Psychic') || !hasMove['icebeam'] || species.baseStats.spa >= species.baseStats.spd\r\n\t\t\t\t\t)) ||\r\n\t\t\t\t\t(hasType['Bug'] && (movePool.includes('megahorn') || movePool.includes('pinmissile'))) ||\r\n\t\t\t\t\t((hasType['Dark'] && !counter['Dark'] && !hasAbility['Protean']) || hasMove['suckerpunch'] && counter.stab < species.types.length) ||\r\n\t\t\t\t\t(hasType['Dragon'] && !counter['Dragon'] && !hasAbility['Aerilate'] && !hasAbility['Pixilate'] && !hasMove['rest'] && !hasMove['sleeptalk']) ||\r\n\t\t\t\t\t(hasType['Electric'] && !counter['Electric']) ||\r\n\t\t\t\t\t(hasType['Fairy'] && !counter['Fairy'] && !hasAbility['Pixilate'] && (counter.setupType || !counter['Status'])) ||\r\n\t\t\t\t\t(hasType['Fighting'] && !counter['Fighting'] && (species.baseStats.atk >= 110 || hasAbility['Justified'] || hasAbility['Unburden'] || counter.setupType || !counter['Status'])) ||\r\n\t\t\t\t\t(hasType['Fire'] && !counter['Fire']) ||\r\n\t\t\t\t\t(hasType['Flying'] && !counter['Flying'] && (hasAbility['Gale Wings'] || hasAbility['Serene Grace'] || hasType['Normal'] && movePool.includes('bravebird'))) ||\r\n\t\t\t\t\t(hasType['Ghost'] && !hasType['Dark'] && !counter['Ghost']) ||\r\n\t\t\t\t\t(hasType['Grass'] && !counter['Grass'] && !hasType['Fairy'] && !hasType['Poison'] && !hasType['Steel']) ||\r\n\t\t\t\t\t(hasType['Ground'] && !counter['Ground'] && !hasMove['rest'] && !hasMove['sleeptalk']) ||\r\n\t\t\t\t\t(hasType['Ice'] && !counter['Ice'] && !hasAbility['Refrigerate']) ||\r\n\t\t\t\t\t(hasType['Normal'] && (movePool.includes('boomburst') || hasAbility['Guts'] && movePool.includes('facade'))) ||\r\n\t\t\t\t\t(hasType['Psychic'] && !!counter['Psychic'] && !hasType['Flying'] && !hasAbility['Pixilate'] && counter.stab < species.types.length) ||\r\n\t\t\t\t\t(hasType['Rock'] && !counter['Rock'] && !hasType['Fairy'] && (hasAbility['Rock Head'] || counter.setupType === 'Physical')) ||\r\n\t\t\t\t\t(hasType['Steel'] && !counter['Steel'] && hasAbility['Technician']) ||\r\n\t\t\t\t\t(hasType['Water'] && (!counter['Water'] || !counter.stab) && !hasAbility['Protean']) ||\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t((hasAbility['Adaptability'] && !counter.setupType && species.types.length > 1 && (!counter[species.types[0]] || !counter[species.types[1]])) ||\r\n\t\t\t\t\t((hasAbility['Aerilate'] || hasAbility['Pixilate'] || hasAbility['Refrigerate'] && !hasMove['blizzard']) && !counter['Normal']) ||\r\n\t\t\t\t\t(hasAbility['Bad Dreams'] && movePool.includes('darkvoid')) ||\r\n\t\t\t\t\t(hasAbility['Contrary'] && !counter['contrary'] && species.name !== 'Shuckle') ||\r\n\t\t\t\t\t(hasAbility['Slow Start'] && movePool.includes('substitute')) ||\r\n\t\t\t\t\t(!counter.recovery && !counter.setupType && !hasMove['healingwish'] && (\r\n\t\t\t\t\t\tmovePool.includes('recover') || movePool.includes('roost') || movePool.includes('softboiled')\r\n\t\t\t\t\t) && (counter.Status > 1 || (species.nfe && !!counter['Status']))) ||\r\n\t\t\t\t\t(movePool.includes('stickyweb') && !counter.setupType && !teamDetails.stickyWeb) ||\r\n\t\t\t\t\t(species.requiredMove && movePool.includes(toID(species.requiredMove))))\r\n\t\t\t\t)) {\r\n\t\t\t\t\t// Reject Status or non-STAB\r\n\t\t\t\t\tif (!isSetup && !move.weather && !move.damage && (move.category !== 'Status' || !move.flags.heal) && moveid !== 'judgment' && moveid !== 'sleeptalk') {\r\n\t\t\t\t\t\tif (move.category === 'Status' || !hasType[move.type] || move.selfSwitch || move.basePower && move.basePower < 40 && !move.multihit) rejected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Sleep Talk shouldn't be selected without Rest\r\n\t\t\t\tif (moveid === 'rest' && rejected) {\r\n\t\t\t\t\tconst sleeptalk = movePool.indexOf('sleeptalk');\r\n\t\t\t\t\tif (sleeptalk >= 0) {\r\n\t\t\t\t\t\tif (movePool.length < 2) {\r\n\t\t\t\t\t\t\trejected = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.fastPop(movePool, sleeptalk);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove rejected moves from the move list\r\n\t\t\t\tif (rejected && (movePool.length - availableHP || availableHP && (moveid === 'hiddenpower' || !hasMove['hiddenpower']))) {\r\n\t\t\t\t\tif (move.category !== 'Status' && !move.damage && !move.flags.charge && (moveid !== 'hiddenpower' || !availableHP)) rejectedPool.push(moves[i]);\r\n\t\t\t\t\tmoves.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (rejected && rejectedPool.length) {\r\n\t\t\t\t\tmoves.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle Hidden Power IVs\r\n\t\t\t\tif (moveid === 'hiddenpower') {\r\n\t\t\t\t\tconst HPivs = this.dex.getType(move.type).HPivs;\r\n\t\t\t\t\tfor (const iv in HPivs) {\r\n\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\tivs[iv] = HPivs[iv];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (moves.length < 4 && (movePool.length || rejectedPool.length));\r\n\r\n\t\t// Moveset modifications\r\n\t\tif (hasMove['autotomize'] && hasMove['heavyslam']) {\r\n\t\t\tmoves[moves.indexOf('autotomize')] = 'rockpolish';\r\n\t\t}\r\n\t\tif (hasMove['raindance'] && hasMove['thunderbolt']) {\r\n\t\t\tmoves[moves.indexOf('thunderbolt')] = 'thunder';\r\n\t\t}\r\n\r\n\t\t// If Hidden Power has been removed, reset the IVs\r\n\t\tif (!hasMove['hiddenpower']) {\r\n\t\t\tivs = {hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31};\r\n\t\t}\r\n\r\n\t\tconst baseSpecies: Species = species.battleOnly && !species.requiredAbility ? this.dex.species.get(species.battleOnly as string) : species;\r\n\t\tconst abilities = Object.values(baseSpecies.abilities);\r\n\t\tabilities.sort((a, b) => this.dex.abilities.get(b).rating - this.dex.abilities.get(a).rating);\r\n\t\tlet ability0 = this.dex.abilities.get(abilities[0]);\r\n\t\tlet ability1 = this.dex.abilities.get(abilities[1]);\r\n\t\tlet ability2 = this.dex.abilities.get(abilities[2]);\r\n\t\tif (abilities[1]) {\r\n\t\t\tif (abilities[2] && ability1.rating <= ability2.rating && this.randomChance(1, 2)) {\r\n\t\t\t\t[ability1, ability2] = [ability2, ability1];\r\n\t\t\t}\r\n\t\t\tif (ability0.rating <= ability1.rating && this.randomChance(1, 2)) {\r\n\t\t\t\t[ability0, ability1] = [ability1, ability0];\r\n\t\t\t} else if (ability0.rating - 0.6 <= ability1.rating && this.randomChance(2, 3)) {\r\n\t\t\t\t[ability0, ability1] = [ability1, ability0];\r\n\t\t\t}\r\n\t\t\tability = ability0.name;\r\n\r\n\t\t\tlet rejectAbility: boolean;\r\n\t\t\tdo {\r\n\t\t\t\trejectAbility = false;\r\n\t\t\t\tif (counterAbilities.includes(ability)) {\r\n\t\t\t\t\t// Adaptability, Contrary, Iron Fist, Skill Link, Strong Jaw\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\trejectAbility = !counter[toID(ability)];\r\n\t\t\t\t} else if (ateAbilities.includes(ability)) {\r\n\t\t\t\t\trejectAbility = !counter['Normal'];\r\n\t\t\t\t} else if (ability === 'Battle Armor' || ability === 'Sturdy') {\r\n\t\t\t\t\trejectAbility = !!counter['recoil'] && !counter['recovery'];\r\n\t\t\t\t} else if (ability === 'Chlorophyll' || ability === 'Leaf Guard') {\r\n\t\t\t\t\trejectAbility = species.baseStats.spe > 100 || abilities.includes('Harvest') || (!hasMove['sunnyday'] && !teamDetails['sun']);\r\n\t\t\t\t} else if (ability === 'Competitive') {\r\n\t\t\t\t\trejectAbility = !counter['Special'] || (hasMove['rest'] && hasMove['sleeptalk']);\r\n\t\t\t\t} else if (ability === 'Compound Eyes' || ability === 'No Guard') {\r\n\t\t\t\t\trejectAbility = !counter['inaccurate'];\r\n\t\t\t\t} else if (ability === 'Defiant' || ability === 'Moxie') {\r\n\t\t\t\t\trejectAbility = !counter['Physical'] || hasMove['dragontail'];\r\n\t\t\t\t} else if (ability === 'Download' || ability === 'Hyper Cutter') {\r\n\t\t\t\t\trejectAbility = species.nfe;\r\n\t\t\t\t} else if (ability === 'Flare Boost' || ability === 'Gluttony' || ability === 'Moody') {\r\n\t\t\t\t\trejectAbility = true;\r\n\t\t\t\t} else if (ability === 'Harvest') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Frisk');\r\n\t\t\t\t} else if (ability === 'Hustle') {\r\n\t\t\t\t\trejectAbility = counter.Physical < 2;\r\n\t\t\t\t} else if (ability === 'Hydration' || ability === 'Rain Dish' || ability === 'Swift Swim') {\r\n\t\t\t\t\trejectAbility = species.baseStats.spe > 100 || !hasMove['raindance'] && !teamDetails['rain'];\r\n\t\t\t\t} else if (ability === 'Ice Body' || ability === 'Snow Cloak') {\r\n\t\t\t\t\trejectAbility = !teamDetails['hail'];\r\n\t\t\t\t} else if (ability === 'Immunity' || ability === 'Snow Warning') {\r\n\t\t\t\t\trejectAbility = hasMove['facade'] || hasMove['hypervoice'];\r\n\t\t\t\t} else if (ability === 'Intimidate') {\r\n\t\t\t\t\trejectAbility = hasMove['bodyslam'] || hasMove['rest'] || abilities.includes('Reckless') && counter['recoil'] > 1;\r\n\t\t\t\t} else if (ability === 'Lightning Rod') {\r\n\t\t\t\t\trejectAbility = species.types.includes('Ground');\r\n\t\t\t\t} else if (ability === 'Limber') {\r\n\t\t\t\t\trejectAbility = species.types.includes('Electric');\r\n\t\t\t\t} else if (ability === 'Magnet Pull') {\r\n\t\t\t\t\trejectAbility = !hasType['Electric'] && !hasMove['earthpower'];\r\n\t\t\t\t} else if (ability === 'Mold Breaker') {\r\n\t\t\t\t\trejectAbility = hasMove['acrobatics'] || abilities.includes('Adaptability') || abilities.includes('Sheer Force') && !!counter['sheerforce'];\r\n\t\t\t\t} else if (ability === 'Overgrow') {\r\n\t\t\t\t\trejectAbility = !counter['Grass'];\r\n\t\t\t\t} else if (ability === 'Poison Heal') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Technician') && !!counter['technician'];\r\n\t\t\t\t} else if (ability === 'Prankster') {\r\n\t\t\t\t\trejectAbility = !counter['Status'];\r\n\t\t\t\t} else if (ability === 'Pressure' || ability === 'Synchronize') {\r\n\t\t\t\t\trejectAbility = counter.Status < 2 || !!counter['recoil'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Reckless' || ability === 'Rock Head') {\r\n\t\t\t\t\trejectAbility = !counter['recoil'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Regenerator') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Magic Guard');\r\n\t\t\t\t} else if (ability === 'Sand Force' || ability === 'Sand Rush' || ability === 'Sand Veil') {\r\n\t\t\t\t\trejectAbility = !teamDetails['sand'];\r\n\t\t\t\t} else if (ability === 'Scrappy') {\r\n\t\t\t\t\trejectAbility = !species.types.includes('Normal');\r\n\t\t\t\t} else if (ability === 'Serene Grace') {\r\n\t\t\t\t\trejectAbility = !counter['serenegrace'] || species.name === 'Blissey';\r\n\t\t\t\t} else if (ability === 'Sheer Force') {\r\n\t\t\t\t\trejectAbility = !counter['sheerforce'] || abilities.includes('Guts') || hasMove['doubleedge'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Simple') {\r\n\t\t\t\t\trejectAbility = !counter.setupType && !hasMove['flamecharge'];\r\n\t\t\t\t} else if (ability === 'Solar Power') {\r\n\t\t\t\t\trejectAbility = !counter['Special'] || !teamDetails['sun'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Speed Boost') {\r\n\t\t\t\t\trejectAbility = hasMove['uturn'];\r\n\t\t\t\t} else if (ability === 'Swarm') {\r\n\t\t\t\t\trejectAbility = !counter['Bug'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Sweet Veil') {\r\n\t\t\t\t\trejectAbility = hasType['Grass'];\r\n\t\t\t\t} else if (ability === 'Technician') {\r\n\t\t\t\t\trejectAbility = !counter['technician'] || hasMove['tailslap'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Tinted Lens') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Prankster') || hasMove['protect'] || counter['damage'] >= counter.damagingMoves.length || (counter.Status > 2 && !counter.setupType);\r\n\t\t\t\t} else if (ability === 'Torrent') {\r\n\t\t\t\t\trejectAbility = !counter['Water'] || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Unaware') {\r\n\t\t\t\t\trejectAbility = hasMove['stealthrock'];\r\n\t\t\t\t} else if (ability === 'Unburden') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Prankster') || (!counter.setupType && !hasMove['acrobatics']) || !!species.isMega;\r\n\t\t\t\t} else if (ability === 'Water Absorb') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Volt Absorb') || hasMove['raindance'];\r\n\t\t\t\t} else if (ability === 'Weak Armor') {\r\n\t\t\t\t\trejectAbility = counter.setupType !== 'Physical';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rejectAbility) {\r\n\t\t\t\t\tif (ability === ability0.name && ability1.rating >= 1) {\r\n\t\t\t\t\t\tability = ability1.name;\r\n\t\t\t\t\t} else if (ability === ability1.name && abilities[2] && ability2.rating >= 1) {\r\n\t\t\t\t\t\tability = ability2.name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Default to the highest rated ability if all are rejected\r\n\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\tability = abilities[0];\r\n\t\t\t\t\t\trejectAbility = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while (rejectAbility);\r\n\r\n\t\t\tif (abilities.includes('Guts') && ability !== 'Quick Feet' && (hasMove['facade'] || hasMove['protect'] || (hasMove['rest'] && hasMove['sleeptalk']))) {\r\n\t\t\t\tability = 'Guts';\r\n\t\t\t}\r\n\t\t\tif (species.name === 'Ambipom' && !counter['technician']) {\r\n\t\t\t\t// If it doesn't qualify for Technician, Skill Link is useless on it\r\n\t\t\t\tability = 'Pickup';\r\n\t\t\t} else if (species.name === 'Lopunny' && hasMove['switcheroo'] && this.randomChance(2, 3)) {\r\n\t\t\t\tability = 'Klutz';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tability = ability0.name;\r\n\t\t}\r\n\r\n\t\titem = 'Leftovers';\r\n\t\tif (species.requiredItem) {\r\n\t\t\titem = species.requiredItem;\r\n\r\n\t\t// First, the extra high-priority items\r\n\t\t} else if (species.name === 'Marowak') {\r\n\t\t\titem = 'Thick Club';\r\n\t\t} else if (species.name === 'Dedenne') {\r\n\t\t\titem = 'Petaya Berry';\r\n\t\t} else if (species.name === 'Deoxys-Attack') {\r\n\t\t\titem = (isLead && hasMove['stealthrock']) ? 'Focus Sash' : 'Life Orb';\r\n\t\t} else if (species.name === 'Farfetch\\u2019d') {\r\n\t\t\titem = 'Stick';\r\n\t\t} else if (species.name === 'Genesect' && hasMove['technoblast']) {\r\n\t\t\titem = 'Douse Drive';\r\n\t\t} else if (species.baseSpecies === 'Pikachu') {\r\n\t\t\titem = 'Light Ball';\r\n\t\t} else if (species.name === 'Shedinja' || species.name === 'Smeargle') {\r\n\t\t\titem = 'Focus Sash';\r\n\t\t} else if (species.name === 'Unfezant' && counter['Physical'] >= 2) {\r\n\t\t\titem = 'Scope Lens';\r\n\t\t} else if (species.name === 'Unown') {\r\n\t\t\titem = 'Choice Specs';\r\n\t\t} else if (species.name === 'Wobbuffet') {\r\n\t\t\titem = hasMove['destinybond'] ? 'Custap Berry' : this.sample(['Leftovers', 'Sitrus Berry']);\r\n\t\t} else if (ability === 'Harvest') {\r\n\t\t\titem = 'Sitrus Berry';\r\n\t\t} else if (ability === 'Imposter') {\r\n\t\t\titem = 'Choice Scarf';\r\n\t\t} else if (hasMove['switcheroo'] || hasMove['trick']) {\r\n\t\t\tif (ability === 'Klutz') {\r\n\t\t\t\titem = 'Assault Vest';\r\n\t\t\t} else if (species.baseStats.spe >= 60 && species.baseStats.spe <= 108) {\r\n\t\t\t\titem = 'Choice Scarf';\r\n\t\t\t} else {\r\n\t\t\t\titem = (counter.Physical > counter.Special) ? 'Choice Band' : 'Choice Specs';\r\n\t\t\t}\r\n\t\t} else if (species.evos.length) {\r\n\t\t\titem = (ability === 'Technician' && counter.Physical >= 4) ? 'Choice Band' : 'Eviolite';\r\n\t\t} else if (hasMove['copycat'] && counter.Physical >= 3) {\r\n\t\t\titem = 'Choice Band';\r\n\t\t} else if (hasMove['bellydrum']) {\r\n\t\t\titem = 'Sitrus Berry';\r\n\t\t} else if (hasMove['geomancy'] || hasMove['solarbeam'] && ability !== 'Drought' && !hasMove['sunnyday'] && !teamDetails['sun']) {\r\n\t\t\titem = 'Power Herb';\r\n\t\t} else if (hasMove['shellsmash']) {\r\n\t\t\titem = (ability === 'Solid Rock' && !!counter['priority']) ? 'Weakness Policy' : 'White Herb';\r\n\t\t} else if ((ability === 'Guts' || hasMove['facade'] || hasMove['psychoshift']) && !hasMove['sleeptalk']) {\r\n\t\t\titem = hasMove['drainpunch'] ? 'Flame Orb' : 'Toxic Orb';\r\n\t\t} else if ((ability === 'Magic Guard' && counter.damagingMoves.length > 1) || (ability === 'Sheer Force' && !!counter['sheerforce'])) {\r\n\t\t\titem = 'Life Orb';\r\n\t\t} else if (ability === 'Poison Heal') {\r\n\t\t\titem = 'Toxic Orb';\r\n\t\t} else if (hasMove['acrobatics']) {\r\n\t\t\titem = 'Flying Gem';\r\n\t\t} else if (ability === 'Unburden') {\r\n\t\t\tif (hasMove['fakeout']) {\r\n\t\t\t\titem = 'Normal Gem';\r\n\t\t\t} else if (hasMove['dracometeor'] || hasMove['leafstorm'] || hasMove['overheat']) {\r\n\t\t\t\titem = 'White Herb';\r\n\t\t\t} else if (hasMove['substitute'] || counter.setupType) {\r\n\t\t\t\titem = 'Sitrus Berry';\r\n\t\t\t} else {\r\n\t\t\t\titem = 'Red Card';\r\n\t\t\t\tfor (const moveid of moves) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\t\t\tif (hasType[move.type] && move.basePower >= 90) {\r\n\t\t\t\t\t\titem = move.type + ' Gem';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (hasMove['raindance']) {\r\n\t\t\titem = (ability === 'Forecast') ? 'Damp Rock' : 'Life Orb';\r\n\t\t} else if (hasMove['sunnyday']) {\r\n\t\t\titem = (ability === 'Forecast') ? 'Heat Rock' : 'Life Orb';\r\n\t\t} else if (hasMove['lightscreen'] && hasMove['reflect']) {\r\n\t\t\titem = 'Light Clay';\r\n\t\t} else if (hasMove['rest'] && !hasMove['sleeptalk'] && ability !== 'Natural Cure' && ability !== 'Shed Skin') {\r\n\t\t\titem = 'Chesto Berry';\r\n\r\n\t\t// Medium priority\r\n\t\t} else if ((ability === 'Speed Boost' || ability === 'Stance Change') && counter.Physical + counter.Special > 2) {\r\n\t\t\titem = 'Life Orb';\r\n\t\t} else if (counter.Physical >= 4 && !hasMove['bodyslam'] && !hasMove['dragontail'] && !hasMove['fakeout'] && !hasMove['flamecharge'] && !hasMove['rapidspin'] && !hasMove['suckerpunch']) {\r\n\t\t\titem = (species.baseStats.atk >= 100 || ability === 'Huge Power') && species.baseStats.spe >= 60 && species.baseStats.spe <= 108 && !counter['priority'] && this.randomChance(2, 3) ? 'Choice Scarf' : 'Choice Band';\r\n\t\t} else if (counter.Special >= 4 && !hasMove['acidspray'] && !hasMove['clearsmog'] && !hasMove['fierydance']) {\r\n\t\t\titem = species.baseStats.spa >= 100 && species.baseStats.spe >= 60 && species.baseStats.spe <= 108 && !counter['priority'] && this.randomChance(2, 3) ? 'Choice Scarf' : 'Choice Specs';\r\n\t\t} else if (counter.Physical >= 3 && hasMove['defog'] && species.baseStats.spe >= 60 && species.baseStats.spe <= 108 && !counter['priority'] && !hasMove['foulplay']) {\r\n\t\t\titem = 'Choice Scarf';\r\n\t\t} else if (counter.Special >= 3 && hasMove['uturn'] && !hasMove['acidspray']) {\r\n\t\t\titem = 'Choice Specs';\r\n\t\t} else if (ability === 'Slow Start' || hasMove['bite'] || hasMove['clearsmog'] || hasMove['curse'] || hasMove['protect'] || hasMove['sleeptalk'] || species.name.includes('Rotom-')) {\r\n\t\t\titem = 'Leftovers';\r\n\t\t} else if ((hasMove['endeavor'] || hasMove['flail'] || hasMove['reversal']) && ability !== 'Sturdy') {\r\n\t\t\titem = (ability === 'Defeatist') ? 'Expert Belt' : 'Focus Sash';\r\n\t\t} else if (hasMove['outrage'] && counter.setupType) {\r\n\t\t\titem = 'Lum Berry';\r\n\t\t} else if (hasMove['substitute']) {\r\n\t\t\titem = counter.damagingMoves.length > 2 && !!counter['drain'] ? 'Life Orb' : 'Leftovers';\r\n\t\t} else if (this.dex.getEffectiveness('Ground', species) >= 2 && ability !== 'Levitate' && !hasMove['magnetrise']) {\r\n\t\t\titem = 'Air Balloon';\r\n\t\t} else if ((ability === 'Iron Barbs' || ability === 'Rough Skin') && this.randomChance(1, 2)) {\r\n\t\t\titem = 'Rocky Helmet';\r\n\t\t} else if (counter.Physical + counter.Special >= 4 && species.baseStats.spd >= 50 && species.baseStats.hp + species.baseStats.def + species.baseStats.spd >= 235) {\r\n\t\t\titem = 'Assault Vest';\r\n\t\t} else if (species.name === 'Palkia' && (hasMove['dracometeor'] || hasMove['spacialrend']) && hasMove['hydropump']) {\r\n\t\t\titem = 'Lustrous Orb';\r\n\t\t} else if (counter.damagingMoves.length >= 4) {\r\n\t\t\titem = (!!counter['Dragon'] || !!counter['Dark'] || !!counter['Normal']) ? 'Life Orb' : 'Expert Belt';\r\n\t\t} else if (counter.damagingMoves.length >= 3 && !!counter['speedsetup'] && species.baseStats.hp + species.baseStats.def + species.baseStats.spd >= 300) {\r\n\t\t\titem = 'Weakness Policy';\r\n\t\t} else if (isLead && ability !== 'Regenerator' && ability !== 'Sturdy' && !counter['recoil'] && !counter['recovery'] && species.baseStats.hp + species.baseStats.def + species.baseStats.spd <= 275) {\r\n\t\t\titem = 'Focus Sash';\r\n\r\n\t\t// This is the \"REALLY can't think of a good item\" cutoff\r\n\t\t} else if (ability === 'Gale Wings' && hasMove['bravebird']) {\r\n\t\t\titem = 'Sharp Beak';\r\n\t\t} else if (hasMove['stickyweb'] && ability === 'Sturdy') {\r\n\t\t\titem = 'Mental Herb';\r\n\t\t} else if (ability === 'Serene Grace' && hasMove['airslash'] && species.baseStats.spe > 100) {\r\n\t\t\titem = 'Metronome';\r\n\t\t} else if (ability === 'Sturdy' && hasMove['explosion'] && !counter['speedsetup']) {\r\n\t\t\titem = 'Custap Berry';\r\n\t\t} else if (ability === 'Super Luck') {\r\n\t\t\titem = 'Scope Lens';\r\n\t\t} else if (counter.damagingMoves.length >= 3 && ability !== 'Sturdy' && !hasMove['acidspray'] && !hasMove['dragontail'] && !hasMove['foulplay'] && !hasMove['rapidspin'] && !hasMove['superfang'] && !hasMove['uturn']) {\r\n\t\t\titem = (!!counter['speedsetup'] || hasMove['trickroom'] || species.baseStats.spe > 40 && species.baseStats.hp + species.baseStats.def + species.baseStats.spd <= 275) ? 'Life Orb' : 'Leftovers';\r\n\t\t}\r\n\r\n\t\t// For Trick / Switcheroo\r\n\t\tif (item === 'Leftovers' && hasType['Poison']) {\r\n\t\t\titem = 'Black Sludge';\r\n\t\t}\r\n\r\n\t\tconst levelScale: {[k: string]: number} = {\r\n\t\t\tuber: 78, ou: 80, uubl: 81, uu: 82, rubl: 83, ru: 84, nubl: 85, nu: 86, publ: 87, pu: 88,\r\n\t\t};\r\n\t\tconst customScale: {[k: string]: number} = {\r\n\t\t\t// Banned Ability\r\n\t\t\tDugtrio: 82, Gothitelle: 82, Ninetales: 84, Politoed: 84, Wobbuffet: 82,\r\n\t\t\t// Holistic judgement\r\n\t\t\tCastform: 100, Delibird: 100, 'Genesect-Douse': 80, Spinda: 100, Unown: 100,\r\n\t\t};\r\n\t\tconst tier = species.tier;\r\n\t\tlet level = levelScale[tier] || (species.nfe ? 90 : 80);\r\n\t\tif (customScale[forme]) level = customScale[forme];\r\n\r\n\t\t// Prepare optimal HP\r\n\t\tconst srWeakness = this.dex.getEffectiveness('Rock', species);\r\n\t\twhile (evs.hp > 1) {\r\n\t\t\tconst hp = Math.floor(Math.floor(2 * species.baseStats.hp + ivs.hp + Math.floor(evs.hp / 4) + 100) * level / 100 + 10);\r\n\t\t\tif (hasMove['substitute'] && hasMove['reversal']) {\r\n\t\t\t\t// Reversal users should be able to use four Substitutes\r\n\t\t\t\tif (hp % 4 > 0) break;\r\n\t\t\t} else if (hasMove['substitute'] && (item === 'Petaya Berry' || item === 'Sitrus Berry')) {\r\n\t\t\t\t// Three Substitutes should activate Petaya Berry for Dedenne\r\n\t\t\t\t// Two Substitutes should activate Sitrus Berry\r\n\t\t\t\tif (hp % 4 === 0) break;\r\n\t\t\t} else if (hasMove['bellydrum'] && item === 'Sitrus Berry') {\r\n\t\t\t\t// Belly Drum should activate Sitrus Berry\r\n\t\t\t\tif (hp % 2 === 0) break;\r\n\t\t\t} else {\r\n\t\t\t\t// Maximize number of Stealth Rock switch-ins\r\n\t\t\t\tif (srWeakness <= 0 || hp % (4 / srWeakness) > 0) break;\r\n\t\t\t}\r\n\t\t\tevs.hp -= 4;\r\n\t\t}\r\n\r\n\t\t// Minimize confusion damage\r\n\t\tif (!counter['Physical'] && !hasMove['copycat'] && !hasMove['transform']) {\r\n\t\t\tevs.atk = 0;\r\n\t\t\tivs.atk = hasMove['hiddenpower'] ? ivs.atk - 30 : 0;\r\n\t\t}\r\n\r\n\t\tif (hasMove['gyroball'] || hasMove['metalburst'] || hasMove['trickroom']) {\r\n\t\t\tevs.spe = 0;\r\n\t\t\tivs.spe = hasMove['hiddenpower'] ? ivs.spe - 30 : 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tname: species.baseSpecies,\r\n\t\t\tspecies: forme,\r\n\t\t\tgender: species.gender,\r\n\t\t\tmoves: moves,\r\n\t\t\tability: ability,\r\n\t\t\tevs: evs,\r\n\t\t\tivs: ivs,\r\n\t\t\titem: item,\r\n\t\t\tlevel: level,\r\n\t\t\tshiny: this.randomChance(1, 1024),\r\n\t\t};\r\n\t}\r\n\r\n\trandomFactorySet(species: Species, teamData: RandomTeamsTypes.FactoryTeamDetails, tier: string): RandomTeamsTypes.RandomFactorySet | null {\r\n\t\tconst id = toID(species.name);\r\n\t\t// const flags = this.randomFactorySets[tier][id].flags;\r\n\t\tconst setList = this.randomFactorySets[tier][id].sets;\r\n\r\n\t\tconst itemsMax: {[K: string]: number} = {choicespecs: 1, choiceband: 1, choicescarf: 1};\r\n\t\tconst movesMax: {[k: string]: number} = {rapidspin: 1, batonpass: 1, stealthrock: 1, defog: 1, spikes: 1, toxicspikes: 1};\r\n\t\tconst requiredMoves: {[k: string]: string} = {stealthrock: 'hazardSet', rapidspin: 'hazardClear', defog: 'hazardClear'};\r\n\t\tconst weatherAbilitiesRequire: {[k: string]: string} = {\r\n\t\t\thydration: 'raindance', swiftswim: 'raindance',\r\n\t\t\tleafguard: 'sunnyday', solarpower: 'sunnyday', chlorophyll: 'sunnyday',\r\n\t\t\tsandforce: 'sandstorm', sandrush: 'sandstorm', sandveil: 'sandstorm',\r\n\t\t\tsnowcloak: 'hail',\r\n\t\t};\r\n\t\tconst weatherAbilities = ['drizzle', 'drought', 'snowwarning', 'sandstream'];\r\n\r\n\t\t// Build a pool of eligible sets, given the team partners\r\n\t\t// Also keep track of sets with moves the team requires\r\n\t\tlet effectivePool: {set: AnyObject, moveVariants?: number[], itemVariants?: number, abilityVariants?: number}[] = [];\r\n\t\tconst priorityPool = [];\r\n\t\tfor (const curSet of setList) {\r\n\t\t\tconst itemData = this.dex.items.get(curSet.item);\r\n\t\t\tif (teamData.megaCount > 0 && itemData.megaStone) continue; // reject 2+ mega stones\r\n\t\t\tif (itemsMax[itemData.id] && teamData.has[itemData.id] >= itemsMax[itemData.id]) continue;\r\n\r\n\t\t\tconst abilityData = this.dex.abilities.get(curSet.ability);\r\n\t\t\tif (weatherAbilitiesRequire[abilityData.id] && teamData.weather !== weatherAbilitiesRequire[abilityData.id]) continue;\r\n\t\t\tif (teamData.weather && weatherAbilities.includes(abilityData.id)) continue; // reject 2+ weather setters\r\n\r\n\t\t\tlet reject = false;\r\n\t\t\tlet hasRequiredMove = false;\r\n\t\t\tconst curSetVariants = [];\r\n\t\t\tfor (const move of curSet.moves) {\r\n\t\t\t\tconst variantIndex = this.random(move.length);\r\n\t\t\t\tconst moveId = toID(move[variantIndex]);\r\n\t\t\t\tif (movesMax[moveId] && teamData.has[moveId] >= movesMax[moveId]) {\r\n\t\t\t\t\treject = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (requiredMoves[moveId] && !teamData.has[requiredMoves[moveId]]) {\r\n\t\t\t\t\thasRequiredMove = true;\r\n\t\t\t\t}\r\n\t\t\t\tcurSetVariants.push(variantIndex);\r\n\t\t\t}\r\n\t\t\tif (reject) continue;\r\n\t\t\teffectivePool.push({set: curSet, moveVariants: curSetVariants});\r\n\t\t\tif (hasRequiredMove) priorityPool.push({set: curSet, moveVariants: curSetVariants});\r\n\t\t}\r\n\t\tif (priorityPool.length) effectivePool = priorityPool;\r\n\r\n\t\tif (!effectivePool.length) {\r\n\t\t\tif (!teamData.forceResult) return null;\r\n\t\t\tfor (const curSet of setList) {\r\n\t\t\t\teffectivePool.push({set: curSet});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst setData = this.sample(effectivePool);\r\n\t\tconst moves = [];\r\n\t\tfor (const [i, moveSlot] of setData.set.moves.entries()) {\r\n\t\t\tmoves.push(setData.moveVariants ? moveSlot[setData.moveVariants[i]] : this.sample(moveSlot));\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tname: setData.set.name || species.baseSpecies,\r\n\t\t\tspecies: setData.set.species,\r\n\t\t\tgender: setData.set.gender || species.gender || (this.randomChance(1, 2) ? 'M' : 'F'),\r\n\t\t\titem: setData.set.item || '',\r\n\t\t\tability: setData.set.ability || species.abilities['0'],\r\n\t\t\tshiny: typeof setData.set.shiny === 'undefined' ? this.randomChance(1, 1024) : setData.set.shiny,\r\n\t\t\tlevel: 100,\r\n\t\t\thappiness: typeof setData.set.happiness === 'undefined' ? 255 : setData.set.happiness,\r\n\t\t\tevs: setData.set.evs || {hp: 84, atk: 84, def: 84, spa: 84, spd: 84, spe: 84},\r\n\t\t\tivs: setData.set.ivs || {hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31},\r\n\t\t\tnature: setData.set.nature || 'Serious',\r\n\t\t\tmoves: moves,\r\n\t\t};\r\n\t}\r\n\r\n\trandomFactoryTeam(side: PlayerOptions, depth = 0): RandomTeamsTypes.RandomFactorySet[] {\r\n\t\tconst forceResult = (depth >= 4);\r\n\r\n\t\t// The teams generated depend on the tier choice in such a way that\r\n\t\t// no exploitable information is leaked from rolling the tier in getTeam(p1).\r\n\t\tif (!this.factoryTier) this.factoryTier = this.sample(['Uber', 'OU', 'UU', 'RU', 'NU', 'PU']);\r\n\t\tconst chosenTier = this.factoryTier;\r\n\r\n\t\tconst pokemon = [];\r\n\r\n\t\tconst pokemonPool = Object.keys(this.randomFactorySets[chosenTier]);\r\n\r\n\t\tconst teamData: TeamData = {typeCount: {}, typeComboCount: {}, baseFormes: {}, megaCount: 0, has: {}, forceResult: forceResult, weaknesses: {}, resistances: {}};\r\n\t\tconst requiredMoveFamilies = ['hazardSet', 'hazardClear'];\r\n\t\tconst requiredMoves: {[k: string]: string} = {stealthrock: 'hazardSet', rapidspin: 'hazardClear', defog: 'hazardClear'};\r\n\t\tconst weatherAbilitiesSet: {[k: string]: string} = {drizzle: 'raindance', drought: 'sunnyday', snowwarning: 'hail', sandstream: 'sandstorm'};\r\n\t\tconst resistanceAbilities: {[k: string]: string[]} = {\r\n\t\t\tdryskin: ['Water'], waterabsorb: ['Water'], stormdrain: ['Water'],\r\n\t\t\tflashfire: ['Fire'], heatproof: ['Fire'],\r\n\t\t\tlightningrod: ['Electric'], motordrive: ['Electric'], voltabsorb: ['Electric'],\r\n\t\t\tsapsipper: ['Grass'],\r\n\t\t\tthickfat: ['Ice', 'Fire'],\r\n\t\t\tlevitate: ['Ground'],\r\n\t\t};\r\n\r\n\t\twhile (pokemonPool.length && pokemon.length < 6) {\r\n\t\t\tconst species = this.dex.species.get(this.sampleNoReplace(pokemonPool));\r\n\t\t\tif (!species.exists) continue;\r\n\r\n\t\t\tconst speciesFlags = this.randomFactorySets[chosenTier][species.id].flags;\r\n\r\n\t\t\t// Limit to one of each species (Species Clause)\r\n\t\t\tif (teamData.baseFormes[species.baseSpecies]) continue;\r\n\r\n\t\t\t// Limit the number of Megas to one\r\n\t\t\tif (teamData.megaCount >= 1 && speciesFlags.megaOnly) continue;\r\n\r\n\t\t\t// Limit 2 of any type\r\n\t\t\tconst types = species.types;\r\n\t\t\tlet skip = false;\r\n\t\t\tfor (const type of types) {\r\n\t\t\t\tif (teamData.typeCount[type] > 1 && this.randomChance(4, 5)) {\r\n\t\t\t\t\tskip = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (skip) continue;\r\n\r\n\t\t\tconst set = this.randomFactorySet(species, teamData, chosenTier);\r\n\t\t\tif (!set) continue;\r\n\r\n\t\t\t// Limit 1 of any type combination\r\n\t\t\tlet typeCombo = types.slice().sort().join();\r\n\t\t\tif (set.ability === 'Drought' || set.ability === 'Drizzle') {\r\n\t\t\t\t// Drought and Drizzle don't count towards the type combo limit\r\n\t\t\t\ttypeCombo = set.ability;\r\n\t\t\t}\r\n\t\t\tif (typeCombo in teamData.typeComboCount) continue;\r\n\r\n\t\t\t// Okay, the set passes, add it to our team\r\n\t\t\tpokemon.push(set);\r\n\r\n\t\t\t// Now that our Pokemon has passed all checks, we can update team data:\r\n\t\t\tfor (const type of types) {\r\n\t\t\t\tif (type in teamData.typeCount) {\r\n\t\t\t\t\tteamData.typeCount[type]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tteamData.typeCount[type] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tteamData.typeComboCount[typeCombo] = 1;\r\n\r\n\t\t\tteamData.baseFormes[species.baseSpecies] = 1;\r\n\r\n\t\t\tconst itemData = this.dex.items.get(set.item);\r\n\t\t\tif (itemData.megaStone) teamData.megaCount++;\r\n\t\t\tif (itemData.id in teamData.has) {\r\n\t\t\t\tteamData.has[itemData.id]++;\r\n\t\t\t} else {\r\n\t\t\t\tteamData.has[itemData.id] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tconst abilityData = this.dex.abilities.get(set.ability);\r\n\t\t\tif (abilityData.id in weatherAbilitiesSet) {\r\n\t\t\t\tteamData.weather = weatherAbilitiesSet[abilityData.id];\r\n\t\t\t}\r\n\r\n\t\t\tfor (const move of set.moves) {\r\n\t\t\t\tconst moveId = toID(move);\r\n\t\t\t\tif (moveId in teamData.has) {\r\n\t\t\t\t\tteamData.has[moveId]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tteamData.has[moveId] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (moveId in requiredMoves) {\r\n\t\t\t\t\tteamData.has[requiredMoves[moveId]] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (const typeName in this.dex.data.TypeChart) {\r\n\t\t\t\t// Cover any major weakness (3+) with at least one resistance\r\n\t\t\t\tif (teamData.resistances[typeName] >= 1) continue;\r\n\t\t\t\tif (resistanceAbilities[abilityData.id] && resistanceAbilities[abilityData.id].includes(typeName) || !this.dex.getImmunity(typeName, types)) {\r\n\t\t\t\t\t// Heuristic: assume that Pokemon with these abilities don't have (too) negative typing.\r\n\t\t\t\t\tteamData.resistances[typeName] = (teamData.resistances[typeName] || 0) + 1;\r\n\t\t\t\t\tif (teamData.resistances[typeName] >= 1) teamData.weaknesses[typeName] = 0;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst typeMod = this.dex.getEffectiveness(typeName, types);\r\n\t\t\t\tif (typeMod < 0) {\r\n\t\t\t\t\tteamData.resistances[typeName] = (teamData.resistances[typeName] || 0) + 1;\r\n\t\t\t\t\tif (teamData.resistances[typeName] >= 1) teamData.weaknesses[typeName] = 0;\r\n\t\t\t\t} else if (typeMod > 0) {\r\n\t\t\t\t\tteamData.weaknesses[typeName] = (teamData.weaknesses[typeName] || 0) + 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pokemon.length < 6) return this.randomFactoryTeam(side, ++depth);\r\n\r\n\t\t// Quality control\r\n\t\tif (!teamData.forceResult) {\r\n\t\t\tfor (const requiredFamily of requiredMoveFamilies) {\r\n\t\t\t\tif (!teamData.has[requiredFamily]) return this.randomFactoryTeam(side, ++depth);\r\n\t\t\t}\r\n\t\t\tfor (const type in teamData.weaknesses) {\r\n\t\t\t\tif (teamData.weaknesses[type] >= 3) return this.randomFactoryTeam(side, ++depth);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pokemon;\r\n\t}\r\n}\r\n\r\nexport default RandomGen6Teams;\r\n"],
  "mappings": "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",
  "names": ["import_random_teams", "RandomGen7Teams"]
}
