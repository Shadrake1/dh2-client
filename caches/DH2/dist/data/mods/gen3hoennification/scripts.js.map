{
  "version": 3,
  "sources": ["../../../../data/mods/gen3hoennification/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\r\n\tinherit: 'gen4',\r\n\tgen: 3,\r\n\tinit() {\r\n\t\tconst specialTypes = ['Fire', 'Water', 'Grass', 'Ice', 'Electric', 'Dark', 'Psychic', 'Dragon'];\r\n\t\tlet newCategory = '';\r\n\t\tfor (const i in this.data.Movedex) {\r\n\t\t\tif (!this.data.Movedex[i]) console.log(i);\r\n\t\t\tif (this.data.Movedex[i].category === 'Status') continue;\r\n\t\t\tnewCategory = specialTypes.includes(this.data.Movedex[i].type) ? 'Special' : 'Physical';\r\n\t\t\tif (newCategory !== this.data.Movedex[i].category) {\r\n\t\t\t\tthis.modData('Movedex', i).category = newCategory;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tuseMoveInner(moveOrMoveName, pokemon, target, sourceEffect, zMove) {\r\n\t\tif (!sourceEffect && this.effect.id) sourceEffect = this.effect;\r\n\t\tif (sourceEffect && sourceEffect.id === 'instruct') sourceEffect = null;\r\n\r\n\t\tlet move = this.dex.getActiveMove(moveOrMoveName);\r\n\r\n\t\tif (this.activeMove) {\r\n\t\t\tmove.priority = this.activeMove.priority;\r\n\t\t}\r\n\t\tconst baseTarget = move.target;\r\n\t\tif (target === undefined) target = this.getRandomTarget(pokemon, move);\r\n\t\tif (move.target === 'self' || move.target === 'allies') {\r\n\t\t\ttarget = pokemon;\r\n\t\t}\r\n\t\tif (sourceEffect) {\r\n\t\t\tmove.sourceEffect = sourceEffect.id;\r\n\t\t\tmove.ignoreAbility = false;\r\n\t\t}\r\n\t\tlet moveResult = false;\r\n\r\n\t\tthis.setActiveMove(move, pokemon, target);\r\n\r\n\t\tthis.singleEvent('ModifyMove', move, null, pokemon, target, move, move);\r\n\t\tif (baseTarget !== move.target) {\r\n\t\t\t// Target changed in ModifyMove, so we must adjust it here\r\n\t\t\t// Adjust before the next event so the correct target is passed to the\r\n\t\t\t// event\r\n\t\t\ttarget = this.getRandomTarget(pokemon, move);\r\n\t\t}\r\n\t\tmove = this.runEvent('ModifyMove', pokemon, target, move, move);\r\n\t\tif (baseTarget !== move.target) {\r\n\t\t\t// Adjust again\r\n\t\t\ttarget = this.getRandomTarget(pokemon, move);\r\n\t\t}\r\n\t\tif (!move || pokemon.fainted) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet attrs = '';\r\n\r\n\t\tlet movename = move.name;\r\n\t\tif (move.id === 'hiddenpower') movename = 'Hidden Power';\r\n\t\tif (sourceEffect) attrs += `|[from]${this.dex.getEffect(sourceEffect)}`;\r\n\t\tthis.addMove('move', pokemon, movename, target + attrs);\r\n\r\n\t\tif (!target) {\r\n\t\t\tthis.attrLastMove('[notarget]');\r\n\t\t\tthis.add('-notarget', pokemon);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst {targets, pressureTargets} = pokemon.getMoveTargets(move, target);\r\n\r\n\t\tif (!sourceEffect || sourceEffect.id === 'pursuit') {\r\n\t\t\tlet extraPP = 0;\r\n\t\t\tfor (const source of pressureTargets) {\r\n\t\t\t\tconst ppDrop = this.runEvent('DeductPP', source, pokemon, move);\r\n\t\t\t\tif (ppDrop !== true) {\r\n\t\t\t\t\textraPP += ppDrop || 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (extraPP > 0) {\r\n\t\t\t\tpokemon.deductPP(move, extraPP);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.singleEvent('TryMove', move, null, pokemon, target, move) ||\r\n\t\t\t!this.runEvent('TryMove', pokemon, target, move)) {\r\n\t\t\tmove.mindBlownRecoil = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.singleEvent('UseMoveMessage', move, null, pokemon, target, move);\r\n\r\n\t\tif (move.ignoreImmunity === undefined) {\r\n\t\t\tmove.ignoreImmunity = (move.category === 'Status');\r\n\t\t}\r\n\r\n\t\tif (move.selfdestruct === 'always') {\r\n\t\t\tthis.faint(pokemon, pokemon, move);\r\n\t\t}\r\n\r\n\t\tlet damage: number | false | undefined | '' = false;\r\n\t\tif (move.target === 'all' || move.target === 'foeSide' || move.target === 'allySide' || move.target === 'allyTeam') {\r\n\t\t\tdamage = this.tryMoveHit(target, pokemon, move);\r\n\t\t\tif (damage === this.NOT_FAIL) pokemon.moveThisTurnResult = null;\r\n\t\t\tif (damage || damage === 0 || damage === undefined) moveResult = true;\r\n\t\t} else if (move.target === 'allAdjacent' || move.target === 'allAdjacentFoes') {\r\n\t\t\tif (!targets.length) {\r\n\t\t\t\tthis.attrLastMove('[notarget]');\r\n\t\t\t\tthis.add('-notarget', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (targets.length > 1) move.spreadHit = true;\r\n\t\t\tconst hitSlots = [];\r\n\t\t\tfor (const source of targets) {\r\n\t\t\t\tconst hitResult = this.tryMoveHit(source, pokemon, move);\r\n\t\t\t\tif (hitResult || hitResult === 0 || hitResult === undefined) {\r\n\t\t\t\t\tmoveResult = true;\r\n\t\t\t\t\thitSlots.push(source.getSlot());\r\n\t\t\t\t}\r\n\t\t\t\tif (damage) {\r\n\t\t\t\t\tdamage += hitResult || 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (damage !== false || hitResult !== this.NOT_FAIL) damage = hitResult;\r\n\t\t\t\t}\r\n\t\t\t\tif (damage === this.NOT_FAIL) pokemon.moveThisTurnResult = null;\r\n\t\t\t}\r\n\t\t\tif (move.spreadHit) this.attrLastMove('[spread] ' + hitSlots.join(','));\r\n\t\t} else {\r\n\t\t\ttarget = targets[0];\r\n\t\t\tlet lacksTarget = !target || target.fainted;\r\n\t\t\tif (!lacksTarget) {\r\n\t\t\t\tif (['adjacentFoe', 'adjacentAlly', 'normal', 'randomNormal'].includes(move.target)) {\r\n\t\t\t\t\tlacksTarget = !this.isAdjacent(target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (lacksTarget && !move.isFutureMove) {\r\n\t\t\t\tthis.attrLastMove('[notarget]');\r\n\t\t\t\tthis.add('-notarget', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdamage = this.tryMoveHit(target, pokemon, move);\r\n\t\t\tif (damage === this.NOT_FAIL) pokemon.moveThisTurnResult = null;\r\n\t\t\tif (damage || damage === 0 || damage === undefined) moveResult = true;\r\n\t\t}\r\n\t\tif (move.selfBoost && moveResult) this.moveHit(pokemon, pokemon, move, move.selfBoost, false, true);\r\n\t\tif (!pokemon.hp) {\r\n\t\t\tthis.faint(pokemon, pokemon, move);\r\n\t\t}\r\n\r\n\t\tif (!moveResult) {\r\n\t\t\tthis.singleEvent('MoveFail', move, null, target, pokemon, move);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!move.negateSecondary && !(move.hasSheerForce && pokemon.hasAbility('sheerforce'))) {\r\n\t\t\tthis.singleEvent('AfterMoveSecondarySelf', move, null, pokemon, target, move);\r\n\t\t\tthis.runEvent('AfterMoveSecondarySelf', pokemon, target, move);\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\ttryMoveHit(target, pokemon, move) {\r\n\t\tthis.setActiveMove(move, pokemon, target);\r\n\t\tlet naturalImmunity = false;\r\n\t\tlet accPass = true;\r\n\r\n\t\tlet hitResult = this.singleEvent('PrepareHit', move, {}, target, pokemon, move);\r\n\t\tif (!hitResult) {\r\n\t\t\tif (hitResult === false) {\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.runEvent('PrepareHit', pokemon, target, move);\r\n\r\n\t\tif (!this.singleEvent('Try', move, null, pokemon, target, move)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (move.target === 'all' || move.target === 'foeSide' || move.target === 'allySide' || move.target === 'allyTeam') {\r\n\t\t\tif (move.target === 'all') {\r\n\t\t\t\thitResult = this.runEvent('TryHitField', target, pokemon, move);\r\n\t\t\t} else {\r\n\t\t\t\thitResult = this.runEvent('TryHitSide', target, pokemon, move);\r\n\t\t\t}\r\n\t\t\tif (!hitResult) {\r\n\t\t\t\tif (hitResult === false) {\r\n\t\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn this.moveHit(target, pokemon, move);\r\n\t\t}\r\n\r\n\t\thitResult = this.runEvent('Invulnerability', target, pokemon, move);\r\n\t\tif (hitResult === false) {\r\n\t\t\tif (!move.spreadHit) this.attrLastMove('[miss]');\r\n\t\t\tthis.add('-miss', pokemon, target);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (move.ignoreImmunity === undefined) {\r\n\t\t\tmove.ignoreImmunity = (move.category === 'Status');\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!move.ignoreImmunity || (move.ignoreImmunity !== true && !move.ignoreImmunity[move.type])) &&\r\n\t\t\t!target.runImmunity(move.type)\r\n\t\t) {\r\n\t\t\tnaturalImmunity = true;\r\n\t\t} else {\r\n\t\t\thitResult = this.singleEvent('TryImmunity', move, {}, target, pokemon, move);\r\n\t\t\tif (hitResult === false) {\r\n\t\t\t\tnaturalImmunity = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst boostTable = [1, 4 / 3, 5 / 3, 2, 7 / 3, 8 / 3, 3];\r\n\r\n\t\t// calculate true accuracy\r\n\t\tlet accuracy = move.accuracy;\r\n\t\tlet boosts: SparseBoostsTable = {};\r\n\t\tlet boost: number;\r\n\t\tif (accuracy !== true) {\r\n\t\t\tif (!move.ignoreAccuracy) {\r\n\t\t\t\tboosts = this.runEvent('ModifyBoost', pokemon, null, null, Object.assign({}, pokemon.boosts));\r\n\t\t\t\tboost = this.clampIntRange(boosts['accuracy'], -6, 6);\r\n\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\taccuracy *= boostTable[boost];\r\n\t\t\t\t} else {\r\n\t\t\t\t\taccuracy /= boostTable[-boost];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!move.ignoreEvasion) {\r\n\t\t\t\tboosts = this.runEvent('ModifyBoost', target, null, null, Object.assign({}, target.boosts));\r\n\t\t\t\tboost = this.clampIntRange(boosts['evasion'], -6, 6);\r\n\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\taccuracy /= boostTable[boost];\r\n\t\t\t\t} else if (boost < 0) {\r\n\t\t\t\t\taccuracy *= boostTable[-boost];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.ohko) { // bypasses accuracy modifiers\r\n\t\t\tif (!target.isSemiInvulnerable()) {\r\n\t\t\t\taccuracy = 30;\r\n\t\t\t\tif (pokemon.level >= target.level && (move.ohko === true || !target.hasType(move.ohko))) {\r\n\t\t\t\t\taccuracy += (pokemon.level - target.level);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-immune', target, '[ohko]');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\taccuracy = this.runEvent('ModifyAccuracy', target, pokemon, move, accuracy);\r\n\t\t}\r\n\t\tif (move.alwaysHit) {\r\n\t\t\taccuracy = true; // bypasses ohko accuracy modifiers\r\n\t\t} else {\r\n\t\t\taccuracy = this.runEvent('Accuracy', target, pokemon, move, accuracy);\r\n\t\t}\r\n\t\tif (accuracy !== true && !this.randomChance(accuracy, 100)) {\r\n\t\t\taccPass = false;\r\n\t\t}\r\n\r\n\t\tif (accPass) {\r\n\t\t\thitResult = this.runEvent('TryHit', target, pokemon, move);\r\n\t\t\tif (!hitResult) {\r\n\t\t\t\tif (hitResult === false) {\r\n\t\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (naturalImmunity) {\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (naturalImmunity) {\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t} else {\r\n\t\t\t\tif (!move.spreadHit) this.attrLastMove('[miss]');\r\n\t\t\t\tthis.add('-miss', pokemon, target);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tmove.totalDamage = 0;\r\n\t\tlet damage: number | undefined | false = 0;\r\n\t\tpokemon.lastDamage = 0;\r\n\t\tif (move.multihit) {\r\n\t\t\tlet hits = move.multihit;\r\n\t\t\tif (Array.isArray(hits)) {\r\n\t\t\t\t// yes, it's hardcoded... meh\r\n\t\t\t\tif (hits[0] === 2 && hits[1] === 5) {\r\n\t\t\t\t\thits = this.sample([2, 2, 2, 3, 3, 3, 4, 5]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thits = this.random(hits[0], hits[1] + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\thits = Math.floor(hits);\r\n\t\t\tlet nullDamage = true;\r\n\t\t\tlet moveDamage: number | undefined | false;\r\n\t\t\t// There is no need to recursively check the \u00B4sleepUsable\u00B4 flag as Sleep Talk can only be used while asleep.\r\n\t\t\tconst isSleepUsable = move.sleepUsable || this.dex.getMove(move.sourceEffect).sleepUsable;\r\n\t\t\tlet i: number;\r\n\t\t\tfor (i = 0; i < hits && target.hp && pokemon.hp; i++) {\r\n\t\t\t\tif (pokemon.status === 'slp' && !isSleepUsable) break;\r\n\t\t\t\tmove.hit = i + 1;\r\n\r\n\t\t\t\tif (move.multiaccuracy && i > 0) {\r\n\t\t\t\t\taccuracy = move.accuracy;\r\n\t\t\t\t\tif (accuracy !== true) {\r\n\t\t\t\t\t\tif (!move.ignoreAccuracy) {\r\n\t\t\t\t\t\t\tboosts = this.runEvent('ModifyBoost', pokemon, null, null, Object.assign({}, pokemon.boosts));\r\n\t\t\t\t\t\t\tboost = this.clampIntRange(boosts['accuracy'], -6, 6);\r\n\t\t\t\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\t\t\t\taccuracy *= boostTable[boost];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\taccuracy /= boostTable[-boost];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!move.ignoreEvasion) {\r\n\t\t\t\t\t\t\tboosts = this.runEvent('ModifyBoost', target, null, null, Object.assign({}, target.boosts));\r\n\t\t\t\t\t\t\tboost = this.clampIntRange(boosts['evasion'], -6, 6);\r\n\t\t\t\t\t\t\tif (boost > 0) {\r\n\t\t\t\t\t\t\t\taccuracy /= boostTable[boost];\r\n\t\t\t\t\t\t\t} else if (boost < 0) {\r\n\t\t\t\t\t\t\t\taccuracy *= boostTable[-boost];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\taccuracy = this.runEvent('ModifyAccuracy', target, pokemon, move, accuracy);\r\n\t\t\t\t\tif (!move.alwaysHit) {\r\n\t\t\t\t\t\taccuracy = this.runEvent('Accuracy', target, pokemon, move, accuracy);\r\n\t\t\t\t\t\tif (accuracy !== true && !this.randomChance(accuracy, 100)) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmoveDamage = this.moveHit(target, pokemon, move);\r\n\t\t\t\tif (moveDamage === false) break;\r\n\t\t\t\tif (nullDamage && (moveDamage || moveDamage === 0 || moveDamage === undefined)) nullDamage = false;\r\n\t\t\t\t// Damage from each hit is individually counted for the\r\n\t\t\t\t// purposes of Counter, Metal Burst, and Mirror Coat.\r\n\t\t\t\tdamage = (moveDamage || 0);\r\n\t\t\t\tmove.totalDamage += damage;\r\n\t\t\t\tthis.eachEvent('Update');\r\n\t\t\t}\r\n\t\t\tif (i === 0) return false;\r\n\t\t\tif (nullDamage) damage = false;\r\n\t\t\tthis.add('-hitcount', target, i);\r\n\t\t} else {\r\n\t\t\tdamage = this.moveHit(target, pokemon, move);\r\n\t\t\tmove.totalDamage = damage;\r\n\t\t}\r\n\r\n\t\tif (move.recoil && move.totalDamage) {\r\n\t\t\tthis.damage(this.calcRecoilDamage(move.totalDamage, move), pokemon, target, 'recoil');\r\n\t\t}\r\n\r\n\t\tif (target && pokemon !== target) target.gotAttacked(move, damage, pokemon);\r\n\r\n\t\tif (move.ohko) this.add('-ohko');\r\n\r\n\t\tif (!damage && damage !== 0) return damage;\r\n\r\n\t\tthis.eachEvent('Update');\r\n\r\n\t\tif (target && !move.negateSecondary) {\r\n\t\t\tthis.singleEvent('AfterMoveSecondary', move, null, target, pokemon, move);\r\n\t\t\tthis.runEvent('AfterMoveSecondary', target, pokemon, move);\r\n\t\t}\r\n\r\n\t\treturn damage;\r\n\t},\r\n\r\n\tcalcRecoilDamage(damageDealt, move) {\r\n\t\treturn this.clampIntRange(Math.floor(damageDealt * move.recoil![0] / move.recoil![1]), 1);\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
