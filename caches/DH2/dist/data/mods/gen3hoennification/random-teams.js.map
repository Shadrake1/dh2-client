{
  "version": 3,
  "sources": ["../../../../data/mods/gen3hoennification/random-teams.ts"],
  "sourcesContent": ["/* eslint max-len: [\"error\", 240] */\r\n\r\nimport RandomGen4Teams from '../gen4/random-teams';\r\nimport {PRNG, PRNGSeed} from '../../../sim/prng';\r\n\r\nexport class RandomGen3Teams extends RandomGen4Teams {\r\n\thasWobbuffet: boolean;\r\n\r\n\tconstructor(format: string | Format, prng: PRNG | PRNGSeed | null) {\r\n\t\tsuper(format, prng);\r\n\t\tthis.hasWobbuffet = false;\r\n\t}\r\n\r\n\trandomSet(species: string | Species, teamDetails: RandomTeamsTypes.TeamDetails = {}): RandomTeamsTypes.RandomSet {\r\n\t\tspecies = this.dex.getSpecies(species);\r\n\t\tlet forme = species.name;\r\n\r\n\t\tif (species.battleOnly && typeof species.battleOnly === 'string') forme = species.battleOnly;\r\n\r\n\t\tif (species.cosmeticFormes) {\r\n\t\t\tforme = this.sample([species.name].concat(species.cosmeticFormes));\r\n\t\t}\r\n\r\n\t\tconst movePool = (species.randomBattleMoves || Object.keys(this.dex.data.Learnsets[species.id]!.learnset!)).slice();\r\n\t\tconst rejectedPool = [];\r\n\t\tconst moves: string[] = [];\r\n\t\tlet ability = '';\r\n\t\tlet item = '';\r\n\t\tconst evs = {\r\n\t\t\thp: 85, atk: 85, def: 85, spa: 85, spd: 85, spe: 85,\r\n\t\t};\r\n\t\tlet ivs = {\r\n\t\t\thp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31,\r\n\t\t};\r\n\t\tlet availableHP = 0;\r\n\t\tfor (const setMoveid of movePool) {\r\n\t\t\tif (setMoveid.startsWith('hiddenpower')) availableHP++;\r\n\t\t}\r\n\r\n\t\tconst hasType: {[k: string]: true} = {};\r\n\t\thasType[species.types[0]] = true;\r\n\t\tif (species.types[1]) {\r\n\t\t\thasType[species.types[1]] = true;\r\n\t\t}\r\n\t\tconst hasAbility: {[k: string]: true} = {};\r\n\t\thasAbility[species.abilities[0]] = true;\r\n\t\tif (species.abilities[1]) {\r\n\t\t\thasAbility[species.abilities[1]] = true;\r\n\t\t}\r\n\t\tlet hasMove: {[k: string]: boolean} = {};\r\n\t\tlet counter;\r\n\r\n\t\tdo {\r\n\t\t\t// Keep track of all moves we have:\r\n\t\t\thasMove = {};\r\n\t\t\tfor (const moveid of moves) {\r\n\t\t\t\tif (moveid.startsWith('hiddenpower')) {\r\n\t\t\t\t\thasMove['hiddenpower'] = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasMove[moveid] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Choose next 4 moves from learnset/viable moves and add them to moves list:\r\n\t\t\twhile (moves.length < 4 && movePool.length) {\r\n\t\t\t\tconst moveid = this.sampleNoReplace(movePool);\r\n\t\t\t\tif (moveid.startsWith('hiddenpower')) {\r\n\t\t\t\t\tavailableHP--;\r\n\t\t\t\t\tif (hasMove['hiddenpower']) continue;\r\n\t\t\t\t\thasMove['hiddenpower'] = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasMove[moveid] = true;\r\n\t\t\t\t}\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\t\t\twhile (moves.length < 4 && rejectedPool.length) {\r\n\t\t\t\tconst moveid = this.sampleNoReplace(rejectedPool);\r\n\t\t\t\thasMove[moveid] = true;\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\r\n\t\t\tcounter = this.queryMoves(moves, hasType, hasAbility, movePool);\r\n\r\n\t\t\t// Iterate through the moves again, this time to cull them:\r\n\t\t\tfor (const [k, moveId] of moves.entries()) {\r\n\t\t\t\tconst move = this.dex.getMove(moveId);\r\n\t\t\t\tconst moveid = move.id;\r\n\t\t\t\tlet rejected = false;\r\n\t\t\t\tlet isSetup = false;\r\n\r\n\t\t\t\tswitch (moveid) {\r\n\t\t\t\t// Set up once and only if we have the moves for it\r\n\t\t\t\tcase 'bulkup': case 'curse': case 'dragondance': case 'swordsdance':\r\n\t\t\t\t\tif (counter.setupType !== 'Physical' || counter['physicalsetup'] > 1) rejected = true;\r\n\t\t\t\t\tif (counter.Physical + counter['physicalpool'] < 2 && !hasMove['batonpass'] && (!hasMove['rest'] || !hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'calmmind':\r\n\t\t\t\t\tif (counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tif (counter.Special + counter['specialpool'] < 2 && !hasMove['batonpass'] && (!hasMove['rest'] || !hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'agility':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 && !hasMove['batonpass']) rejected = true;\r\n\t\t\t\t\tif (hasMove['substitute'] || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (!counter.setupType) isSetup = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Not very useful without their supporting moves\r\n\t\t\t\tcase 'amnesia': case 'sleeptalk':\r\n\t\t\t\t\tif (!hasMove['rest']) rejected = true;\r\n\t\t\t\t\tif (movePool.length > 1) {\r\n\t\t\t\t\t\tconst rest = movePool.indexOf('rest');\r\n\t\t\t\t\t\tif (rest >= 0) this.fastPop(movePool, rest);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'barrier':\r\n\t\t\t\t\tif (!hasMove['calmmind'] && !hasMove['batonpass'] && !hasMove['mirrorcoat']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'batonpass':\r\n\t\t\t\t\tif (!counter.setupType && !counter['speedsetup']) rejected = true;\r\n\t\t\t\t\tif (!hasMove['meanlook'] && !hasMove['spiderweb'] && !hasMove['substitute'] && !hasMove['wish']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'endeavor': case 'flail': case 'reversal':\r\n\t\t\t\t\tif (!hasMove['endure'] && !hasMove['substitute']) rejected = true;\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'endure':\r\n\t\t\t\t\tif (movePool.includes('destinybond')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'extremespeed': case 'raindance': case 'sunnyday':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || hasMove['rest']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focuspunch':\r\n\t\t\t\t\tif (!hasMove['substitute'] && (counter.Physical < 4 || hasMove['fakeout'])) rejected = true;\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || hasMove['rest'] || counter.setupType && !hasMove['spore']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'moonlight':\r\n\t\t\t\t\tif (hasMove['wish'] || hasMove['protect']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'perishsong':\r\n\t\t\t\t\tif (!hasMove['meanlook'] && !hasMove['spiderweb']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'protect':\r\n\t\t\t\t\tif (!hasAbility['Speed Boost'] && !hasMove['perishsong'] && !hasMove['toxic'] && !hasMove['wish']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'refresh':\r\n\t\t\t\t\tif (!counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rest':\r\n\t\t\t\t\tif (movePool.includes('sleeptalk')) rejected = true;\r\n\t\t\t\t\tif (!hasMove['sleeptalk'] && (!!counter['recovery'] || movePool.includes('curse'))) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'solarbeam':\r\n\t\t\t\t\tif (!hasMove['sunnyday']) rejected = true;\r\n\t\t\t\t\tif (movePool.length > 1) {\r\n\t\t\t\t\t\tconst sunnyday = movePool.indexOf('sunnyday');\r\n\t\t\t\t\t\tif (sunnyday >= 0) this.fastPop(movePool, sunnyday);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Bad after setup\r\n\t\t\t\tcase 'aromatherapy': case 'healbell':\r\n\t\t\t\t\tif (hasMove['rest'] || teamDetails['statusCure']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confuseray':\r\n\t\t\t\t\tif (counter.setupType || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'counter': case 'mirrorcoat':\r\n\t\t\t\t\tif (counter.setupType || hasMove['rest'] || hasMove['substitute'] || hasMove['toxic']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'destinybond':\r\n\t\t\t\t\tif (counter.setupType || hasMove['explosion'] || hasMove['selfdestruct']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'doubleedge': case 'facade': case 'fakeout': case 'waterspout':\r\n\t\t\t\t\tif (counter.Status >= 1 || moveid === 'doubleedge' && hasMove['return']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'encore': case 'painsplit': case 'recover': case 'yawn':\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'explosion': case 'machpunch': case 'selfdestruct':\r\n\t\t\t\t\tif (hasMove['rest'] || hasMove['substitute'] || !!counter['recovery']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'haze':\r\n\t\t\t\t\tif (counter.setupType || hasMove['raindance'] || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'icywind': case 'pursuit': case 'superpower': case 'transform':\r\n\t\t\t\t\tif (counter.setupType || hasMove['rest']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tif (counter.setupType || hasMove['explosion']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stunspore':\r\n\t\t\t\t\tif (hasMove['sunnyday'] || hasMove['toxic']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'lightscreen':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'meanlook': case 'spiderweb':\r\n\t\t\t\t\tif (!!counter['speedsetup'] || !hasMove['batonpass'] && !hasMove['perishsong']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'morningsun':\r\n\t\t\t\t\tif (counter['speedsetup'] >= 1) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'quickattack':\r\n\t\t\t\t\tif (!!counter['speedsetup'] || hasMove['substitute'] || !hasType['Normal'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rapidspin':\r\n\t\t\t\t\tif (counter.setupType || hasMove['rest'] || teamDetails.rapidSpin) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'reflect':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'seismictoss':\r\n\t\t\t\t\tif (counter.setupType || hasMove['thunderbolt']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'spikes':\r\n\t\t\t\t\tif (counter.setupType || hasMove['substitute'] || (hasMove['rest'] && hasMove['sleeptalk']) || teamDetails.spikes) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tif (hasMove['rest'] || hasMove['dragondance'] && !hasMove['bellydrum']) rejected = true;\r\n\t\t\t\t\tif (!hasMove['batonpass'] && movePool.includes('calmmind')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'thunderwave':\r\n\t\t\t\t\tif (counter.setupType || hasMove['bodyslam'] || hasMove['substitute'] || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'toxic':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['endure'] || hasMove['raindance'] || hasMove['substitute']) rejected = true;\r\n\t\t\t\t\tif (hasMove['hypnosis'] || hasMove['yawn']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'trick':\r\n\t\t\t\t\tif (counter.Status > 1) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'willowisp':\r\n\t\t\t\t\tif (counter.setupType || hasMove['hypnosis'] || hasMove['toxic']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Bit redundant to have both\r\n\t\t\t\tcase 'bodyslam':\r\n\t\t\t\t\tif (hasMove['return'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'headbutt':\r\n\t\t\t\t\tif (hasMove['bodyslam'] && !hasMove['thunderwave']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'return':\r\n\t\t\t\t\tif (hasMove['bodyslam'] && !counter.Status) rejected = true;\r\n\t\t\t\t\tif (hasMove['endure'] || hasMove['substitute'] && hasMove['flail']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fireblast':\r\n\t\t\t\t\tif (hasMove['flamethrower'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'flamethrower':\r\n\t\t\t\t\tif (hasMove['fireblast'] && !counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'overheat':\r\n\t\t\t\t\tif (hasMove['flamethrower'] || hasMove['substitute']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hydropump':\r\n\t\t\t\t\tif (hasMove['surf'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'surf':\r\n\t\t\t\t\tif (hasMove['hydropump'] && !counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gigadrain':\r\n\t\t\t\t\tif (hasMove['morningsun'] || hasMove['toxic']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hiddenpower':\r\n\t\t\t\t\tif (move.type === 'Grass' && hasMove['sunnyday'] && (hasMove['solarbeam'] || movePool.includes('solarbeam'))) rejected = true;\r\n\t\t\t\t\tif (!hasType[move.type] && (hasMove['substitute'] || hasMove['toxic'] || hasMove['rest'] && hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'brickbreak': case 'crosschop': case 'highjumpkick': case 'skyuppercut':\r\n\t\t\t\t\tif (hasMove['substitute'] && (hasMove['focuspunch'] || movePool.includes('focuspunch'))) rejected = true;\r\n\t\t\t\t\tif ((hasMove['endure'] || hasMove['substitute']) && hasMove['reversal']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'earthquake':\r\n\t\t\t\t\tif (hasMove['bonemerang']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// This move doesn't satisfy our setup requirements:\r\n\t\t\t\tif (counter.setupType === 'Physical' && move.category === 'Special' && !hasType[move.type] && move.type !== 'Fire') {\r\n\t\t\t\t\trejected = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (counter.setupType === 'Special' && move.category === 'Physical' && moveid !== 'superpower') {\r\n\t\t\t\t\trejected = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((!rejected && !isSetup && !move.weather && (move.category !== 'Status' || !move.flags.heal) && (counter.setupType || !move.stallingMove) && !['batonpass', 'sleeptalk', 'substitute'].includes(moveid)) &&\r\n\t\t\t\t(\r\n\t\t\t\t\t// Pokemon should have moves that benefit their attributes\r\n\t\t\t\t\t(!counter['stab'] && !counter['damage'] && !counter['Ice'] && !counter.setupType && counter['physicalpool'] + counter['specialpool'] > 0) ||\r\n\t\t\t\t\t(counter.setupType && counter[counter.setupType] < 2) ||\r\n\t\t\t\t\t(hasType['Bug'] && (movePool.includes('megahorn') || (!species.types[1] && movePool.includes('hiddenpowerbug')))) ||\r\n\t\t\t\t\t(hasType['Electric'] && !counter['Electric']) ||\r\n\t\t\t\t\t(hasType['Fighting'] && !counter['Fighting']) ||\r\n\t\t\t\t\t(hasType['Fire'] && !counter['Fire']) ||\r\n\t\t\t\t\t(hasType['Ground'] && !counter['Ground']) ||\r\n\t\t\t\t\t(hasType['Normal'] && !counter['Normal'] && counter.setupType === 'Physical') ||\r\n\t\t\t\t\t(hasType['Rock'] && !counter['Rock'] && species.baseStats.atk >= 100) ||\r\n\t\t\t\t\t(hasType['Water'] && !counter['Water'] && !hasMove['icebeam'] && counter.setupType !== 'Physical' && species.baseStats.spa >= 60) ||\r\n\t\t\t\t\t(movePool.includes('meteormash') || movePool.includes('spore')) ||\r\n\t\t\t\t\t(hasMove['protect'] && movePool.includes('wish')) ||\r\n\t\t\t\t\t(hasMove['substitute'] && movePool.includes('morningsun')) ||\r\n\t\t\t\t\t(hasMove['sunnyday'] && movePool.includes('solarbeam'))\r\n\t\t\t\t)) {\r\n\t\t\t\t\t// Reject Status, non-STAB, or low basepower moves\r\n\t\t\t\t\tif (move.category === 'Status' || !hasType[move.type] || (move.basePower && move.basePower < 40 && !move.multihit)) {\r\n\t\t\t\t\t\trejected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Sleep Talk shouldn't be selected without Rest\r\n\t\t\t\tif (moveid === 'rest' && rejected) {\r\n\t\t\t\t\tconst sleeptalk = movePool.indexOf('sleeptalk');\r\n\t\t\t\t\tif (sleeptalk >= 0) {\r\n\t\t\t\t\t\tif (movePool.length < 2) {\r\n\t\t\t\t\t\t\trejected = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.fastPop(movePool, sleeptalk);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove rejected moves from the move list\r\n\t\t\t\tif (rejected && (movePool.length - availableHP || availableHP && (moveid === 'hiddenpower' || !hasMove['hiddenpower']))) {\r\n\t\t\t\t\tif (move.category !== 'Status' && !move.damage && (moveid !== 'hiddenpower' || !availableHP)) {\r\n\t\t\t\t\t\trejectedPool.push(moves[k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmoves.splice(k, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (rejected && rejectedPool.length) {\r\n\t\t\t\t\tmoves.splice(k, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (moves.length < 4 && (movePool.length || rejectedPool.length));\r\n\r\n\t\t// If Hidden Power has been removed, reset the IVs\r\n\t\tif (!hasMove['hiddenpower']) {\r\n\t\t\tivs = {hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31};\r\n\t\t}\r\n\r\n\t\tconst abilities = Object.values(species.abilities).filter(a => this.dex.getAbility(a).gen === 3);\r\n\t\tabilities.sort((a, b) => this.dex.getAbility(b).rating - this.dex.getAbility(a).rating);\r\n\t\tlet ability0 = this.dex.getAbility(abilities[0]);\r\n\t\tlet ability1 = this.dex.getAbility(abilities[1]);\r\n\t\tif (abilities[1]) {\r\n\t\t\tif (ability0.rating <= ability1.rating && this.randomChance(1, 2)) {\r\n\t\t\t\t[ability0, ability1] = [ability1, ability0];\r\n\t\t\t} else if (ability0.rating - 0.6 <= ability1.rating && this.randomChance(2, 3)) {\r\n\t\t\t\t[ability0, ability1] = [ability1, ability0];\r\n\t\t\t}\r\n\t\t\tability = ability0.name;\r\n\r\n\t\t\tlet rejectAbility: boolean;\r\n\t\t\tdo {\r\n\t\t\t\trejectAbility = false;\r\n\r\n\t\t\t\tif (ability === 'Chlorophyll') {\r\n\t\t\t\t\trejectAbility = (!hasMove['sunnyday'] && !teamDetails['sun']);\r\n\t\t\t\t} else if (ability === 'Compound Eyes') {\r\n\t\t\t\t\trejectAbility = !counter['inaccurate'];\r\n\t\t\t\t} else if (ability === 'Hustle') {\r\n\t\t\t\t\trejectAbility = (counter.Physical < 2);\r\n\t\t\t\t} else if (ability === 'Lightning Rod') {\r\n\t\t\t\t\trejectAbility = species.types.includes('Ground');\r\n\t\t\t\t} else if (ability === 'Overgrow') {\r\n\t\t\t\t\trejectAbility = !counter['Grass'];\r\n\t\t\t\t} else if (ability === 'Rock Head') {\r\n\t\t\t\t\trejectAbility = !counter['recoil'];\r\n\t\t\t\t} else if (ability === 'Sand Veil') {\r\n\t\t\t\t\trejectAbility = !teamDetails['sand'];\r\n\t\t\t\t} else if (ability === 'Serene Grace') {\r\n\t\t\t\t\trejectAbility = (species.id === 'blissey');\r\n\t\t\t\t} else if (ability === 'Sturdy') {\r\n\t\t\t\t\trejectAbility = true;\r\n\t\t\t\t} else if (ability === 'Swift Swim') {\r\n\t\t\t\t\trejectAbility = (!hasMove['raindance'] && !teamDetails['rain']);\r\n\t\t\t\t} else if (ability === 'Swarm') {\r\n\t\t\t\t\trejectAbility = !counter['Bug'];\r\n\t\t\t\t} else if (ability === 'Torrent') {\r\n\t\t\t\t\trejectAbility = !counter['Water'];\r\n\t\t\t\t} else if (ability === 'Water Absorb') {\r\n\t\t\t\t\trejectAbility = abilities.includes('Swift Swim');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rejectAbility) {\r\n\t\t\t\t\tif (ability === ability0.name && ability1.rating > 1) {\r\n\t\t\t\t\t\tability = ability1.name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Default to the highest rated ability if all are rejected\r\n\t\t\t\t\t\tability = abilities[0];\r\n\t\t\t\t\t\trejectAbility = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while (rejectAbility);\r\n\t\t} else {\r\n\t\t\tability = ability0.name;\r\n\t\t}\r\n\r\n\t\t// First, the high-priority items\r\n\t\tif (species.name === 'Ditto') {\r\n\t\t\titem = this.sample(['Metal Powder', 'Quick Claw']);\r\n\t\t} else if (species.name === 'Farfetch\\u2019d') {\r\n\t\t\titem = 'Stick';\r\n\t\t} else if (species.name === 'Marowak') {\r\n\t\t\titem = 'Thick Club';\r\n\t\t} else if (species.name === 'Pikachu') {\r\n\t\t\titem = 'Light Ball';\r\n\t\t} else if (species.name === 'Shedinja') {\r\n\t\t\titem = 'Lum Berry';\r\n\t\t} else if (species.name === 'Unown') {\r\n\t\t\titem = 'Twisted Spoon';\r\n\t\t} else if (hasMove['trick']) {\r\n\t\t\titem = 'Choice Band';\r\n\t\t} else if (hasMove['rest'] && !hasMove['sleeptalk'] && !['Early Bird', 'Natural Cure', 'Shed Skin'].includes(ability)) {\r\n\t\t\titem = 'Chesto Berry';\r\n\r\n\t\t// Medium priority\r\n\t\t} else if ((hasMove['bellydrum'] && counter.Physical - counter['priority'] > 1) || (hasMove['swordsdance'] && counter.Status < 2)) {\r\n\t\t\titem = 'Salac Berry';\r\n\t\t} else if (hasMove['endure'] || (hasMove['substitute'] && (hasMove['endeavor'] || hasMove['flail'] || hasMove['reversal']))) {\r\n\t\t\titem = (species.baseStats.spe <= 100 && ability !== 'Speed Boost' && !counter['speedsetup'] && !hasMove['focuspunch']) ? 'Salac Berry' : 'Liechi Berry';\r\n\t\t} else if ((hasMove['substitute'] || hasMove['raindance']) && counter.Special >= 3) {\r\n\t\t\titem = 'Petaya Berry';\r\n\t\t} else if (counter.Physical >= 4) {\r\n\t\t\titem = 'Choice Band';\r\n\t\t} else if (counter.Physical >= 3 && (hasMove['firepunch'] || hasMove['icebeam'] || hasMove['overheat'] || moves.filter(m => this.dex.data.Movedex[m].category === 'Special' && hasType[this.dex.data.Movedex[m].type]).length)) {\r\n\t\t\titem = 'Choice Band';\r\n\r\n\t\t// Default to Leftovers\r\n\t\t} else {\r\n\t\t\titem = 'Leftovers';\r\n\t\t}\r\n\r\n\t\tconst levelScale: {[k: string]: number} = {\r\n\t\t\tUber: 76,\r\n\t\t\tOU: 80,\r\n\t\t\tUUBL: 82,\r\n\t\t\tUU: 84,\r\n\t\t\tNUBL: 86,\r\n\t\t\tNU: 88,\r\n\t\t\tNFE: 90,\r\n\t\t};\r\n\t\tconst customScale: {[k: string]: number} = {\r\n\t\t\tDitto: 99, Unown: 99,\r\n\t\t};\r\n\t\tconst tier = species.tier;\r\n\t\tlet level = levelScale[tier] || (species.nfe ? 90 : 80);\r\n\t\tif (customScale[species.name]) level = customScale[species.name];\r\n\r\n\t\t// Prepare optimal HP\r\n\t\tlet hp = Math.floor(Math.floor(2 * species.baseStats.hp + ivs.hp + Math.floor(evs.hp / 4) + 100) * level / 100 + 10);\r\n\t\tif (hasMove['substitute'] && (hasMove['endeavor'] || hasMove['flail'] || hasMove['reversal'])) {\r\n\t\t\t// Endeavor/Flail/Reversal users should be able to use four Substitutes\r\n\t\t\tif (hp % 4 === 0) evs.hp -= 4;\r\n\t\t} else if (hasMove['substitute'] && (item === 'Salac Berry' || item === 'Petaya Berry' || item === 'Liechi Berry')) {\r\n\t\t\t// Other pinch berry holders should have berries activate after three Substitutes\r\n\t\t\twhile (hp % 4 > 0) {\r\n\t\t\t\tevs.hp -= 4;\r\n\t\t\t\thp = Math.floor(Math.floor(2 * species.baseStats.hp + ivs.hp + Math.floor(evs.hp / 4) + 100) * level / 100 + 10);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Minimize confusion damage\r\n\t\tif (!counter['Physical'] && !hasMove['transform']) {\r\n\t\t\tevs.atk = 0;\r\n\t\t\tivs.atk = hasMove['hiddenpower'] ? ivs.atk - 28 : 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tname: species.baseSpecies,\r\n\t\t\tspecies: forme,\r\n\t\t\tgender: species.gender,\r\n\t\t\tmoves: moves,\r\n\t\t\tability: ability,\r\n\t\t\tevs: evs,\r\n\t\t\tivs: ivs,\r\n\t\t\titem: item,\r\n\t\t\tlevel: level,\r\n\t\t\tshiny: this.randomChance(1, 1024),\r\n\t\t};\r\n\t}\r\n\r\n\trandomTeam() {\r\n\t\tconst pokemon = [];\r\n\r\n\t\tconst pokemonPool = [];\r\n\t\tfor (const id in this.dex.data.FormatsData) {\r\n\t\t\tconst species = this.dex.getSpecies(id);\r\n\t\t\tif (species.gen <= this.gen && species.randomBattleMoves) {\r\n\t\t\t\tpokemonPool.push(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tierCount: {[k: string]: number} = {};\r\n\t\tconst typeCount: {[k: string]: number} = {};\r\n\t\tconst typeComboCount: {[k: string]: number} = {};\r\n\t\tconst baseFormes: {[k: string]: number} = {};\r\n\t\tconst teamDetails: RandomTeamsTypes.TeamDetails = {};\r\n\r\n\t\twhile (pokemonPool.length && pokemon.length < 6) {\r\n\t\t\tconst species = this.dex.getSpecies(this.sampleNoReplace(pokemonPool));\r\n\t\t\tif (!species.exists) continue;\r\n\r\n\t\t\t// Limit to one of each species (Species Clause)\r\n\t\t\tif (baseFormes[species.baseSpecies]) continue;\r\n\r\n\t\t\t// Limit to one Wobbuffet per battle (not just per team)\r\n\t\t\tif (species.name === 'Wobbuffet' && this.hasWobbuffet) continue;\r\n\r\n\t\t\tconst tier = species.tier;\r\n\t\t\tconst types = species.types;\r\n\t\t\tconst typeCombo = types.slice().sort().join();\r\n\r\n\t\t\t// Limit 2 Pokemon per tier\r\n\t\t\tif (tierCount[tier] >= 2 && this.randomChance(4, 5)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Limit 2 of any type\r\n\t\t\tlet skip = false;\r\n\t\t\tfor (const type of species.types) {\r\n\t\t\t\tif (typeCount[type] >= 2) {\r\n\t\t\t\t\tskip = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (skip) continue;\r\n\r\n\t\t\t// Limit 1 of any type combination\r\n\t\t\tif (typeComboCount[typeCombo] >= 1 && this.randomChance(4, 5)) continue;\r\n\r\n\t\t\tconst set = this.randomSet(species, teamDetails);\r\n\r\n\t\t\t// Okay, the set passes, add it to our team\r\n\t\t\tpokemon.push(set);\r\n\r\n\t\t\t// In Gen 3, Shadow Tag users can prevent each other from switching out, possibly causing and endless battle or at least causing a long stall war\r\n\t\t\t// To prevent this, we prevent more than one Wobbuffet in a single battle.\r\n\t\t\tif (species.name === 'Wobbuffet') this.hasWobbuffet = true;\r\n\r\n\t\t\t// Now that our Pokemon has passed all checks, we can increment our counters\r\n\t\t\tbaseFormes[species.baseSpecies] = 1;\r\n\r\n\t\t\t// Increment tier counter\r\n\t\t\tif (tierCount[tier]) {\r\n\t\t\t\ttierCount[tier]++;\r\n\t\t\t} else {\r\n\t\t\t\ttierCount[tier] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Increment type counters\r\n\t\t\tfor (const type of species.types) {\r\n\t\t\t\tif (type in typeCount) {\r\n\t\t\t\t\ttypeCount[type]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttypeCount[type] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeCombo in typeComboCount) {\r\n\t\t\t\ttypeComboCount[typeCombo]++;\r\n\t\t\t} else {\r\n\t\t\t\ttypeComboCount[typeCombo] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Team has\r\n\t\t\tif (set.ability === 'Drizzle' || set.moves.includes('raindance')) teamDetails['rain'] = 1;\r\n\t\t\tif (set.ability === 'Sand Stream') teamDetails['sand'] = 1;\r\n\t\t\tif (set.moves.includes('spikes')) teamDetails['spikes'] = 1;\r\n\t\t\tif (set.moves.includes('rapidspin')) teamDetails['rapidSpin'] = 1;\r\n\t\t\tif (set.moves.includes('aromatherapy') || set.moves.includes('healbell')) teamDetails['statusCure'] = 1;\r\n\t\t}\r\n\t\treturn pokemon;\r\n\t}\r\n}"],
  "mappings": "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",
  "names": ["RandomGen4Teams"]
}
