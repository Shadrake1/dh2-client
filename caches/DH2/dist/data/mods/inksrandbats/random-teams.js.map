{
  "version": 3,
  "sources": ["../../../../data/mods/inksrandbats/random-teams.ts"],
  "sourcesContent": ["/* eslint max-len: [\"error\", 240] */\r\n\r\nimport {Dex, toID} from '../../../sim/dex';\r\nimport {PRNG, PRNGSeed} from '../../../sim/prng';\r\n\r\nexport interface TeamData {\r\n\ttypeCount: {[k: string]: number};\r\n\ttypeComboCount: {[k: string]: number};\r\n\tbaseFormes: {[k: string]: number};\r\n\tmegaCount: number;\r\n\tzCount?: number;\r\n\thas: {[k: string]: number};\r\n\tforceResult: boolean;\r\n\tweaknesses: {[k: string]: number};\r\n\tresistances: {[k: string]: number};\r\n\tweather?: string;\r\n\teeveeLimCount?: number;\r\n}\r\n\r\nexport class RandomTeams {\r\n\tdex: ModdedDex;\r\n\tgen: number;\r\n\tfactoryTier: string;\r\n\tformat: Format;\r\n\tprng: PRNG;\r\n\r\n\tconstructor(format: Format | string, prng: PRNG | PRNGSeed | null) {\r\n\t\tformat = Dex.formats.get(format);\r\n\t\tthis.dex = Dex.forFormat(format);\r\n\t\tthis.gen = this.dex.gen;\r\n\r\n\t\tthis.factoryTier = '';\r\n\t\tthis.format = format;\r\n\t\tthis.prng = prng && !Array.isArray(prng) ? prng : new PRNG(prng);\r\n\t}\r\n\r\n\tsetSeed(prng?: PRNG | PRNGSeed) {\r\n\t\tthis.prng = prng && !Array.isArray(prng) ? prng : new PRNG(prng);\r\n\t}\r\n\r\n\tgetTeam(options?: PlayerOptions | null): PokemonSet[] {\r\n\t\tconst generatorName = typeof this.format.team === 'string' && this.format.team.startsWith('random') ? this.format.team + 'Team' : '';\r\n\t\t// @ts-ignore\r\n\t\treturn this[generatorName || 'randomTeam'](options);\r\n\t}\r\n\r\n\trandomChance(numerator: number, denominator: number) {\r\n\t\treturn this.prng.randomChance(numerator, denominator);\r\n\t}\r\n\r\n\tsample<T>(items: readonly T[]): T {\r\n\t\treturn this.prng.sample(items);\r\n\t}\r\n\r\n\trandom(m?: number, n?: number) {\r\n\t\treturn this.prng.next(m, n);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an element from an unsorted array significantly faster\r\n\t * than .splice\r\n\t */\r\n\tfastPop(list: any[], index: number) {\r\n\t\t// If an array doesn't need to be in order, replacing the\r\n\t\t// element at the given index with the removed element\r\n\t\t// is much, much faster than using list.splice(index, 1).\r\n\t\tconst length = list.length;\r\n\t\tconst element = list[index];\r\n\t\tlist[index] = list[length - 1];\r\n\t\tlist.pop();\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove a random element from an unsorted array and return it.\r\n\t * Uses the battle's RNG if in a battle.\r\n\t */\r\n\tsampleNoReplace(list: any[]) {\r\n\t\tconst length = list.length;\r\n\t\tconst index = this.random(length);\r\n\t\treturn this.fastPop(list, index);\r\n\t}\r\n\r\n\t// checkAbilities(selectedAbilities, defaultAbilities) {\r\n\t// \tif (!selectedAbilities.length) return true;\r\n\t// \tconst selectedAbility = selectedAbilities.pop();\r\n\t// \tconst isValid = false;\r\n\t// \tfor (const i = 0; i < defaultAbilities.length; i++) {\r\n\t// \t\tconst defaultAbility = defaultAbilities[i];\r\n\t// \t\tif (!defaultAbility) break;\r\n\t// \t\tif (defaultAbility.includes(selectedAbility)) {\r\n\t// \t\t\tdefaultAbilities.splice(i, 1);\r\n\t// \t\t\tisValid = this.checkAbilities(selectedAbilities, defaultAbilities);\r\n\t// \t\t\tif (isValid) break;\r\n\t// \t\t\tdefaultAbilities.splice(i, 0, defaultAbility);\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \tif (!isValid) selectedAbilities.push(selectedAbility);\r\n\t// \treturn isValid;\r\n\t// }\r\n\t// hasMegaEvo(species) {\r\n\t// \tif (!species.otherFormes) return false;\r\n\t// \tconst firstForme = this.dex.species.get(species.otherFormes[0]);\r\n\t// \treturn !!firstForme.isMega;\r\n\t// }\r\n\trandomCCTeam(): RandomTeamsTypes.RandomSet[] {\r\n\t\tconst dex = this.dex;\r\n\t\tconst team = [];\r\n\r\n\t\tconst natures = Object.keys(this.dex.data.Natures);\r\n\t\tconst items = Object.keys(this.dex.data.Items);\r\n\r\n\t\tconst random6 = this.random6Pokemon();\r\n\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tlet forme = random6[i];\r\n\t\t\tlet species = dex.species.get(forme);\r\n\t\t\tif (species.isNonstandard) species = dex.species.get(species.baseSpecies);\r\n\r\n\t\t\t// Random legal item\r\n\t\t\tlet item = '';\r\n\t\t\tif (this.gen >= 2) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\titem = this.sample(items);\r\n\t\t\t\t} while (this.dex.items.get(item).gen > this.gen || this.dex.data.Items[item].isNonstandard);\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure forme is legal\r\n\t\t\tif (species.battleOnly) {\r\n\t\t\t\tif (typeof species.battleOnly === 'string') {\r\n\t\t\t\t\tspecies = dex.species.get(species.battleOnly);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tspecies = dex.species.get(this.sample(species.battleOnly));\r\n\t\t\t\t}\r\n\t\t\t\tforme = species.name;\r\n\t\t\t} else if (species.requiredItems && !species.requiredItems.some(req => toID(req) === item)) {\r\n\t\t\t\tif (!species.changesFrom) throw new Error(`${species.name} needs a changesFrom value`);\r\n\t\t\t\tspecies = dex.species.get(species.changesFrom);\r\n\t\t\t\tforme = species.name;\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that a base forme does not hold any forme-modifier items.\r\n\t\t\tlet itemData = this.dex.items.get(item);\r\n\t\t\tif (itemData.forcedForme && forme === this.dex.species.get(itemData.forcedForme).baseSpecies) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\titem = this.sample(items);\r\n\t\t\t\t\titemData = this.dex.items.get(item);\r\n\t\t\t\t} while (itemData.gen > this.gen || itemData.isNonstandard || itemData.forcedForme && forme === this.dex.species.get(itemData.forcedForme).baseSpecies);\r\n\t\t\t}\r\n\r\n\t\t\t// Random legal ability\r\n\t\t\tconst abilities = Object.values(species.abilities).filter(a => this.dex.abilities.get(a).gen <= this.gen);\r\n\t\t\tconst ability: string = this.gen <= 2 ? 'None' : this.sample(abilities);\r\n\r\n\t\t\t// Four random unique moves from the movepool\r\n\t\t\tlet moves;\r\n\t\t\tlet pool = ['struggle'];\r\n\t\t\tif (forme === 'Smeargle') {\r\n\t\t\t\tpool = Object.keys(this.dex.data.Moves).filter(moveid => {\r\n\t\t\t\t\tconst move = this.dex.data.Moves[moveid];\r\n\t\t\t\t\treturn !(move.isNonstandard || move.isZ || move.isMax || move.realMove);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tlet learnset = this.dex.data.Learnsets[species.id] && this.dex.data.Learnsets[species.id].learnset && !['gastrodoneast', 'pumpkaboosuper', 'zygarde10'].includes(species.id) ?\r\n\t\t\t\t\tthis.dex.data.Learnsets[species.id].learnset :\r\n\t\t\t\t\tthis.dex.data.Learnsets[this.dex.species.get(species.baseSpecies).id].learnset;\r\n\t\t\t\tif (learnset) {\r\n\t\t\t\t\tpool = Object.keys(learnset).filter(\r\n\t\t\t\t\t\tmoveid => learnset![moveid].find(learned => learned.startsWith(String(this.gen)))\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (species.changesFrom) {\r\n\t\t\t\t\tlearnset = this.dex.data.Learnsets[toID(species.changesFrom)].learnset;\r\n\t\t\t\t\tconst basePool = Object.keys(learnset!).filter(\r\n\t\t\t\t\t\tmoveid => learnset![moveid].find(learned => learned.startsWith(String(this.gen)))\r\n\t\t\t\t\t);\r\n\t\t\t\t\tpool = [...new Set(pool.concat(basePool))];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pool.length <= 4) {\r\n\t\t\t\tmoves = pool;\r\n\t\t\t} else {\r\n\t\t\t\tmoves = [this.sampleNoReplace(pool), this.sampleNoReplace(pool), this.sampleNoReplace(pool), this.sampleNoReplace(pool)];\r\n\t\t\t}\r\n\r\n\t\t\t// Random EVs\r\n\t\t\tconst evs: StatsTable = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0};\r\n\t\t\tconst s: StatName[] = [\"hp\", \"atk\", \"def\", \"spa\", \"spd\", \"spe\"];\r\n\t\t\tlet evpool = 510;\r\n\t\t\tdo {\r\n\t\t\t\tconst x = this.sample(s);\r\n\t\t\t\tconst y = this.random(Math.min(256 - evs[x], evpool + 1));\r\n\t\t\t\tevs[x] += y;\r\n\t\t\t\tevpool -= y;\r\n\t\t\t} while (evpool > 0);\r\n\r\n\t\t\t// Random IVs\r\n\t\t\tconst ivs = {hp: this.random(32), atk: this.random(32), def: this.random(32), spa: this.random(32), spd: this.random(32), spe: this.random(32)};\r\n\r\n\t\t\t// Random nature\r\n\t\t\tconst nature = this.sample(natures);\r\n\r\n\t\t\t// Level balance--calculate directly from stats rather than using some silly lookup table\r\n\t\t\tconst mbstmin = 1307; // Sunkern has the lowest modified base stat total, and that total is 807\r\n\r\n\t\t\tlet stats = species.baseStats;\r\n\t\t\t// If Wishiwashi, use the school-forme's much higher stats\r\n\t\t\tif (species.baseSpecies === 'Wishiwashi') stats = Dex.species.get('wishiwashischool').baseStats;\r\n\r\n\t\t\t// Modified base stat total assumes 31 IVs, 85 EVs in every stat\r\n\t\t\tlet mbst = (stats[\"hp\"] * 2 + 31 + 21 + 100) + 10;\r\n\t\t\tmbst += (stats[\"atk\"] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats[\"def\"] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats[\"spa\"] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats[\"spd\"] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats[\"spe\"] * 2 + 31 + 21 + 100) + 5;\r\n\r\n\t\t\tlet level = Math.floor(100 * mbstmin / mbst); // Initial level guess will underestimate\r\n\r\n\t\t\twhile (level < 100) {\r\n\t\t\t\tmbst = Math.floor((stats[\"hp\"] * 2 + 31 + 21 + 100) * level / 100 + 10);\r\n\t\t\t\tmbst += Math.floor(((stats[\"atk\"] * 2 + 31 + 21 + 100) * level / 100 + 5) * level / 100); // Since damage is roughly proportional to level\r\n\t\t\t\tmbst += Math.floor((stats[\"def\"] * 2 + 31 + 21 + 100) * level / 100 + 5);\r\n\t\t\t\tmbst += Math.floor(((stats[\"spa\"] * 2 + 31 + 21 + 100) * level / 100 + 5) * level / 100);\r\n\t\t\t\tmbst += Math.floor((stats[\"spd\"] * 2 + 31 + 21 + 100) * level / 100 + 5);\r\n\t\t\t\tmbst += Math.floor((stats[\"spe\"] * 2 + 31 + 21 + 100) * level / 100 + 5);\r\n\r\n\t\t\t\tif (mbst >= mbstmin) break;\r\n\t\t\t\tlevel++;\r\n\t\t\t}\r\n\r\n\t\t\t// Random happiness\r\n\t\t\tconst happiness = this.random(256);\r\n\r\n\t\t\t// Random shininess\r\n\t\t\tconst shiny = this.randomChance(1, 1024);\r\n\r\n\t\t\tteam.push({\r\n\t\t\t\tname: species.baseSpecies,\r\n\t\t\t\tspecies: species.name,\r\n\t\t\t\tgender: species.gender,\r\n\t\t\t\titem: item,\r\n\t\t\t\tability: ability,\r\n\t\t\t\tmoves: moves,\r\n\t\t\t\tevs: evs,\r\n\t\t\t\tivs: ivs,\r\n\t\t\t\tnature: nature,\r\n\t\t\t\tlevel: level,\r\n\t\t\t\thappiness: happiness,\r\n\t\t\t\tshiny: shiny,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn team;\r\n\t}\r\n\r\n\trandom6Pokemon() {\r\n\t\t// Pick six random pokemon--no repeats, even among formes\r\n\t\t// Also need to either normalize for formes or select formes at random\r\n\t\t// Unreleased are okay but no CAP\r\n\t\tconst last = [0, 151, 251, 386, 493, 649, 721, 807, 890][this.gen];\r\n\r\n\t\tconst pool: number[] = [];\r\n\t\tfor (const id in this.dex.data.FormatsData) {\r\n\t\t\tif (!this.dex.data.Pokedex[id] || this.dex.data.FormatsData[id].isNonstandard && this.dex.data.FormatsData[id].isNonstandard !== 'Unobtainable') continue;\r\n\t\t\tconst num = this.dex.data.Pokedex[id].num;\r\n\t\t\tif (num <= 0 || pool.includes(num)) continue;\r\n\t\t\tif (num > last) break;\r\n\t\t\tpool.push(num);\r\n\t\t}\r\n\r\n\t\tconst hasDexNumber: {[k: string]: number} = {};\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tconst num = this.sampleNoReplace(pool);\r\n\t\t\thasDexNumber[num] = i;\r\n\t\t}\r\n\r\n\t\tconst formes: string[][] = [[], [], [], [], [], []];\r\n\t\tfor (const id in this.dex.data.Pokedex) {\r\n\t\t\tif (!(this.dex.data.Pokedex[id].num in hasDexNumber)) continue;\r\n\t\t\tconst species = this.dex.species.get(id);\r\n\t\t\tif (species.gen <= this.gen && (!species.isNonstandard || species.isNonstandard === 'Unobtainable')) {\r\n\t\t\t\tformes[hasDexNumber[species.num]].push(species.name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst sixPokemon = [];\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tif (!formes[i].length) {\r\n\t\t\t\tthrow new Error(\"Invalid pokemon gen \" + this.gen + \": \" + JSON.stringify(formes) + \" numbers \" + JSON.stringify(hasDexNumber));\r\n\t\t\t}\r\n\t\t\tsixPokemon.push(this.sample(formes[i]));\r\n\t\t}\r\n\t\treturn sixPokemon;\r\n\t}\r\n\r\n\trandomHCTeam(): PokemonSet[] {\r\n\t\tconst team = [];\r\n\r\n\t\tconst itemPool = Object.keys(this.dex.data.Items);\r\n\t\tconst abilityPool = Object.keys(this.dex.data.Abilities);\r\n\t\tconst movePool = Object.keys(this.dex.data.Moves);\r\n\t\tconst naturePool = Object.keys(this.dex.data.Natures);\r\n\r\n\t\tconst random6 = this.random6Pokemon();\r\n\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t// Choose forme\r\n\t\t\tconst species = this.dex.species.get(random6[i]);\r\n\r\n\t\t\t// Random unique item\r\n\t\t\tlet item = '';\r\n\t\t\tif (this.gen >= 2) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\titem = this.sampleNoReplace(itemPool);\r\n\t\t\t\t} while (this.dex.items.get(item).gen > this.gen || this.dex.data.Items[item].isNonstandard);\r\n\t\t\t}\r\n\r\n\t\t\t// Random unique ability\r\n\t\t\tlet ability = 'None';\r\n\t\t\tif (this.gen >= 3) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tability = this.sampleNoReplace(abilityPool);\r\n\t\t\t\t} while (this.dex.abilities.get(ability).gen > this.gen || this.dex.data.Abilities[ability].isNonstandard);\r\n\t\t\t}\r\n\r\n\t\t\t// Random unique moves\r\n\t\t\tconst m = [];\r\n\t\t\tdo {\r\n\t\t\t\tconst moveid = this.sampleNoReplace(movePool);\r\n\t\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\t\tif (move.gen <= this.gen && !move.isNonstandard && !move.name.startsWith('Hidden Power ')) {\r\n\t\t\t\t\tm.push(moveid);\r\n\t\t\t\t}\r\n\t\t\t} while (m.length < 4);\r\n\r\n\t\t\t// Random EVs\r\n\t\t\tconst evs = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0};\r\n\t\t\tconst s: StatName[] = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\r\n\t\t\tif (this.gen === 6) {\r\n\t\t\t\tlet evpool = 510;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tconst x = this.sample(s);\r\n\t\t\t\t\tconst y = this.random(Math.min(256 - evs[x], evpool + 1));\r\n\t\t\t\t\tevs[x] += y;\r\n\t\t\t\t\tevpool -= y;\r\n\t\t\t\t} while (evpool > 0);\r\n\t\t\t} else {\r\n\t\t\t\tfor (const x of s) {\r\n\t\t\t\t\tevs[x] = this.random(256);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Random IVs\r\n\t\t\tconst ivs: StatsTable = {\r\n\t\t\t\thp: this.random(32),\r\n\t\t\t\tatk: this.random(32),\r\n\t\t\t\tdef: this.random(32),\r\n\t\t\t\tspa: this.random(32),\r\n\t\t\t\tspd: this.random(32),\r\n\t\t\t\tspe: this.random(32),\r\n\t\t\t};\r\n\r\n\t\t\t// Random nature\r\n\t\t\tconst nature = this.sample(naturePool);\r\n\r\n\t\t\t// Level balance\r\n\t\t\tconst mbstmin = 1307;\r\n\t\t\tconst stats = species.baseStats;\r\n\t\t\tlet mbst = (stats['hp'] * 2 + 31 + 21 + 100) + 10;\r\n\t\t\tmbst += (stats['atk'] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats['def'] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats['spa'] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats['spd'] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tmbst += (stats['spe'] * 2 + 31 + 21 + 100) + 5;\r\n\t\t\tlet level = Math.floor(100 * mbstmin / mbst);\r\n\t\t\twhile (level < 100) {\r\n\t\t\t\tmbst = Math.floor((stats['hp'] * 2 + 31 + 21 + 100) * level / 100 + 10);\r\n\t\t\t\tmbst += Math.floor(((stats['atk'] * 2 + 31 + 21 + 100) * level / 100 + 5) * level / 100);\r\n\t\t\t\tmbst += Math.floor((stats['def'] * 2 + 31 + 21 + 100) * level / 100 + 5);\r\n\t\t\t\tmbst += Math.floor(((stats['spa'] * 2 + 31 + 21 + 100) * level / 100 + 5) * level / 100);\r\n\t\t\t\tmbst += Math.floor((stats['spd'] * 2 + 31 + 21 + 100) * level / 100 + 5);\r\n\t\t\t\tmbst += Math.floor((stats['spe'] * 2 + 31 + 21 + 100) * level / 100 + 5);\r\n\t\t\t\tif (mbst >= mbstmin) break;\r\n\t\t\t\tlevel++;\r\n\t\t\t}\r\n\r\n\t\t\t// Random happiness\r\n\t\t\tconst happiness = this.random(256);\r\n\r\n\t\t\t// Random shininess\r\n\t\t\tconst shiny = this.randomChance(1, 1024);\r\n\r\n\t\t\tteam.push({\r\n\t\t\t\tname: species.baseSpecies,\r\n\t\t\t\tspecies: species.name,\r\n\t\t\t\tgender: species.gender,\r\n\t\t\t\titem: item,\r\n\t\t\t\tability: ability,\r\n\t\t\t\tmoves: m,\r\n\t\t\t\tevs: evs,\r\n\t\t\t\tivs: ivs,\r\n\t\t\t\tnature: nature,\r\n\t\t\t\tlevel: level,\r\n\t\t\t\thappiness: happiness,\r\n\t\t\t\tshiny: shiny,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn team;\r\n\t}\r\n\r\n\tqueryMoves(moves: string[] | null, hasType: {[k: string]: boolean} = {}, hasAbility: {[k: string]: boolean} = {}, movePool: string[] = []) {\r\n\t\t// This is primarily a helper function for random setbuilder functions.\r\n\t\tconst counter: {[k: string]: any} = {\r\n\t\t\tPhysical: 0, Special: 0, Status: 0, damage: 0, recovery: 0, stab: 0, inaccurate: 0, priority: 0, recoil: 0, drain: 0, sound: 0,\r\n\t\t\tadaptability: 0, contrary: 0, ironfist: 0, serenegrace: 0, sheerforce: 0, skilllink: 0, strongjaw: 0, technician: 0,\r\n\t\t\tphysicalsetup: 0, specialsetup: 0, mixedsetup: 0, speedsetup: 0, physicalpool: 0, specialpool: 0, hazards: 0,\r\n\t\t\tdamagingMoves: [],\r\n\t\t\tdamagingMoveIndex: {},\r\n\t\t\tsetupType: '',\r\n\t\t\tBug: 0, Dark: 0, Dragon: 0, Electric: 0, Fairy: 0, Fighting: 0, Fire: 0, Flying: 0, Ghost: 0, Grass: 0, Ground: 0,\r\n\t\t\tIce: 0, Normal: 0, Poison: 0, Psychic: 0, Rock: 0, Steel: 0, Water: 0,\r\n\t\t};\r\n\r\n\t\tlet typeDef: string;\r\n\t\tfor (typeDef in this.dex.data.TypeChart) {\r\n\t\t\tcounter[typeDef] = 0;\r\n\t\t}\r\n\r\n\t\tif (!moves || !moves.length) return counter;\r\n\r\n\t\t// Moves that restore HP:\r\n\t\tconst RecoveryMove = [\r\n\t\t\t'healorder', 'milkdrink', 'moonlight', 'morningsun', 'recover', 'roost', 'shoreup', 'slackoff', 'softboiled', 'strengthsap', 'synthesis',\r\n\t\t];\r\n\t\t// Moves which drop stats:\r\n\t\tconst ContraryMove = [\r\n\t\t\t'closecombat', 'leafstorm', 'overheat', 'superpower', 'vcreate',\r\n\t\t];\r\n\t\t// Moves that boost Attack:\r\n\t\tconst PhysicalSetup = [\r\n\t\t\t'bellydrum', 'bulkup', 'coil', 'curse', 'dragondance', 'honeclaws', 'howl', 'poweruppunch', 'swordsdance',\r\n\t\t];\r\n\t\t// Moves which boost Special Attack:\r\n\t\tconst SpecialSetup = [\r\n\t\t\t'calmmind', 'chargebeam', 'geomancy', 'nastyplot', 'quiverdance', 'tailglow',\r\n\t\t];\r\n\t\t// Moves which boost Attack AND Special Attack:\r\n\t\tconst MixedSetup = [\r\n\t\t\t'clangoroussoul', 'growth', 'happyhour', 'holdhands', 'noretreat', 'shellsmash', 'workup',\r\n\t\t];\r\n\t\t// Moves which boost Speed:\r\n\t\tconst SpeedSetup = [\r\n\t\t\t'agility', 'autotomize', 'flamecharge', 'rockpolish', 'shiftgear',\r\n\t\t];\r\n\t\t// Moves that shouldn't be the only STAB moves:\r\n\t\tconst NoStab = [\r\n\t\t\t'accelerock', 'aquajet', 'bounce', 'breakingswipe', 'explosion', 'fakeout', 'firstimpression', 'flamecharge', 'flipturn',\r\n\t\t\t'iceshard', 'machpunch', 'pluck', 'pursuit', 'quickattack', 'selfdestruct', 'skydrop', 'suckerpunch', 'watershuriken',\r\n\r\n\t\t\t'clearsmog', 'eruption', 'icywind', 'incinerate', 'meteorbeam', 'snarl', 'vacuumwave', 'voltswitch', 'waterspout',\r\n\t\t];\r\n\r\n\t\t// Iterate through all moves we've chosen so far and keep track of what they do:\r\n\t\tfor (const [k, moveId] of moves.entries()) {\r\n\t\t\tconst move = this.dex.moves.get(moveId);\r\n\t\t\tconst moveid = move.id;\r\n\t\t\tlet movetype = move.type;\r\n\t\t\tif (['judgment', 'multiattack', 'revelationdance'].includes(moveid)) movetype = Object.keys(hasType)[0];\r\n\t\t\tif (move.damage || move.damageCallback) {\r\n\t\t\t\t// Moves that do a set amount of damage:\r\n\t\t\t\tcounter['damage']++;\r\n\t\t\t\tcounter.damagingMoves.push(move);\r\n\t\t\t\tcounter.damagingMoveIndex[moveid] = k;\r\n\t\t\t} else {\r\n\t\t\t\t// Are Physical/Special/Status moves:\r\n\t\t\t\tcounter[move.category]++;\r\n\t\t\t}\r\n\t\t\t// Moves that have a low base power:\r\n\t\t\tif (moveid === 'lowkick' || (move.basePower && move.basePower <= 60 && moveid !== 'rapidspin')) counter['technician']++;\r\n\t\t\t// Moves that hit up to 5 times:\r\n\t\t\tif (move.multihit && Array.isArray(move.multihit) && move.multihit[1] === 5) counter['skilllink']++;\r\n\t\t\tif (move.recoil || move.hasCrashDamage) counter['recoil']++;\r\n\t\t\tif (move.drain) counter['drain']++;\r\n\t\t\t// Moves which have a base power, but aren't super-weak like Rapid Spin:\r\n\t\t\tif (move.basePower > 30 || move.multihit || move.basePowerCallback || moveid === 'infestation' || moveid === 'naturepower') {\r\n\t\t\t\tcounter[movetype]++;\r\n\t\t\t\tif (hasType[movetype]) {\r\n\t\t\t\t\tcounter['adaptability']++;\r\n\t\t\t\t\t// STAB:\r\n\t\t\t\t\t// Certain moves aren't acceptable as a Pokemon's only STAB attack\r\n\t\t\t\t\tif (!NoStab.includes(moveid) && (moveid !== 'hiddenpower' || Object.keys(hasType).length === 1)) {\r\n\t\t\t\t\t\tcounter['stab']++;\r\n\t\t\t\t\t\t// Ties between Physical and Special setup should broken in favor of STABs\r\n\t\t\t\t\t\tcounter[move.category] += 0.1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (movetype === 'Normal' && (hasAbility['Aerilate'] || hasAbility['Galvanize'] || hasAbility['Pixilate'] || hasAbility['Refrigerate'])) {\r\n\t\t\t\t\tcounter['stab']++;\r\n\t\t\t\t} else if (move.priority === 0 && (hasAbility['Libero'] || hasAbility['Protean']) && !NoStab.includes(moveid)) {\r\n\t\t\t\t\tcounter['stab']++;\r\n\t\t\t\t} else if (movetype === 'Steel' && hasAbility['Steelworker']) {\r\n\t\t\t\t\tcounter['stab']++;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.flags['bite']) counter['strongjaw']++;\r\n\t\t\t\tif (move.flags['punch']) counter['ironfist']++;\r\n\t\t\t\tif (move.flags['sound']) counter['sound']++;\r\n\t\t\t\tcounter.damagingMoves.push(move);\r\n\t\t\t\tcounter.damagingMoveIndex[moveid] = k;\r\n\t\t\t}\r\n\t\t\t// Moves with secondary effects:\r\n\t\t\tif (move.secondary) {\r\n\t\t\t\tcounter['sheerforce']++;\r\n\t\t\t\tif (move.secondary.chance && move.secondary.chance >= 20 && move.secondary.chance < 100) {\r\n\t\t\t\t\tcounter['serenegrace']++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Moves with low accuracy:\r\n\t\t\tif (move.accuracy && move.accuracy !== true && move.accuracy < 90) counter['inaccurate']++;\r\n\t\t\t// Moves with non-zero priority:\r\n\t\t\tif (move.category !== 'Status' && (move.priority !== 0 || (moveid === 'grassyglide' && hasAbility['Grassy Surge']))) {\r\n\t\t\t\tcounter['priority']++;\r\n\t\t\t}\r\n\r\n\t\t\t// Moves that change stats:\r\n\t\t\tif (RecoveryMove.includes(moveid)) counter['recovery']++;\r\n\t\t\tif (ContraryMove.includes(moveid)) counter['contrary']++;\r\n\t\t\tif (PhysicalSetup.includes(moveid)) {\r\n\t\t\t\tcounter['physicalsetup']++;\r\n\t\t\t\tcounter.setupType = 'Physical';\r\n\t\t\t} else if (SpecialSetup.includes(moveid)) {\r\n\t\t\t\tcounter['specialsetup']++;\r\n\t\t\t\tcounter.setupType = 'Special';\r\n\t\t\t}\r\n\t\t\tif (MixedSetup.includes(moveid)) counter['mixedsetup']++;\r\n\t\t\tif (SpeedSetup.includes(moveid)) counter['speedsetup']++;\r\n\t\t\tif (['spikes', 'stealthrock', 'stickyweb', 'toxicspikes'].includes(moveid)) counter['hazards']++;\r\n\t\t}\r\n\r\n\t\t// Keep track of the available moves\r\n\t\tfor (const moveid of movePool) {\r\n\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\tif (move.damageCallback) continue;\r\n\t\t\tif (move.category === 'Physical') counter['physicalpool']++;\r\n\t\t\tif (move.category === 'Special') counter['specialpool']++;\r\n\t\t}\r\n\r\n\t\t// Choose a setup type:\r\n\t\tif (counter['mixedsetup']) {\r\n\t\t\tcounter.setupType = 'Mixed';\r\n\t\t} else if (counter['physicalsetup'] && counter['specialsetup']) {\r\n\t\t\tconst pool = {\r\n\t\t\t\tPhysical: counter.Physical + counter['physicalpool'],\r\n\t\t\t\tSpecial: counter.Special + counter['specialpool'],\r\n\t\t\t};\r\n\t\t\tif (pool.Physical === pool.Special) {\r\n\t\t\t\tif (counter.Physical > counter.Special) counter.setupType = 'Physical';\r\n\t\t\t\tif (counter.Special > counter.Physical) counter.setupType = 'Special';\r\n\t\t\t} else {\r\n\t\t\t\tcounter.setupType = pool.Physical > pool.Special ? 'Physical' : 'Special';\r\n\t\t\t}\r\n\t\t} else if (counter.setupType === 'Physical') {\r\n\t\t\tif ((counter.Physical < 2 && (!counter.stab || !counter['physicalpool'])) && (!moves.includes('rest') || !moves.includes('sleeptalk'))) {\r\n\t\t\t\tcounter.setupType = '';\r\n\t\t\t}\r\n\t\t} else if (counter.setupType === 'Special') {\r\n\t\t\tif ((counter.Special < 2 && (!counter.stab || !counter['specialpool'])) && (!moves.includes('rest') || !moves.includes('sleeptalk')) && (!moves.includes('wish') || !moves.includes('protect'))) {\r\n\t\t\t\tcounter.setupType = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcounter['Physical'] = Math.floor(counter['Physical']);\r\n\t\tcounter['Special'] = Math.floor(counter['Special']);\r\n\r\n\t\treturn counter;\r\n\t}\r\n\r\n\trandomSet(species: string | Species, teamDetails: RandomTeamsTypes.TeamDetails = {}, isLead = false, isDoubles = false): RandomTeamsTypes.RandomSet {\r\n\t\tspecies = this.dex.species.get(species);\r\n\t\tlet forme = species.name;\r\n\t\tlet gmax = false;\r\n\r\n\t\tif (typeof species.battleOnly === 'string') {\r\n\t\t\t// Only change the forme. The species has custom moves, and may have different typing and requirements.\r\n\t\t\tforme = species.battleOnly;\r\n\t\t}\r\n\t\tif (species.cosmeticFormes) {\r\n\t\t\tif (species.name === 'Vivillon') {\r\n\t\t\t\tif (this.randomChance(1, 4)) {\r\n\t\t\t\t\tforme = 'Vivillon-Polar';\r\n\t\t\t\t} else if (this.randomChance(1, 4)) {\r\n\t\t\t\t\tforme = 'Vivillon-Icy Snow';\r\n\t\t\t\t} else if (this.randomChance(1, 4)) {\r\n\t\t\t\t\tforme = 'Vivillon-Pokeball';\r\n\t\t\t\t} else { forme = 'Vivillon-Tundra'; }\r\n\t\t\t} else if (species.name === 'Sawsbuck') {\r\n\t\t\t\tforme = 'Sawsbuck-Winter';\r\n\t\t\t} else if (species.name === 'Minior' || species.name === 'Minior-Meteor') {\r\n\t\t\t\tif (this.randomChance(1, 2)) {\r\n\t\t\t\t\tforme = 'Minior-Indigo';\r\n\t\t\t\t} else { forme = 'Minior-Blue'; }\r\n\t\t\t} else if (species.name === 'Furfrou') {\r\n\t\t\t\tif (this.randomChance(1, 3)) {\r\n\t\t\t\t\tforme = 'Furfrou-La Reine';\r\n\t\t\t\t} else if (this.randomChance(1, 3)) {\r\n\t\t\t\t\tforme = 'Furfrou-Star';\r\n\t\t\t\t} else { forme = 'Furfrou'; }\r\n\t\t\t} else if (species.name === 'Florges') {\r\n\t\t\t\tif (this.randomChance(1, 2)) {\r\n\t\t\t\t\tforme = \"Florges-Blue\";\r\n\t\t\t\t} else { forme = \"Florges-White\"; }\r\n\t\t\t} else if (species.name === 'Alcremie') {\r\n\t\t\t\tif (this.randomChance(1, 2)) {\r\n\t\t\t\t\tforme = 'Alcremie-Mint-Cream';\r\n\t\t\t\t} else { forme = 'Alcremie-Salted-Cream'; }\r\n\t\t\t} else { forme = this.sample([species.name].concat(species.cosmeticFormes)); }\r\n\t\t}\r\n\t\tif (species.name.endsWith('-Gmax')) {\r\n\t\t\tforme = species.name.slice(0, -5);\r\n\t\t\tgmax = true;\r\n\t\t}\r\n\r\n\t\tconst randMoves = !isDoubles ? species.randomBattleMoves : (species.randomDoubleBattleMoves || species.randomBattleMoves);\r\n\t\tconst movePool = (randMoves || Object.keys(this.dex.data.Learnsets[species.id]!.learnset!)).slice();\r\n\t\tconst rejectedPool = [];\r\n\t\tconst moves: string[] = [];\r\n\t\tlet ability = '';\r\n\t\tlet item = '';\r\n\t\tconst evs = {\r\n\t\t\thp: 85, atk: 85, def: 85, spa: 85, spd: 85, spe: 85,\r\n\t\t};\r\n\t\tconst ivs = {\r\n\t\t\thp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31,\r\n\t\t};\r\n\t\tconst hasType: {[k: string]: true} = {};\r\n\t\thasType[species.types[0]] = true;\r\n\t\tif (species.types[1]) {\r\n\t\t\thasType[species.types[1]] = true;\r\n\t\t}\r\n\t\tconst hasAbility: {[k: string]: true} = {};\r\n\t\thasAbility[species.abilities[0]] = true;\r\n\t\tif (species.abilities[1]) {\r\n\t\t\thasAbility[species.abilities[1]] = true;\r\n\t\t}\r\n\t\tif (species.abilities['H']) {\r\n\t\t\thasAbility[species.abilities['H']] = true;\r\n\t\t}\r\n\r\n\t\tlet hasMove: {[k: string]: boolean} = {};\r\n\t\tlet counter;\r\n\r\n\t\tdo {\r\n\t\t\t// Keep track of all moves we have:\r\n\t\t\thasMove = {};\r\n\t\t\tfor (const moveid of moves) {\r\n\t\t\t\thasMove[moveid] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Choose next 4 moves from learnset/viable moves and add them to moves list:\r\n\t\t\tconst pool = (movePool.length ? movePool : rejectedPool);\r\n\t\t\twhile (moves.length < 4 && pool.length) {\r\n\t\t\t\tconst moveid = this.sampleNoReplace(pool);\r\n\t\t\t\thasMove[moveid] = true;\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\r\n\t\t\tcounter = this.queryMoves(moves, hasType, hasAbility, movePool);\r\n\r\n\t\t\t// Iterate through the moves again, this time to cull them:\r\n\t\t\tfor (const [k, moveId] of moves.entries()) {\r\n\t\t\t\tconst move = this.dex.moves.get(moveId);\r\n\t\t\t\tconst moveid = move.id;\r\n\t\t\t\tlet rejected = false;\r\n\t\t\t\tlet isSetup = false;\r\n\r\n\t\t\t\tswitch (moveid) {\r\n\t\t\t\t// Not very useful without their supporting moves\r\n\t\t\t\tcase 'acrobatics': case 'junglehealing':\r\n\t\t\t\t\tif (!counter.setupType && !isDoubles) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'destinybond': case 'healbell':\r\n\t\t\t\t\tif (movePool.includes('protect') || movePool.includes('wish')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fireblast':\r\n\t\t\t\t\tif (hasAbility['Serene Grace'] && (!hasMove['trick'] || counter.Status > 1)) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'firepunch':\r\n\t\t\t\t\tif (movePool.includes('bellydrum') || hasMove['earthquake'] && movePool.includes('substitute')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'flamecharge': case 'sacredsword':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 3 && !counter.setupType) rejected = true;\r\n\t\t\t\t\tif (!hasType['Grass'] && movePool.includes('swordsdance')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fly': case 'storedpower':\r\n\t\t\t\t\tif (!counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'futuresight':\r\n\t\t\t\t\tif (!counter.Status || !hasMove['teleport']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'payback': case 'psychocut':\r\n\t\t\t\t\tif (!counter.Status || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rest':\r\n\t\t\t\t\tif (movePool.includes('sleeptalk')) rejected = true;\r\n\t\t\t\t\tif (!hasMove['sleeptalk'] && (movePool.includes('bulkup') || movePool.includes('calmmind') || movePool.includes('coil') || movePool.includes('curse'))) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sleeptalk':\r\n\t\t\t\t\tif (!hasMove['rest']) rejected = true;\r\n\t\t\t\t\tif (movePool.length > 1 && !hasAbility['Contrary']) {\r\n\t\t\t\t\t\tconst rest = movePool.indexOf('rest');\r\n\t\t\t\t\t\tif (rest >= 0) this.fastPop(movePool, rest);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo': case 'trick':\r\n\t\t\t\t\tif (counter.Physical + counter.Special < 3 || hasMove['futuresight'] || hasMove['rapidspin']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'trickroom':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || movePool.includes('nastyplot') || isLead || teamDetails.stickyWeb) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'zenheadbutt':\r\n\t\t\t\t\tif (movePool.includes('boltstrike')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Set up once and only if we have the moves for it\r\n\t\t\t\tcase 'bellydrum': case 'bulkup': case 'coil': case 'curse': case 'dragondance': case 'honeclaws': case 'swordsdance':\r\n\t\t\t\t\tif (counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tif (counter.Physical + counter['physicalpool'] < 2 && (!hasMove['rest'] || !hasMove['sleeptalk'])) rejected = true;\r\n\t\t\t\t\tif (moveid === 'swordsdance' && hasMove['dragondance']) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'calmmind': case 'nastyplot':\r\n\t\t\t\t\tif (counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tif (counter.Special + counter['specialpool'] < 2 && (!hasMove['rest'] || !hasMove['sleeptalk']) && (!hasMove['wish'] || !hasMove['protect'])) rejected = true;\r\n\t\t\t\t\tif (hasMove['healpulse'] || moveid === 'calmmind' && hasMove['trickroom']) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'quiverdance':\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'clangoroussoul': case 'shellsmash': case 'workup':\r\n\t\t\t\t\tif (counter.setupType !== 'Mixed') rejected = true;\r\n\t\t\t\t\tif (counter.damagingMoves.length + counter['physicalpool'] + counter['specialpool'] < 2) rejected = true;\r\n\t\t\t\t\tisSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'agility': case 'autotomize': case 'rockpolish': case 'shiftgear':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || hasMove['rest']) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('calmmind') || movePool.includes('nastyplot')) rejected = true;\r\n\t\t\t\t\tif (!counter.setupType) isSetup = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Bad after setup\r\n\t\t\t\tcase 'counter': case 'reversal':\r\n\t\t\t\t\tif (counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'firstimpression': case 'glare': case 'icywind': case 'tailwind': case 'waterspout':\r\n\t\t\t\t\tif ((counter.setupType && !isDoubles) || !!counter['speedsetup'] || hasMove['rest']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bulletpunch': case 'rockblast':\r\n\t\t\t\t\tif (!!counter['speedsetup'] || counter.damagingMoves.length < 2) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'closecombat': case 'flashcannon': case 'pollenpuff':\r\n\t\t\t\t\tif ((hasMove['substitute'] && !hasType['Fighting']) || hasMove['toxic'] && movePool.includes('substitute')) rejected = true;\r\n\t\t\t\t\tif (moveid === 'closecombat' && (hasMove['highjumpkick'] || movePool.includes('highjumpkick')) && !counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'defog':\r\n\t\t\t\t\tif (counter.setupType || hasMove['healbell'] || hasMove['stealthrock'] || hasMove['toxicspikes'] || teamDetails.defog) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fakeout':\r\n\t\t\t\t\tif (counter.setupType || hasMove['protect'] || hasMove['rapidspin'] || hasMove['substitute'] || hasMove['uturn']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healingwish': case 'memento':\r\n\t\t\t\t\tif (counter.setupType || !!counter['recovery'] || hasMove['substitute'] || hasMove['uturn']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'highjumpkick': case 'machpunch':\r\n\t\t\t\t\tif (hasMove['curse']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed': case 'teleport':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'partingshot':\r\n\t\t\t\t\tif (!!counter['speedsetup'] || hasMove['bulkup'] || hasMove['uturn']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'protect':\r\n\t\t\t\t\tif ((counter.setupType && !hasMove['wish'] && !isDoubles) || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (counter.Status < 2 && !hasAbility['Hunger Switch'] && !hasAbility['Speed Boost'] && !isDoubles) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('leechseed') || movePool.includes('toxic') && !hasMove['wish']) rejected = true;\r\n\t\t\t\t\tif (isDoubles && (movePool.includes('fakeout') || movePool.includes('shellsmash') || movePool.includes('spore') || hasMove['tailwind'] || hasMove['waterspout'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rapidspin':\r\n\t\t\t\t\tif (hasMove['curse'] || hasMove['nastyplot'] || hasMove['shellsmash'] || teamDetails.rapidSpin) rejected = true;\r\n\t\t\t\t\tif (counter.setupType && counter['Fighting'] >= 2) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowsneak':\r\n\t\t\t\t\tif (hasMove['substitute'] || hasMove['trickroom']) rejected = true;\r\n\t\t\t\t\tif (hasMove['dualwingbeat'] || hasMove['toxic'] || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'spikes':\r\n\t\t\t\t\tif (counter.setupType || teamDetails.spikes && teamDetails.spikes > 1) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealthrock':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['rest'] || hasMove['substitute'] || hasMove['trickroom'] || teamDetails.stealthRock) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stickyweb':\r\n\t\t\t\t\tif (counter.setupType === 'Special' || teamDetails.stickyWeb) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'taunt':\r\n\t\t\t\t\tif (hasMove['nastyplot'] || hasMove['swordsdance']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'thunderwave': case 'voltswitch':\r\n\t\t\t\t\tif (counter.setupType || !!counter['speedsetup'] || hasMove['raindance']) rejected = true;\r\n\t\t\t\t\tif (isDoubles && (hasMove['electroweb'] || hasMove['nuzzle'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'toxic':\r\n\t\t\t\t\tif (counter.setupType || hasMove['sludgewave'] || hasMove['thunderwave'] || hasMove['willowisp']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'toxicspikes':\r\n\t\t\t\t\tif (counter.setupType || teamDetails.toxicSpikes) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'uturn':\r\n\t\t\t\t\tif (!!counter['speedsetup'] || (counter.setupType && (!hasType['Bug'] || !counter.recovery))) rejected = true;\r\n\t\t\t\t\tif (isDoubles && hasMove['leechlife']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Ineffective having both\r\n\t\t\t\t// Attacks:\r\n\t\t\t\tcase 'explosion':\r\n\t\t\t\t\tif (!!counter['recovery'] || hasMove['painsplit'] || hasMove['wish']) rejected = true;\r\n\t\t\t\t\tif (!!counter['speedsetup'] || hasMove['curse'] || hasMove['drainpunch'] || hasMove['rockblast']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'facade':\r\n\t\t\t\t\tif (!!counter['recovery'] || movePool.includes('doubleedge')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'quickattack':\r\n\t\t\t\t\tif (!!counter['speedsetup'] || hasType['Rock'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tif (counter.Physical > 3 && movePool.includes('uturn')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'blazekick':\r\n\t\t\t\t\tif (counter.Special >= 1) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'firefang': case 'flamethrower':\r\n\t\t\t\t\tif (hasMove['heatwave'] || hasMove['overheat'] || hasMove['fireblast'] && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'overheat':\r\n\t\t\t\t\tif (hasMove['flareblitz'] || isDoubles && hasMove['calmmind']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'aquajet': case 'psychicfangs':\r\n\t\t\t\t\tif (hasMove['rapidspin'] || hasMove['taunt']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'aquatail': case 'flipturn': case 'retaliate':\r\n\t\t\t\t\tif (hasMove['aquajet'] || !!counter.Status) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hydropump':\r\n\t\t\t\t\tif (hasMove['scald'] && ((counter.Special < 4 && !hasMove['uturn']) || (species.types.length > 1 && counter.stab < 3))) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\t\tif (hasMove['waterpulse']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'thunderbolt':\r\n\t\t\t\t\tif (hasMove['powerwhip']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gigadrain':\r\n\t\t\t\t\tif (hasMove['uturn'] || hasType['Poison'] && !counter['Poison']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leafblade':\r\n\t\t\t\t\tif ((hasMove['leafstorm'] || movePool.includes('leafstorm')) && counter.setupType !== 'Physical') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leafstorm':\r\n\t\t\t\t\tif (hasMove['gigadrain'] && !!counter.Status) rejected = true;\r\n\t\t\t\t\tif (isDoubles && hasMove['energyball']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powerwhip':\r\n\t\t\t\t\tif (hasMove['leechlife'] || !hasType['Grass'] && counter.Physical > 3 && movePool.includes('uturn')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'woodhammer':\r\n\t\t\t\t\tif (hasMove['hornleech'] && counter.Physical < 4) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'freezedry':\r\n\t\t\t\t\tif ((hasMove['blizzard'] && counter.setupType) || hasMove['icebeam'] && counter.Special < 4) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('bodyslam') || movePool.includes('thunderwave') && hasType['Electric']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bodypress':\r\n\t\t\t\t\tif (hasMove['mirrorcoat'] || hasMove['whirlwind']) rejected = true;\r\n\t\t\t\t\tif (hasMove['shellsmash'] || hasMove['earthquake'] && movePool.includes('shellsmash')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'circlethrow':\r\n\t\t\t\t\tif (hasMove['stormthrow'] && !hasMove['rest']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'drainpunch':\r\n\t\t\t\t\tif (hasMove['closecombat'] || !hasType['Fighting'] && movePool.includes('swordsdance')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dynamicpunch': case 'thunderouskick':\r\n\t\t\t\t\tif (hasMove['closecombat'] || hasMove['facade']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focusblast':\r\n\t\t\t\t\tif (movePool.includes('shellsmash') || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hammerarm':\r\n\t\t\t\t\tif (hasMove['fakeout']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'seismictoss':\r\n\t\t\t\t\tif (hasMove['protect'] && hasType['Water']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stormthrow':\r\n\t\t\t\t\tif (hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'superpower':\r\n\t\t\t\t\tif (hasMove['hydropump'] || counter.Physical >= 4 && movePool.includes('uturn')) rejected = true;\r\n\t\t\t\t\tif (hasMove['substitute'] && !hasAbility['Contrary']) rejected = true;\r\n\t\t\t\t\tif (hasAbility['Contrary']) isSetup = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'poisonjab':\r\n\t\t\t\t\tif (!hasType['Poison'] && counter.Status >= 2) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'earthquake':\r\n\t\t\t\t\tif (hasMove['bonemerang'] || hasMove['substitute'] && movePool.includes('toxic')) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('bodypress') && movePool.includes('shellsmash')) rejected = true;\r\n\t\t\t\t\tif (isDoubles && (hasMove['earthpower'] || hasMove['highhorsepower'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'scorchingsands':\r\n\t\t\t\t\tif (hasMove['earthpower'] || hasMove['toxic'] && movePool.includes('earthpower')) rejected = true;\r\n\t\t\t\t\tif (hasMove['willowisp']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'airslash':\r\n\t\t\t\t\tif ((hasMove['hurricane'] && !counter.setupType) || hasMove['rest'] && hasMove['sleeptalk']) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('flamethrower') || hasAbility['Simple'] && !!counter['recovery']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bravebird':\r\n\t\t\t\t\tif (hasMove['dragondance']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hurricane':\r\n\t\t\t\t\tif (hasAbility['Tinted Lens'] && counter.setupType && !isDoubles) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'photongeyser':\r\n\t\t\t\t\tif (hasMove['morningsun']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychic':\r\n\t\t\t\t\tif (hasMove['psyshock'] && (counter.setupType || isDoubles)) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psyshock':\r\n\t\t\t\t\tif ((hasMove['psychic'] || hasAbility['Pixilate']) && counter.Special < 4 && !counter.setupType) rejected = true;\r\n\t\t\t\t\tif (hasAbility['Multiscale'] && !counter.setupType) rejected = true;\r\n\t\t\t\t\tif (isDoubles && hasMove['psychic']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bugbuzz':\r\n\t\t\t\t\tif (hasMove['uturn'] && !counter.setupType) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechlife':\r\n\t\t\t\t\tif (isDoubles && hasMove['lunge']) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('firstimpression') || movePool.includes('spikes')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stoneedge':\r\n\t\t\t\t\tif (hasMove['rockblast'] || hasMove['rockslide'] || !!counter.Status && movePool.includes('rockslide')) rejected = true;\r\n\t\t\t\t\tif (hasAbility['Guts'] && (!hasMove['dynamicpunch'] || hasMove['spikes'])) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'poltergeist':\r\n\t\t\t\t\tif (hasMove['knockoff']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowball':\r\n\t\t\t\t\tif (hasAbility['Pixilate'] && (counter.setupType || counter.Status > 1)) rejected = true;\r\n\t\t\t\t\tif (isDoubles && hasMove ['phantomforce']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shadowclaw':\r\n\t\t\t\t\tif (hasType['Steel'] && hasMove['shadowsneak'] && counter.Physical < 4) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dragonpulse': case 'spacialrend':\r\n\t\t\t\t\tif (hasMove['dracometeor'] && counter.Special < 4) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'darkpulse':\r\n\t\t\t\t\tif ((hasMove['foulplay'] || hasMove['knockoff'] || hasMove['suckerpunch'] || hasMove['defog']) && counter.setupType !== 'Special') rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'knockoff':\r\n\t\t\t\t\tif (hasMove['darkestlariat']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'suckerpunch':\r\n\t\t\t\t\tif (counter.damagingMoves.length < 2 || counter['Dark'] > 1 && !hasType['Dark']) rejected = true;\r\n\t\t\t\t\tif (hasMove['rest']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'meteormash':\r\n\t\t\t\t\tif (movePool.includes('extremespeed')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dazzlinggleam':\r\n\t\t\t\t\tif (hasMove['fleurcannon'] || hasMove['moonblast'] || hasMove['petaldance']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Status:\r\n\t\t\t\tcase 'bodyslam': case 'clearsmog':\r\n\t\t\t\t\tif (hasMove['sludgebomb'] || hasMove['toxic'] && !hasType['Normal']) rejected = true;\r\n\t\t\t\t\tif (hasMove['trick'] || movePool.includes('recover')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'haze':\r\n\t\t\t\t\tif ((hasMove['stealthrock'] || movePool.includes('stealthrock')) && !teamDetails.stealthRock) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hypnosis':\r\n\t\t\t\t\tif (hasMove['voltswitch']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'willowisp': case 'yawn':\r\n\t\t\t\t\tif (hasMove['thunderwave'] || hasMove['toxic']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'painsplit': case 'recover': case 'synthesis':\r\n\t\t\t\t\tif (hasMove['rest'] || hasMove['wish']) rejected = true;\r\n\t\t\t\t\tif (moveid === 'synthesis' && hasMove['gigadrain']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'roost':\r\n\t\t\t\t\tif (hasMove['throatchop'] || hasMove['stoneedge'] && !hasType['Rock']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'reflect': case 'lightscreen':\r\n\t\t\t\t\tif (teamDetails.screens) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tif (hasMove['facade'] || hasMove['rest'] || hasMove['uturn']) rejected = true;\r\n\t\t\t\t\tif (movePool.includes('bulkup') || movePool.includes('painsplit') || movePool.includes('roost') || movePool.includes('calmmind') && !counter['recovery']) rejected = true;\r\n\t\t\t\t\tif (isDoubles && movePool.includes('powerwhip')) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'helpinghand':\r\n\t\t\t\t\tif (hasMove['acupressure']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'wideguard':\r\n\t\t\t\t\tif (hasMove['protect']) rejected = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// This move doesn't satisfy our setup requirements:\r\n\t\t\t\tif (((move.category === 'Physical' && counter.setupType === 'Special') || (move.category === 'Special' && counter.setupType === 'Physical')) && moveid !== 'photongeyser') {\r\n\t\t\t\t\t// Reject STABs last in case the setup type changes later on\r\n\t\t\t\t\tconst stabs: number = counter[species.types[0]] + (counter[species.types[1]] || 0);\r\n\t\t\t\t\tif (!hasType[move.type] || stabs > 1 || counter[move.category] < 2) rejected = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pokemon should have moves that benefit their types, stats, or ability\r\n\t\t\t\tif (!rejected && !move.damage && !isSetup && !move.weather && !move.stallingMove &&\r\n\t\t\t\t\t(isDoubles || (!['facade', 'lightscreen', 'reflect', 'sleeptalk', 'spore', 'substitute', 'toxic', 'whirlpool'].includes(moveid) && (move.category !== 'Status' || !move.flags.heal))) &&\r\n\t\t\t\t\t(!counter.setupType || counter.setupType === 'Mixed' || (move.category !== counter.setupType && move.category !== 'Status') || (counter[counter.setupType] + counter.Status > 3 && !counter.hazards)) &&\r\n\t\t\t\t(\r\n\t\t\t\t\t(!counter.stab && counter['physicalpool'] + counter['specialpool'] > 0) ||\r\n\t\t\t\t\t(hasType['Bug'] && movePool.includes('megahorn')) ||\r\n\t\t\t\t\t(hasType['Dark'] && (!counter['Dark'] || (hasMove['suckerpunch'] && (movePool.includes('knockoff') || movePool.includes('wickedblow'))))) ||\r\n\t\t\t\t\t(hasType['Dragon'] && !counter['Dragon'] && !hasMove['dragonascent'] && !hasMove['substitute'] && !(hasMove['rest'] && hasMove['sleeptalk'])) ||\r\n\t\t\t\t\t(hasType['Electric'] && (!counter['Electric'] || movePool.includes('thunder'))) ||\r\n\t\t\t\t\t(hasType['Fairy'] && !counter['Fairy'] && (movePool.includes('dazzlinggleam') || movePool.includes('fleurcannon') || movePool.includes('moonblast') || movePool.includes('playrough'))) ||\r\n\t\t\t\t\t(hasType['Fighting'] && (!counter['Fighting'] || !counter.stab)) ||\r\n\t\t\t\t\t(hasType['Fire'] && (!counter['Fire'] || movePool.includes('flareblitz')) && !hasMove['bellydrum']) ||\r\n\t\t\t\t\t((hasType['Flying'] || hasMove['swordsdance']) && !counter['Flying'] && (movePool.includes('airslash') || movePool.includes('bravebird') || movePool.includes('dualwingbeat') || movePool.includes('oblivionwing'))) ||\r\n\t\t\t\t\t(hasType['Ghost'] && (!counter['Ghost'] || movePool.includes('poltergeist') || movePool.includes('spectralthief')) && !counter['Dark']) ||\r\n\t\t\t\t\t(hasType['Grass'] && !counter['Grass'] && (species.baseStats.atk >= 100 || movePool.includes('leafstorm'))) ||\r\n\t\t\t\t\t(hasType['Ground'] && !counter['Ground']) ||\r\n\t\t\t\t\t(hasType['Ice'] && (!counter['Ice'] || movePool.includes('iciclecrash') || (hasAbility['Snow Warning'] && movePool.includes('blizzard')))) ||\r\n\t\t\t\t\t((hasType['Normal'] && hasAbility['Guts'] && movePool.includes('facade')) || (hasAbility['Pixilate'] && !counter['Normal'])) ||\r\n\t\t\t\t\t(hasType['Poison'] && !counter['Poison'] && (counter.setupType || hasAbility['Sheer Force'] || movePool.includes('gunkshot'))) ||\r\n\t\t\t\t\t(hasType['Psychic'] && !counter['Psychic'] && !hasType['Ghost'] && !hasType['Steel'] && (counter.setupType || hasAbility['Psychic Surge'] || movePool.includes('psychicfangs'))) ||\r\n\t\t\t\t\t(hasType['Rock'] && !counter['Rock'] && species.baseStats.atk >= 80) ||\r\n\t\t\t\t\t((hasType['Steel'] || hasAbility['Steelworker']) && (!counter['Steel'] || (hasMove['bulletpunch'] && counter.stab < 2)) && species.baseStats.atk >= 95) ||\r\n\t\t\t\t\t(hasType['Water'] && ((!counter['Water'] && !hasMove['hypervoice']) || movePool.includes('hypervoice'))) ||\r\n\t\t\t\t\t((hasAbility['Moody'] || hasMove['wish']) && movePool.includes('protect')) ||\r\n\t\t\t\t\t(((hasMove['lightscreen'] && movePool.includes('reflect')) || (hasMove['reflect'] && movePool.includes('lightscreen'))) && !teamDetails.screens) ||\r\n\t\t\t\t\t((movePool.includes('morningsun') || movePool.includes('recover') || movePool.includes('roost') || movePool.includes('slackoff') || movePool.includes('softboiled')) &&\r\n\t\t\t\t\t\t!!counter.Status && !counter.setupType && !hasMove['healingwish'] && !hasMove['switcheroo'] && !hasMove['trick'] && !hasMove['trickroom'] && !isDoubles) ||\r\n\t\t\t\t\t(movePool.includes('milkdrink') || movePool.includes('quiverdance') || movePool.includes('stickyweb') && !counter.setupType && !teamDetails.stickyWeb) ||\r\n\t\t\t\t\t(isLead && movePool.includes('stealthrock') && !!counter.Status && !counter.setupType && !counter['speedsetup'] && !hasMove['substitute']) ||\r\n\t\t\t\t\t(isDoubles && species.baseStats.def >= 140 && movePool.includes('bodypress'))\r\n\t\t\t\t)) {\r\n\t\t\t\t\t// Reject Status, non-STAB, or low basepower moves\r\n\t\t\t\t\tif (move.category === 'Status' || !hasType[move.type] || move.basePower && move.basePower < 50 && !move.multihit && !hasAbility['Technician']) {\r\n\t\t\t\t\t\trejected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Sleep Talk shouldn't be selected without Rest\r\n\t\t\t\tif (moveid === 'rest' && rejected) {\r\n\t\t\t\t\tconst sleeptalk = movePool.indexOf('sleeptalk');\r\n\t\t\t\t\tif (sleeptalk >= 0) {\r\n\t\t\t\t\t\tif (movePool.length < 2) {\r\n\t\t\t\t\t\t\trejected = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.fastPop(movePool, sleeptalk);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove rejected moves from the move list\r\n\t\t\t\tif (rejected && movePool.length) {\r\n\t\t\t\t\tif (move.category !== 'Status' && !move.damage) rejectedPool.push(moves[k]);\r\n\t\t\t\t\tmoves.splice(k, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (rejected && rejectedPool.length) {\r\n\t\t\t\t\tmoves.splice(k, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (moves.length < 4 && (movePool.length || rejectedPool.length));\r\n\r\n\t\t// const baseSpecies: Species = species.battleOnly && !species.requiredAbility ? this.dex.species.get(species.battleOnly as string) : species;\r\n\t\tconst abilities: string[] = Object.values(species.abilities);\r\n\t\tabilities.sort((a, b) => this.dex.abilities.get(b).rating - this.dex.abilities.get(a).rating);\r\n\t\tlet ability0 = this.dex.abilities.get(abilities[0]);\r\n\t\tlet ability1 = this.dex.abilities.get(abilities[1]);\r\n\t\tlet ability2 = this.dex.abilities.get(abilities[2]);\r\n\t\tif (abilities[1]) {\r\n\t\t\tif (abilities[2] && ability1.rating <= ability2.rating && this.randomChance(1, 2)) {\r\n\t\t\t\t[ability1, ability2] = [ability2, ability1];\r\n\t\t\t}\r\n\t\t\tif (ability0.rating <= ability1.rating && this.randomChance(1, 2)) {\r\n\t\t\t\t[ability0, ability1] = [ability1, ability0];\r\n\t\t\t} else if (ability0.rating - 0.6 <= ability1.rating && this.randomChance(2, 3)) {\r\n\t\t\t\t[ability0, ability1] = [ability1, ability0];\r\n\t\t\t}\r\n\t\t\tability = ability0.name;\r\n\r\n\t\t\tlet rejectAbility: boolean;\r\n\t\t\tdo {\r\n\t\t\t\trejectAbility = false;\r\n\t\t\t\tif (['Cloud Nine', 'Flare Boost', 'Hydration', 'Ice Body', 'Innards Out', 'Insomnia', 'Misty Surge', 'Quick Feet', 'Rain Dish', 'Snow Cloak', 'Steadfast', 'Steam Engine', 'Weak Armor'].includes(ability)) {\r\n\t\t\t\t\trejectAbility = true;\r\n\t\t\t\t} else if (['Adaptability', 'Contrary', 'Serene Grace', 'Skill Link', 'Strong Jaw'].includes(ability)) {\r\n\t\t\t\t\trejectAbility = !counter[toID(ability)];\r\n\t\t\t\t} else if (ability === 'Analytic') {\r\n\t\t\t\t\trejectAbility = (hasMove['rapidspin'] || species.nfe || isDoubles);\r\n\t\t\t\t} else if (ability === 'Blaze') {\r\n\t\t\t\t\trejectAbility = (isDoubles && hasAbility['Solar Power']);\r\n\t\t\t\t} else if (ability === 'Bulletproof' || ability === 'Overcoat') {\r\n\t\t\t\t\trejectAbility = (counter.setupType && hasAbility['Soundproof']);\r\n\t\t\t\t} else if (ability === 'Chlorophyll') {\r\n\t\t\t\t\trejectAbility = (species.baseStats.spe > 100 || !counter['Fire'] && !hasMove['sunnyday'] && !teamDetails['sun']);\r\n\t\t\t\t} else if (ability === 'Competitive') {\r\n\t\t\t\t\trejectAbility = (counter['Special'] < 2 || hasMove['rest'] && hasMove['sleeptalk']);\r\n\t\t\t\t} else if (ability === 'Compound Eyes' || ability === 'No Guard') {\r\n\t\t\t\t\trejectAbility = !counter['inaccurate'];\r\n\t\t\t\t} else if (ability === 'Cursed Body') {\r\n\t\t\t\t\trejectAbility = hasAbility['Infiltrator'];\r\n\t\t\t\t} else if (ability === 'Defiant') {\r\n\t\t\t\t\trejectAbility = !counter['Physical'];\r\n\t\t\t\t} else if (ability === 'Download') {\r\n\t\t\t\t\trejectAbility = counter.damagingMoves.length < 3;\r\n\t\t\t\t} else if (ability === 'Early Bird') {\r\n\t\t\t\t\trejectAbility = (hasType['Grass'] && isDoubles);\r\n\t\t\t\t} else if (ability === 'Flash Fire') {\r\n\t\t\t\t\trejectAbility = (this.dex.getEffectiveness('Fire', species) < -1 || hasAbility['Drought']);\r\n\t\t\t\t} else if (ability === 'Gluttony') {\r\n\t\t\t\t\trejectAbility = !hasMove['bellydrum'];\r\n\t\t\t\t} else if (ability === 'Guts') {\r\n\t\t\t\t\trejectAbility = (!hasMove['facade'] && !hasMove['sleeptalk'] && !species.nfe);\r\n\t\t\t\t} else if (ability === 'Harvest') {\r\n\t\t\t\t\trejectAbility = (hasAbility['Frisk'] && !isDoubles);\r\n\t\t\t\t} else if (ability === 'Hustle' || ability === 'Inner Focus') {\r\n\t\t\t\t\trejectAbility = (counter.Physical < 2 || hasAbility['Iron Fist']);\r\n\t\t\t\t} else if (ability === 'Infiltrator') {\r\n\t\t\t\t\trejectAbility = ((hasMove['rest'] && hasMove['sleeptalk']) || isDoubles && hasAbility['Clear Body']);\r\n\t\t\t\t} else if (ability === 'Intimidate') {\r\n\t\t\t\t\trejectAbility = (hasMove['bodyslam'] || hasMove['bounce'] || hasMove['tripleaxel']);\r\n\t\t\t\t} else if (ability === 'Iron Fist') {\r\n\t\t\t\t\trejectAbility = (counter['ironfist'] < 2 || hasMove['dynamicpunch']);\r\n\t\t\t\t} else if (ability === 'Justified') {\r\n\t\t\t\t\trejectAbility = (isDoubles && hasAbility['Inner Focus']);\r\n\t\t\t\t} else if (ability === 'Lightning Rod') {\r\n\t\t\t\t\trejectAbility = (species.types.includes('Ground') || counter.setupType === 'Physical');\r\n\t\t\t\t} else if (ability === 'Limber') {\r\n\t\t\t\t\trejectAbility = species.types.includes('Electric');\r\n\t\t\t\t} else if (ability === 'Liquid Voice') {\r\n\t\t\t\t\trejectAbility = !hasMove['hypervoice'];\r\n\t\t\t\t} else if (ability === 'Magic Guard') {\r\n\t\t\t\t\trejectAbility = (hasAbility['Tinted Lens'] && !counter.Status && !isDoubles);\r\n\t\t\t\t} else if (ability === 'Mold Breaker') {\r\n\t\t\t\t\trejectAbility = (hasAbility['Adaptability'] || hasAbility['Scrappy'] || (hasAbility['Sheer Force'] && !!counter['sheerforce']) || hasAbility['Unburden'] && counter.setupType);\r\n\t\t\t\t} else if (ability === 'Moxie') {\r\n\t\t\t\t\trejectAbility = (counter.Physical < 2 || hasMove['stealthrock']);\r\n\t\t\t\t} else if (ability === 'Neutralizing Gas') {\r\n\t\t\t\t\trejectAbility = !hasMove['toxicspikes'];\r\n\t\t\t\t} else if (ability === 'Overgrow') {\r\n\t\t\t\t\trejectAbility = !counter['Grass'];\r\n\t\t\t\t} else if (ability === 'Own Tempo') {\r\n\t\t\t\t\trejectAbility = !hasMove['petaldance'];\r\n\t\t\t\t} else if (ability === 'Power Construct') {\r\n\t\t\t\t\trejectAbility = (species.forme === '10%' && !isDoubles);\r\n\t\t\t\t} else if (ability === 'Prankster') {\r\n\t\t\t\t\trejectAbility = !counter['Status'];\r\n\t\t\t\t} else if (ability === 'Pressure') {\r\n\t\t\t\t\trejectAbility = (counter.setupType || counter.Status < 2 || isDoubles);\r\n\t\t\t\t} else if (ability === 'Refrigerate') {\r\n\t\t\t\t\trejectAbility = !counter['Normal'];\r\n\t\t\t\t} else if (ability === 'Regenerator') {\r\n\t\t\t\t\trejectAbility = hasAbility['Magic Guard'];\r\n\t\t\t\t} else if (ability === 'Reckless' || ability === 'Rock Head') {\r\n\t\t\t\t\trejectAbility = !counter['recoil'];\r\n\t\t\t\t} else if (ability === 'Sand Force' || ability === 'Sand Veil') {\r\n\t\t\t\t\trejectAbility = !teamDetails['sand'];\r\n\t\t\t\t} else if (ability === 'Sand Rush') {\r\n\t\t\t\t\trejectAbility = (!teamDetails['sand'] && (!counter.setupType || !counter['Rock'] || hasMove['rapidspin']));\r\n\t\t\t\t} else if (ability === 'Sap Sipper') {\r\n\t\t\t\t\trejectAbility = hasMove['roost'];\r\n\t\t\t\t} else if (ability === 'Scrappy') {\r\n\t\t\t\t\trejectAbility = (hasMove['earthquake'] && hasMove['milkdrink']);\r\n\t\t\t\t} else if (ability === 'Screen Cleaner') {\r\n\t\t\t\t\trejectAbility = !!teamDetails['screens'];\r\n\t\t\t\t} else if (ability === 'Shadow Tag') {\r\n\t\t\t\t\trejectAbility = (species.name === 'Gothitelle' && !isDoubles);\r\n\t\t\t\t} else if (ability === 'Shed Skin') {\r\n\t\t\t\t\trejectAbility = hasMove['dragondance'];\r\n\t\t\t\t} else if (ability === 'Sheer Force') {\r\n\t\t\t\t\trejectAbility = (!counter['sheerforce'] || hasAbility['Guts']);\r\n\t\t\t\t} else if (ability === 'Slush Rush') {\r\n\t\t\t\t\trejectAbility = (!teamDetails['hail'] && !hasAbility['Swift Swim']);\r\n\t\t\t\t} else if (ability === 'Sniper') {\r\n\t\t\t\t\trejectAbility = (counter['Water'] > 1 && !hasMove['focusenergy']);\r\n\t\t\t\t} else if (ability === 'Steely Spirit') {\r\n\t\t\t\t\trejectAbility = (hasMove['fakeout'] && !isDoubles);\r\n\t\t\t\t} else if (ability === 'Sturdy') {\r\n\t\t\t\t\trejectAbility = (hasMove['bulkup'] || !!counter['recoil'] || hasAbility['Solid Rock']);\r\n\t\t\t\t} else if (ability === 'Swarm') {\r\n\t\t\t\t\trejectAbility = (!counter['Bug'] || !!counter['recovery']);\r\n\t\t\t\t} else if (ability === 'Sweet Veil') {\r\n\t\t\t\t\trejectAbility = hasType['Grass'];\r\n\t\t\t\t} else if (ability === 'Swift Swim') {\r\n\t\t\t\t\trejectAbility = (!hasMove['raindance'] && (hasAbility['Intimidate'] || (hasAbility['Lightning Rod'] && !counter.setupType) || hasAbility['Rock Head'] || hasAbility['Slush Rush'] || hasAbility['Water Absorb']));\r\n\t\t\t\t} else if (ability === 'Synchronize') {\r\n\t\t\t\t\trejectAbility = (counter.setupType || counter.Status < 2);\r\n\t\t\t\t} else if (ability === 'Technician') {\r\n\t\t\t\t\trejectAbility = (!counter['technician'] || hasMove['tailslap'] || hasAbility['Punk Rock'] || movePool.includes('snarl'));\r\n\t\t\t\t} else if (ability === 'Tinted Lens') {\r\n\t\t\t\t\trejectAbility = (hasMove['defog'] || hasMove['hurricane'] || counter.Status > 2 && !counter.setupType);\r\n\t\t\t\t} else if (ability === 'Torrent') {\r\n\t\t\t\t\trejectAbility = (hasMove['focusenergy'] || hasMove['hypervoice']);\r\n\t\t\t\t} else if (ability === 'Tough Claws') {\r\n\t\t\t\t\trejectAbility = (hasType['Steel'] && !hasMove['fakeout']);\r\n\t\t\t\t} else if (ability === 'Triage') {\r\n\t\t\t\t\trejectAbility = !counter['drain'];\r\n\t\t\t\t} else if (ability === 'Unaware') {\r\n\t\t\t\t\trejectAbility = (counter.setupType || hasMove['stealthrock']);\r\n\t\t\t\t} else if (ability === 'Unburden') {\r\n\t\t\t\t\trejectAbility = (hasAbility['Prankster'] || !counter.setupType && !isDoubles);\r\n\t\t\t\t} else if (ability === 'Volt Absorb') {\r\n\t\t\t\t\trejectAbility = (this.dex.getEffectiveness('Electric', species) < -1);\r\n\t\t\t\t} else if (ability === 'Water Absorb') {\r\n\t\t\t\t\trejectAbility = (hasMove['raindance'] || hasAbility['Drizzle'] || hasAbility['Strong Jaw'] || hasAbility['Unaware'] || hasAbility['Volt Absorb']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rejectAbility) {\r\n\t\t\t\t\tif (ability === ability0.name && ability1.rating >= 1) {\r\n\t\t\t\t\t\tability = ability1.name;\r\n\t\t\t\t\t} else if (ability === ability1.name && abilities[2] && ability2.rating >= 1) {\r\n\t\t\t\t\t\tability = ability2.name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Default to the highest rated ability if all are rejected\r\n\t\t\t\t\t\tability = abilities[0];\r\n\t\t\t\t\t\trejectAbility = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while (rejectAbility);\r\n\r\n\t\t\tif (species.name === 'Azumarill' && !isDoubles) {\r\n\t\t\t\tability = 'Sap Sipper';\r\n\t\t\t} else if (forme === 'Copperajah' && gmax) {\r\n\t\t\t\tability = 'Heavy Metal';\r\n\t\t\t} else if (hasAbility['Guts'] && (hasMove['facade'] || (hasMove['rest'] && hasMove['sleeptalk']))) {\r\n\t\t\t\tability = 'Guts';\r\n\t\t\t} else if (hasAbility['Moxie'] && (counter.Physical > 3 || hasMove['bounce']) && !isDoubles) {\r\n\t\t\t\tability = 'Moxie';\r\n\t\t\t} else if (isDoubles) {\r\n\t\t\t\tif (hasAbility['Competitive'] && ability !== 'Shadow Tag' && ability !== 'Strong Jaw') ability = 'Competitive';\r\n\t\t\t\tif (hasAbility['Curious Medicine'] && this.randomChance(1, 2)) ability = 'Curious Medicine';\r\n\t\t\t\tif (hasAbility['Friend Guard']) ability = 'Friend Guard';\r\n\t\t\t\tif (hasAbility['Gluttony'] && hasMove['recycle']) ability = 'Gluttony';\r\n\t\t\t\tif (hasAbility['Guts']) ability = 'Guts';\r\n\t\t\t\tif (hasAbility['Harvest']) ability = 'Harvest';\r\n\t\t\t\tif (hasAbility['Intimidate']) ability = 'Intimidate';\r\n\t\t\t\tif (hasAbility['Klutz'] && ability === 'Limber') ability = 'Klutz';\r\n\t\t\t\tif (hasAbility['Magic Guard'] && ability !== 'Friend Guard' && ability !== 'Unaware') ability = 'Magic Guard';\r\n\t\t\t\tif (hasAbility['Ripen']) ability = 'Ripen';\r\n\t\t\t\tif (hasAbility['Stalwart']) ability = 'Stalwart';\r\n\t\t\t\tif (hasAbility['Storm Drain']) ability = 'Storm Drain';\r\n\t\t\t\tif (hasAbility['Telepathy'] && (ability === 'Pressure' || hasAbility['Analytic'])) ability = 'Telepathy';\r\n\t\t\t\tif (hasAbility['Triage']) ability = 'Triage';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tability = ability0.name;\r\n\t\t}\r\n\r\n\t\titem = !isDoubles ? 'Leftovers' : 'Sitrus Berry';\r\n\t\tif (species.requiredItems) {\r\n\t\t\titem = this.sample(species.requiredItems);\r\n\r\n\t\t// First, the extra high-priority items\r\n\t\t} else if (species.name === 'Eternatus' && counter.Status < 2) {\r\n\t\t\titem = 'Metronome';\r\n\t\t} else if (species.name === 'Farfetch\\u2019d') {\r\n\t\t\titem = 'Leek';\r\n\t\t} else if (species.name === 'Froslass' && !isDoubles) {\r\n\t\t\titem = 'Wide Lens';\r\n\t\t} else if (species.name === 'Latios' && counter.Special === 2 && !isDoubles) {\r\n\t\t\titem = 'Soul Dew';\r\n\t\t} else if (species.name === 'Lopunny') {\r\n\t\t\titem = isDoubles ? 'Iron Ball' : 'Toxic Orb';\r\n\t\t} else if (species.baseSpecies === 'Marowak') {\r\n\t\t\titem = 'Thick Club';\r\n\t\t} else if (species.baseSpecies === 'Pikachu') {\r\n\t\t\tforme = 'Pikachu' + this.sample(['', '-Original', '-Hoenn', '-Sinnoh', '-Unova', '-Kalos', '-Alola', '-Partner', '-World']);\r\n\t\t\titem = 'Light Ball';\r\n\t\t} else if (species.name === 'Regieleki' && !isDoubles) {\r\n\t\t\titem = 'Normal Gem';\r\n\t\t} else if (species.name === 'Shedinja') {\r\n\t\t\titem = (!teamDetails.defog && !teamDetails.rapidSpin && !isDoubles) ? 'Heavy-Duty Boots' : 'Focus Sash';\r\n\t\t} else if (species.name === 'Shuckle' && hasMove['stickyweb']) {\r\n\t\t\titem = 'Mental Herb';\r\n\t\t} else if (['Corsola', 'Tangrowth'].includes(species.name) && !!counter.Status && !isDoubles) {\r\n\t\t\titem = 'Rocky Helmet';\r\n\t\t} else if (species.name === 'Unfezant' || hasMove['focusenergy']) {\r\n\t\t\titem = 'Scope Lens';\r\n\t\t} else if (species.name === 'Wobbuffet' || ['Cheek Pouch', 'Harvest', 'Ripen'].includes(ability)) {\r\n\t\t\titem = 'Sitrus Berry';\r\n\t\t} else if (ability === 'Gluttony') {\r\n\t\t\titem = this.sample(['Aguav', 'Figy', 'Iapapa', 'Mago', 'Wiki']) + ' Berry';\r\n\t\t} else if (ability === 'Gorilla Tactics' || ability === 'Imposter' || (ability === 'Magnet Pull' && hasMove['bodypress'] && !isDoubles)) {\r\n\t\t\titem = 'Choice Scarf';\r\n\t\t} else if (hasMove['trick'] || hasMove['switcheroo'] && !isDoubles) {\r\n\t\t\tif (species.baseStats.spe >= 60 && species.baseStats.spe <= 108 && !counter['priority']) {\r\n\t\t\t\titem = 'Choice Scarf';\r\n\t\t\t} else {\r\n\t\t\t\titem = (counter.Physical > counter.Special) ? 'Choice Band' : 'Choice Specs';\r\n\t\t\t}\r\n\t\t} else if (species.evos.length && !hasMove['uturn']) {\r\n\t\t\titem = 'Eviolite';\r\n\t\t} else if (hasMove['bellydrum']) {\r\n\t\t\titem = (!!counter['priority'] || !hasMove['substitute']) ? 'Sitrus Berry' : 'Salac Berry';\r\n\t\t} else if (hasMove['geomancy'] || hasMove['meteorbeam']) {\r\n\t\t\titem = 'Power Herb';\r\n\t\t} else if (hasMove['shellsmash']) {\r\n\t\t\titem = (ability === 'Sturdy' && !isLead && !isDoubles) ? 'Heavy-Duty Boots' : 'White Herb';\r\n\t\t} else if (ability === 'Guts' && (counter.Physical > 2 || isDoubles)) {\r\n\t\t\titem = hasType['Fire'] ? 'Toxic Orb' : 'Flame Orb';\r\n\t\t} else if (ability === 'Magic Guard' && counter.damagingMoves.length > 1) {\r\n\t\t\titem = hasMove['counter'] ? 'Focus Sash' : 'Life Orb';\r\n\t\t} else if (ability === 'Sheer Force' && !!counter['sheerforce']) {\r\n\t\t\titem = 'Life Orb';\r\n\t\t} else if (ability === 'Unburden') {\r\n\t\t\titem = (hasMove['closecombat'] || hasMove['curse']) ? 'White Herb' : 'Sitrus Berry';\r\n\t\t} else if (hasMove['acrobatics']) {\r\n\t\t\titem = (ability === 'Grassy Surge') ? 'Grassy Seed' : '';\r\n\t\t} else if (hasMove['auroraveil'] || hasMove['lightscreen'] && hasMove['reflect']) {\r\n\t\t\titem = 'Light Clay';\r\n\t\t} else if (hasMove['rest'] && !hasMove['sleeptalk'] && ability !== 'Shed Skin') {\r\n\t\t\titem = 'Chesto Berry';\r\n\t\t} else if (hasMove['hypnosis'] && ability === 'Beast Boost') {\r\n\t\t\titem = 'Blunder Policy';\r\n\t\t} else if (this.dex.getEffectiveness('Rock', species) >= 2 && !isDoubles) {\r\n\t\t\titem = 'Heavy-Duty Boots';\r\n\r\n\t\t// Doubles\r\n\t\t} else if (isDoubles && (hasMove['dragonenergy'] || hasMove['eruption'] || hasMove['waterspout']) && counter.damagingMoves.length >= 4) {\r\n\t\t\titem = 'Choice Scarf';\r\n\t\t} else if (isDoubles && hasMove['blizzard'] && ability !== 'Snow Warning' && !teamDetails['hail']) {\r\n\t\t\titem = 'Blunder Policy';\r\n\t\t} else if (isDoubles && this.dex.getEffectiveness('Rock', species) >= 2 && !hasType['Flying']) {\r\n\t\t\titem = 'Heavy-Duty Boots';\r\n\t\t} else if (isDoubles && counter.Physical >= 4 && (hasType['Dragon'] || hasType['Fighting'] || hasType['Rock'] || hasMove['flipturn'] || hasMove['uturn']) &&\r\n\t\t\t!hasMove['fakeout'] && !hasMove['feint'] && !hasMove['rapidspin'] && !hasMove['suckerpunch']\r\n\t\t) {\r\n\t\t\titem = (!counter['priority'] && !hasAbility['Speed Boost'] && !hasMove['aerialace'] && species.baseStats.spe >= 60 && species.baseStats.spe <= 100 && this.randomChance(1, 2)) ? 'Choice Scarf' : 'Choice Band';\r\n\t\t} else if (isDoubles && ((counter.Special >= 4 && (hasType['Dragon'] || hasType ['Fighting'] || hasType['Rock'] || hasMove['voltswitch'])) || (counter.Special >= 3 &&\r\n\t\t\t(hasMove['flipturn'] || hasMove['uturn'])) && !hasMove['acidspray'] && !hasMove['electroweb'])\r\n\t\t) {\r\n\t\t\titem = (species.baseStats.spe >= 60 && species.baseStats.spe <= 100 && this.randomChance(1, 2)) ? 'Choice Scarf' : 'Choice Specs';\r\n\t\t} else if (isDoubles && counter.damagingMoves.length >= 4 && species.baseStats.hp + species.baseStats.def + species.baseStats.spd >= 280) {\r\n\t\t\titem = 'Assault Vest';\r\n\t\t} else if (isDoubles && counter.damagingMoves.length >= 3 && species.baseStats.spe >= 60 && ability !== 'Multiscale' && ability !== 'Sturdy' && !hasMove['acidspray'] && !hasMove['clearsmog'] && !hasMove['electroweb'] &&\r\n\t\t\t!hasMove['fakeout'] && !hasMove['feint'] && !hasMove['icywind'] && !hasMove['incinerate'] && !hasMove['naturesmadness'] && !hasMove['rapidspin'] && !hasMove['snarl'] && !hasMove['uturn']\r\n\t\t) {\r\n\t\t\titem = (ability === 'Defeatist' || species.baseStats.hp + species.baseStats.def + species.baseStats.spd >= 275) ? 'Sitrus Berry' : 'Life Orb';\r\n\r\n\t\t// Medium priority\r\n\t\t} else if (counter.Physical >= 4 && ability !== 'Serene Grace' && !hasMove['fakeout'] && !hasMove['flamecharge'] && !hasMove['rapidspin'] && (!hasMove['tailslap'] || hasMove['uturn']) && !isDoubles) {\r\n\t\t\tconst scarfReqs = (\r\n\t\t\t\t(species.baseStats.atk >= 100 || ability === 'Huge Power') && species.baseStats.spe >= 60 && species.baseStats.spe <= 108 &&\r\n\t\t\t\tability !== 'Speed Boost' && !counter['priority'] && !hasMove['aerialace'] && !hasMove['bounce'] && !hasMove['dualwingbeat']\r\n\t\t\t);\r\n\t\t\titem = (scarfReqs && this.randomChance(2, 3)) ? 'Choice Scarf' : 'Choice Band';\r\n\t\t} else if (counter.Physical >= 3 && (hasMove['copycat'] || hasMove['memento'] || hasMove['partingshot']) && !hasMove['rapidspin'] && !isDoubles) {\r\n\t\t\titem = 'Choice Band';\r\n\t\t} else if ((counter.Special >= 4 || (counter.Special >= 3 && (hasMove['flipturn'] || hasMove['partingshot'] || hasMove['uturn']))) && !isDoubles) {\r\n\t\t\tconst scarfReqs = species.baseStats.spa >= 100 && species.baseStats.spe >= 60 && species.baseStats.spe <= 108 && ability !== 'Tinted Lens' && !counter.Physical;\r\n\t\t\titem = (scarfReqs && this.randomChance(2, 3)) ? 'Choice Scarf' : 'Choice Specs';\r\n\t\t} else if (((counter.Physical >= 3 && hasMove['defog']) || (counter.Special >= 3 && hasMove['healingwish'])) && !counter['priority'] && !hasMove['uturn'] && !isDoubles) {\r\n\t\t\titem = 'Choice Scarf';\r\n\t\t} else if (hasMove['raindance'] || hasMove['sunnyday'] || (ability === 'Speed Boost' && !counter['hazards']) || ability === 'Stance Change' && counter.damagingMoves.length >= 3) {\r\n\t\t\titem = 'Life Orb';\r\n\t\t} else if (this.dex.getEffectiveness('Rock', species) >= 1 && (['Defeatist', 'Emergency Exit', 'Multiscale'].includes(ability) || hasMove['courtchange'] || hasMove['defog'] || hasMove['rapidspin']) && !isDoubles) {\r\n\t\t\titem = 'Heavy-Duty Boots';\r\n\t\t} else if (species.name === 'Necrozma-Dusk-Mane' || (this.dex.getEffectiveness('Ground', species) < 2 && !!counter['speedsetup'] &&\r\n\t\t\tcounter.damagingMoves.length >= 3 && species.baseStats.hp + species.baseStats.def + species.baseStats.spd >= 300)\r\n\t\t) {\r\n\t\t\titem = 'Weakness Policy';\r\n\t\t} else if (counter.damagingMoves.length >= 4 && species.baseStats.hp + species.baseStats.def + species.baseStats.spd >= 235) {\r\n\t\t\titem = 'Assault Vest';\r\n\t\t} else if ((hasMove['clearsmog'] || hasMove['curse'] || hasMove['haze'] || hasMove['healbell'] || hasMove['protect'] || hasMove['sleeptalk'] || hasMove['strangesteam']) && (ability === 'Moody' || !isDoubles)) {\r\n\t\t\titem = 'Leftovers';\r\n\r\n\t\t// Better than Leftovers\r\n\t\t} else if (isLead && !['Disguise', 'Sturdy'].includes(ability) && !hasMove['substitute'] && !counter['recoil'] && !counter['recovery'] && species.baseStats.hp + species.baseStats.def + species.baseStats.spd < 255 && !isDoubles) {\r\n\t\t\titem = 'Focus Sash';\r\n\t\t} else if (ability === 'Water Bubble' && !isDoubles) {\r\n\t\t\titem = 'Mystic Water';\r\n\t\t} else if (hasMove['clangoroussoul'] || hasMove['boomburst'] && !!counter['speedsetup']) {\r\n\t\t\titem = 'Throat Spray';\r\n\t\t} else if (((this.dex.getEffectiveness('Rock', species) >= 1 && (!teamDetails.defog || ability === 'Intimidate' || hasMove['uturn'] || hasMove['voltswitch'])) ||\r\n\t\t\t(hasMove['rapidspin'] && (ability === 'Regenerator' || !!counter['recovery']))) && !isDoubles\r\n\t\t) {\r\n\t\t\titem = 'Heavy-Duty Boots';\r\n\t\t} else if (this.dex.getEffectiveness('Ground', species) >= 2 && !hasType['Poison'] && ability !== 'Levitate' && !hasAbility['Iron Barbs'] && !isDoubles) {\r\n\t\t\titem = 'Air Balloon';\r\n\t\t} else if (counter.damagingMoves.length >= 3 && !counter['damage'] && ability !== 'Sturdy' && !hasMove['clearsmog'] && !hasMove['foulplay'] && !hasMove['rapidspin'] && !hasMove['substitute'] && !hasMove['uturn'] && !isDoubles &&\r\n\t\t\t(!!counter['speedsetup'] || hasMove['trickroom'] || !!counter['drain'] || hasMove['psystrike'] || (species.baseStats.spe > 40 && species.baseStats.hp + species.baseStats.def + species.baseStats.spd < 275))\r\n\t\t) {\r\n\t\t\titem = 'Life Orb';\r\n\t\t} else if (counter.damagingMoves.length >= 4 && !counter['Dragon'] && !counter['Normal'] && !isDoubles) {\r\n\t\t\titem = 'Expert Belt';\r\n\t\t} else if ((hasMove['dragondance'] || hasMove['swordsdance']) && !isDoubles &&\r\n\t\t\t(hasMove['outrage'] || !hasType['Bug'] && !hasType['Fire'] && !hasType['Ground'] && !hasType['Normal'] && !hasType['Poison'] && !['Pastel Veil', 'Storm Drain'].includes(ability))\r\n\t\t) {\r\n\t\t\titem = 'Lum Berry';\r\n\t\t}\r\n\r\n\t\t// For Trick / Switcheroo\r\n\t\tif (item === 'Leftovers' && hasType['Poison']) {\r\n\t\t\titem = 'Black Sludge';\r\n\t\t}\r\n\r\n\t\tconst level: number = (!isDoubles ? species.randomBattleLevel : species.randomDoubleBattleLevel) || 80;\r\n\r\n\t\t// Prepare optimal HP\r\n\t\tconst srWeakness = (ability === 'Magic Guard' || item === 'Heavy-Duty Boots' ? 0 : this.dex.getEffectiveness('Rock', species));\r\n\t\twhile (evs.hp > 1) {\r\n\t\t\tconst hp = Math.floor(Math.floor(2 * species.baseStats.hp + ivs.hp + Math.floor(evs.hp / 4) + 100) * level / 100 + 10);\r\n\t\t\tif (hasMove['substitute'] && (item === 'Sitrus Berry' || ability === 'Power Construct' || (hasMove['bellydrum'] && item === 'Salac Berry'))) {\r\n\t\t\t\t// Two Substitutes should activate Sitrus Berry\r\n\t\t\t\tif (hp % 4 === 0) break;\r\n\t\t\t} else if (hasMove['bellydrum'] && (item === 'Sitrus Berry' || ability === 'Gluttony')) {\r\n\t\t\t\t// Belly Drum should activate Sitrus Berry\r\n\t\t\t\tif (hp % 2 === 0) break;\r\n\t\t\t} else if (hasMove['substitute'] && hasMove['reversal']) {\r\n\t\t\t\t// Reversal users should be able to use four Substitutes\r\n\t\t\t\tif (hp % 4 > 0) break;\r\n\t\t\t} else {\r\n\t\t\t\t// Maximize number of Stealth Rock switch-ins\r\n\t\t\t\tif (srWeakness <= 0 || hp % (4 / srWeakness) > 0) break;\r\n\t\t\t}\r\n\t\t\tevs.hp -= 4;\r\n\t\t}\r\n\r\n\t\tif (hasMove['shellsidearm'] && item === 'Choice Specs') evs.atk -= 4;\r\n\r\n\t\t// Minimize confusion damage\r\n\t\tif (!counter['Physical'] && !hasMove['transform'] && (!hasMove['shellsidearm'] || !counter.Status)) {\r\n\t\t\tevs.atk = 0;\r\n\t\t\tivs.atk = 0;\r\n\t\t}\r\n\r\n\t\tif (hasMove['gyroball'] || hasMove['trickroom']) {\r\n\t\t\tevs.spe = 0;\r\n\t\t\tivs.spe = 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tname: species.baseSpecies,\r\n\t\t\tspecies: forme,\r\n\t\t\tgender: species.gender,\r\n\t\t\tmoves: moves,\r\n\t\t\tability: ability,\r\n\t\t\tevs: evs,\r\n\t\t\tivs: ivs,\r\n\t\t\titem: item,\r\n\t\t\tlevel: level,\r\n\t\t\tshiny: this.randomChance(1, 1024),\r\n\t\t\tgigantamax: gmax,\r\n\t\t};\r\n\t}\r\n\r\n\tgetPokemonPool(type: string, pokemon: RandomTeamsTypes.RandomSet[] = [], isMonotype = false) {\r\n\t\tconst exclude = pokemon.map(p => toID(p.species));\r\n\t\tconst pokemonPool = [];\r\n\t\tfor (const id in this.dex.data.FormatsData) {\r\n\t\t\tlet species = this.dex.species.get(id);\r\n\t\t\tif (species.gen > this.gen || exclude.includes(species.id)) continue;\r\n\t\t\tif (isMonotype) {\r\n\t\t\t\tif (!species.types.includes(type)) continue;\r\n\t\t\t\tif (typeof species.battleOnly === 'string') {\r\n\t\t\t\t\tspecies = this.dex.species.get(species.battleOnly);\r\n\t\t\t\t\tif (!species.types.includes(type)) continue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemonPool.push(id);\r\n\t\t}\r\n\t\treturn pokemonPool;\r\n\t}\r\n\r\n\trandomTeam() {\r\n\t\tconst seed = this.prng.seed;\r\n\t\tconst ruleTable = this.dex.formats.getRuleTable(this.format);\r\n\t\tconst pokemon = [];\r\n\r\n\t\t// For Monotype\r\n\t\tconst isMonotype = ruleTable.has('sametypeclause');\r\n\t\tconst typePool = Object.keys(this.dex.data.TypeChart);\r\n\t\tconst type = this.sample(typePool);\r\n\r\n\t\t// PotD stuff\r\n\t\tlet potd: Species | false = false;\r\n\t\tif (global.Config && Config.potd && ruleTable.has('potd')) {\r\n\t\t\tpotd = this.dex.species.get(Config.potd);\r\n\t\t}\r\n\r\n\t\tconst baseFormes: {[k: string]: number} = {};\r\n\r\n\t\tconst tierCount: {[k: string]: number} = {};\r\n\t\tconst typeCount: {[k: string]: number} = {};\r\n\t\tconst typeComboCount: {[k: string]: number} = {};\r\n\t\tconst teamDetails: RandomTeamsTypes.TeamDetails = {};\r\n\r\n\t\t// We make at most two passes through the potential Pokemon pool when creating a team - if the first pass doesn't\r\n\t\t// result in a team of six Pokemon we perform a second iteration relaxing as many restrictions as possible.\r\n\t\tfor (const restrict of [true, false]) {\r\n\t\t\tif (pokemon.length >= 6) break;\r\n\t\t\tconst pokemonPool = this.getPokemonPool(type, pokemon, isMonotype);\r\n\t\t\twhile (pokemonPool.length && pokemon.length < 6) {\r\n\t\t\t\tlet species = this.dex.species.get(this.sampleNoReplace(pokemonPool));\r\n\t\t\t\tif (!species.exists) continue;\r\n\r\n\t\t\t\t// Check if the forme has moves for random battle\r\n\t\t\t\tif (this.format.gameType === 'singles') {\r\n\t\t\t\t\tif (!species.randomBattleMoves) continue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!species.randomDoubleBattleMoves) continue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Limit to one of each species (Species Clause)\r\n\t\t\t\tif (baseFormes[species.baseSpecies]) continue;\r\n\r\n\t\t\t\t// Adjust rate for species with multiple sets\r\n\t\t\t\tswitch (species.baseSpecies) {\r\n\t\t\t\tcase 'Arceus': case 'Silvally':\r\n\t\t\t\t\tif (this.randomChance(8, 9)) continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Aegislash': case 'Basculin': case 'Gourgeist': case 'Meloetta':\r\n\t\t\t\t\tif (this.randomChance(1, 2)) continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Greninja':\r\n\t\t\t\t\tif (this.gen >= 7 && this.randomChance(1, 2)) continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Darmanitan':\r\n\t\t\t\t\tif (species.gen === 8 && this.randomChance(1, 2)) continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Magearna': case 'Toxtricity': case 'Zacian': case 'Zamazenta':\r\n\t\t\t\tcase 'Appletun': case 'Blastoise': case 'Butterfree': case 'Copperajah': case 'Grimmsnarl': case 'Inteleon': case 'Rillaboom': case 'Snorlax': case 'Urshifu':\r\n\t\t\t\t\tif (this.gen >= 8 && this.randomChance(1, 2)) continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Illusion shouldn't be on the last slot\r\n\t\t\t\tif (species.name === 'Zoroark' && pokemon.length > 4) continue;\r\n\r\n\t\t\t\tconst tier = species.tier;\r\n\t\t\t\tconst types = species.types;\r\n\t\t\t\tconst typeCombo = types.slice().sort().join();\r\n\r\n\t\t\t\tif (restrict) {\r\n\t\t\t\t\t// Limit one Pokemon per tier, two for Monotype\r\n\t\t\t\t\tif ((tierCount[tier] >= (isMonotype ? 2 : 1)) && !this.randomChance(1, Math.pow(5, tierCount[tier]))) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!isMonotype) {\r\n\t\t\t\t\t\t// Limit two of any type\r\n\t\t\t\t\t\tlet skip = false;\r\n\t\t\t\t\t\tfor (const typeName of types) {\r\n\t\t\t\t\t\t\tif (typeCount[typeName] > 1) {\r\n\t\t\t\t\t\t\t\tskip = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (skip) continue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Limit one of any type combination, two in Monotype\r\n\t\t\t\t\tif (typeCount['Ice'] >= 3 && typeName === 'Ice') continue;\r\n\t\t\t\t\telse if (typeCount['Ice'] === 0 && pokemon.length === 5) continue;\r\n\t\t\t\t\tif (typeComboCount[typeCombo] >= (isMonotype ? 2 : 1)) continue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The Pokemon of the Day\r\n\t\t\t\tif (!!potd && potd.exists && pokemon.length < 1) species = potd;\r\n\r\n\t\t\t\tconst set = this.randomSet(species, teamDetails, pokemon.length === 0, this.format.gameType !== 'singles');\r\n\r\n\t\t\t\t// Okay, the set passes, add it to our team\r\n\t\t\t\tpokemon.push(set);\r\n\r\n\t\t\t\tif (pokemon.length === 6) {\r\n\t\t\t\t\t// Set Zoroark's level to be the same as the last Pokemon\r\n\t\t\t\t\tconst illusion = teamDetails['illusion'];\r\n\t\t\t\t\tif (illusion) pokemon[illusion - 1].level = pokemon[5].level;\r\n\r\n\t\t\t\t\t// Don't bother tracking details for the 6th Pokemon\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Now that our Pokemon has passed all checks, we can increment our counters\r\n\t\t\t\tbaseFormes[species.baseSpecies] = 1;\r\n\r\n\t\t\t\t// Increment tier counter\r\n\t\t\t\tif (tierCount[tier]) {\r\n\t\t\t\t\ttierCount[tier]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttierCount[tier] = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Increment type counters\r\n\t\t\t\tfor (const typeName of types) {\r\n\t\t\t\t\tif (typeName in typeCount) {\r\n\t\t\t\t\t\ttypeCount[typeName]++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttypeCount[typeName] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (typeCombo in typeComboCount) {\r\n\t\t\t\t\ttypeComboCount[typeCombo]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttypeComboCount[typeCombo] = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track what the team has\r\n\t\t\t\tif (set.ability === 'Drizzle' || set.moves.includes('raindance')) teamDetails['rain'] = 1;\r\n\t\t\t\tif (set.ability === 'Drought' || set.moves.includes('sunnyday')) teamDetails['sun'] = 1;\r\n\t\t\t\tif (set.ability === 'Sand Stream') teamDetails['sand'] = 1;\r\n\t\t\t\tif (set.ability === 'Snow Warning') teamDetails['hail'] = 1;\r\n\t\t\t\tif (set.moves.includes('spikes')) teamDetails['spikes'] = (teamDetails['spikes'] || 0) + 1;\r\n\t\t\t\tif (set.moves.includes('stealthrock')) teamDetails['stealthRock'] = 1;\r\n\t\t\t\tif (set.moves.includes('stickyweb')) teamDetails['stickyWeb'] = 1;\r\n\t\t\t\tif (set.moves.includes('toxicspikes')) teamDetails['toxicSpikes'] = 1;\r\n\t\t\t\tif (set.moves.includes('defog')) teamDetails['defog'] = 1;\r\n\t\t\t\tif (set.moves.includes('rapidspin')) teamDetails['rapidSpin'] = 1;\r\n\t\t\t\tif (set.moves.includes('auroraveil') || set.moves.includes('reflect') && set.moves.includes('lightscreen')) teamDetails['screens'] = 1;\r\n\r\n\t\t\t\t// For setting Zoroark's level\r\n\t\t\t\tif (set.ability === 'Illusion') teamDetails['illusion'] = pokemon.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pokemon.length < 6) throw new Error(`Could not build a random team for ${this.format} (seed=${seed})`);\r\n\r\n\t\treturn pokemon;\r\n\t}\r\n/*\r\n\trandomCAP1v1Sets: AnyObject = require('./cap-1v1-sets.json');\r\n\r\n\trandomCAP1v1Team() {\r\n\t\tconst pokemon = [];\r\n\t\tconst pokemonPool = Object.keys(this.randomCAP1v1Sets);\r\n\r\n\t\twhile (pokemonPool.length && pokemon.length < 3) {\r\n\t\t\tconst species = this.dex.species.get(this.sampleNoReplace(pokemonPool));\r\n\t\t\tif (!species.exists) throw new Error(`Invalid Pokemon \"${species}\" in ${this.format}`);\r\n\r\n\t\t\tconst setData: AnyObject = this.sample(this.randomCAP1v1Sets[species.name]);\r\n\t\t\tconst set = {\r\n\t\t\t\tname: species.baseSpecies,\r\n\t\t\t\tspecies: species.name,\r\n\t\t\t\tgender: species.gender,\r\n\t\t\t\titem: (Array.isArray(setData.item) ? this.sample(setData.item) : setData.item) || '',\r\n\t\t\t\tability: (Array.isArray(setData.ability) ? this.sample(setData.ability) : setData.ability),\r\n\t\t\t\tshiny: this.randomChance(1, 1024),\r\n\t\t\t\tevs: {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0, ...setData.evs},\r\n\t\t\t\tnature: setData.nature,\r\n\t\t\t\tivs: {hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31, ...setData.ivs || {}},\r\n\t\t\t\tmoves: setData.moves.map((move: any) => Array.isArray(move) ? this.sample(move) : move),\r\n\t\t\t};\r\n\t\t\tpokemon.push(set);\r\n\t\t}\r\n\t\treturn pokemon;\r\n\t}\r\n\t*/\r\n}\r\n\r\nexport default RandomTeams;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iBAAwB;AACxB,kBAA6B;AAgBtB,MAAM,YAAY;AAAA,EAOxB,YAAY,QAAyB,MAA8B;AAClE,aAAS,eAAI,QAAQ,IAAI,MAAM;AAC/B,SAAK,MAAM,eAAI,UAAU,MAAM;AAC/B,SAAK,MAAM,KAAK,IAAI;AAEpB,SAAK,cAAc;AACnB,SAAK,SAAS;AACd,SAAK,OAAO,QAAQ,CAAC,MAAM,QAAQ,IAAI,IAAI,OAAO,IAAI,iBAAK,IAAI;AAAA,EAChE;AAAA,EAEA,QAAQ,MAAwB;AAC/B,SAAK,OAAO,QAAQ,CAAC,MAAM,QAAQ,IAAI,IAAI,OAAO,IAAI,iBAAK,IAAI;AAAA,EAChE;AAAA,EAEA,QAAQ,SAA8C;AACrD,UAAM,gBAAgB,OAAO,KAAK,OAAO,SAAS,YAAY,KAAK,OAAO,KAAK,WAAW,QAAQ,IAAI,KAAK,OAAO,OAAO,SAAS;AAElI,WAAO,KAAK,iBAAiB,YAAY,EAAE,OAAO;AAAA,EACnD;AAAA,EAEA,aAAa,WAAmB,aAAqB;AACpD,WAAO,KAAK,KAAK,aAAa,WAAW,WAAW;AAAA,EACrD;AAAA,EAEA,OAAU,OAAwB;AACjC,WAAO,KAAK,KAAK,OAAO,KAAK;AAAA,EAC9B;AAAA,EAEA,OAAO,GAAY,GAAY;AAC9B,WAAO,KAAK,KAAK,KAAK,GAAG,CAAC;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,MAAa,OAAe;AAInC,UAAM,SAAS,KAAK;AACpB,UAAM,UAAU,KAAK,KAAK;AAC1B,SAAK,KAAK,IAAI,KAAK,SAAS,CAAC;AAC7B,SAAK,IAAI;AACT,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB,MAAa;AAC5B,UAAM,SAAS,KAAK;AACpB,UAAM,QAAQ,KAAK,OAAO,MAAM;AAChC,WAAO,KAAK,QAAQ,MAAM,KAAK;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBA,eAA6C;AAC5C,UAAM,MAAM,KAAK;AACjB,UAAM,OAAO,CAAC;AAEd,UAAM,UAAU,OAAO,KAAK,KAAK,IAAI,KAAK,OAAO;AACjD,UAAM,QAAQ,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK;AAE7C,UAAM,UAAU,KAAK,eAAe;AAEpC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC3B,UAAI,QAAQ,QAAQ,CAAC;AACrB,UAAI,UAAU,IAAI,QAAQ,IAAI,KAAK;AACnC,UAAI,QAAQ;AAAe,kBAAU,IAAI,QAAQ,IAAI,QAAQ,WAAW;AAGxE,UAAI,OAAO;AACX,UAAI,KAAK,OAAO,GAAG;AAClB,WAAG;AACF,iBAAO,KAAK,OAAO,KAAK;AAAA,QACzB,SAAS,KAAK,IAAI,MAAM,IAAI,IAAI,EAAE,MAAM,KAAK,OAAO,KAAK,IAAI,KAAK,MAAM,IAAI,EAAE;AAAA,MAC/E;AAGA,UAAI,QAAQ,YAAY;AACvB,YAAI,OAAO,QAAQ,eAAe,UAAU;AAC3C,oBAAU,IAAI,QAAQ,IAAI,QAAQ,UAAU;AAAA,QAC7C,OAAO;AACN,oBAAU,IAAI,QAAQ,IAAI,KAAK,OAAO,QAAQ,UAAU,CAAC;AAAA,QAC1D;AACA,gBAAQ,QAAQ;AAAA,MACjB,WAAW,QAAQ,iBAAiB,CAAC,QAAQ,cAAc,KAAK,aAAO,iBAAK,GAAG,MAAM,IAAI,GAAG;AAC3F,YAAI,CAAC,QAAQ;AAAa,gBAAM,IAAI,MAAM,GAAG,QAAQ,gCAAgC;AACrF,kBAAU,IAAI,QAAQ,IAAI,QAAQ,WAAW;AAC7C,gBAAQ,QAAQ;AAAA,MACjB;AAGA,UAAI,WAAW,KAAK,IAAI,MAAM,IAAI,IAAI;AACtC,UAAI,SAAS,eAAe,UAAU,KAAK,IAAI,QAAQ,IAAI,SAAS,WAAW,EAAE,aAAa;AAC7F,WAAG;AACF,iBAAO,KAAK,OAAO,KAAK;AACxB,qBAAW,KAAK,IAAI,MAAM,IAAI,IAAI;AAAA,QACnC,SAAS,SAAS,MAAM,KAAK,OAAO,SAAS,iBAAiB,SAAS,eAAe,UAAU,KAAK,IAAI,QAAQ,IAAI,SAAS,WAAW,EAAE;AAAA,MAC5I;AAGA,YAAM,YAAY,OAAO,OAAO,QAAQ,SAAS,EAAE,OAAO,OAAK,KAAK,IAAI,UAAU,IAAI,CAAC,EAAE,OAAO,KAAK,GAAG;AACxG,YAAM,UAAkB,KAAK,OAAO,IAAI,SAAS,KAAK,OAAO,SAAS;AAGtE,UAAI;AACJ,UAAI,OAAO,CAAC,UAAU;AACtB,UAAI,UAAU,YAAY;AACzB,eAAO,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE,OAAO,YAAU;AACxD,gBAAM,OAAO,KAAK,IAAI,KAAK,MAAM,MAAM;AACvC,iBAAO,EAAE,KAAK,iBAAiB,KAAK,OAAO,KAAK,SAAS,KAAK;AAAA,QAC/D,CAAC;AAAA,MACF,OAAO;AACN,YAAI,WAAW,KAAK,IAAI,KAAK,UAAU,QAAQ,EAAE,KAAK,KAAK,IAAI,KAAK,UAAU,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC,iBAAiB,kBAAkB,WAAW,EAAE,SAAS,QAAQ,EAAE,IAC1K,KAAK,IAAI,KAAK,UAAU,QAAQ,EAAE,EAAE,WACpC,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,QAAQ,IAAI,QAAQ,WAAW,EAAE,EAAE,EAAE;AACvE,YAAI,UAAU;AACb,iBAAO,OAAO,KAAK,QAAQ,EAAE;AAAA,YAC5B,YAAU,SAAU,MAAM,EAAE,KAAK,aAAW,QAAQ,WAAW,OAAO,KAAK,GAAG,CAAC,CAAC;AAAA,UACjF;AAAA,QACD;AACA,YAAI,QAAQ,aAAa;AACxB,qBAAW,KAAK,IAAI,KAAK,cAAU,iBAAK,QAAQ,WAAW,CAAC,EAAE;AAC9D,gBAAM,WAAW,OAAO,KAAK,QAAS,EAAE;AAAA,YACvC,YAAU,SAAU,MAAM,EAAE,KAAK,aAAW,QAAQ,WAAW,OAAO,KAAK,GAAG,CAAC,CAAC;AAAA,UACjF;AACA,iBAAO,CAAC,GAAG,IAAI,IAAI,KAAK,OAAO,QAAQ,CAAC,CAAC;AAAA,QAC1C;AAAA,MACD;AACA,UAAI,KAAK,UAAU,GAAG;AACrB,gBAAQ;AAAA,MACT,OAAO;AACN,gBAAQ,CAAC,KAAK,gBAAgB,IAAI,GAAG,KAAK,gBAAgB,IAAI,GAAG,KAAK,gBAAgB,IAAI,GAAG,KAAK,gBAAgB,IAAI,CAAC;AAAA,MACxH;AAGA,YAAM,MAAkB,EAAC,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAC;AACtE,YAAM,IAAgB,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK;AAC9D,UAAI,SAAS;AACb,SAAG;AACF,cAAM,IAAI,KAAK,OAAO,CAAC;AACvB,cAAM,IAAI,KAAK,OAAO,KAAK,IAAI,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;AACxD,YAAI,CAAC,KAAK;AACV,kBAAU;AAAA,MACX,SAAS,SAAS;AAGlB,YAAM,MAAM,EAAC,IAAI,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK,OAAO,EAAE,GAAG,KAAK,KAAK,OAAO,EAAE,EAAC;AAG9I,YAAM,SAAS,KAAK,OAAO,OAAO;AAGlC,YAAM,UAAU;AAEhB,UAAI,QAAQ,QAAQ;AAEpB,UAAI,QAAQ,gBAAgB;AAAc,gBAAQ,eAAI,QAAQ,IAAI,kBAAkB,EAAE;AAGtF,UAAI,OAAQ,MAAM,IAAI,IAAI,IAAI,KAAK,KAAK,MAAO;AAC/C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAE7C,UAAI,QAAQ,KAAK,MAAM,MAAM,UAAU,IAAI;AAE3C,aAAO,QAAQ,KAAK;AACnB,eAAO,KAAK,OAAO,MAAM,IAAI,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,EAAE;AACtE,gBAAQ,KAAK,QAAQ,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,KAAK,QAAQ,GAAG;AACvF,gBAAQ,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,CAAC;AACvE,gBAAQ,KAAK,QAAQ,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,KAAK,QAAQ,GAAG;AACvF,gBAAQ,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,CAAC;AACvE,gBAAQ,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,CAAC;AAEvE,YAAI,QAAQ;AAAS;AACrB;AAAA,MACD;AAGA,YAAM,YAAY,KAAK,OAAO,GAAG;AAGjC,YAAM,QAAQ,KAAK,aAAa,GAAG,IAAI;AAEvC,WAAK,KAAK;AAAA,QACT,MAAM,QAAQ;AAAA,QACd,SAAS,QAAQ;AAAA,QACjB,QAAQ,QAAQ;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,iBAAiB;AAIhB,UAAM,OAAO,CAAC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,EAAE,KAAK,GAAG;AAEjE,UAAM,OAAiB,CAAC;AACxB,eAAW,MAAM,KAAK,IAAI,KAAK,aAAa;AAC3C,UAAI,CAAC,KAAK,IAAI,KAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,KAAK,YAAY,EAAE,EAAE,iBAAiB,KAAK,IAAI,KAAK,YAAY,EAAE,EAAE,kBAAkB;AAAgB;AACjJ,YAAM,MAAM,KAAK,IAAI,KAAK,QAAQ,EAAE,EAAE;AACtC,UAAI,OAAO,KAAK,KAAK,SAAS,GAAG;AAAG;AACpC,UAAI,MAAM;AAAM;AAChB,WAAK,KAAK,GAAG;AAAA,IACd;AAEA,UAAM,eAAsC,CAAC;AAC7C,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC3B,YAAM,MAAM,KAAK,gBAAgB,IAAI;AACrC,mBAAa,GAAG,IAAI;AAAA,IACrB;AAEA,UAAM,SAAqB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClD,eAAW,MAAM,KAAK,IAAI,KAAK,SAAS;AACvC,UAAI,EAAE,KAAK,IAAI,KAAK,QAAQ,EAAE,EAAE,OAAO;AAAe;AACtD,YAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,EAAE;AACvC,UAAI,QAAQ,OAAO,KAAK,QAAQ,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkB,iBAAiB;AACpG,eAAO,aAAa,QAAQ,GAAG,CAAC,EAAE,KAAK,QAAQ,IAAI;AAAA,MACpD;AAAA,IACD;AAEA,UAAM,aAAa,CAAC;AACpB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC3B,UAAI,CAAC,OAAO,CAAC,EAAE,QAAQ;AACtB,cAAM,IAAI,MAAM,yBAAyB,KAAK,MAAM,OAAO,KAAK,UAAU,MAAM,IAAI,cAAc,KAAK,UAAU,YAAY,CAAC;AAAA,MAC/H;AACA,iBAAW,KAAK,KAAK,OAAO,OAAO,CAAC,CAAC,CAAC;AAAA,IACvC;AACA,WAAO;AAAA,EACR;AAAA,EAEA,eAA6B;AAC5B,UAAM,OAAO,CAAC;AAEd,UAAM,WAAW,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK;AAChD,UAAM,cAAc,OAAO,KAAK,KAAK,IAAI,KAAK,SAAS;AACvD,UAAM,WAAW,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK;AAChD,UAAM,aAAa,OAAO,KAAK,KAAK,IAAI,KAAK,OAAO;AAEpD,UAAM,UAAU,KAAK,eAAe;AAEpC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAE3B,YAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC;AAG/C,UAAI,OAAO;AACX,UAAI,KAAK,OAAO,GAAG;AAClB,WAAG;AACF,iBAAO,KAAK,gBAAgB,QAAQ;AAAA,QACrC,SAAS,KAAK,IAAI,MAAM,IAAI,IAAI,EAAE,MAAM,KAAK,OAAO,KAAK,IAAI,KAAK,MAAM,IAAI,EAAE;AAAA,MAC/E;AAGA,UAAI,UAAU;AACd,UAAI,KAAK,OAAO,GAAG;AAClB,WAAG;AACF,oBAAU,KAAK,gBAAgB,WAAW;AAAA,QAC3C,SAAS,KAAK,IAAI,UAAU,IAAI,OAAO,EAAE,MAAM,KAAK,OAAO,KAAK,IAAI,KAAK,UAAU,OAAO,EAAE;AAAA,MAC7F;AAGA,YAAM,IAAI,CAAC;AACX,SAAG;AACF,cAAM,SAAS,KAAK,gBAAgB,QAAQ;AAC5C,cAAM,OAAO,KAAK,IAAI,MAAM,IAAI,MAAM;AACtC,YAAI,KAAK,OAAO,KAAK,OAAO,CAAC,KAAK,iBAAiB,CAAC,KAAK,KAAK,WAAW,eAAe,GAAG;AAC1F,YAAE,KAAK,MAAM;AAAA,QACd;AAAA,MACD,SAAS,EAAE,SAAS;AAGpB,YAAM,MAAM,EAAC,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAC;AAC1D,YAAM,IAAgB,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK;AAC9D,UAAI,KAAK,QAAQ,GAAG;AACnB,YAAI,SAAS;AACb,WAAG;AACF,gBAAM,IAAI,KAAK,OAAO,CAAC;AACvB,gBAAM,IAAI,KAAK,OAAO,KAAK,IAAI,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;AACxD,cAAI,CAAC,KAAK;AACV,oBAAU;AAAA,QACX,SAAS,SAAS;AAAA,MACnB,OAAO;AACN,mBAAW,KAAK,GAAG;AAClB,cAAI,CAAC,IAAI,KAAK,OAAO,GAAG;AAAA,QACzB;AAAA,MACD;AAGA,YAAM,MAAkB;AAAA,QACvB,IAAI,KAAK,OAAO,EAAE;AAAA,QAClB,KAAK,KAAK,OAAO,EAAE;AAAA,QACnB,KAAK,KAAK,OAAO,EAAE;AAAA,QACnB,KAAK,KAAK,OAAO,EAAE;AAAA,QACnB,KAAK,KAAK,OAAO,EAAE;AAAA,QACnB,KAAK,KAAK,OAAO,EAAE;AAAA,MACpB;AAGA,YAAM,SAAS,KAAK,OAAO,UAAU;AAGrC,YAAM,UAAU;AAChB,YAAM,QAAQ,QAAQ;AACtB,UAAI,OAAQ,MAAM,IAAI,IAAI,IAAI,KAAK,KAAK,MAAO;AAC/C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,cAAS,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,MAAO;AAC7C,UAAI,QAAQ,KAAK,MAAM,MAAM,UAAU,IAAI;AAC3C,aAAO,QAAQ,KAAK;AACnB,eAAO,KAAK,OAAO,MAAM,IAAI,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,EAAE;AACtE,gBAAQ,KAAK,QAAQ,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,KAAK,QAAQ,GAAG;AACvF,gBAAQ,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,CAAC;AACvE,gBAAQ,KAAK,QAAQ,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,KAAK,QAAQ,GAAG;AACvF,gBAAQ,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,CAAC;AACvE,gBAAQ,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,QAAQ,MAAM,CAAC;AACvE,YAAI,QAAQ;AAAS;AACrB;AAAA,MACD;AAGA,YAAM,YAAY,KAAK,OAAO,GAAG;AAGjC,YAAM,QAAQ,KAAK,aAAa,GAAG,IAAI;AAEvC,WAAK,KAAK;AAAA,QACT,MAAM,QAAQ;AAAA,QACd,SAAS,QAAQ;AAAA,QACjB,QAAQ,QAAQ;AAAA,QAChB;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,WAAW,OAAwB,UAAkC,CAAC,GAAG,aAAqC,CAAC,GAAG,WAAqB,CAAC,GAAG;AAE1I,UAAM,UAA8B;AAAA,MACnC,UAAU;AAAA,MAAG,SAAS;AAAA,MAAG,QAAQ;AAAA,MAAG,QAAQ;AAAA,MAAG,UAAU;AAAA,MAAG,MAAM;AAAA,MAAG,YAAY;AAAA,MAAG,UAAU;AAAA,MAAG,QAAQ;AAAA,MAAG,OAAO;AAAA,MAAG,OAAO;AAAA,MAC7H,cAAc;AAAA,MAAG,UAAU;AAAA,MAAG,UAAU;AAAA,MAAG,aAAa;AAAA,MAAG,YAAY;AAAA,MAAG,WAAW;AAAA,MAAG,WAAW;AAAA,MAAG,YAAY;AAAA,MAClH,eAAe;AAAA,MAAG,cAAc;AAAA,MAAG,YAAY;AAAA,MAAG,YAAY;AAAA,MAAG,cAAc;AAAA,MAAG,aAAa;AAAA,MAAG,SAAS;AAAA,MAC3G,eAAe,CAAC;AAAA,MAChB,mBAAmB,CAAC;AAAA,MACpB,WAAW;AAAA,MACX,KAAK;AAAA,MAAG,MAAM;AAAA,MAAG,QAAQ;AAAA,MAAG,UAAU;AAAA,MAAG,OAAO;AAAA,MAAG,UAAU;AAAA,MAAG,MAAM;AAAA,MAAG,QAAQ;AAAA,MAAG,OAAO;AAAA,MAAG,OAAO;AAAA,MAAG,QAAQ;AAAA,MAChH,KAAK;AAAA,MAAG,QAAQ;AAAA,MAAG,QAAQ;AAAA,MAAG,SAAS;AAAA,MAAG,MAAM;AAAA,MAAG,OAAO;AAAA,MAAG,OAAO;AAAA,IACrE;AAEA,QAAI;AACJ,SAAK,WAAW,KAAK,IAAI,KAAK,WAAW;AACxC,cAAQ,OAAO,IAAI;AAAA,IACpB;AAEA,QAAI,CAAC,SAAS,CAAC,MAAM;AAAQ,aAAO;AAGpC,UAAM,eAAe;AAAA,MACpB;AAAA,MAAa;AAAA,MAAa;AAAA,MAAa;AAAA,MAAc;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAY;AAAA,MAAc;AAAA,MAAe;AAAA,IAC9H;AAEA,UAAM,eAAe;AAAA,MACpB;AAAA,MAAe;AAAA,MAAa;AAAA,MAAY;AAAA,MAAc;AAAA,IACvD;AAEA,UAAM,gBAAgB;AAAA,MACrB;AAAA,MAAa;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAe;AAAA,MAAa;AAAA,MAAQ;AAAA,MAAgB;AAAA,IAC7F;AAEA,UAAM,eAAe;AAAA,MACpB;AAAA,MAAY;AAAA,MAAc;AAAA,MAAY;AAAA,MAAa;AAAA,MAAe;AAAA,IACnE;AAEA,UAAM,aAAa;AAAA,MAClB;AAAA,MAAkB;AAAA,MAAU;AAAA,MAAa;AAAA,MAAa;AAAA,MAAa;AAAA,MAAc;AAAA,IAClF;AAEA,UAAM,aAAa;AAAA,MAClB;AAAA,MAAW;AAAA,MAAc;AAAA,MAAe;AAAA,MAAc;AAAA,IACvD;AAEA,UAAM,SAAS;AAAA,MACd;AAAA,MAAc;AAAA,MAAW;AAAA,MAAU;AAAA,MAAiB;AAAA,MAAa;AAAA,MAAW;AAAA,MAAmB;AAAA,MAAe;AAAA,MAC9G;AAAA,MAAY;AAAA,MAAa;AAAA,MAAS;AAAA,MAAW;AAAA,MAAe;AAAA,MAAgB;AAAA,MAAW;AAAA,MAAe;AAAA,MAEtG;AAAA,MAAa;AAAA,MAAY;AAAA,MAAW;AAAA,MAAc;AAAA,MAAc;AAAA,MAAS;AAAA,MAAc;AAAA,MAAc;AAAA,IACtG;AAGA,eAAW,CAAC,GAAG,MAAM,KAAK,MAAM,QAAQ,GAAG;AAC1C,YAAM,OAAO,KAAK,IAAI,MAAM,IAAI,MAAM;AACtC,YAAM,SAAS,KAAK;AACpB,UAAI,WAAW,KAAK;AACpB,UAAI,CAAC,YAAY,eAAe,iBAAiB,EAAE,SAAS,MAAM;AAAG,mBAAW,OAAO,KAAK,OAAO,EAAE,CAAC;AACtG,UAAI,KAAK,UAAU,KAAK,gBAAgB;AAEvC,gBAAQ,QAAQ;AAChB,gBAAQ,cAAc,KAAK,IAAI;AAC/B,gBAAQ,kBAAkB,MAAM,IAAI;AAAA,MACrC,OAAO;AAEN,gBAAQ,KAAK,QAAQ;AAAA,MACtB;AAEA,UAAI,WAAW,aAAc,KAAK,aAAa,KAAK,aAAa,MAAM,WAAW;AAAc,gBAAQ,YAAY;AAEpH,UAAI,KAAK,YAAY,MAAM,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,CAAC,MAAM;AAAG,gBAAQ,WAAW;AAChG,UAAI,KAAK,UAAU,KAAK;AAAgB,gBAAQ,QAAQ;AACxD,UAAI,KAAK;AAAO,gBAAQ,OAAO;AAE/B,UAAI,KAAK,YAAY,MAAM,KAAK,YAAY,KAAK,qBAAqB,WAAW,iBAAiB,WAAW,eAAe;AAC3H,gBAAQ,QAAQ;AAChB,YAAI,QAAQ,QAAQ,GAAG;AACtB,kBAAQ,cAAc;AAGtB,cAAI,CAAC,OAAO,SAAS,MAAM,MAAM,WAAW,iBAAiB,OAAO,KAAK,OAAO,EAAE,WAAW,IAAI;AAChG,oBAAQ,MAAM;AAEd,oBAAQ,KAAK,QAAQ,KAAK;AAAA,UAC3B;AAAA,QACD,WAAW,aAAa,aAAa,WAAW,UAAU,KAAK,WAAW,WAAW,KAAK,WAAW,UAAU,KAAK,WAAW,aAAa,IAAI;AAC/I,kBAAQ,MAAM;AAAA,QACf,WAAW,KAAK,aAAa,MAAM,WAAW,QAAQ,KAAK,WAAW,SAAS,MAAM,CAAC,OAAO,SAAS,MAAM,GAAG;AAC9G,kBAAQ,MAAM;AAAA,QACf,WAAW,aAAa,WAAW,WAAW,aAAa,GAAG;AAC7D,kBAAQ,MAAM;AAAA,QACf;AACA,YAAI,KAAK,MAAM,MAAM;AAAG,kBAAQ,WAAW;AAC3C,YAAI,KAAK,MAAM,OAAO;AAAG,kBAAQ,UAAU;AAC3C,YAAI,KAAK,MAAM,OAAO;AAAG,kBAAQ,OAAO;AACxC,gBAAQ,cAAc,KAAK,IAAI;AAC/B,gBAAQ,kBAAkB,MAAM,IAAI;AAAA,MACrC;AAEA,UAAI,KAAK,WAAW;AACnB,gBAAQ,YAAY;AACpB,YAAI,KAAK,UAAU,UAAU,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,SAAS,KAAK;AACxF,kBAAQ,aAAa;AAAA,QACtB;AAAA,MACD;AAEA,UAAI,KAAK,YAAY,KAAK,aAAa,QAAQ,KAAK,WAAW;AAAI,gBAAQ,YAAY;AAEvF,UAAI,KAAK,aAAa,aAAa,KAAK,aAAa,KAAM,WAAW,iBAAiB,WAAW,cAAc,IAAK;AACpH,gBAAQ,UAAU;AAAA,MACnB;AAGA,UAAI,aAAa,SAAS,MAAM;AAAG,gBAAQ,UAAU;AACrD,UAAI,aAAa,SAAS,MAAM;AAAG,gBAAQ,UAAU;AACrD,UAAI,cAAc,SAAS,MAAM,GAAG;AACnC,gBAAQ,eAAe;AACvB,gBAAQ,YAAY;AAAA,MACrB,WAAW,aAAa,SAAS,MAAM,GAAG;AACzC,gBAAQ,cAAc;AACtB,gBAAQ,YAAY;AAAA,MACrB;AACA,UAAI,WAAW,SAAS,MAAM;AAAG,gBAAQ,YAAY;AACrD,UAAI,WAAW,SAAS,MAAM;AAAG,gBAAQ,YAAY;AACrD,UAAI,CAAC,UAAU,eAAe,aAAa,aAAa,EAAE,SAAS,MAAM;AAAG,gBAAQ,SAAS;AAAA,IAC9F;AAGA,eAAW,UAAU,UAAU;AAC9B,YAAM,OAAO,KAAK,IAAI,MAAM,IAAI,MAAM;AACtC,UAAI,KAAK;AAAgB;AACzB,UAAI,KAAK,aAAa;AAAY,gBAAQ,cAAc;AACxD,UAAI,KAAK,aAAa;AAAW,gBAAQ,aAAa;AAAA,IACvD;AAGA,QAAI,QAAQ,YAAY,GAAG;AAC1B,cAAQ,YAAY;AAAA,IACrB,WAAW,QAAQ,eAAe,KAAK,QAAQ,cAAc,GAAG;AAC/D,YAAM,OAAO;AAAA,QACZ,UAAU,QAAQ,WAAW,QAAQ,cAAc;AAAA,QACnD,SAAS,QAAQ,UAAU,QAAQ,aAAa;AAAA,MACjD;AACA,UAAI,KAAK,aAAa,KAAK,SAAS;AACnC,YAAI,QAAQ,WAAW,QAAQ;AAAS,kBAAQ,YAAY;AAC5D,YAAI,QAAQ,UAAU,QAAQ;AAAU,kBAAQ,YAAY;AAAA,MAC7D,OAAO;AACN,gBAAQ,YAAY,KAAK,WAAW,KAAK,UAAU,aAAa;AAAA,MACjE;AAAA,IACD,WAAW,QAAQ,cAAc,YAAY;AAC5C,UAAK,QAAQ,WAAW,MAAM,CAAC,QAAQ,QAAQ,CAAC,QAAQ,cAAc,OAAQ,CAAC,MAAM,SAAS,MAAM,KAAK,CAAC,MAAM,SAAS,WAAW,IAAI;AACvI,gBAAQ,YAAY;AAAA,MACrB;AAAA,IACD,WAAW,QAAQ,cAAc,WAAW;AAC3C,UAAK,QAAQ,UAAU,MAAM,CAAC,QAAQ,QAAQ,CAAC,QAAQ,aAAa,OAAQ,CAAC,MAAM,SAAS,MAAM,KAAK,CAAC,MAAM,SAAS,WAAW,OAAO,CAAC,MAAM,SAAS,MAAM,KAAK,CAAC,MAAM,SAAS,SAAS,IAAI;AAChM,gBAAQ,YAAY;AAAA,MACrB;AAAA,IACD;AAEA,YAAQ,UAAU,IAAI,KAAK,MAAM,QAAQ,UAAU,CAAC;AACpD,YAAQ,SAAS,IAAI,KAAK,MAAM,QAAQ,SAAS,CAAC;AAElD,WAAO;AAAA,EACR;AAAA,EAEA,UAAU,SAA2B,cAA4C,CAAC,GAAG,SAAS,OAAO,YAAY,OAAmC;AACnJ,cAAU,KAAK,IAAI,QAAQ,IAAI,OAAO;AACtC,QAAI,QAAQ,QAAQ;AACpB,QAAI,OAAO;AAEX,QAAI,OAAO,QAAQ,eAAe,UAAU;AAE3C,cAAQ,QAAQ;AAAA,IACjB;AACA,QAAI,QAAQ,gBAAgB;AAC3B,UAAI,QAAQ,SAAS,YAAY;AAChC,YAAI,KAAK,aAAa,GAAG,CAAC,GAAG;AAC5B,kBAAQ;AAAA,QACT,WAAW,KAAK,aAAa,GAAG,CAAC,GAAG;AACnC,kBAAQ;AAAA,QACT,WAAW,KAAK,aAAa,GAAG,CAAC,GAAG;AACnC,kBAAQ;AAAA,QACT,OAAO;AAAE,kBAAQ;AAAA,QAAmB;AAAA,MACrC,WAAW,QAAQ,SAAS,YAAY;AACvC,gBAAQ;AAAA,MACT,WAAW,QAAQ,SAAS,YAAY,QAAQ,SAAS,iBAAiB;AACzE,YAAI,KAAK,aAAa,GAAG,CAAC,GAAG;AAC5B,kBAAQ;AAAA,QACT,OAAO;AAAE,kBAAQ;AAAA,QAAe;AAAA,MACjC,WAAW,QAAQ,SAAS,WAAW;AACtC,YAAI,KAAK,aAAa,GAAG,CAAC,GAAG;AAC5B,kBAAQ;AAAA,QACT,WAAW,KAAK,aAAa,GAAG,CAAC,GAAG;AACnC,kBAAQ;AAAA,QACT,OAAO;AAAE,kBAAQ;AAAA,QAAW;AAAA,MAC7B,WAAW,QAAQ,SAAS,WAAW;AACtC,YAAI,KAAK,aAAa,GAAG,CAAC,GAAG;AAC5B,kBAAQ;AAAA,QACT,OAAO;AAAE,kBAAQ;AAAA,QAAiB;AAAA,MACnC,WAAW,QAAQ,SAAS,YAAY;AACvC,YAAI,KAAK,aAAa,GAAG,CAAC,GAAG;AAC5B,kBAAQ;AAAA,QACT,OAAO;AAAE,kBAAQ;AAAA,QAAyB;AAAA,MAC3C,OAAO;AAAE,gBAAQ,KAAK,OAAO,CAAC,QAAQ,IAAI,EAAE,OAAO,QAAQ,cAAc,CAAC;AAAA,MAAG;AAAA,IAC9E;AACA,QAAI,QAAQ,KAAK,SAAS,OAAO,GAAG;AACnC,cAAQ,QAAQ,KAAK,MAAM,GAAG,EAAE;AAChC,aAAO;AAAA,IACR;AAEA,UAAM,YAAY,CAAC,YAAY,QAAQ,oBAAqB,QAAQ,2BAA2B,QAAQ;AACvG,UAAM,YAAY,aAAa,OAAO,KAAK,KAAK,IAAI,KAAK,UAAU,QAAQ,EAAE,EAAG,QAAS,GAAG,MAAM;AAClG,UAAM,eAAe,CAAC;AACtB,UAAM,QAAkB,CAAC;AACzB,QAAI,UAAU;AACd,QAAI,OAAO;AACX,UAAM,MAAM;AAAA,MACX,IAAI;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,IAClD;AACA,UAAM,MAAM;AAAA,MACX,IAAI;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAAA,IAClD;AACA,UAAM,UAA+B,CAAC;AACtC,YAAQ,QAAQ,MAAM,CAAC,CAAC,IAAI;AAC5B,QAAI,QAAQ,MAAM,CAAC,GAAG;AACrB,cAAQ,QAAQ,MAAM,CAAC,CAAC,IAAI;AAAA,IAC7B;AACA,UAAM,aAAkC,CAAC;AACzC,eAAW,QAAQ,UAAU,CAAC,CAAC,IAAI;AACnC,QAAI,QAAQ,UAAU,CAAC,GAAG;AACzB,iBAAW,QAAQ,UAAU,CAAC,CAAC,IAAI;AAAA,IACpC;AACA,QAAI,QAAQ,UAAU,GAAG,GAAG;AAC3B,iBAAW,QAAQ,UAAU,GAAG,CAAC,IAAI;AAAA,IACtC;AAEA,QAAI,UAAkC,CAAC;AACvC,QAAI;AAEJ,OAAG;AAEF,gBAAU,CAAC;AACX,iBAAW,UAAU,OAAO;AAC3B,gBAAQ,MAAM,IAAI;AAAA,MACnB;AAGA,YAAM,OAAQ,SAAS,SAAS,WAAW;AAC3C,aAAO,MAAM,SAAS,KAAK,KAAK,QAAQ;AACvC,cAAM,SAAS,KAAK,gBAAgB,IAAI;AACxC,gBAAQ,MAAM,IAAI;AAClB,cAAM,KAAK,MAAM;AAAA,MAClB;AAEA,gBAAU,KAAK,WAAW,OAAO,SAAS,YAAY,QAAQ;AAG9D,iBAAW,CAAC,GAAG,MAAM,KAAK,MAAM,QAAQ,GAAG;AAC1C,cAAM,OAAO,KAAK,IAAI,MAAM,IAAI,MAAM;AACtC,cAAM,SAAS,KAAK;AACpB,YAAI,WAAW;AACf,YAAI,UAAU;AAEd,gBAAQ,QAAQ;AAAA,UAEhB,KAAK;AAAA,UAAc,KAAK;AACvB,gBAAI,CAAC,QAAQ,aAAa,CAAC;AAAW,yBAAW;AACjD;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AACxB,gBAAI,SAAS,SAAS,SAAS,KAAK,SAAS,SAAS,MAAM;AAAG,yBAAW;AAC1E;AAAA,UACD,KAAK;AACJ,gBAAI,WAAW,cAAc,MAAM,CAAC,QAAQ,OAAO,KAAK,QAAQ,SAAS;AAAI,yBAAW;AACxF;AAAA,UACD,KAAK;AACJ,gBAAI,SAAS,SAAS,WAAW,KAAK,QAAQ,YAAY,KAAK,SAAS,SAAS,YAAY;AAAG,yBAAW;AAC3G;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AACxB,gBAAI,QAAQ,cAAc,SAAS,KAAK,CAAC,QAAQ;AAAW,yBAAW;AACvE,gBAAI,CAAC,QAAQ,OAAO,KAAK,SAAS,SAAS,aAAa;AAAG,yBAAW;AACtE;AAAA,UACD,KAAK;AAAA,UAAO,KAAK;AAChB,gBAAI,CAAC,QAAQ;AAAW,yBAAW;AACnC;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,QAAQ,UAAU,CAAC,QAAQ,UAAU;AAAG,yBAAW;AACxD;AAAA,UACD,KAAK;AAAA,UAAW,KAAK;AACpB,gBAAI,CAAC,QAAQ,UAAU,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC3E;AAAA,UACD,KAAK;AACJ,gBAAI,SAAS,SAAS,WAAW;AAAG,yBAAW;AAC/C,gBAAI,CAAC,QAAQ,WAAW,MAAM,SAAS,SAAS,QAAQ,KAAK,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,MAAM,KAAK,SAAS,SAAS,OAAO;AAAI,yBAAW;AACnK;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,QAAQ,MAAM;AAAG,yBAAW;AACjC,gBAAI,SAAS,SAAS,KAAK,CAAC,WAAW,UAAU,GAAG;AACnD,oBAAM,OAAO,SAAS,QAAQ,MAAM;AACpC,kBAAI,QAAQ;AAAG,qBAAK,QAAQ,UAAU,IAAI;AAAA,YAC3C;AACA;AAAA,UACD,KAAK;AAAA,UAAc,KAAK;AACvB,gBAAI,QAAQ,WAAW,QAAQ,UAAU,KAAK,QAAQ,aAAa,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACzG;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,cAAc,SAAS,KAAK,SAAS,SAAS,WAAW,KAAK,UAAU,YAAY;AAAW,yBAAW;AACtH;AAAA,UACD,KAAK;AACJ,gBAAI,SAAS,SAAS,YAAY;AAAG,yBAAW;AAChD;AAAA,UAGD,KAAK;AAAA,UAAa,KAAK;AAAA,UAAU,KAAK;AAAA,UAAQ,KAAK;AAAA,UAAS,KAAK;AAAA,UAAe,KAAK;AAAA,UAAa,KAAK;AACtG,gBAAI,QAAQ,cAAc;AAAY,yBAAW;AACjD,gBAAI,QAAQ,WAAW,QAAQ,cAAc,IAAI,MAAM,CAAC,QAAQ,MAAM,KAAK,CAAC,QAAQ,WAAW;AAAI,yBAAW;AAC9G,gBAAI,WAAW,iBAAiB,QAAQ,aAAa;AAAG,yBAAW;AACnE,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UAAY,KAAK;AACrB,gBAAI,QAAQ,cAAc;AAAW,yBAAW;AAChD,gBAAI,QAAQ,UAAU,QAAQ,aAAa,IAAI,MAAM,CAAC,QAAQ,MAAM,KAAK,CAAC,QAAQ,WAAW,OAAO,CAAC,QAAQ,MAAM,KAAK,CAAC,QAAQ,SAAS;AAAI,yBAAW;AACzJ,gBAAI,QAAQ,WAAW,KAAK,WAAW,cAAc,QAAQ,WAAW;AAAG,yBAAW;AACtF,sBAAU;AACV;AAAA,UACD,KAAK;AACJ,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UAAkB,KAAK;AAAA,UAAc,KAAK;AAC9C,gBAAI,QAAQ,cAAc;AAAS,yBAAW;AAC9C,gBAAI,QAAQ,cAAc,SAAS,QAAQ,cAAc,IAAI,QAAQ,aAAa,IAAI;AAAG,yBAAW;AACpG,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UAAW,KAAK;AAAA,UAAc,KAAK;AAAA,UAAc,KAAK;AAC1D,gBAAI,QAAQ,cAAc,SAAS,KAAK,QAAQ,MAAM;AAAG,yBAAW;AACpE,gBAAI,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,WAAW;AAAG,yBAAW;AAChF,gBAAI,CAAC,QAAQ;AAAW,wBAAU;AAClC;AAAA,UAGD,KAAK;AAAA,UAAW,KAAK;AACpB,gBAAI,QAAQ;AAAW,yBAAW;AAClC;AAAA,UACD,KAAK;AAAA,UAAmB,KAAK;AAAA,UAAS,KAAK;AAAA,UAAW,KAAK;AAAA,UAAY,KAAK;AAC3E,gBAAK,QAAQ,aAAa,CAAC,aAAc,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,MAAM;AAAG,yBAAW;AAChG;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AACxB,gBAAI,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,cAAc,SAAS;AAAG,yBAAW;AAC5E;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AAAA,UAAe,KAAK;AAC5C,gBAAK,QAAQ,YAAY,KAAK,CAAC,QAAQ,UAAU,KAAM,QAAQ,OAAO,KAAK,SAAS,SAAS,YAAY;AAAG,yBAAW;AACvH,gBAAI,WAAW,kBAAkB,QAAQ,cAAc,KAAK,SAAS,SAAS,cAAc,MAAM,CAAC,QAAQ;AAAW,yBAAW;AACjI;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,QAAQ,UAAU,KAAK,QAAQ,aAAa,KAAK,QAAQ,aAAa,KAAK,YAAY;AAAO,yBAAW;AAClI;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,QAAQ,SAAS,KAAK,QAAQ,WAAW,KAAK,QAAQ,YAAY,KAAK,QAAQ,OAAO;AAAG,yBAAW;AAC7H;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AACxB,gBAAI,QAAQ,aAAa,CAAC,CAAC,QAAQ,UAAU,KAAK,QAAQ,YAAY,KAAK,QAAQ,OAAO;AAAG,yBAAW;AACxG;AAAA,UACD,KAAK;AAAA,UAAgB,KAAK;AACzB,gBAAI,QAAQ,OAAO;AAAG,yBAAW;AACjC;AAAA,UACD,KAAK;AAAA,UAAa,KAAK;AACtB,gBAAI,QAAQ,aAAa,CAAC,CAAC,QAAQ,YAAY;AAAG,yBAAW;AAC7D;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,QAAQ,KAAK,QAAQ,OAAO;AAAG,yBAAW;AACjF;AAAA,UACD,KAAK;AACJ,gBAAK,QAAQ,aAAa,CAAC,QAAQ,MAAM,KAAK,CAAC,aAAc,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACjH,gBAAI,QAAQ,SAAS,KAAK,CAAC,WAAW,eAAe,KAAK,CAAC,WAAW,aAAa,KAAK,CAAC;AAAW,yBAAW;AAC/G,gBAAI,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,OAAO,KAAK,CAAC,QAAQ,MAAM;AAAG,yBAAW;AACjG,gBAAI,cAAc,SAAS,SAAS,SAAS,KAAK,SAAS,SAAS,YAAY,KAAK,SAAS,SAAS,OAAO,KAAK,QAAQ,UAAU,KAAK,QAAQ,YAAY;AAAI,yBAAW;AAC7K;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,OAAO,KAAK,QAAQ,WAAW,KAAK,QAAQ,YAAY,KAAK,YAAY;AAAW,yBAAW;AAC3G,gBAAI,QAAQ,aAAa,QAAQ,UAAU,KAAK;AAAG,yBAAW;AAC9D;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC9D,gBAAI,QAAQ,cAAc,KAAK,QAAQ,OAAO,KAAK,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACvG;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,YAAY,UAAU,YAAY,SAAS;AAAG,yBAAW;AAClF;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,MAAM,KAAK,QAAQ,YAAY,KAAK,QAAQ,WAAW,KAAK,YAAY;AAAa,yBAAW;AAC5J;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,cAAc,aAAa,YAAY;AAAW,yBAAW;AACzE;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW,KAAK,QAAQ,aAAa;AAAG,yBAAW;AAC/D;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AACxB,gBAAI,QAAQ,aAAa,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACrF,gBAAI,cAAc,QAAQ,YAAY,KAAK,QAAQ,QAAQ;AAAI,yBAAW;AAC1E;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,QAAQ,YAAY,KAAK,QAAQ,aAAa,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC7G;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,YAAY;AAAa,yBAAW;AAC7D;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,CAAC,QAAQ,YAAY,KAAM,QAAQ,cAAc,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ;AAAY,yBAAW;AACzG,gBAAI,aAAa,QAAQ,WAAW;AAAG,yBAAW;AAClD;AAAA,UAID,KAAK;AACJ,gBAAI,CAAC,CAAC,QAAQ,UAAU,KAAK,QAAQ,WAAW,KAAK,QAAQ,MAAM;AAAG,yBAAW;AACjF,gBAAI,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,OAAO,KAAK,QAAQ,YAAY,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC7G;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,CAAC,QAAQ,UAAU,KAAK,SAAS,SAAS,YAAY;AAAG,yBAAW;AACzE;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,QAAQ;AAAQ,yBAAW;AAC/E,gBAAI,QAAQ,WAAW,KAAK,SAAS,SAAS,OAAO;AAAG,yBAAW;AACnE;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW;AAAG,yBAAW;AACrC;AAAA,UACD,KAAK;AAAA,UAAY,KAAK;AACrB,gBAAI,QAAQ,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,WAAW,KAAK,QAAQ,cAAc;AAAY,yBAAW;AACvH;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,aAAa,QAAQ,UAAU;AAAG,yBAAW;AAC1E;AAAA,UACD,KAAK;AAAA,UAAW,KAAK;AACpB,gBAAI,QAAQ,WAAW,KAAK,QAAQ,OAAO;AAAG,yBAAW;AACzD;AAAA,UACD,KAAK;AAAA,UAAY,KAAK;AAAA,UAAY,KAAK;AACtC,gBAAI,QAAQ,SAAS,KAAK,CAAC,CAAC,QAAQ;AAAQ,yBAAW;AACvD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,OAAO,MAAO,QAAQ,UAAU,KAAK,CAAC,QAAQ,OAAO,KAAO,QAAQ,MAAM,SAAS,KAAK,QAAQ,OAAO;AAAK,yBAAW;AACnI;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY;AAAG,yBAAW;AACtC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW;AAAG,yBAAW;AACrC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,OAAO,KAAK,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ;AAAG,yBAAW;AAC5E;AAAA,UACD,KAAK;AACJ,iBAAK,QAAQ,WAAW,KAAK,SAAS,SAAS,WAAW,MAAM,QAAQ,cAAc;AAAY,yBAAW;AAC7G;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW,KAAK,CAAC,CAAC,QAAQ;AAAQ,yBAAW;AACzD,gBAAI,aAAa,QAAQ,YAAY;AAAG,yBAAW;AACnD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW,KAAK,CAAC,QAAQ,OAAO,KAAK,QAAQ,WAAW,KAAK,SAAS,SAAS,OAAO;AAAG,yBAAW;AAChH;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC7D;AAAA,UACD,KAAK;AACJ,gBAAK,QAAQ,UAAU,KAAK,QAAQ,aAAc,QAAQ,SAAS,KAAK,QAAQ,UAAU;AAAG,yBAAW;AACxG,gBAAI,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,aAAa,KAAK,QAAQ,UAAU;AAAG,yBAAW;AACzG;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC9D,gBAAI,QAAQ,YAAY,KAAK,QAAQ,YAAY,KAAK,SAAS,SAAS,YAAY;AAAG,yBAAW;AAClG;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,CAAC,QAAQ,MAAM;AAAG,yBAAW;AAC1D;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,KAAK,CAAC,QAAQ,UAAU,KAAK,SAAS,SAAS,aAAa;AAAG,yBAAW;AACnG;AAAA,UACD,KAAK;AAAA,UAAgB,KAAK;AACzB,gBAAI,QAAQ,aAAa,KAAK,QAAQ,QAAQ;AAAG,yBAAW;AAC5D;AAAA,UACD,KAAK;AACJ,gBAAI,SAAS,SAAS,YAAY,KAAK,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAG,yBAAW;AAC3F;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,SAAS;AAAG,yBAAW;AACnC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,SAAS,KAAK,QAAQ,OAAO;AAAG,yBAAW;AACvD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACxD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW,KAAK,QAAQ,YAAY,KAAK,SAAS,SAAS,OAAO;AAAG,yBAAW;AAC5F,gBAAI,QAAQ,YAAY,KAAK,CAAC,WAAW,UAAU;AAAG,yBAAW;AACjE,gBAAI,WAAW,UAAU;AAAG,wBAAU;AACtC;AAAA,UACD,KAAK;AACJ,gBAAI,CAAC,QAAQ,QAAQ,KAAK,QAAQ,UAAU;AAAG,yBAAW;AAC1D;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,QAAQ,YAAY,KAAK,SAAS,SAAS,OAAO;AAAG,yBAAW;AAC7F,gBAAI,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,YAAY;AAAG,yBAAW;AAClF,gBAAI,cAAc,QAAQ,YAAY,KAAK,QAAQ,gBAAgB;AAAI,yBAAW;AAClF;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,QAAQ,OAAO,KAAK,SAAS,SAAS,YAAY;AAAG,yBAAW;AAC7F,gBAAI,QAAQ,WAAW;AAAG,yBAAW;AACrC;AAAA,UACD,KAAK;AACJ,gBAAK,QAAQ,WAAW,KAAK,CAAC,QAAQ,aAAc,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACxG,gBAAI,SAAS,SAAS,cAAc,KAAK,WAAW,QAAQ,KAAK,CAAC,CAAC,QAAQ,UAAU;AAAG,yBAAW;AACnG;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa;AAAG,yBAAW;AACvC;AAAA,UACD,KAAK;AACJ,gBAAI,WAAW,aAAa,KAAK,QAAQ,aAAa,CAAC;AAAW,yBAAW;AAC7E;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY;AAAG,yBAAW;AACtC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,UAAU,MAAM,QAAQ,aAAa;AAAY,yBAAW;AACxE;AAAA,UACD,KAAK;AACJ,iBAAK,QAAQ,SAAS,KAAK,WAAW,UAAU,MAAM,QAAQ,UAAU,KAAK,CAAC,QAAQ;AAAW,yBAAW;AAC5G,gBAAI,WAAW,YAAY,KAAK,CAAC,QAAQ;AAAW,yBAAW;AAC/D,gBAAI,aAAa,QAAQ,SAAS;AAAG,yBAAW;AAChD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,OAAO,KAAK,CAAC,QAAQ;AAAW,yBAAW;AACvD;AAAA,UACD,KAAK;AACJ,gBAAI,aAAa,QAAQ,OAAO;AAAG,yBAAW;AAC9C,gBAAI,SAAS,SAAS,iBAAiB,KAAK,SAAS,SAAS,QAAQ;AAAG,yBAAW;AACpF;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,WAAW,KAAK,QAAQ,WAAW,KAAK,CAAC,CAAC,QAAQ,UAAU,SAAS,SAAS,WAAW;AAAG,yBAAW;AACnH,gBAAI,WAAW,MAAM,MAAM,CAAC,QAAQ,cAAc,KAAK,QAAQ,QAAQ;AAAI,yBAAW;AACtF;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,UAAU;AAAG,yBAAW;AACpC;AAAA,UACD,KAAK;AACJ,gBAAI,WAAW,UAAU,MAAM,QAAQ,aAAa,QAAQ,SAAS;AAAI,yBAAW;AACpF,gBAAI,aAAa,QAAS,cAAc;AAAG,yBAAW;AACtD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,OAAO,KAAK,QAAQ,aAAa,KAAK,QAAQ,WAAW;AAAG,yBAAW;AACnF;AAAA,UACD,KAAK;AAAA,UAAe,KAAK;AACxB,gBAAI,QAAQ,aAAa,KAAK,QAAQ,UAAU;AAAG,yBAAW;AAC9D;AAAA,UACD,KAAK;AACJ,iBAAK,QAAQ,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,aAAa,KAAK,QAAQ,OAAO,MAAM,QAAQ,cAAc;AAAW,yBAAW;AAC9I;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,eAAe;AAAG,yBAAW;AACzC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,cAAc,SAAS,KAAK,QAAQ,MAAM,IAAI,KAAK,CAAC,QAAQ,MAAM;AAAG,yBAAW;AAC5F,gBAAI,QAAQ,MAAM;AAAG,yBAAW;AAChC;AAAA,UACD,KAAK;AACJ,gBAAI,SAAS,SAAS,cAAc;AAAG,yBAAW;AAClD;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa,KAAK,QAAQ,WAAW,KAAK,QAAQ,YAAY;AAAG,yBAAW;AACxF;AAAA,UAGD,KAAK;AAAA,UAAY,KAAK;AACrB,gBAAI,QAAQ,YAAY,KAAK,QAAQ,OAAO,KAAK,CAAC,QAAQ,QAAQ;AAAG,yBAAW;AAChF,gBAAI,QAAQ,OAAO,KAAK,SAAS,SAAS,SAAS;AAAG,yBAAW;AACjE;AAAA,UACD,KAAK;AACJ,iBAAK,QAAQ,aAAa,KAAK,SAAS,SAAS,aAAa,MAAM,CAAC,YAAY;AAAa,yBAAW;AACzG;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY;AAAG,yBAAW;AACtC;AAAA,UACD,KAAK;AAAA,UAAa,KAAK;AACtB,gBAAI,QAAQ,aAAa,KAAK,QAAQ,OAAO;AAAG,yBAAW;AAC3D;AAAA,UACD,KAAK;AAAA,UAAa,KAAK;AAAA,UAAW,KAAK;AACtC,gBAAI,QAAQ,MAAM,KAAK,QAAQ,MAAM;AAAG,yBAAW;AACnD,gBAAI,WAAW,eAAe,QAAQ,WAAW;AAAG,yBAAW;AAC/D;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,YAAY,KAAK,QAAQ,WAAW,KAAK,CAAC,QAAQ,MAAM;AAAG,yBAAW;AAClF;AAAA,UACD,KAAK;AAAA,UAAW,KAAK;AACpB,gBAAI,YAAY;AAAS,yBAAW;AACpC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,QAAQ,KAAK,QAAQ,MAAM,KAAK,QAAQ,OAAO;AAAG,yBAAW;AACzE,gBAAI,SAAS,SAAS,QAAQ,KAAK,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,OAAO,KAAK,SAAS,SAAS,UAAU,KAAK,CAAC,QAAQ,UAAU;AAAG,yBAAW;AACrK,gBAAI,aAAa,SAAS,SAAS,WAAW;AAAG,yBAAW;AAC5D;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,aAAa;AAAG,yBAAW;AACvC;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,SAAS;AAAG,yBAAW;AACnC;AAAA,QACD;AAGA,aAAM,KAAK,aAAa,cAAc,QAAQ,cAAc,aAAe,KAAK,aAAa,aAAa,QAAQ,cAAc,eAAgB,WAAW,gBAAgB;AAE1K,gBAAM,QAAgB,QAAQ,QAAQ,MAAM,CAAC,CAAC,KAAK,QAAQ,QAAQ,MAAM,CAAC,CAAC,KAAK;AAChF,cAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI;AAAG,uBAAW;AAAA,QAChF;AAGA,YAAI,CAAC,YAAY,CAAC,KAAK,UAAU,CAAC,WAAW,CAAC,KAAK,WAAW,CAAC,KAAK,iBAClE,aAAc,CAAC,CAAC,UAAU,eAAe,WAAW,aAAa,SAAS,cAAc,SAAS,WAAW,EAAE,SAAS,MAAM,MAAM,KAAK,aAAa,YAAY,CAAC,KAAK,MAAM,WAC7K,CAAC,QAAQ,aAAa,QAAQ,cAAc,WAAY,KAAK,aAAa,QAAQ,aAAa,KAAK,aAAa,YAAc,QAAQ,QAAQ,SAAS,IAAI,QAAQ,SAAS,KAAK,CAAC,QAAQ,aAE3L,CAAC,QAAQ,QAAQ,QAAQ,cAAc,IAAI,QAAQ,aAAa,IAAI,KACpE,QAAQ,KAAK,KAAK,SAAS,SAAS,UAAU,KAC9C,QAAQ,MAAM,MAAM,CAAC,QAAQ,MAAM,KAAM,QAAQ,aAAa,MAAM,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,YAAY,OACnI,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,cAAc,KAAK,CAAC,QAAQ,YAAY,KAAK,EAAE,QAAQ,MAAM,KAAK,QAAQ,WAAW,MACzI,QAAQ,UAAU,MAAM,CAAC,QAAQ,UAAU,KAAK,SAAS,SAAS,SAAS,MAC3E,QAAQ,OAAO,KAAK,CAAC,QAAQ,OAAO,MAAM,SAAS,SAAS,eAAe,KAAK,SAAS,SAAS,aAAa,KAAK,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,WAAW,MACnL,QAAQ,UAAU,MAAM,CAAC,QAAQ,UAAU,KAAK,CAAC,QAAQ,SACzD,QAAQ,MAAM,MAAM,CAAC,QAAQ,MAAM,KAAK,SAAS,SAAS,YAAY,MAAM,CAAC,QAAQ,WAAW,MAC/F,QAAQ,QAAQ,KAAK,QAAQ,aAAa,MAAM,CAAC,QAAQ,QAAQ,MAAM,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,cAAc,KAAK,SAAS,SAAS,cAAc,MAChN,QAAQ,OAAO,MAAM,CAAC,QAAQ,OAAO,KAAK,SAAS,SAAS,aAAa,KAAK,SAAS,SAAS,eAAe,MAAM,CAAC,QAAQ,MAAM,KACpI,QAAQ,OAAO,KAAK,CAAC,QAAQ,OAAO,MAAM,QAAQ,UAAU,OAAO,OAAO,SAAS,SAAS,WAAW,MACvG,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ,KACtC,QAAQ,KAAK,MAAM,CAAC,QAAQ,KAAK,KAAK,SAAS,SAAS,aAAa,KAAM,WAAW,cAAc,KAAK,SAAS,SAAS,UAAU,OACpI,QAAQ,QAAQ,KAAK,WAAW,MAAM,KAAK,SAAS,SAAS,QAAQ,KAAO,WAAW,UAAU,KAAK,CAAC,QAAQ,QAAQ,MACxH,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ,MAAM,QAAQ,aAAa,WAAW,aAAa,KAAK,SAAS,SAAS,UAAU,MAC1H,QAAQ,SAAS,KAAK,CAAC,QAAQ,SAAS,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,QAAQ,OAAO,MAAM,QAAQ,aAAa,WAAW,eAAe,KAAK,SAAS,SAAS,cAAc,MAC5K,QAAQ,MAAM,KAAK,CAAC,QAAQ,MAAM,KAAK,QAAQ,UAAU,OAAO,OAC/D,QAAQ,OAAO,KAAK,WAAW,aAAa,OAAO,CAAC,QAAQ,OAAO,KAAM,QAAQ,aAAa,KAAK,QAAQ,OAAO,MAAO,QAAQ,UAAU,OAAO,MACnJ,QAAQ,OAAO,MAAO,CAAC,QAAQ,OAAO,KAAK,CAAC,QAAQ,YAAY,KAAM,SAAS,SAAS,YAAY,OACnG,WAAW,OAAO,KAAK,QAAQ,MAAM,MAAM,SAAS,SAAS,SAAS,MACrE,QAAQ,aAAa,KAAK,SAAS,SAAS,SAAS,KAAO,QAAQ,SAAS,KAAK,SAAS,SAAS,aAAa,MAAO,CAAC,YAAY,YACtI,SAAS,SAAS,YAAY,KAAK,SAAS,SAAS,SAAS,KAAK,SAAS,SAAS,OAAO,KAAK,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,YAAY,MACjK,CAAC,CAAC,QAAQ,UAAU,CAAC,QAAQ,aAAa,CAAC,QAAQ,aAAa,KAAK,CAAC,QAAQ,YAAY,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,cAC9I,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,aAAa,KAAK,SAAS,SAAS,WAAW,KAAK,CAAC,QAAQ,aAAa,CAAC,YAAY,cAC3I,UAAU,SAAS,SAAS,aAAa,KAAK,CAAC,CAAC,QAAQ,UAAU,CAAC,QAAQ,aAAa,CAAC,QAAQ,YAAY,KAAK,CAAC,QAAQ,YAAY,KACvI,aAAa,QAAQ,UAAU,OAAO,OAAO,SAAS,SAAS,WAAW,IACzE;AAEF,cAAI,KAAK,aAAa,YAAY,CAAC,QAAQ,KAAK,IAAI,KAAK,KAAK,aAAa,KAAK,YAAY,MAAM,CAAC,KAAK,YAAY,CAAC,WAAW,YAAY,GAAG;AAC9I,uBAAW;AAAA,UACZ;AAAA,QACD;AAGA,YAAI,WAAW,UAAU,UAAU;AAClC,gBAAM,YAAY,SAAS,QAAQ,WAAW;AAC9C,cAAI,aAAa,GAAG;AACnB,gBAAI,SAAS,SAAS,GAAG;AACxB,yBAAW;AAAA,YACZ,OAAO;AACN,mBAAK,QAAQ,UAAU,SAAS;AAAA,YACjC;AAAA,UACD;AAAA,QACD;AAGA,YAAI,YAAY,SAAS,QAAQ;AAChC,cAAI,KAAK,aAAa,YAAY,CAAC,KAAK;AAAQ,yBAAa,KAAK,MAAM,CAAC,CAAC;AAC1E,gBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,QACD;AACA,YAAI,YAAY,aAAa,QAAQ;AACpC,gBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,QACD;AAAA,MACD;AAAA,IACD,SAAS,MAAM,SAAS,MAAM,SAAS,UAAU,aAAa;AAG9D,UAAM,YAAsB,OAAO,OAAO,QAAQ,SAAS;AAC3D,cAAU,KAAK,CAAC,GAAG,MAAM,KAAK,IAAI,UAAU,IAAI,CAAC,EAAE,SAAS,KAAK,IAAI,UAAU,IAAI,CAAC,EAAE,MAAM;AAC5F,QAAI,WAAW,KAAK,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC;AAClD,QAAI,WAAW,KAAK,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC;AAClD,QAAI,WAAW,KAAK,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC;AAClD,QAAI,UAAU,CAAC,GAAG;AACjB,UAAI,UAAU,CAAC,KAAK,SAAS,UAAU,SAAS,UAAU,KAAK,aAAa,GAAG,CAAC,GAAG;AAClF,SAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,MAC3C;AACA,UAAI,SAAS,UAAU,SAAS,UAAU,KAAK,aAAa,GAAG,CAAC,GAAG;AAClE,SAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,MAC3C,WAAW,SAAS,SAAS,OAAO,SAAS,UAAU,KAAK,aAAa,GAAG,CAAC,GAAG;AAC/E,SAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,MAC3C;AACA,gBAAU,SAAS;AAEnB,UAAI;AACJ,SAAG;AACF,wBAAgB;AAChB,YAAI,CAAC,cAAc,eAAe,aAAa,YAAY,eAAe,YAAY,eAAe,cAAc,aAAa,cAAc,aAAa,gBAAgB,YAAY,EAAE,SAAS,OAAO,GAAG;AAC3M,0BAAgB;AAAA,QACjB,WAAW,CAAC,gBAAgB,YAAY,gBAAgB,cAAc,YAAY,EAAE,SAAS,OAAO,GAAG;AACtG,0BAAgB,CAAC,YAAQ,iBAAK,OAAO,CAAC;AAAA,QACvC,WAAW,YAAY,YAAY;AAClC,0BAAiB,QAAQ,WAAW,KAAK,QAAQ,OAAO;AAAA,QACzD,WAAW,YAAY,SAAS;AAC/B,0BAAiB,aAAa,WAAW,aAAa;AAAA,QACvD,WAAW,YAAY,iBAAiB,YAAY,YAAY;AAC/D,0BAAiB,QAAQ,aAAa,WAAW,YAAY;AAAA,QAC9D,WAAW,YAAY,eAAe;AACrC,0BAAiB,QAAQ,UAAU,MAAM,OAAO,CAAC,QAAQ,MAAM,KAAK,CAAC,QAAQ,UAAU,KAAK,CAAC,YAAY,KAAK;AAAA,QAC/G,WAAW,YAAY,eAAe;AACrC,0BAAiB,QAAQ,SAAS,IAAI,KAAK,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAA,QAClF,WAAW,YAAY,mBAAmB,YAAY,YAAY;AACjE,0BAAgB,CAAC,QAAQ,YAAY;AAAA,QACtC,WAAW,YAAY,eAAe;AACrC,0BAAgB,WAAW,aAAa;AAAA,QACzC,WAAW,YAAY,WAAW;AACjC,0BAAgB,CAAC,QAAQ,UAAU;AAAA,QACpC,WAAW,YAAY,YAAY;AAClC,0BAAgB,QAAQ,cAAc,SAAS;AAAA,QAChD,WAAW,YAAY,cAAc;AACpC,0BAAiB,QAAQ,OAAO,KAAK;AAAA,QACtC,WAAW,YAAY,cAAc;AACpC,0BAAiB,KAAK,IAAI,iBAAiB,QAAQ,OAAO,IAAI,MAAM,WAAW,SAAS;AAAA,QACzF,WAAW,YAAY,YAAY;AAClC,0BAAgB,CAAC,QAAQ,WAAW;AAAA,QACrC,WAAW,YAAY,QAAQ;AAC9B,0BAAiB,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ;AAAA,QAC1E,WAAW,YAAY,WAAW;AACjC,0BAAiB,WAAW,OAAO,KAAK,CAAC;AAAA,QAC1C,WAAW,YAAY,YAAY,YAAY,eAAe;AAC7D,0BAAiB,QAAQ,WAAW,KAAK,WAAW,WAAW;AAAA,QAChE,WAAW,YAAY,eAAe;AACrC,0BAAkB,QAAQ,MAAM,KAAK,QAAQ,WAAW,KAAM,aAAa,WAAW,YAAY;AAAA,QACnG,WAAW,YAAY,cAAc;AACpC,0BAAiB,QAAQ,UAAU,KAAK,QAAQ,QAAQ,KAAK,QAAQ,YAAY;AAAA,QAClF,WAAW,YAAY,aAAa;AACnC,0BAAiB,QAAQ,UAAU,IAAI,KAAK,QAAQ,cAAc;AAAA,QACnE,WAAW,YAAY,aAAa;AACnC,0BAAiB,aAAa,WAAW,aAAa;AAAA,QACvD,WAAW,YAAY,iBAAiB;AACvC,0BAAiB,QAAQ,MAAM,SAAS,QAAQ,KAAK,QAAQ,cAAc;AAAA,QAC5E,WAAW,YAAY,UAAU;AAChC,0BAAgB,QAAQ,MAAM,SAAS,UAAU;AAAA,QAClD,WAAW,YAAY,gBAAgB;AACtC,0BAAgB,CAAC,QAAQ,YAAY;AAAA,QACtC,WAAW,YAAY,eAAe;AACrC,0BAAiB,WAAW,aAAa,KAAK,CAAC,QAAQ,UAAU,CAAC;AAAA,QACnE,WAAW,YAAY,gBAAgB;AACtC,0BAAiB,WAAW,cAAc,KAAK,WAAW,SAAS,KAAM,WAAW,aAAa,KAAK,CAAC,CAAC,QAAQ,YAAY,KAAM,WAAW,UAAU,KAAK,QAAQ;AAAA,QACrK,WAAW,YAAY,SAAS;AAC/B,0BAAiB,QAAQ,WAAW,KAAK,QAAQ,aAAa;AAAA,QAC/D,WAAW,YAAY,oBAAoB;AAC1C,0BAAgB,CAAC,QAAQ,aAAa;AAAA,QACvC,WAAW,YAAY,YAAY;AAClC,0BAAgB,CAAC,QAAQ,OAAO;AAAA,QACjC,WAAW,YAAY,aAAa;AACnC,0BAAgB,CAAC,QAAQ,YAAY;AAAA,QACtC,WAAW,YAAY,mBAAmB;AACzC,0BAAiB,QAAQ,UAAU,SAAS,CAAC;AAAA,QAC9C,WAAW,YAAY,aAAa;AACnC,0BAAgB,CAAC,QAAQ,QAAQ;AAAA,QAClC,WAAW,YAAY,YAAY;AAClC,0BAAiB,QAAQ,aAAa,QAAQ,SAAS,KAAK;AAAA,QAC7D,WAAW,YAAY,eAAe;AACrC,0BAAgB,CAAC,QAAQ,QAAQ;AAAA,QAClC,WAAW,YAAY,eAAe;AACrC,0BAAgB,WAAW,aAAa;AAAA,QACzC,WAAW,YAAY,cAAc,YAAY,aAAa;AAC7D,0BAAgB,CAAC,QAAQ,QAAQ;AAAA,QAClC,WAAW,YAAY,gBAAgB,YAAY,aAAa;AAC/D,0BAAgB,CAAC,YAAY,MAAM;AAAA,QACpC,WAAW,YAAY,aAAa;AACnC,0BAAiB,CAAC,YAAY,MAAM,MAAM,CAAC,QAAQ,aAAa,CAAC,QAAQ,MAAM,KAAK,QAAQ,WAAW;AAAA,QACxG,WAAW,YAAY,cAAc;AACpC,0BAAgB,QAAQ,OAAO;AAAA,QAChC,WAAW,YAAY,WAAW;AACjC,0BAAiB,QAAQ,YAAY,KAAK,QAAQ,WAAW;AAAA,QAC9D,WAAW,YAAY,kBAAkB;AACxC,0BAAgB,CAAC,CAAC,YAAY,SAAS;AAAA,QACxC,WAAW,YAAY,cAAc;AACpC,0BAAiB,QAAQ,SAAS,gBAAgB,CAAC;AAAA,QACpD,WAAW,YAAY,aAAa;AACnC,0BAAgB,QAAQ,aAAa;AAAA,QACtC,WAAW,YAAY,eAAe;AACrC,0BAAiB,CAAC,QAAQ,YAAY,KAAK,WAAW,MAAM;AAAA,QAC7D,WAAW,YAAY,cAAc;AACpC,0BAAiB,CAAC,YAAY,MAAM,KAAK,CAAC,WAAW,YAAY;AAAA,QAClE,WAAW,YAAY,UAAU;AAChC,0BAAiB,QAAQ,OAAO,IAAI,KAAK,CAAC,QAAQ,aAAa;AAAA,QAChE,WAAW,YAAY,iBAAiB;AACvC,0BAAiB,QAAQ,SAAS,KAAK,CAAC;AAAA,QACzC,WAAW,YAAY,UAAU;AAChC,0BAAiB,QAAQ,QAAQ,KAAK,CAAC,CAAC,QAAQ,QAAQ,KAAK,WAAW,YAAY;AAAA,QACrF,WAAW,YAAY,SAAS;AAC/B,0BAAiB,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,QAAQ,UAAU;AAAA,QACzD,WAAW,YAAY,cAAc;AACpC,0BAAgB,QAAQ,OAAO;AAAA,QAChC,WAAW,YAAY,cAAc;AACpC,0BAAiB,CAAC,QAAQ,WAAW,MAAM,WAAW,YAAY,KAAM,WAAW,eAAe,KAAK,CAAC,QAAQ,aAAc,WAAW,WAAW,KAAK,WAAW,YAAY,KAAK,WAAW,cAAc;AAAA,QAC/M,WAAW,YAAY,eAAe;AACrC,0BAAiB,QAAQ,aAAa,QAAQ,SAAS;AAAA,QACxD,WAAW,YAAY,cAAc;AACpC,0BAAiB,CAAC,QAAQ,YAAY,KAAK,QAAQ,UAAU,KAAK,WAAW,WAAW,KAAK,SAAS,SAAS,OAAO;AAAA,QACvH,WAAW,YAAY,eAAe;AACrC,0BAAiB,QAAQ,OAAO,KAAK,QAAQ,WAAW,KAAK,QAAQ,SAAS,KAAK,CAAC,QAAQ;AAAA,QAC7F,WAAW,YAAY,WAAW;AACjC,0BAAiB,QAAQ,aAAa,KAAK,QAAQ,YAAY;AAAA,QAChE,WAAW,YAAY,eAAe;AACrC,0BAAiB,QAAQ,OAAO,KAAK,CAAC,QAAQ,SAAS;AAAA,QACxD,WAAW,YAAY,UAAU;AAChC,0BAAgB,CAAC,QAAQ,OAAO;AAAA,QACjC,WAAW,YAAY,WAAW;AACjC,0BAAiB,QAAQ,aAAa,QAAQ,aAAa;AAAA,QAC5D,WAAW,YAAY,YAAY;AAClC,0BAAiB,WAAW,WAAW,KAAK,CAAC,QAAQ,aAAa,CAAC;AAAA,QACpE,WAAW,YAAY,eAAe;AACrC,0BAAiB,KAAK,IAAI,iBAAiB,YAAY,OAAO,IAAI;AAAA,QACnE,WAAW,YAAY,gBAAgB;AACtC,0BAAiB,QAAQ,WAAW,KAAK,WAAW,SAAS,KAAK,WAAW,YAAY,KAAK,WAAW,SAAS,KAAK,WAAW,aAAa;AAAA,QAChJ;AAEA,YAAI,eAAe;AAClB,cAAI,YAAY,SAAS,QAAQ,SAAS,UAAU,GAAG;AACtD,sBAAU,SAAS;AAAA,UACpB,WAAW,YAAY,SAAS,QAAQ,UAAU,CAAC,KAAK,SAAS,UAAU,GAAG;AAC7E,sBAAU,SAAS;AAAA,UACpB,OAAO;AAEN,sBAAU,UAAU,CAAC;AACrB,4BAAgB;AAAA,UACjB;AAAA,QACD;AAAA,MACD,SAAS;AAET,UAAI,QAAQ,SAAS,eAAe,CAAC,WAAW;AAC/C,kBAAU;AAAA,MACX,WAAW,UAAU,gBAAgB,MAAM;AAC1C,kBAAU;AAAA,MACX,WAAW,WAAW,MAAM,MAAM,QAAQ,QAAQ,KAAM,QAAQ,MAAM,KAAK,QAAQ,WAAW,IAAK;AAClG,kBAAU;AAAA,MACX,WAAW,WAAW,OAAO,MAAM,QAAQ,WAAW,KAAK,QAAQ,QAAQ,MAAM,CAAC,WAAW;AAC5F,kBAAU;AAAA,MACX,WAAW,WAAW;AACrB,YAAI,WAAW,aAAa,KAAK,YAAY,gBAAgB,YAAY;AAAc,oBAAU;AACjG,YAAI,WAAW,kBAAkB,KAAK,KAAK,aAAa,GAAG,CAAC;AAAG,oBAAU;AACzE,YAAI,WAAW,cAAc;AAAG,oBAAU;AAC1C,YAAI,WAAW,UAAU,KAAK,QAAQ,SAAS;AAAG,oBAAU;AAC5D,YAAI,WAAW,MAAM;AAAG,oBAAU;AAClC,YAAI,WAAW,SAAS;AAAG,oBAAU;AACrC,YAAI,WAAW,YAAY;AAAG,oBAAU;AACxC,YAAI,WAAW,OAAO,KAAK,YAAY;AAAU,oBAAU;AAC3D,YAAI,WAAW,aAAa,KAAK,YAAY,kBAAkB,YAAY;AAAW,oBAAU;AAChG,YAAI,WAAW,OAAO;AAAG,oBAAU;AACnC,YAAI,WAAW,UAAU;AAAG,oBAAU;AACtC,YAAI,WAAW,aAAa;AAAG,oBAAU;AACzC,YAAI,WAAW,WAAW,MAAM,YAAY,cAAc,WAAW,UAAU;AAAI,oBAAU;AAC7F,YAAI,WAAW,QAAQ;AAAG,oBAAU;AAAA,MACrC;AAAA,IACD,OAAO;AACN,gBAAU,SAAS;AAAA,IACpB;AAEA,WAAO,CAAC,YAAY,cAAc;AAClC,QAAI,QAAQ,eAAe;AAC1B,aAAO,KAAK,OAAO,QAAQ,aAAa;AAAA,IAGzC,WAAW,QAAQ,SAAS,eAAe,QAAQ,SAAS,GAAG;AAC9D,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,mBAAmB;AAC9C,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,cAAc,CAAC,WAAW;AACrD,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,YAAY,QAAQ,YAAY,KAAK,CAAC,WAAW;AAC5E,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,WAAW;AACtC,aAAO,YAAY,cAAc;AAAA,IAClC,WAAW,QAAQ,gBAAgB,WAAW;AAC7C,aAAO;AAAA,IACR,WAAW,QAAQ,gBAAgB,WAAW;AAC7C,cAAQ,YAAY,KAAK,OAAO,CAAC,IAAI,aAAa,UAAU,WAAW,UAAU,UAAU,UAAU,YAAY,QAAQ,CAAC;AAC1H,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,eAAe,CAAC,WAAW;AACtD,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,YAAY;AACvC,aAAQ,CAAC,YAAY,SAAS,CAAC,YAAY,aAAa,CAAC,YAAa,qBAAqB;AAAA,IAC5F,WAAW,QAAQ,SAAS,aAAa,QAAQ,WAAW,GAAG;AAC9D,aAAO;AAAA,IACR,WAAW,CAAC,WAAW,WAAW,EAAE,SAAS,QAAQ,IAAI,KAAK,CAAC,CAAC,QAAQ,UAAU,CAAC,WAAW;AAC7F,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,cAAc,QAAQ,aAAa,GAAG;AACjE,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,eAAe,CAAC,eAAe,WAAW,OAAO,EAAE,SAAS,OAAO,GAAG;AACjG,aAAO;AAAA,IACR,WAAW,YAAY,YAAY;AAClC,aAAO,KAAK,OAAO,CAAC,SAAS,QAAQ,UAAU,QAAQ,MAAM,CAAC,IAAI;AAAA,IACnE,WAAW,YAAY,qBAAqB,YAAY,cAAe,YAAY,iBAAiB,QAAQ,WAAW,KAAK,CAAC,WAAY;AACxI,aAAO;AAAA,IACR,WAAW,QAAQ,OAAO,KAAK,QAAQ,YAAY,KAAK,CAAC,WAAW;AACnE,UAAI,QAAQ,UAAU,OAAO,MAAM,QAAQ,UAAU,OAAO,OAAO,CAAC,QAAQ,UAAU,GAAG;AACxF,eAAO;AAAA,MACR,OAAO;AACN,eAAQ,QAAQ,WAAW,QAAQ,UAAW,gBAAgB;AAAA,MAC/D;AAAA,IACD,WAAW,QAAQ,KAAK,UAAU,CAAC,QAAQ,OAAO,GAAG;AACpD,aAAO;AAAA,IACR,WAAW,QAAQ,WAAW,GAAG;AAChC,aAAQ,CAAC,CAAC,QAAQ,UAAU,KAAK,CAAC,QAAQ,YAAY,IAAK,iBAAiB;AAAA,IAC7E,WAAW,QAAQ,UAAU,KAAK,QAAQ,YAAY,GAAG;AACxD,aAAO;AAAA,IACR,WAAW,QAAQ,YAAY,GAAG;AACjC,aAAQ,YAAY,YAAY,CAAC,UAAU,CAAC,YAAa,qBAAqB;AAAA,IAC/E,WAAW,YAAY,WAAW,QAAQ,WAAW,KAAK,YAAY;AACrE,aAAO,QAAQ,MAAM,IAAI,cAAc;AAAA,IACxC,WAAW,YAAY,iBAAiB,QAAQ,cAAc,SAAS,GAAG;AACzE,aAAO,QAAQ,SAAS,IAAI,eAAe;AAAA,IAC5C,WAAW,YAAY,iBAAiB,CAAC,CAAC,QAAQ,YAAY,GAAG;AAChE,aAAO;AAAA,IACR,WAAW,YAAY,YAAY;AAClC,aAAQ,QAAQ,aAAa,KAAK,QAAQ,OAAO,IAAK,eAAe;AAAA,IACtE,WAAW,QAAQ,YAAY,GAAG;AACjC,aAAQ,YAAY,iBAAkB,gBAAgB;AAAA,IACvD,WAAW,QAAQ,YAAY,KAAK,QAAQ,aAAa,KAAK,QAAQ,SAAS,GAAG;AACjF,aAAO;AAAA,IACR,WAAW,QAAQ,MAAM,KAAK,CAAC,QAAQ,WAAW,KAAK,YAAY,aAAa;AAC/E,aAAO;AAAA,IACR,WAAW,QAAQ,UAAU,KAAK,YAAY,eAAe;AAC5D,aAAO;AAAA,IACR,WAAW,KAAK,IAAI,iBAAiB,QAAQ,OAAO,KAAK,KAAK,CAAC,WAAW;AACzE,aAAO;AAAA,IAGR,WAAW,cAAc,QAAQ,cAAc,KAAK,QAAQ,UAAU,KAAK,QAAQ,YAAY,MAAM,QAAQ,cAAc,UAAU,GAAG;AACvI,aAAO;AAAA,IACR,WAAW,aAAa,QAAQ,UAAU,KAAK,YAAY,kBAAkB,CAAC,YAAY,MAAM,GAAG;AAClG,aAAO;AAAA,IACR,WAAW,aAAa,KAAK,IAAI,iBAAiB,QAAQ,OAAO,KAAK,KAAK,CAAC,QAAQ,QAAQ,GAAG;AAC9F,aAAO;AAAA,IACR,WAAW,aAAa,QAAQ,YAAY,MAAM,QAAQ,QAAQ,KAAK,QAAQ,UAAU,KAAK,QAAQ,MAAM,KAAK,QAAQ,UAAU,KAAK,QAAQ,OAAO,MACtJ,CAAC,QAAQ,SAAS,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,aAAa,GAC1F;AACD,aAAQ,CAAC,QAAQ,UAAU,KAAK,CAAC,WAAW,aAAa,KAAK,CAAC,QAAQ,WAAW,KAAK,QAAQ,UAAU,OAAO,MAAM,QAAQ,UAAU,OAAO,OAAO,KAAK,aAAa,GAAG,CAAC,IAAK,iBAAiB;AAAA,IACnM,WAAW,cAAe,QAAQ,WAAW,MAAM,QAAQ,QAAQ,KAAK,QAAS,UAAU,KAAK,QAAQ,MAAM,KAAK,QAAQ,YAAY,MAAQ,QAAQ,WAAW,MAChK,QAAQ,UAAU,KAAK,QAAQ,OAAO,MAAO,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,YAAY,IAC3F;AACD,aAAQ,QAAQ,UAAU,OAAO,MAAM,QAAQ,UAAU,OAAO,OAAO,KAAK,aAAa,GAAG,CAAC,IAAK,iBAAiB;AAAA,IACpH,WAAW,aAAa,QAAQ,cAAc,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,UAAU,MAAM,QAAQ,UAAU,OAAO,KAAK;AACzI,aAAO;AAAA,IACR,WAAW,aAAa,QAAQ,cAAc,UAAU,KAAK,QAAQ,UAAU,OAAO,MAAM,YAAY,gBAAgB,YAAY,YAAY,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,YAAY,KACtN,CAAC,QAAQ,SAAS,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,QAAQ,SAAS,KAAK,CAAC,QAAQ,YAAY,KAAK,CAAC,QAAQ,gBAAgB,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,QAAQ,OAAO,GACxL;AACD,aAAQ,YAAY,eAAe,QAAQ,UAAU,KAAK,QAAQ,UAAU,MAAM,QAAQ,UAAU,OAAO,MAAO,iBAAiB;AAAA,IAGpI,WAAW,QAAQ,YAAY,KAAK,YAAY,kBAAkB,CAAC,QAAQ,SAAS,KAAK,CAAC,QAAQ,aAAa,KAAK,CAAC,QAAQ,WAAW,MAAM,CAAC,QAAQ,UAAU,KAAK,QAAQ,OAAO,MAAM,CAAC,WAAW;AACtM,YAAM,aACJ,QAAQ,UAAU,OAAO,OAAO,YAAY,iBAAiB,QAAQ,UAAU,OAAO,MAAM,QAAQ,UAAU,OAAO,OACtH,YAAY,iBAAiB,CAAC,QAAQ,UAAU,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,cAAc;AAE5H,aAAQ,aAAa,KAAK,aAAa,GAAG,CAAC,IAAK,iBAAiB;AAAA,IAClE,WAAW,QAAQ,YAAY,MAAM,QAAQ,SAAS,KAAK,QAAQ,SAAS,KAAK,QAAQ,aAAa,MAAM,CAAC,QAAQ,WAAW,KAAK,CAAC,WAAW;AAChJ,aAAO;AAAA,IACR,YAAY,QAAQ,WAAW,KAAM,QAAQ,WAAW,MAAM,QAAQ,UAAU,KAAK,QAAQ,aAAa,KAAK,QAAQ,OAAO,OAAQ,CAAC,WAAW;AACjJ,YAAM,YAAY,QAAQ,UAAU,OAAO,OAAO,QAAQ,UAAU,OAAO,MAAM,QAAQ,UAAU,OAAO,OAAO,YAAY,iBAAiB,CAAC,QAAQ;AACvJ,aAAQ,aAAa,KAAK,aAAa,GAAG,CAAC,IAAK,iBAAiB;AAAA,IAClE,YAAa,QAAQ,YAAY,KAAK,QAAQ,OAAO,KAAO,QAAQ,WAAW,KAAK,QAAQ,aAAa,MAAO,CAAC,QAAQ,UAAU,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,WAAW;AACxK,aAAO;AAAA,IACR,WAAW,QAAQ,WAAW,KAAK,QAAQ,UAAU,KAAM,YAAY,iBAAiB,CAAC,QAAQ,SAAS,KAAM,YAAY,mBAAmB,QAAQ,cAAc,UAAU,GAAG;AACjL,aAAO;AAAA,IACR,WAAW,KAAK,IAAI,iBAAiB,QAAQ,OAAO,KAAK,MAAM,CAAC,aAAa,kBAAkB,YAAY,EAAE,SAAS,OAAO,KAAK,QAAQ,aAAa,KAAK,QAAQ,OAAO,KAAK,QAAQ,WAAW,MAAM,CAAC,WAAW;AACpN,aAAO;AAAA,IACR,WAAW,QAAQ,SAAS,wBAAyB,KAAK,IAAI,iBAAiB,UAAU,OAAO,IAAI,KAAK,CAAC,CAAC,QAAQ,YAAY,KAC9H,QAAQ,cAAc,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,UAAU,MAAM,QAAQ,UAAU,OAAO,KAC5G;AACD,aAAO;AAAA,IACR,WAAW,QAAQ,cAAc,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,UAAU,MAAM,QAAQ,UAAU,OAAO,KAAK;AAC5H,aAAO;AAAA,IACR,YAAY,QAAQ,WAAW,KAAK,QAAQ,OAAO,KAAK,QAAQ,MAAM,KAAK,QAAQ,UAAU,KAAK,QAAQ,SAAS,KAAK,QAAQ,WAAW,KAAK,QAAQ,cAAc,OAAO,YAAY,WAAW,CAAC,YAAY;AAChN,aAAO;AAAA,IAGR,WAAW,UAAU,CAAC,CAAC,YAAY,QAAQ,EAAE,SAAS,OAAO,KAAK,CAAC,QAAQ,YAAY,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,UAAU,MAAM,QAAQ,UAAU,MAAM,OAAO,CAAC,WAAW;AACnO,aAAO;AAAA,IACR,WAAW,YAAY,kBAAkB,CAAC,WAAW;AACpD,aAAO;AAAA,IACR,WAAW,QAAQ,gBAAgB,KAAK,QAAQ,WAAW,KAAK,CAAC,CAAC,QAAQ,YAAY,GAAG;AACxF,aAAO;AAAA,IACR,YAAa,KAAK,IAAI,iBAAiB,QAAQ,OAAO,KAAK,MAAM,CAAC,YAAY,SAAS,YAAY,gBAAgB,QAAQ,OAAO,KAAK,QAAQ,YAAY,MACzJ,QAAQ,WAAW,MAAM,YAAY,iBAAiB,CAAC,CAAC,QAAQ,UAAU,OAAQ,CAAC,WACnF;AACD,aAAO;AAAA,IACR,WAAW,KAAK,IAAI,iBAAiB,UAAU,OAAO,KAAK,KAAK,CAAC,QAAQ,QAAQ,KAAK,YAAY,cAAc,CAAC,WAAW,YAAY,KAAK,CAAC,WAAW;AACxJ,aAAO;AAAA,IACR,WAAW,QAAQ,cAAc,UAAU,KAAK,CAAC,QAAQ,QAAQ,KAAK,YAAY,YAAY,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,UAAU,KAAK,CAAC,QAAQ,WAAW,KAAK,CAAC,QAAQ,YAAY,KAAK,CAAC,QAAQ,OAAO,KAAK,CAAC,cACtN,CAAC,CAAC,QAAQ,YAAY,KAAK,QAAQ,WAAW,KAAK,CAAC,CAAC,QAAQ,OAAO,KAAK,QAAQ,WAAW,KAAM,QAAQ,UAAU,MAAM,MAAM,QAAQ,UAAU,KAAK,QAAQ,UAAU,MAAM,QAAQ,UAAU,MAAM,MACvM;AACD,aAAO;AAAA,IACR,WAAW,QAAQ,cAAc,UAAU,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,WAAW;AACvG,aAAO;AAAA,IACR,YAAY,QAAQ,aAAa,KAAK,QAAQ,aAAa,MAAM,CAAC,cAChE,QAAQ,SAAS,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,MAAM,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,QAAQ,QAAQ,KAAK,CAAC,CAAC,eAAe,aAAa,EAAE,SAAS,OAAO,IAC/K;AACD,aAAO;AAAA,IACR;AAGA,QAAI,SAAS,eAAe,QAAQ,QAAQ,GAAG;AAC9C,aAAO;AAAA,IACR;AAEA,UAAM,SAAiB,CAAC,YAAY,QAAQ,oBAAoB,QAAQ,4BAA4B;AAGpG,UAAM,aAAc,YAAY,iBAAiB,SAAS,qBAAqB,IAAI,KAAK,IAAI,iBAAiB,QAAQ,OAAO;AAC5H,WAAO,IAAI,KAAK,GAAG;AAClB,YAAM,KAAK,KAAK,MAAM,KAAK,MAAM,IAAI,QAAQ,UAAU,KAAK,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE;AACrH,UAAI,QAAQ,YAAY,MAAM,SAAS,kBAAkB,YAAY,qBAAsB,QAAQ,WAAW,KAAK,SAAS,gBAAiB;AAE5I,YAAI,KAAK,MAAM;AAAG;AAAA,MACnB,WAAW,QAAQ,WAAW,MAAM,SAAS,kBAAkB,YAAY,aAAa;AAEvF,YAAI,KAAK,MAAM;AAAG;AAAA,MACnB,WAAW,QAAQ,YAAY,KAAK,QAAQ,UAAU,GAAG;AAExD,YAAI,KAAK,IAAI;AAAG;AAAA,MACjB,OAAO;AAEN,YAAI,cAAc,KAAK,MAAM,IAAI,cAAc;AAAG;AAAA,MACnD;AACA,UAAI,MAAM;AAAA,IACX;AAEA,QAAI,QAAQ,cAAc,KAAK,SAAS;AAAgB,UAAI,OAAO;AAGnE,QAAI,CAAC,QAAQ,UAAU,KAAK,CAAC,QAAQ,WAAW,MAAM,CAAC,QAAQ,cAAc,KAAK,CAAC,QAAQ,SAAS;AACnG,UAAI,MAAM;AACV,UAAI,MAAM;AAAA,IACX;AAEA,QAAI,QAAQ,UAAU,KAAK,QAAQ,WAAW,GAAG;AAChD,UAAI,MAAM;AACV,UAAI,MAAM;AAAA,IACX;AAEA,WAAO;AAAA,MACN,MAAM,QAAQ;AAAA,MACd,SAAS;AAAA,MACT,QAAQ,QAAQ;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO,KAAK,aAAa,GAAG,IAAI;AAAA,MAChC,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EAEA,eAAe,MAAc,UAAwC,CAAC,GAAG,aAAa,OAAO;AAC5F,UAAM,UAAU,QAAQ,IAAI,WAAK,iBAAK,EAAE,OAAO,CAAC;AAChD,UAAM,cAAc,CAAC;AACrB,eAAW,MAAM,KAAK,IAAI,KAAK,aAAa;AAC3C,UAAI,UAAU,KAAK,IAAI,QAAQ,IAAI,EAAE;AACrC,UAAI,QAAQ,MAAM,KAAK,OAAO,QAAQ,SAAS,QAAQ,EAAE;AAAG;AAC5D,UAAI,YAAY;AACf,YAAI,CAAC,QAAQ,MAAM,SAAS,IAAI;AAAG;AACnC,YAAI,OAAO,QAAQ,eAAe,UAAU;AAC3C,oBAAU,KAAK,IAAI,QAAQ,IAAI,QAAQ,UAAU;AACjD,cAAI,CAAC,QAAQ,MAAM,SAAS,IAAI;AAAG;AAAA,QACpC;AAAA,MACD;AACA,kBAAY,KAAK,EAAE;AAAA,IACpB;AACA,WAAO;AAAA,EACR;AAAA,EAEA,aAAa;AACZ,UAAM,OAAO,KAAK,KAAK;AACvB,UAAM,YAAY,KAAK,IAAI,QAAQ,aAAa,KAAK,MAAM;AAC3D,UAAM,UAAU,CAAC;AAGjB,UAAM,aAAa,UAAU,IAAI,gBAAgB;AACjD,UAAM,WAAW,OAAO,KAAK,KAAK,IAAI,KAAK,SAAS;AACpD,UAAM,OAAO,KAAK,OAAO,QAAQ;AAGjC,QAAI,OAAwB;AAC5B,QAAI,OAAO,UAAU,OAAO,QAAQ,UAAU,IAAI,MAAM,GAAG;AAC1D,aAAO,KAAK,IAAI,QAAQ,IAAI,OAAO,IAAI;AAAA,IACxC;AAEA,UAAM,aAAoC,CAAC;AAE3C,UAAM,YAAmC,CAAC;AAC1C,UAAM,YAAmC,CAAC;AAC1C,UAAM,iBAAwC,CAAC;AAC/C,UAAM,cAA4C,CAAC;AAInD,eAAW,YAAY,CAAC,MAAM,KAAK,GAAG;AACrC,UAAI,QAAQ,UAAU;AAAG;AACzB,YAAM,cAAc,KAAK,eAAe,MAAM,SAAS,UAAU;AACjE,aAAO,YAAY,UAAU,QAAQ,SAAS,GAAG;AAChD,YAAI,UAAU,KAAK,IAAI,QAAQ,IAAI,KAAK,gBAAgB,WAAW,CAAC;AACpE,YAAI,CAAC,QAAQ;AAAQ;AAGrB,YAAI,KAAK,OAAO,aAAa,WAAW;AACvC,cAAI,CAAC,QAAQ;AAAmB;AAAA,QACjC,OAAO;AACN,cAAI,CAAC,QAAQ;AAAyB;AAAA,QACvC;AAGA,YAAI,WAAW,QAAQ,WAAW;AAAG;AAGrC,gBAAQ,QAAQ,aAAa;AAAA,UAC7B,KAAK;AAAA,UAAU,KAAK;AACnB,gBAAI,KAAK,aAAa,GAAG,CAAC;AAAG;AAC7B;AAAA,UACD,KAAK;AAAA,UAAa,KAAK;AAAA,UAAY,KAAK;AAAA,UAAa,KAAK;AACzD,gBAAI,KAAK,aAAa,GAAG,CAAC;AAAG;AAC7B;AAAA,UACD,KAAK;AACJ,gBAAI,KAAK,OAAO,KAAK,KAAK,aAAa,GAAG,CAAC;AAAG;AAC9C;AAAA,UACD,KAAK;AACJ,gBAAI,QAAQ,QAAQ,KAAK,KAAK,aAAa,GAAG,CAAC;AAAG;AAClD;AAAA,UACD,KAAK;AAAA,UAAY,KAAK;AAAA,UAAc,KAAK;AAAA,UAAU,KAAK;AAAA,UACxD,KAAK;AAAA,UAAY,KAAK;AAAA,UAAa,KAAK;AAAA,UAAc,KAAK;AAAA,UAAc,KAAK;AAAA,UAAc,KAAK;AAAA,UAAY,KAAK;AAAA,UAAa,KAAK;AAAA,UAAW,KAAK;AACnJ,gBAAI,KAAK,OAAO,KAAK,KAAK,aAAa,GAAG,CAAC;AAAG;AAC9C;AAAA,QACD;AAGA,YAAI,QAAQ,SAAS,aAAa,QAAQ,SAAS;AAAG;AAEtD,cAAM,OAAO,QAAQ;AACrB,cAAM,QAAQ,QAAQ;AACtB,cAAM,YAAY,MAAM,MAAM,EAAE,KAAK,EAAE,KAAK;AAE5C,YAAI,UAAU;AAEb,cAAK,UAAU,IAAI,MAAM,aAAa,IAAI,MAAO,CAAC,KAAK,aAAa,GAAG,KAAK,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC,GAAG;AACrG;AAAA,UACD;AAEA,cAAI,CAAC,YAAY;AAEhB,gBAAI,OAAO;AACX,uBAAWA,aAAY,OAAO;AAC7B,kBAAI,UAAUA,SAAQ,IAAI,GAAG;AAC5B,uBAAO;AACP;AAAA,cACD;AAAA,YACD;AACA,gBAAI;AAAM;AAAA,UACX;AAGA,cAAI,UAAU,KAAK,KAAK,KAAK,aAAa;AAAO;AAAA,mBACxC,UAAU,KAAK,MAAM,KAAK,QAAQ,WAAW;AAAG;AACzD,cAAI,eAAe,SAAS,MAAM,aAAa,IAAI;AAAI;AAAA,QACxD;AAGA,YAAI,CAAC,CAAC,QAAQ,KAAK,UAAU,QAAQ,SAAS;AAAG,oBAAU;AAE3D,cAAM,MAAM,KAAK,UAAU,SAAS,aAAa,QAAQ,WAAW,GAAG,KAAK,OAAO,aAAa,SAAS;AAGzG,gBAAQ,KAAK,GAAG;AAEhB,YAAI,QAAQ,WAAW,GAAG;AAEzB,gBAAM,WAAW,YAAY,UAAU;AACvC,cAAI;AAAU,oBAAQ,WAAW,CAAC,EAAE,QAAQ,QAAQ,CAAC,EAAE;AAGvD;AAAA,QACD;AAGA,mBAAW,QAAQ,WAAW,IAAI;AAGlC,YAAI,UAAU,IAAI,GAAG;AACpB,oBAAU,IAAI;AAAA,QACf,OAAO;AACN,oBAAU,IAAI,IAAI;AAAA,QACnB;AAGA,mBAAWA,aAAY,OAAO;AAC7B,cAAIA,aAAY,WAAW;AAC1B,sBAAUA,SAAQ;AAAA,UACnB,OAAO;AACN,sBAAUA,SAAQ,IAAI;AAAA,UACvB;AAAA,QACD;AACA,YAAI,aAAa,gBAAgB;AAChC,yBAAe,SAAS;AAAA,QACzB,OAAO;AACN,yBAAe,SAAS,IAAI;AAAA,QAC7B;AAGA,YAAI,IAAI,YAAY,aAAa,IAAI,MAAM,SAAS,WAAW;AAAG,sBAAY,MAAM,IAAI;AACxF,YAAI,IAAI,YAAY,aAAa,IAAI,MAAM,SAAS,UAAU;AAAG,sBAAY,KAAK,IAAI;AACtF,YAAI,IAAI,YAAY;AAAe,sBAAY,MAAM,IAAI;AACzD,YAAI,IAAI,YAAY;AAAgB,sBAAY,MAAM,IAAI;AAC1D,YAAI,IAAI,MAAM,SAAS,QAAQ;AAAG,sBAAY,QAAQ,KAAK,YAAY,QAAQ,KAAK,KAAK;AACzF,YAAI,IAAI,MAAM,SAAS,aAAa;AAAG,sBAAY,aAAa,IAAI;AACpE,YAAI,IAAI,MAAM,SAAS,WAAW;AAAG,sBAAY,WAAW,IAAI;AAChE,YAAI,IAAI,MAAM,SAAS,aAAa;AAAG,sBAAY,aAAa,IAAI;AACpE,YAAI,IAAI,MAAM,SAAS,OAAO;AAAG,sBAAY,OAAO,IAAI;AACxD,YAAI,IAAI,MAAM,SAAS,WAAW;AAAG,sBAAY,WAAW,IAAI;AAChE,YAAI,IAAI,MAAM,SAAS,YAAY,KAAK,IAAI,MAAM,SAAS,SAAS,KAAK,IAAI,MAAM,SAAS,aAAa;AAAG,sBAAY,SAAS,IAAI;AAGrI,YAAI,IAAI,YAAY;AAAY,sBAAY,UAAU,IAAI,QAAQ;AAAA,MACnE;AAAA,IACD;AACA,QAAI,QAAQ,SAAS;AAAG,YAAM,IAAI,MAAM,qCAAqC,KAAK,gBAAgB,OAAO;AAEzG,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BD;AAEA,IAAO,uBAAQ;",
  "names": ["typeName"]
}
