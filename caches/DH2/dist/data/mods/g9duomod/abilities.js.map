{
  "version": 3,
  "sources": ["../../../../data/mods/g9duomod/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tobtrusive: {\r\n\t\tshortDesc: \"Blocks the Roulette Wheel for 3 turns; also wears off when switching out.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('obtrusive');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['obtrusive'];\r\n\t\t\tthis.add('-end', pokemon, 'Obtrusive', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Obtrusive');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Obtrusive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Obtrusive\",\r\n\t\trating: 1,\r\n\t\tnum: 9001,\r\n\t},\r\n\r\n\tqueenofroulette: {\r\n\t\tshortDesc: \"Spins the Roulette Wheel two additional times.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('queenofroulette');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['queenofroulette'];\r\n\t\t\tthis.add('-end', pokemon, 'Queen of Roulette', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Queen of Roulette');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Queen of Roulette');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Queen of Roulette\",\r\n\t\trating: 1,\r\n\t\tnum: 3009,\r\n\t},\r\n\r\n\thostabsorb: {\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (!move || !move.flags['contact'] || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t} // the 3 rows below this get deleted if there's issues\r\n\t\t\tfor (const target of attacker.side.foe.active) {\r\n\t\t\t\tif (target.hasType('Grass')) return;\r\n\t\t\t\tif (target.hasAbility('goodasgold') || target.hasAbility('Good as Gold')) return;\r\n\t\t\t\tif (target.hasAbility('magicabsorb') || target.hasAbility('Magic Absorb')) return;\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 100,\r\n\t\t\t\tvolatileStatus: 'leechseed',\r\n\t\t\t\tability: this.dex.abilities.get('hostabsorb'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tname: \"Host Absorb\",\r\n\t\tshortDesc: \"Contact moves inflict Leech Seed.\",\r\n\t\trating: 2,\r\n\t\tnum: 9002,\r\n\t},\r\n\r\n\tpoweroutage: {\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.boost({spe: -1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Power Outage\",\r\n\t\tshortDesc: \"Lowers Speed by 1 each turn.\",\r\n\t\trating: 4.5,\r\n\t\tnum: 9003,\r\n\t},\r\n\r\n\tblazingspirit: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Blazing Spirit', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'slp') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vital Spirit');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'slp') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vital Spirit');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Blazing Spirit\",\r\n\t\tshortDesc: \"Combines Vital Spirit, Intimidate, and Magic Guard.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 9004,\r\n\t},\r\n\r\n\tstickystarch: {\r\n\t\tonAnyTryMove(target, source, effect) {\r\n\t\t\tif (['teleport', 'chillyreception', 'voltswitch', 'uturn', 'flipturn', 'batonpass', 'shedtail'].includes(effect.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: Sticky Starch', effect, '[of] ' + target);\r\n\t\t\t\ttarget.addVolatile('partiallytrapped');\r\n\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sticky Starch\",\r\n\t\tshortDesc: \"Blocks and traps opponents when they use pivoting moves.\",\r\n\t\trating: 1,\r\n\t\tnum: 9005,\r\n\t},\r\n\r\n\tupdate: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-message', pokemon.name + \"'s current item: \" + pokemon.item + \"!\", '[identify]');\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Update', this.dex.items.get(pokemon.item).name, '[silent]');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) { return; }\r\n\t\t\tif (target !== source && move.type === 'Water' && target.hasItem('splashplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Fire' && target.hasItem('flameplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Grass' && target.hasItem('meadowplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Electric' && target.hasItem('zapplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Bug' && target.hasItem('insectplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Flying' && target.hasItem('skyplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Rock' && target.hasItem('stoneplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Ground' && target.hasItem('earthplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Fighting' && target.hasItem('fistplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Psychic' && target.hasItem('mindplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Poison' && target.hasItem('toxicplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Ghost' && target.hasItem('spookyplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Ice' && target.hasItem('icicleplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Dragon' && target.hasItem('dracoplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Steel' && target.hasItem('ironplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Dark' && target.hasItem('dreadplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (target !== source && move.type === 'Fairy' && target.hasItem('pixieplate')) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Update');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Update\",\r\n\t\tshortDesc: \"Grants the user an immunity depending on held plate; cannot bypass weaknesses.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 9006,\r\n\t},\r\n\r\n\tmagicabsorb: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category === 'Status' && target !== source && move.type !== 'Flying') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Magic Absorb');\r\n\t\t\t\tthis.heal(target.baseMaxhp / 4);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (move.flags['contact'] && (target.hp > 0) && (source.hasAbility('hostabsorb') || source.hasAbility('Host Absorb'))) {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Magic Absorb\",\r\n\t\tshortDesc: \"Blocks non-Flying status moves, heals the user for 25%.\",\r\n\t\trating: 5,\r\n\t\tnum: 9007,\r\n\t},\r\n\r\n\tunstableclaws: {\r\n\t\t// implemented in moves.ts - it'd be far easier on me to just code this directly into the move dire claws instead\r\n\t\tname: \"Unstable Claws\",\r\n\t\tshortDesc: \"If user's Dire Claws inflicts a status, changes type to match.\",\r\n\t\trating: 2,\r\n\t\tnum: 9008,\r\n\t},\r\n\r\n\tdrawfour: {\r\n\t\tshortDesc: \"After knocking out target, if user knows less than 12 moves, it learns target's moves.\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (damage >= target.hp) {\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tif (moveSlot === null) return;\r\n\t\t\t\t\tif (source.moveSlots.length < 12) {\r\n\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\tif (source.moveSlots.length < 0) return false;\r\n\t\t\t\t\t\tconst learnedMove = {\r\n\t\t\t\t\t\t\tmove: this.dex.moves.get(moveSlot.id),\r\n\t\t\t\t\t\t\tid: moveSlot.id,\r\n\t\t\t\t\t\t\tpp: moveSlot.pp,\r\n\t\t\t\t\t\t\tmaxpp: moveSlot.pp,\r\n\t\t\t\t\t\t\ttarget: moveSlot.target,\r\n\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsource.moveSlots[source.moveSlots.length] = learnedMove;\r\n\t\t\t\t\t\tsource.baseMoveSlots[source.moveSlots.length - 1] = learnedMove;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Draw Four\",\r\n\t\trating: 3,\r\n\t\tnum: 9009,\r\n\t},\r\n\r\n\tconduction: {\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (attacker.baseSpecies.baseSpecies !== 'gelsius' && attacker.baseSpecies.baseSpecies !== 'Gelsius') { return; }\r\n\t\t\tif (attacker.species.name === 'Gelsius-Subzero' || attacker.species.name === 'gelsiussubzero') { return; }\r\n\t\t\tif (attacker.species.name === 'Gelsius-Hundred' || attacker.species.name === 'gelsiushundred') { return; }\r\n\t\t\tif (attacker.hp && move.type === 'Ice') {\r\n\t\t\t\tthis.add('-message', `${attacker.name} is beginning to rapidly cool!`);\r\n\t\t\t\tattacker.formeChange('Gelsius-Subzero', this.effect, true);\r\n\t\t\t\tthis.add('-message', `${attacker.name} transformed!`);\r\n\t\t\t} else if (attacker.hp && move.type === 'Fire') {\r\n\t\t\t\tthis.add('-message', `${attacker.name} is beginning to rapidly heat up!`);\r\n\t\t\t\tattacker.formeChange('Gelsius-Hundred', this.effect, true);\r\n\t\t\t\tthis.add('-message', `${attacker.name} transformed!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Conduction\",\r\n\t\tshortDesc: \"If the user uses Ice or Fire move, transforms. Only works once.\",\r\n\t\trating: 2,\r\n\t\tnum: 9010,\r\n\t},\r\n\r\n\trespawnpunisher: {\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\tif (pokemon.ability != 'respawnpunisher') { return; }\r\n\t\t\t\tpokemon.addVolatile('respawnpunisher');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tfor (const targ of source.side.foe.active) {\r\n\t\t\t\tif (!targ.activeTurns) {\r\n\t\t\t\t\tif (source.ability != 'respawnpunisher') { return; }\r\n\t\t\t\t\tsource.addVolatile('respawnpunisher');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['respawnpunisher'];\r\n\t\t\tthis.add('-end', pokemon, 'Respawn Punisher', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Respawn Punisher');\r\n\t\t\t},\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Respawn Punisher', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Respawn Punisher\",\r\n\t\tshortDesc: \"If an enemy switches or faints, raises Atk/Sp. Atk by 1.3x.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 9011,\r\n\t},\r\n\r\n\tvent: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'impsaustor' && attacker.baseSpecies.baseSpecies !== 'Impsaustor') { return; }\r\n\t\t\tthis.add('-message', `You can now use Impostor Blade without drawback.`);\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 10 && target.hp + damage > target.maxhp / 10) {\r\n\t\t\t\tthis.add('-message', `${target.name} is gonna vent!`);\r\n\t\t\t\ttarget.switchFlag = true;\r\n\t\t\t\tthis.heal(target.baseMaxhp);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Vent\",\r\n\t\tshortDesc: \"Switches and fully heals the user if hit below 10%.\",\r\n\t\trating: 5,\r\n\t\tnum: 10000,\r\n\t},\r\n\r\n\tsupremeoverlord: {\r\n\t\tonModifyAtk(atk, source, target, move) {\r\n\t\t\tconst faintedAllies = source.side.pokemon.filter(ally => ally.fainted).length;\r\n\t\t\tif (faintedAllies < 1) return;\r\n\t\t\tthis.debug(`Supreme Overlord atk boost for ${faintedAllies} defeated allies.`);\r\n\t\t\t// Placeholder 1.1 -> 1.5\r\n\t\t\treturn this.chainModify(1 + (0.1 * faintedAllies));\r\n\t\t},\r\n\t\tonModifySpA(spa, source, target, move) {\r\n\t\t\tconst faintedAllies = source.side.pokemon.filter(ally => ally.fainted).length;\r\n\t\t\tif (faintedAllies < 1) return;\r\n\t\t\tthis.debug(`Supreme Overlord spa boost for ${faintedAllies} defeated allies.`);\r\n\t\t\t// Placeholder 1.1 -> 1.5\r\n\t\t\treturn this.chainModify(1 + (0.1 * faintedAllies));\r\n\t\t},\r\n\t\tname: \"Supreme Overlord\",\r\n\t\trating: 2.5,\r\n\t\tnum: 293,\r\n\t},\r\n\r\n\tangershell: {\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.boost({atk: 1, def: -1, spa: 1, spd: -1, spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Anger Shell\",\r\n\t\trating: 2,\r\n\t\tnum: 201,\r\n\t},\r\n\r\n\telectromorphosis: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.add('-activate', target, 'ability: Electromorphosis', '[move] ' + move.name);\r\n\t\t\ttarget.addVolatile('charge');\r\n\t\t},\r\n\t\tname: \"Electromorphosis\",\r\n\t\trating: 3,\r\n\t\tnum: 280,\r\n\t},\r\n\r\n\tgoodasgold: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category !== 'Status' || target === source) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-ability', target, 'Good as Gold');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tname: \"Good as Gold\",\r\n\t\trating: 2,\r\n\t\tnum: 283,\r\n\t},\r\n\r\n\teartheater: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Earth Eater');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Earth Eater\",\r\n\t\trating: 3,\r\n\t\tnum: 297,\r\n\t},\r\n\r\n\twellbakedbody: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tif (!this.boost({def: 2})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Well-Baked Body');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Well-Baked Body\",\r\n\t\trating: 2,\r\n\t\tnum: 273,\r\n\t},\r\n\r\n\tpurifyingsalt: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Purifying Salt');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Purifying Salt weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Purifying Salt weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1}, // TODO verify the assumption that this can be supprsed by Mold Breaker & friends\r\n\t\tname: \"Purifying Salt\",\r\n\t\trating: 2,\r\n\t\tnum: 272,\r\n\t},\r\n\r\n\tswordofruin: {\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Sword of Ruin\",\r\n\t\trating: 3,\r\n\t\tnum: 285,\r\n\t},\r\n\r\n\tgorillatactics: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityData.choiceLock && pokemon.abilityData.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Gorilla Tactics\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityData.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityData.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 1,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Gorilla Tactics Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityData.choiceLock) return;\r\n\t\t\tif (!pokemon.hasMove(pokemon.abilityData.choiceLock)) {\r\n\t\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityData.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t},\r\n\t\tname: \"Gorilla Tactics\",\r\n\t\trating: 4.5,\r\n\t\tnum: 255,\r\n\t},\r\n\r\n\tprankster: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Prankster\",\r\n\t\trating: 4,\r\n\t\tnum: 158,\r\n\t},\r\n\r\n\tdazzling: {\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && (move.priority > 0.1)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', dazzlingHolder, 'ability: Dazzling', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Dazzling\",\r\n\t\trating: 2.5,\r\n\t\tnum: 219,\r\n\t},\r\n\r\n\topportunist: {\r\n\t\tonFoeAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (effect?.name === 'Opportunist' || effect?.name === 'Mirror Herb') return;\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tconst positiveBoosts: Partial<BoostsTable> = {};\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! > 0) {\r\n\t\t\t\t\tpositiveBoosts[i] = boost[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (Object.keys(positiveBoosts).length < 1) return;\r\n\t\t\tthis.boost(positiveBoosts, pokemon);\r\n\t\t},\r\n\t\tname: \"Opportunist\",\r\n\t\trating: 3,\r\n\t\tnum: 290,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["attacker"]
}
