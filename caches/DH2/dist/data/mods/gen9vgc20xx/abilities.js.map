{
  "version": 3,
  "sources": ["../../../../data/mods/gen9vgc20xx/abilities.ts"],
  "sourcesContent": ["export const Abilities: { [abilityid: string]: ModdedAbilityData } = {\r\n \r\n\t// Start\r\n\tarmorpiercer: {\r\n\t\tshortDesc: \"Contact moves bypass Protect. 25% damage instead.\",\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tdelete move.flags['protect'];\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.flags['contact'] && target.volatiles['stall']) {\r\n\t\t\t\tthis.debug('Armor Piercer reduces damage against Stall');\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Armor Piercer\",\r\n\t\trating: 4,\r\n\t\tnum: -1,\r\n\t},\r\n\t//\r\n\thypergravity: {\r\n\t\tshortDesc: \"On switch-in: Gravity if user's HP is full.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (source.hp < source.maxhp) return;\r\n\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hyper Gravity\",\r\n\t\trating: 4,\r\n\t\tnum: -2,\r\n\t},\r\n\t//\r\n\tillwind: {\r\n\t\tshortDesc: \"Sets Tailwind when user replaces a fainted ally.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tpokemon.side.addSideCondition('tailwind');\r\n    \t},\r\n\t\tflags: {},\r\n\t\tname: \"Ill Wind\",\r\n\t\trating: 5,\r\n\t\tnum: -3,\r\n\t},\r\n\t//\r\n\tinflammation: {\r\n        shortDesc: \"Burns if dealing super-effective damage.\",\r\n        onSourceHit(target, source, move) {\r\n            if (!move || !target) return;\r\n            if (target !== source && move.category !== 'Status' && target.getMoveHitData(move).typeMod > 0) {\r\n                target.trySetStatus('brn', source);\r\n            }\r\n        },\r\n        flags: {},\r\n        name: \"Inflammation\",\r\n        rating: 3,\r\n        num: -4,\r\n    },\r\n\t//\r\n\tsharedmindset: {\r\n        desc: \"Applies opposite of negative stat changes to ally Mycecroak's opposite stat, and vice versa: (Atk/SpA, Def/SpD).\",\r\n        shortDesc: \"Atk/SpA & Def/SpD for Mycecroak, and vice versa.\",\r\n        onUpdate(pokemon) {\r\n            const partnermycecroak = pokemon.side.active.find(ally => ally.species.name === 'Mycecroak');\r\n            if (!partnermycecroak) return;\r\n            if (partnermycecroak) {\r\n                if (!partnermycecroak.volatiles['fungus']) {\r\n                    partnermycecroak.addVolatile('fungus')\r\n                }\r\n                if (!pokemon.volatiles['fungus']) {\r\n                    pokemon.addVolatile('fungus')\r\n                }\r\n            }\r\n        },\r\n        flags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n        name: \"Shared Mindset\",\r\n        rating: 3,\r\n        num: -5,\r\n    },\r\n\t//\r\n\tdesertmirage: {\r\n\t\tdesc: \"Sand: Ground/Flying, Rain: Ground/Water, Sun: Ground/Fire, Snow: Ground/Ice.\",\r\n\t\tshortDesc: \"Gains additional type in weather.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Dustform' || pokemon.transformed) return;\r\n\t\t\tlet forme = null;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformsunny') forme = 'Dustform-Sunny';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformrainy') forme = 'Dustform-Rainy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformsnowy') forme = 'Dustform-Snowy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'desertgales':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformsandy') forme = 'Dustform-Sandy';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (pokemon.species.id !== 'dustform') forme = 'Dustform';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (pokemon.isActive && forme) {\r\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"Desert Mirage\",\r\n\t\trating: 2,\r\n\t\tnum: -6,\r\n\t},\r\n\t//\r\n\tmindcontrol: {\r\n\t\tdesc: \"While this Pok\u00E9mon is present, all non-Dark-type Pok\u00E9mon are prevented from using the same move twice in a row.\",\r\n\t\tshortDesc: \"While present, non-Dark-types are under Torment.\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Mind Control');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (!pokemon.volatiles['torment'] && !pokemon.hasType('Dark') && pokemon !== source) {\r\n\t\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.source;\r\n\t\t\tif (!pokemon.volatiles['torment'] && !pokemon.hasType('Dark')  && pokemon !== source) {\r\n\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('mindcontrol')) return; \r\n\t\t\t}\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\ttarget.removeVolatile('torment');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mind Control\",\r\n\t\trating: 3.5,\r\n\t\tnum: -7,\r\n\t},\t\r\n\t//\r\n\tmalignant: {\r\n\t\tshortDesc: \"User's single-target status move -> spread move against opponent.\",\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (move.category === 'Status' && move.target === 'normal') {\r\n\t\t\t\tconst isOpponent = target && target.side !== source.side;\r\n\t\t\t\tif (isOpponent) {\r\n\t\t\t\t\tmove.target = 'allAdjacentFoes';\r\n\t\t\t\t\tthis.add('-ability', source, 'Malignant');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Malignant\",\r\n\t\trating: 3.5,\r\n\t\tnum: -8,\r\n\t},\r\n\t//\r\n\teternalice: {\r\n\t\tshortDesc: \"Moves last; immune to Fire and Fighting.\",\r\n\t\tonFractionalPriority: -0.1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.type === 'Fire' || move.type === 'Fighting') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Eternal Ice');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Eternal Ice\",\r\n\t\trating: 3.5,\r\n\t\tnum: -9,\r\n\t},\r\n\t//\r\n\tselfish: {\r\n\t\tshortDesc: \"Ally takes indirect damage instead.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType !== 'Move') {\r\n\t\t\t\tconst ally = target.side.active.find(ally => ally && ally !== target && !ally.fainted);\r\n\t\t\t\tif (ally) {\r\n\t\t\t\t\tthis.add('-ability', target, 'Selfish');\r\n\t\t\t\t\tthis.add('-message', `${target.name}'s Selfish redirects the damage to ${ally.name}!`);\r\n\t\t\t\t\tthis.damage(damage, ally, source, effect);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Selfish\",\r\n\t\trating: 3,\r\n\t\tnum: -10,\r\n\t},\t\r\n\t//\r\n\tancientcore: {\r\n\t\tshortDesc: \"Old gen phys/spec split; +20% power.\",\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\tif (move.category !== 'Status') {\r\n\t\t\tconst originalCategory = move.category; // New line\r\n\t\t\tswitch (move.type) {\r\n\t\t\t\tcase 'Grass':\r\n\t\t\t\tcase 'Fire':\r\n\t\t\t\tcase 'Water':\r\n\t\t\t\tcase 'Ice':\r\n\t\t\t\tcase 'Electric':\r\n\t\t\t\tcase 'Psychic':\r\n\t\t\t\tcase 'Dragon':\r\n\t\t\t\tcase 'Dark':\r\n\t\t\t\t\tmove.category = 'Special';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Bug':\r\n\t\t\t\tcase 'Ghost':\r\n\t\t\t\tcase 'Poison':\r\n\t\t\t\tcase 'Ground':\r\n\t\t\t\tcase 'Rock':\r\n\t\t\t\tcase 'Fighting':\r\n\t\t\t\tcase 'Normal':\r\n\t\t\t\tcase 'Flying':\r\n\t\t\t\tcase 'Steel':\r\n\t\t\t\tcase 'Fairy':\r\n\t\t\t\t\tmove.category = 'Physical';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// Apply 20% boost only if the category has changed\r\n\t\t\tif (move.category !== originalCategory) {\r\n\t\t\t\tmove.basePower = Math.floor(move.basePower * 1.2);\r\n\t\t\t\tthis.add('-message', `Ancient Core boosted ${move.name}'s power!`);\r\n\t\t\t}\r\n\t\t}\r\n\t\t},\r\n\t\tname: \"Ancient Core\",\r\n\t\trating: 2,\r\n\t\tnum: -11,\r\n\t},\r\n\t//\r\n\trewind: {\r\n\t\tshortDesc: \"Recovers items on user's side at 50% or below.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp - damage <= target.maxhp / 2) {\r\n\t\t\t\tthis.effectState.rewindTriggered = true; // Mark that the ability has been triggered\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\t// Check if the ability was triggered\r\n\t\t\tif (this.effectState.rewindTriggered) {\r\n\t\t\t\tthis.effectState.rewindTriggered = false; // Reset the trigger\r\n\t\t\t\t// Recover items from all Pok\u00E9mon on the user's side that don't already have an item\r\n\t\t\t\tfor (const ally of target.side.pokemon) {\r\n\t\t\t\t\tif (ally && !ally.item) { // Only recover items for allies without items\r\n\t\t\t\t\t\t// Use Recycle to recover the item\r\n\t\t\t\t\t\tthis.actions.useMove('Recycle', ally);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Rewind\",\r\n\t\trating: 4,\r\n\t\tnum: -12,\r\n\t},\r\n\t//\r\n\tweightbreaker: {\r\n\t\tshortDesc: \"Double damage if user's weight < target's weight.\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (source.weighthg < target.weighthg) {\r\n\t\t\t\tthis.debug('Weight Breaker boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Weight Breaker\",\r\n\t\trating: 3.5,\r\n\t\tnum: -13,\r\n\t},\t\r\n\t//\r\n\tpsynet: {\r\n\t\tshortDesc: \"Sets Psychic Terrain when hurt.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Psy Net\",\r\n\t\trating: 2,\r\n\t\tnum: -14,\r\n\t},\r\n\t//\r\n\tabnormal: {\r\n\t\tshortDesc: \"On user faint, attacker becomes Normal if it isn't already.\",\r\n\t\tonDamagingHitOrder: 1,\r\n    \tonDamagingHit(damage, target, source, move) {\r\n        \tif (target.hp <= 0 && source && source !== target && !source.hasType('Normal')) {\r\n            \tthis.add('-ability', target, 'Abnormal');\r\n            \tthis.add('-start', source, 'typechange', 'Normal', '[from] ability: Abnormal');\r\n            \tsource.setType('Normal');\r\n        \t}\r\n    \t},\r\n\t\tname: \"Abnormal\",\r\n\t\trating: 3,\r\n\t\tnum: -15,\r\n\t},\t\r\n\t//\r\n\tailuromancy: {\r\n\t\tshortDesc: \"Spotlight on entry.\",\r\n\t\t// Triggered when the Pok\u00E9mon with Ailuromancy switches in\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\t// Check if there is an ally present\r\n\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon);\r\n\t\t\tif (ally) {\r\n\t\t\t\t// Add the spotlight volatile to the ally\r\n\t\t\t\tally.addVolatile('spotlight');\r\n\t\t\t\tthis.add('-message', `${ally.name} is now in the spotlight!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ailuromancy\",\r\n\t\trating: 3,\r\n\t\tnum: -16,\r\n\t},\r\n\t//\r\n\tarchetype: {\r\n\t\tshortDesc: \"Gains opposite effect of target's lowered stat.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move && move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...foe.boosts };\r\n\t\t\t\t\t\tfoe.addVolatile('archetype', source);\r\n\t\t\t\t\t\tfoe.volatiles['archetype'].boosts = boosts;\r\n\t\t\t\t\t//\tthis.add('-start', foe, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t\t\t//\tthis.add('-message', `${foe.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'allAdjacent') {\r\n\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...adjacent.boosts };\r\n\t\t\t\t\t\tadjacent.addVolatile('archetype', source);\r\n\t\t\t\t\t\tadjacent.volatiles['archetype'].boosts = boosts;\r\n\t\t\t\t\t//\tthis.add('-start', adjacent, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t\t\t//\tthis.add('-message', `${adjacent.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'normal') {\r\n\t\t\t\tconst boosts = { ...target.boosts };\r\n\t\t\t\ttarget.addVolatile('archetype', source);\r\n\t\t\t\ttarget.volatiles['archetype'].boosts = boosts;\r\n\t\t\t//\tthis.add('-start', target, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t//\tthis.add('-message', `${target.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (target === source) return; // originally had \"target.fainted\" but its inclusion might be unnecessary, especially in VGC where if one ally faints, the other becomes unaffected by ability\r\n\t\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\ttype BoostStatistics = typeof stats[number];\r\n\t\t\tconst boostGains: Partial<Record<BoostStatistics, number>> = {};\r\n\t\r\n\t\t\tfor (const activeTarget of this.getAllActive()) {\r\n\t\t\t\tif (!activeTarget.volatiles['archetype']) continue;\r\n\t\r\n\t\t\t\tconst storedBoosts = activeTarget.volatiles['archetype'].boosts;\r\n\t\t\t\tconst currentBoosts = activeTarget.boosts;\r\n\t\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\tif (currentBoosts[stat] < storedBoosts[stat] || \r\n\t\t\t\t\t\t(currentBoosts[stat] < 0 && currentBoosts[stat] < storedBoosts[stat])) {\r\n\t\t\t\t\t\tconst difference = storedBoosts[stat] - currentBoosts[stat];\r\n\t\t\t\t\t\tboostGains[stat] = (boostGains[stat] || 0) + difference;\r\n\t\r\n\t\t\t\t\t//\tthis.add('-message', `${source.name} gains ${difference} ${stat} boost from ${activeTarget.name}'s lower boost.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdelete activeTarget.volatiles['archetype'];\r\n\t\t\t//\tthis.add('-end', activeTarget, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t}\r\n\t\r\n\t\t\t// Apply all boost gains at once and trigger visual display\r\n\t\t\tif (Object.keys(boostGains).length > 0) {\r\n\t\t\t\tthis.boost(boostGains, source, source, this.effect);\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tflags: {},\r\n\t\tname: \"Archetype\",\r\n\t\trating: 4,\r\n\t\tnum: -17,\r\n\t},\r\n\t//\r\n\thearth: {\r\n\t\tshortDesc: \"Ice does 50% less damage against user's side + 1/16 healing.\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Ice') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Hearth damage reduction from Ice-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Hearth, reducing damage from the Ice-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if the user or any ally is frozen\r\n\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tif (ally.status === 'frz') {\r\n\t\t\t\t\tthis.add('-activate', ally, 'ability: Hearth');\r\n\t\t\t\t\tally.cureStatus(); // Cure the frozen status for the ally\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t // Also check the user of the ability\r\n\t\t\t if (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Hearth');\r\n\t\t\t\tpokemon.cureStatus(); // Cure the frozen status for the user\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\t// Grant immunity to freeze for the user and their allies\r\n\t\t\tif (type === 'frz') {\r\n\t\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\t\tfor (const ally of allies) {\r\n\t\t\t\t\tif (ally === pokemon || ally.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.add('-immune', ally, 'ability: Hearth');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // Prevent the freeze status from being applied\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n    \tonResidual(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon && !ally.fainted);\r\n\t\t\t\tif (ally) {\r\n\t\t\t\t\tthis.heal(ally.baseMaxhp / 16, ally);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hearth\",\r\n\t\trating: 3,\r\n\t\tnum: -18,\r\n\t},\r\n\t//\r\n\tunderhanded: {\r\n\t\tshortDesc: \"50% more damage if user's stats lowered this turn.\",\r\n\t\tonBasePower(basePower, source) {\r\n\t\t\tif (source.statsLoweredThisTurn) {\r\n\t\t\t\tthis.debug('underhanded buff');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Underhanded\",\r\n\t\trating: 3,\r\n\t\tnum: -19,\r\n\t},\r\n\t// end\r\n\r\n\t// Changes to abilities\r\n\t// Start\r\n\tblaze: {\r\n\t\tshortDesc: \"Boosts Fire moves at 50% HP or less.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Blaze boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Blaze boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Blaze\",\r\n\t\trating: 2,\r\n\t\tnum: 66,\r\n\t},\r\n\t//\r\n\tcutecharm: {\r\n\t\tshortDesc: \"50% damage reduction if move's type = user's type.\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t// Check if the move's type matches the defender's type\r\n\t\t\tif (target.hasType(move.type)) {\r\n\t\t\t\tthis.debug('Cute Charm reducing damage due to type match');\r\n\t\t\t\treturn this.chainModify(0.5); // Reduce damage by 50%\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Cute Charm\",\r\n\t\trating: 0.5,\r\n\t\tnum: 56,\r\n\t},\r\n\t//\r\n\t/*emergencyexit: {\r\n\t\tshortDesc: \"Switch occurs after user's move at 50% HP or less.\",\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\r\n\t\t\t// Delay the switch-out until after the Pok\u00E9mon executes its move\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: Emergency Exit');\r\n\t\t},\r\n\t\tonAfterMove(pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && pokemon.switchFlag) {\r\n\t\t\t\t// Force the switch-out\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Emergency Exit');\r\n\t\t\t\tpokemon.switchFlag = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Emergency Exit\",\r\n\t\trating: 1,\r\n\t\tnum: 194,\r\n\t},*/\r\n\t//\r\n\tleafguard: {\r\n\t\tshortDesc: \"Sun: Status immunity + stat drop denial for user and ally.\",\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\t// Extend status immunity to the ally\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t//\tthis.add('-immune', target, '[from] ability: Leaf Guard (Ally)');\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-immune', target, 'ability: Leaf Guard', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\t// Extend Yawn immunity to the ally\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t//\tthis.add('-immune', target, '[from] ability: Leaf Guard (Ally)');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-immune', target, 'ability: Leaf Guard', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\t// Prevent stat drops for the user in Sunny weather\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tlet showMsg = false;\r\n\t\t\t\tlet i: BoostID;\r\n\t\t\t\tfor (i in boost) {\r\n\t\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add('-block', target, '[from] ability: Leaf Guard');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source)) return;\r\n\t\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tlet showMsg = false;\r\n\t\t\t\tlet i: BoostID;\r\n\t\t\t\tfor (i in boost) {\r\n\t\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Leaf Guard', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Leaf Guard\",\r\n\t\trating: 0.5,\r\n\t\tnum: 102,\r\n\t},\r\n\t//\r\n\tnormalize: {\r\n\t\tshortDesc: \"User's moves are Normal. 50% power boost.\",\r\n\t\tonModifyTypePriority: 1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'hiddenpower', 'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (!(move.isZ && move.category !== 'Status') && !noModifyType.includes(move.id) &&\r\n\t\t\t\t// TODO: Figure out actual interaction\r\n\t\t\t\t!(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Normal';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([6144, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Normalize\",\r\n\t\trating: 0,\r\n\t\tnum: 96,\r\n\t},\r\n\t//\r\n\tovergrow: {\r\n\t\tshortDesc: \"Boosts Grass moves at 50% HP or less.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Overgrow boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Overgrow boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Overgrow\",\r\n\t\trating: 2,\r\n\t\tnum: 65,\r\n\t},\r\n\t//\r\n\trivalry: {\r\n\t\tshortDesc: \"25% power boost if shared type.\",\r\n\t\tonBasePowerPriority: 24,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t// Check if the target shares a type with the attacker\r\n\t\t\tfor (const type of attacker.types) {\r\n\t\t\t\tif (defender.hasType(type)) {\r\n\t\t\t\t\tthis.debug('Rivalry boost due to shared type');\r\n\t\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rivalry\",\r\n\t\trating: 0,\r\n\t\tnum: 79,\r\n\t},\r\n\t//\r\n\tstancechange: {\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (\r\n\t\t\t\t(!attacker.species.name.startsWith('Aegislash') && !attacker.species.name.startsWith('Light')) || attacker.transformed\r\n\t\t\t) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;//if using a non-kings-shield status move, or if using Flurry\r\n\t\t\tif (attacker.species.name === 'Aegislash' || attacker.species.name === 'Aegislash-Blade') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else if (attacker.species.name === 'Aegislash-Light' || attacker.species.name === 'Aegislash-Blade-Light') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash-Light' : 'Aegislash-Blade-Light');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t\tthis.add('-message', `${attacker.name} changed to ${move.id === 'kingsshield' ? 'Shield Forme' : 'Blade Forme'}!`);\r\n\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Condana\r\n\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Stance Change\",\r\n\t\trating: 4,\r\n\t\tnum: 176,\r\n\t},\r\n\t//\r\n\tsteadfast: {\r\n\t\tshortDesc: \"On user's flinch: +1 Spe; Intimidate immunity.\",\r\n\t\tonFlinch(pokemon) {\r\n\t\t\tthis.boost({spe: 1});\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.name === 'Intimidate' && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Steadfast', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Steadfast\",\r\n\t\trating: 1,\r\n\t\tnum: 80,\r\n\t},\r\n\t//\r\n\tswarm: {\r\n\t\tshortDesc: \"Boosts Bug moves at 50% HP or less.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Swarm\",\r\n\t\trating: 2,\r\n\t\tnum: 68,\r\n\t},\r\n\t//\r\n\ttorrent: {\r\n\t\tshortDesc: \"Boosts Water moves at 50% HP or less.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Torrent boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Torrent boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Torrent\",\r\n\t\trating: 2,\r\n\t\tnum: 67,\r\n\t},\r\n\t// End\r\n\t\r\n};\r\n"],
  "mappings": "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",
  "names": ["ally"]
}
