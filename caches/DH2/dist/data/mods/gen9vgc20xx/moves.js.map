{
  "version": 3,
  "sources": ["../../../../data/mods/gen9vgc20xx/moves.ts"],
  "sourcesContent": ["export const Moves: { [moveid: string]: ModdedMoveData } = {\r\n\t\r\n\t// Changes to existing moves\r\n\taircannon: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"-1 target's Spe, 10% chance.\",\r\n\t\tname: \"Air Cannon\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Oblivion Wing\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tanguishcry: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Double damage if user's HP <= 50.\",\r\n\t\tname: \"Anguish Cry\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1, metronome: 1},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (pokemon.hp * 2 <= pokemon.maxhp) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Growl\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//\r\n\tbrainage: {\r\n\t\tnum: -3,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Traps user + target; pseudo Leech Seed.\",\r\n\t\tname: \"Brainage\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tvolatileStatus: 'brainage',\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Brainage');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 8,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tconst target = this.getAtSlot(pokemon.volatiles['brainage'].sourceSlot);\r\n\t\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\t\tthis.debug('Nothing to drain');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst damage = this.damage(pokemon.baseMaxhp / 8, pokemon, target);\r\n\t\t\t\tif (damage) {\r\n\t\t\t\t\tthis.heal(damage, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-message', `${source.name} is delighted!`);\r\n\t\t\tthis.add('-anim', source, \"Nasty Plot\");\r\n\t\t\tthis.add('-anim', source, \"Dream Eater\", target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tsource.addVolatile('trapped', target, move, 'trapper');\r\n\t\t\ttarget.addVolatile('trapped', source, move, 'trapper');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tflyingdive: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Double damage against grounded target.\",\r\n\t\tname: \"Flying Dive\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Brave Bird\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-fail', source, 'move: Flying Dive');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePower(basePower, source, target) {\r\n\t\t\tif (target.isGrounded()) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\thiddenwall: {\r\n\t\tnum: -5,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"On contact: -1 SpD. Protect.\",\r\n\t\tname: \"Hidden Wall\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {metronome: 1, noassist: 1, failcopycat: 1},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'hiddenwall',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'move: Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({spd: -1}, source, target, null); // Lowers the attacker's SpD by 1 stage\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({spd: -1}, source, target, null);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Rock\",\r\n\t},\t\r\n\t//\r\n\tmightyblow: {\r\n\t\tnum: -6,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Double damage if user's Atk > target's Atk.\",\r\n\t\tname: \"Mighty Blow\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Mega Punch\", target);\r\n\t\t},\r\n\t\tonBasePower(basePower, source, target) {\r\n\t\t\tconst userAttack = source.calculateStat('atk', source.boosts['atk']);\r\n\t\t\tconst targetAttack = target.calculateStat('atk', target.boosts['atk']);\r\n\t\t\tif (userAttack > targetAttack) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//\r\n\tparanoia: {\r\n\t\tnum: -7,  \r\n\t\taccuracy: 95,  \r\n\t\tbasePower: 0,  \r\n\t\tdamageCallback(pokemon, target) {\r\n\t\t\treturn this.clampIntRange(Math.floor(target.getUndynamaxedHP() / 4), 1);\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psychic\", target);\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\tif (!target) return;\t\t\r\n\t\t\t// Determine the best stat of the target\r\n\t\t\tconst bestStat = target.getBestStat(false, true) as keyof BoostsTable;\r\n\t\r\n\t\t\t// Create boosts object to lower the best stat\r\n\t\t\tconst boosts: Partial<BoostsTable> = {};\r\n\t\t\tboosts[bestStat] = -1;\r\n\t\t\tthis.boost(boosts, target);\r\n\t\t},\r\n\t\tshortDesc: \"Quarters targets' HP + lowers best stat.\",\r\n\t\tname: \"Paranoia\",  \r\n\t\tcategory: \"Special\",\r\n\t\tpp: 10,  \r\n\t\tpriority: 0,  \r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {},  \r\n\t\ttarget: \"allAdjacentFoes\",  \r\n\t\ttype: \"Bug\",  \r\n\t\tcontestType: \"Clever\", \r\n\t},\r\n\t//\r\n\t/*passiveaggressive: {\r\n\t\tnum: -8,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Passive Aggressive\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1}, // Can be stolen by Snatch\r\n\t\tvolatileStatus: 'passiveaggressive',\r\n\t\tcondition: {\r\n\t\t\tduration: 5, // Lasts for 5 turns\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'move: Passive Aggressive');\r\n\t\t\t},\r\n\t\t\tonAllyTryMove(target, source, move) {\r\n\t\t\t\t// Check if the user of Passive Aggressive is still on the field\r\n\t\t\t\tconst passiveAggressiveUser = this.effectState.source;\r\n\t\t\t\tif (!passiveAggressiveUser || passiveAggressiveUser.fainted || passiveAggressiveUser.side !== source.side) return;\r\n\t\r\n\t\t\t\t// Ensure the ally's move is a neutral priority status move\r\n\t\t\t\tif (\r\n\t\t\t\t\tsource.side === target.side &&\r\n\t\t\t\t\tsource !== target &&\r\n\t\t\t\t\tmove.category === 'Status' &&\r\n\t\t\t\t\tmove.priority === 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst type = move.type; // Get the type of the ally's status move\r\n\t\t\t\t\tif (!type) return;\r\n\t\r\n\t\t\t\t\tconst attackMove = this.dex.getActiveMove({\r\n\t\t\t\t\t\tbasePower: 60,\r\n\t\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\tflags: { protect: 1, mirror: 1 },\r\n\t\t\t\t\t\tname: `Passive Strike (${type})`,\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Passive Aggressive');\r\n\t\t\t\t\tthis.actions.useMove(attackMove, passiveAggressiveUser, target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Passive Aggressive');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},*/\r\n\t//\r\n\trefreeze: {\r\n\t\tnum: -9,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"50% healing. If user moves last, Snow.\",\r\n\t\tname: \"Refreeze\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\theal: [1, 2],\r\n\t\tonAfterMove(source) {\r\n\t\t\t// Check if the user moved last\r\n\t\t\tif (!this.queue.willAct()) {\r\n\t\t\t\tthis.field.setWeather('snow'); // Summon Snow if the user moved last\r\n\t\t\t\tthis.add('-weather', 'Snow', '[from] move: Refreeze');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ice\",\r\n\t},\t\r\n\t//\r\n\trecalibration: {\r\n\t\tnum: -10,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Boost acc and another stat based on target's best stat.\",\r\n\t\tname: \"Recalibration\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bypasssub: 1, allyanim: 1, metronome: 1},\r\n\t\tonHit(target, source) {\r\n\t\t\tif (!target) return;\r\n\t\t\tconst bestStat = target.getBestStat(false, true) as keyof BoostsTable;\r\n\t\t\tconst boosts: Partial<BoostsTable> = {accuracy: 1};\r\n\t\t\tboosts[bestStat] = 2;\r\n\t\t\tthis.boost(boosts, source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t//\r\n\tsandpit: {\r\n\t\tnum: -11,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Traps target + 1/8 chip damage.\",\r\n\t\tname: \"Sand Pit\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sand Tomb\", target);\r\n\t\t},\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//\r\n\tspiralpunch: {\r\n\t\tnum: -12,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Drain Punch clone.\",\r\n\t\tname: \"Spiral Punch\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, punch: 1, heal: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Whirlpool\", target);\r\n\t\t\tthis.add('-anim', source, \"Mega Punch\", target);\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//\r\n\tswarmingstrike: {\r\n\t\tnum: -13,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 30,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"+30 for each other unfainted Bug on the team.\",\r\n\t\tname: \"Swarming Strike\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Beat Up\", target);\r\n\t\t},\r\n\t\tonBasePower(basePower, source) {\r\n\t\t\tlet bugCount = 0;\r\n\t\r\n\t\t\t// Iterate through all Pok\u00E9mon in the user's party\r\n\t\t\tfor (const partyMember of source.side.pokemon) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tpartyMember !== source &&\r\n\t\t\t\t\t!partyMember.fainted &&\r\n\t\t\t\t\tpartyMember.hasType('Bug')\r\n\t\t\t\t) {\r\n\t\t\t\t\tbugCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Add 30 base power for each Bug-type Pok\u00E9mon in the party (excluding the user)\r\n\t\t\treturn basePower + bugCount * 30;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tsylvanpowder: {\r\n\t\tnum: -14,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"33% of putting target to sleep. Powder.\",\r\n\t\tname: \"Sylvan Powder\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, powder: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sleep Powder\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 33, // Might ask submitter to change it to 30% as no other move has 33% trigger chance\r\n\t\t\tstatus: 'slp',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\twukonginferno: {\r\n\t\tnum: -15,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Sets Sun.\",\r\n\t\tname: \"Wukong Inferno\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Overheat\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t},\t\r\n\t\tsecondary: {},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\t\r\n\tflotsamhook: {\r\n\t\tnum: -16,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Sets Water type Stealth Rock.\",\r\n\t\tname: \"Flotsam Hook\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dive\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('flotsamhookhazard');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('flotsamhookhazard');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\t//\r\n\tflotsamhookhazard: {\r\n\t\tnum: -17,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Water type Stealth Rock.\",\r\n\t\tname: \"Flotsam Hook Hazard\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, mustpressure: 1},\r\n\t\tsideCondition: 'flotsamhookhazard',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Flotsam Hook Hazard');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t/*\tconst waterHazard = this.dex.getActiveMove('Flotsam Hook Hazard');\r\n\t\t\t\twaterHazard.type = 'Water';*/\r\n\t\t\t\tconst typeMod = this.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('flotsamhookhazard')), -6, 6);\r\n\t\t\t\tthis.damage(pokemon.maxhp * Math.pow(2, typeMod) / 8);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Water\",\r\n\t//\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tconductivespell: {\r\n\t\tnum: -18,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Super effective against Ground.\",\r\n\t\tname: \"Conductive Spell\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hex\", target);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Electric'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Ground') return 1;\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tironpowder: {\r\n\t\tnum: -19,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Sets Grassy Terrain. Powder move.\",\r\n\t\tname: \"Iron Powder\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, powder: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Pollen Puff\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tstormslam: {\r\n\t\tnum: -20,\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 120,\r\n\t\tshortDesc: \"Hits all opposing Pkm. Sky Uppercut effect.\",\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Storm Slam\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Close Combat\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tpaleoblade: {\r\n\t\tnum: -21,\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 120,\r\n\t\tshortDesc: \"-1 Target's Spe, 30%. Hits in Sand.\",\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Paleo Blade\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Stone Axe\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tswitch (target?.effectiveWeather()) {\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tsandgeyser: {\r\n\t\tnum: -22,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 150,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tconst bp = move.basePower * pokemon.hp / pokemon.maxhp;\r\n\t\t\tthis.debug('BP: ' + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Sandstorm\");\r\n\t\t\tthis.add('-anim', source, \"Sandsear Storm\", target);\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Eruption clone.\",\r\n\t\tname: \"Sand Geyser\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\treverberation: {\r\n\t\tnum: -23,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Reverberation\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1, metronome: 1},\r\n\t\tshortDesc: \"Mini Earthquake follow-up at 60 BP.\",\r\n\t\tonAfterMove(source) {\r\n\t\t\tsource.addVolatile('quakingboom');\r\n\t\t\tthis.actions.useMove('earthquake', source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tearthquake: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (source && source.volatiles['quakingboom']) {\r\n\t\t\t\tmove.basePower = 60;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source) {\r\n\t\t\t// This function is called for each target hit by Earthquake\r\n\t\t\t// Check if the target is still alive\r\n\t\t\tif (target && target.hp > 0) {\r\n\t\t\t\t// Check how many active Pok\u00E9mon are still alive\r\n\t\t\t\tconst allTargets = this.getAllActive().filter(p => p && p.hp > 0);\r\n\t\t\t\t// If this is the last target being hit, remove the volatile\r\n\t\t\t\tif (allTargets.length === 1) {\r\n\t\t\t\t\tdelete source.volatiles['quakingboom'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t//\r\n\tmantisfists: {\r\n\t\tnum: -24,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 45,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mantis Fists\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1},\r\n\t\tshortDesc: \"Hits twice + no contact penalty.\",\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Focus Energy\");\r\n\t\t\tthis.add('-anim', source, \"Mega Punch\", target);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['contact'];\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\t\r\n\t// start\r\n\tautotomize: {\r\n\t\tnum: 475,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Autotomize\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tonTryHit(pokemon) {\r\n\t\t\tconst hasContrary = pokemon.hasAbility('contrary');\r\n\t\t\tif ((!hasContrary && pokemon.boosts.spe === 6) || (hasContrary && pokemon.boosts.spe === -6)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tspe: 2,\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tif (pokemon.weighthg > 1) {\r\n\t\t\t\tpokemon.weighthg = Math.max(1, pokemon.weighthg - 1000);\r\n\t\t\t\tthis.add('-start', pokemon, 'Autotomize');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Steel\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\tbelch: {\r\n\t\tnum: 562,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Belch\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, failmefirst: 1, nosleeptalk: 1, noassist: 1, failcopycat: 1, failmimic: 1, failinstruct: 1},\r\n\t\tonTry(pokemon) {\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\t// Check if the user has a Berry\r\n\t\t\tif (item.isBerry) {\r\n\t\t\t\tthis.add('-enditem', pokemon, item.name, '[from] move: Belch');\r\n\t\t\t\t// Trigger the Berry's effects\r\n\t\t\t\tif (this.singleEvent('Eat', item, null, pokemon, null, null)) {\r\n\t\t\t\t\tthis.runEvent('EatItem', pokemon, null, null, item);\r\n\t\t\t\t\tif (item.onEat) pokemon.ateBerry = true;\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.setItem('');\r\n\t\t\t} else if (!pokemon.ateBerry) {\r\n\t\t\t\t// If no Berry is available and hasn't eaten one before, fail the move\r\n\t\t\t\tthis.add('-fail', pokemon, 'move: Belch');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/*onDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.ateBerry) pokemon.disableMove('belch');\r\n\t\t},*/\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//\r\n\tbellydrum: {\r\n\t\tnum: 187,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Belly Drum\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tonHit(target) {\r\n\t\t\t// Check if the user has the Selfish ability\r\n\t\t\tif (target.hasAbility('selfish')) {\r\n\t\t\t\tconst ally = target.side.active.find(pokemon => pokemon && pokemon !== target && !pokemon.fainted);\r\n\t\t\t\tif (ally) {\r\n\t\t\t\t\t// If an ally exists, it loses 50% of its HP\r\n\t\t\t\t\tthis.directDamage(ally.maxhp / 2, ally, target);\r\n\t\t\t\t\tthis.add('-message', `${ally.name} lost HP due to ${target.name}'s Selfish ability!`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If no ally exists, the user loses HP as normal\r\n\t\t\t\t\tif (target.hp <= target.maxhp / 2 || target.boosts.atk >= 6 || target.maxhp === 1) { // Shedinja clause\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.directDamage(target.maxhp / 2);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Normal behavior for users without Selfish\r\n\t\t\t\tif (target.hp <= target.maxhp / 2 || target.boosts.atk >= 6 || target.maxhp === 1) { // Shedinja clause\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.directDamage(target.maxhp / 2);\r\n\t\t\t}\r\n\t\t\t// Boost attack by +12 regardless of who takes the damage\r\n\t\t\tthis.boost({atk: 12}, target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'heal'},\r\n\t\tcontestType: \"Cute\",\r\n\t},\t\r\n\t//\r\n\tblastburn: {\r\n\t\tnum: 307,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 150,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Blast Burn\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {recharge: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\tbounce: {\r\n\t\tnum: 340,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bounce\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {\r\n\t\t\tcontact: 1, charge: 1, protect: 1, mirror: 1, gravity: 1, distance: 1,\r\n\t\t\tmetronome: 1, nosleeptalk: 1, noassist: 1, failinstruct: 1,\r\n\t\t},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (['gust', 'twister', 'skyuppercut', 'thunder', 'hurricane', 'smackdown', 'thousandarrows', 'stormslam'].includes(move.id)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonSourceBasePower(basePower, target, source, move) {\r\n\t\t\t\tif (move.id === 'gust' || move.id === 'twister') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\t//\r\n\tbrine: {\r\n\t\tnum: 362,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Brine\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (target.hp * 2 <= target.maxhp) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//\r\n\tcourtchange: {\r\n\t\tnum: 756,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Court Change\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {mirror: 1, metronome: 1},\r\n\t\tonHitField(target, source) {\r\n\t\t\tconst sideConditions = [\r\n\t\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'flotsamhookhazard', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t\t];\r\n\t\t\tlet success = false;\r\n\t\t\tif (this.gameType === \"freeforall\") {\r\n\t\t\t\t// random integer from 1-3 inclusive\r\n\t\t\t\tconst offset = this.random(3) + 1;\r\n\t\t\t\t// the list of all sides in counterclockwise order\r\n\t\t\t\tconst sides = [this.sides[0], this.sides[2]!, this.sides[1], this.sides[3]!];\r\n\t\t\t\tconst temp: {[k: number]: typeof source.side.sideConditions} = {0: {}, 1: {}, 2: {}, 3: {}};\r\n\t\t\t\tfor (const side of sides) {\r\n\t\t\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\t\ttemp[side.n][id] = side.sideConditions[id];\r\n\t\t\t\t\t\tdelete side.sideConditions[id];\r\n\t\t\t\t\t\tconst effectName = this.dex.conditions.get(id).name;\r\n\t\t\t\t\t\tthis.add('-sideend', side, effectName, '[silent]');\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\t\tconst sourceSideConditions = temp[sides[i].n];\r\n\t\t\t\t\tconst targetSide = sides[(i + offset) % 4]; // the next side in rotation\r\n\t\t\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\t\t\ttargetSide.sideConditions[id] = sourceSideConditions[id];\r\n\t\t\t\t\t\tconst effectName = this.dex.conditions.get(id).name;\r\n\t\t\t\t\t\tlet layers = sourceSideConditions[id].layers || 1;\r\n\t\t\t\t\t\tfor (; layers > 0; layers--) this.add('-sidestart', targetSide, effectName, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst sourceSideConditions = source.side.sideConditions;\r\n\t\t\t\tconst targetSideConditions = source.side.foe.sideConditions;\r\n\t\t\t\tconst sourceTemp: typeof sourceSideConditions = {};\r\n\t\t\t\tconst targetTemp: typeof targetSideConditions = {};\r\n\t\t\t\tfor (const id in sourceSideConditions) {\r\n\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\tsourceTemp[id] = sourceSideConditions[id];\r\n\t\t\t\t\tdelete sourceSideConditions[id];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in targetSideConditions) {\r\n\t\t\t\t\tif (!sideConditions.includes(id)) continue;\r\n\t\t\t\t\ttargetTemp[id] = targetSideConditions[id];\r\n\t\t\t\t\tdelete targetSideConditions[id];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in sourceTemp) {\r\n\t\t\t\t\ttargetSideConditions[id] = sourceTemp[id];\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id in targetTemp) {\r\n\t\t\t\t\tsourceSideConditions[id] = targetTemp[id];\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-swapsideconditions');\r\n\t\t\t}\r\n\t\t\tif (!success) return false;\r\n\t\t\tthis.add('-activate', source, 'move: Court Change');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\t//\r\n\tcurse: {\r\n\t\tnum: 174,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Curse\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bypasssub: 1, metronome: 1},\r\n\t\tvolatileStatus: 'curse',\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (!source.hasType('Ghost')) {\r\n\t\t\t\tmove.target = move.nonGhostTarget as MoveTarget;\r\n\t\t\t} else if (source.isAlly(target)) {\r\n\t\t\t\tmove.target = 'randomNormal';\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (!source.hasType('Ghost')) {\r\n\t\t\t\tdelete move.volatileStatus;\r\n\t\t\t\tdelete move.onHit;\r\n\t\t\t\tmove.self = {boosts: {spe: -1, atk: 1, def: 1}};\r\n\t\t\t} else if (move.volatileStatus && target.volatiles['curse']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\tif (source.hasType('Ghost')) {\r\n\t\t\t\t// Check if the user has the Selfish ability\r\n\t\t\t\tif (source.hasAbility('selfish')) {\r\n\t\t\t\t\tconst ally = source.side.active.find(pokemon => pokemon && pokemon !== source && !pokemon.fainted);\r\n\t\t\t\t\tif (ally) {\r\n\t\t\t\t\t\tthis.directDamage(ally.maxhp / 2, ally, source);\r\n\t\t\t\t\t\tthis.add('-message', `${ally.name} lost HP due to ${source.name}'s Selfish ability!`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// If no ally exists, the user loses HP as normal\r\n\t\t\t\t\t\tthis.directDamage(source.maxhp / 2, source, source);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Normal behavior for Ghost types without Selfish\r\n\t\t\t\t\tthis.directDamage(source.maxhp / 2, source, source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Curse', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 12,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 4);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tnonGhostTarget: \"self\",\r\n\t\ttype: \"Ghost\",\r\n\t\tzMove: {effect: 'curse'},\r\n\t\tcontestType: \"Tough\",\r\n\t},\t\r\n\t//\r\n\tdefog: {\r\n\t\tnum: 432,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Defog\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'flotsamhookhazard',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'flotsamhookhazard',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: {boost: {accuracy: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\telectroball: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tlet ratio = Math.floor(pokemon.getStat('spe') / target.getStat('spe') * 10) / 10;\r\n\t\t\tif (!isFinite(ratio)) ratio = 0;\r\n\t\t\tlet bp = 40;\r\n\t\t\tif (ratio >= 1) bp = 60;\r\n\t\t\tif (ratio >= 1.5) bp = 80;\r\n\t\t\tif (ratio >= 2) bp = 100;\r\n\t\t\tif (ratio >= 3) bp = 120;\r\n\t\t\tif (ratio >= 4) bp = 150;\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t},\t\r\n\t//\r\n\texplosion: {\r\n\t\tnum: 153,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 250,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Explosion\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, noparentalbond: 1},\r\n\t\twillCrit: true,\r\n\t\tselfdestruct: \"always\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\t\r\n\t//\r\n\tfirepledge: {\r\n\t\tnum: 519,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(target, source, move) {\r\n\t\t\t// Check if the sourceEffect is a non-status, single-target Grass or Water move\r\n\t\t\tconst sourceMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\tif (\r\n\t\t\t\tsourceMove &&\r\n\t\t\t\t(sourceMove.type === 'Grass' || sourceMove.type === 'Water') &&\r\n\t\t\t\tsourceMove.category !== 'Status' &&\r\n\t\t\t\tsourceMove.target === 'normal'\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-combine');\r\n\t\t\t\treturn 150;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Fire Pledge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, pledgecombo: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tfor (const action of this.queue.list as MoveAction[]) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!action.move || !action.pokemon?.isActive ||\r\n\t\t\t\t\taction.pokemon.fainted || action.maxMove || action.zmove\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst partnerMove = this.dex.moves.get(action.move.id);\r\n\t\t\t\tif (\r\n\t\t\t\t\taction.pokemon.isAlly(source) &&\r\n\t\t\t\t\tpartnerMove.category !== 'Status' &&\r\n\t\t\t\t\t['Water', 'Grass'].includes(partnerMove.type)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.queue.prioritizeAction(action, move);\r\n\t\t\t\t\tthis.add('-waiting', source, action.pokemon);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source) {\r\n\t\t\tconst sourceMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\tif (\r\n\t\t\t\tsourceMove &&\r\n\t\t\t\tsourceMove.category !== 'Status' &&\r\n\t\t\t\tsourceMove.target === 'normal'\r\n\t\t\t) {\r\n\t\t\t\tif (sourceMove.type === 'Water') {\r\n\t\t\t\t\tmove.type = 'Water';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.sideCondition = 'waterpledge';\r\n\t\t\t\t}\r\n\t\t\t\tif (sourceMove.type === 'Grass') {\r\n\t\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.self = {sideCondition: 'firepledge'};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (source.getStat('atk', false, true) > source.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonSideStart(targetSide) {\r\n\t\t\t\tthis.add('-sidestart', targetSide, 'Fire Pledge');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 5,\r\n\t\t\tonResidualSubOrder: 1,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tif (!pokemon.hasType('Fire')) this.damage(pokemon.baseMaxhp / 8, pokemon);\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 8,\r\n\t\t\tonSideEnd(targetSide) {\r\n\t\t\t\tthis.add('-sideend', targetSide, 'Fire Pledge');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\tflameburst: {\r\n\t\tnum: 481,\r\n\t\taccuracy: 100,\r\n\t\tbasePower:80,\r\n\t\tcategory: \"Special\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Flame Burst\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tfor (const ally of target.adjacentAllies()) {\r\n\t\t\t\tthis.damage(ally.baseMaxhp / 16, ally, source, this.dex.conditions.get('Flame Burst'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tfor (const ally of target.adjacentAllies()) {\r\n\t\t\t\tthis.damage(ally.baseMaxhp / 16, ally, source, this.dex.conditions.get('Flame Burst'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\tfly: {\r\n\t\tnum: 19,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Fly\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {\r\n\t\t\tcontact: 1, charge: 1, protect: 1, mirror: 1, gravity: 1, distance: 1,\r\n\t\t\tmetronome: 1, nosleeptalk: 1, noassist: 1, failinstruct: 1,\r\n\t\t},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (['gust', 'twister', 'skyuppercut', 'thunder', 'hurricane', 'smackdown', 'thousandarrows', 'stormslam'].includes(move.id)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (move.id === 'gust' || move.id === 'twister') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t//\r\n\tfrenzyplant: {\r\n\t\tnum: 338,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 150,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Frenzy Plant\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {recharge: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tgrasspledge: {\r\n\t\tnum: 520,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(target, source, move) {\r\n\t\t\t// Check if the sourceEffect is a non-status, single-target Water or Fire move\r\n\t\t\tconst sourceMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\tif (\r\n\t\t\t\tsourceMove &&\r\n\t\t\t\t(sourceMove.type === 'Water' || sourceMove.type === 'Fire') &&\r\n\t\t\t\tsourceMove.category !== 'Status' &&\r\n\t\t\t\tsourceMove.target === 'normal'\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-combine');\r\n\t\t\t\treturn 150;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Grass Pledge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, pledgecombo: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tfor (const action of this.queue.list as MoveAction[]) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!action.move || !action.pokemon?.isActive ||\r\n\t\t\t\t\taction.pokemon.fainted || action.maxMove || action.zmove\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst partnerMove = this.dex.moves.get(action.move.id);\r\n\t\t\t\tif (\r\n\t\t\t\t\taction.pokemon.isAlly(source) &&\r\n\t\t\t\t\tpartnerMove.category !== 'Status' &&\r\n\t\t\t\t\t['Water', 'Fire'].includes(partnerMove.type)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.queue.prioritizeAction(action, move);\r\n\t\t\t\t\tthis.add('-waiting', source, action.pokemon);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source) {\r\n\t\t\tconst sourceMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\tif (\r\n\t\t\t\tsourceMove &&\r\n\t\t\t\tsourceMove.category !== 'Status' &&\r\n\t\t\t\tsourceMove.target === 'normal'\r\n\t\t\t) {\r\n\t\t\t\tif (sourceMove.type === 'Water') {\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.sideCondition = 'grasspledge';\r\n\t\t\t\t}\r\n\t\t\t\tif (sourceMove.type === 'Fire') {\r\n\t\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.self = {sideCondition: 'firepledge'};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (source.getStat('atk', false, true) > source.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonSideStart(targetSide) {\r\n\t\t\t\tthis.add('-sidestart', targetSide, 'Grass Pledge');\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 9,\r\n\t\t\tonSideEnd(targetSide) {\r\n\t\t\t\tthis.add('-sideend', targetSide, 'Grass Pledge');\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\thydrocannon: {\r\n\t\tnum: 308,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 150,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hydro Cannon\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {recharge: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\tirontail: {\r\n\t\tnum: 231,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Iron Tail\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tkingsshield: {\r\n\t\tnum: 588,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"King's Shield\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {noassist: 1, failcopycat: 1, failinstruct: 1},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'kingsshield',\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({atk: -1}, source, target, this.dex.getActiveMove(\"King's Shield\"));\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({atk: -1}, source, target, this.dex.getActiveMove(\"King's Shield\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Steel\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tmeditate: {\r\n\t\tnum: 96,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Meditate\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {boost: {atk: 1, spd: 1, spe: 1}},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\tmortalspin: {\r\n\t\tnum: 866,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 30,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mortal Spin\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'flotsamhookhazard'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Mortal Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\t//\r\n\tpurify: {\r\n\t\tnum: 685,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Purify\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, heal: 1, metronome: 1},\r\n\t\tonHit(target, source) {\r\n\t\t\tif (!target.cureStatus()) {\r\n\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.ceil(source.maxhp * 0.5), source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tzMove: {boost: {atk: 1, def: 1, spa: 1, spd: 1, spe: 1}},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\trapidspin: {\r\n\t\tnum: 229,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Rapid Spin\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'flotsamhookhazard'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'flotsamhookhazard'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspe: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\tsharpen: {\r\n\t\tnum: 159,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Sharpen\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {boost: {atk: 1}},\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\t//\r\n\tsmackdown: {\r\n\t\tnum: 479,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Smack Down\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1},\r\n\t\tvolatileStatus: 'smackdown',\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tlet applies = false;\r\n\t\t\t\tif (pokemon.hasType('Flying') || pokemon.hasAbility('levitate')) applies = true;\r\n\t\t\t\tif (pokemon.hasItem('ironball') || pokemon.volatiles['ingrain'] ||\r\n\t\t\t\t\tthis.field.getPseudoWeather('gravity')) applies = false;\r\n\t\t\t\tif (pokemon.removeVolatile('fly') || pokemon.removeVolatile('bounce')) {\r\n\t\t\t\t\tapplies = true;\r\n\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.volatiles['magnetrise']) {\r\n\t\t\t\t\tapplies = true;\r\n\t\t\t\t\tdelete pokemon.volatiles['magnetrise'];\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.volatiles['telekinesis']) {\r\n\t\t\t\t\tapplies = true;\r\n\t\t\t\t\tdelete pokemon.volatiles['telekinesis'];\r\n\t\t\t\t}\r\n\t\t\t\tif (!applies) return false;\r\n\t\t\t\tthis.add('-start', pokemon, 'Smack Down');\r\n\t\t\t},\r\n\t\t\tonRestart(pokemon) {\r\n\t\t\t\tif (pokemon.removeVolatile('fly') || pokemon.removeVolatile('bounce')) {\r\n\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Smack Down');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// groundedness implemented in battle.engine.js:BattlePokemon#isGrounded\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t// end\r\n\r\n\t// start: modifying Soak for Aegislash-Light to account for form change, letting it stay mono Water\r\n\tsoak: {\r\n\t\tnum: 487,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Soak\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1},\r\n\t\tonHit(target) {\r\n\t\t\tif (target.getTypes().join() === 'Water' || !target.setType('Water')) {\r\n\t\t\t\t// Soak should animate even when it fails.\r\n\t\t\t\t// Returning false would suppress the animation.\r\n\t\t\t\tthis.add('-fail', target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.add('-start', target, 'typechange', 'Water');\r\n\t\t\t\r\n\t\t\t// Apply soaktypedenial volatile if the target is Aegislash-Light or Grinsegrin\r\n\t\t\tif (target.species.name === 'Aegislash-Light' || target.species.name === 'Aegislash-Blade-Light') {\r\n\t\t\t\ttarget.addVolatile('soaktypedenial');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: {boost: {spa: 1}},\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\t//\r\n\tsubmission: {\r\n\t\tnum: 66,\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 150,\r\n\t\tcategory: \"Physical\",\r\n\t\tisNonstandard: null,\r\n\t\tname: \"Submission\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\trecoil: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\ttriplekick: {\r\n\t\tnum: 167,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Triple Kick\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tmultihit: 3,\r\n\t\tmultiaccuracy: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: {basePower: 120},\r\n\t\tmaxMove: {basePower: 80},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//\r\n\t/*waterpledge: {\r\n\t\tnum: 518,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(target, source, move) {\r\n\t\t\tif (['firepledge', 'grasspledge'].includes(move.sourceEffect)) {\r\n\t\t\t\tthis.add('-combine');\r\n\t\t\t\treturn 150;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Water Pledge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, pledgecombo: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tfor (const action of this.queue) {\r\n\t\t\t\tif (action.choice !== 'move') continue;\r\n\t\t\t\tconst otherMove = action.move;\r\n\t\t\t\tconst otherMoveUser = action.pokemon;\r\n\t\t\t\tif (\r\n\t\t\t\t\t!otherMove || !action.pokemon || !otherMoveUser.isActive ||\r\n\t\t\t\t\totherMoveUser.fainted || action.maxMove || action.zmove\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst partnerMove = this.dex.moves.get(otherMove.id);\r\n\t\t\t\tif (\r\n\t\t\t\t\totherMoveUser.isAlly(source) &&\r\n\t\t\t\t\tpartnerMove.category !== 'Status' &&\r\n\t\t\t\t\t['Fire', 'Grass'].includes(partnerMove.type)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.queue.prioritizeAction(action, move);\r\n\t\t\t\t\tthis.add('-waiting', source, otherMoveUser);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.sourceEffect) {\r\n\t\t\t\tconst partnerMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\t\tif (partnerMove.type === 'Grass') {\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.sideCondition = 'grasspledge';\r\n\t\t\t\t}\r\n\t\t\t\tif (partnerMove.type === 'Fire') {\r\n\t\t\t\t\tmove.type = 'Water';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.self = {sideCondition: 'waterpledge'};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonSideStart(targetSide) {\r\n\t\t\t\tthis.add('-sidestart', targetSide, 'Water Pledge');\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 7,\r\n\t\t\tonSideEnd(targetSide) {\r\n\t\t\t\tthis.add('-sideend', targetSide, 'Water Pledge');\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon) {\r\n\t\t\t\tif (move.secondaries && move.id !== 'secretpower') {\r\n\t\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\t\tif (pokemon.hasAbility('serenegrace') && secondary.volatileStatus === 'flinch') continue;\r\n\t\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},*/\r\n\t//\r\n\twaterpledge: {\r\n\t\tnum: 518,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(target, source, move) {\r\n\t\t\t// Check if the sourceEffect is a non-status, single-target Fire or Grass move\r\n\t\t\tconst sourceMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\tif (\r\n\t\t\t\tsourceMove &&\r\n\t\t\t\t(sourceMove.type === 'Fire' || sourceMove.type === 'Grass') &&\r\n\t\t\t\tsourceMove.category !== 'Status' &&\r\n\t\t\t\tsourceMove.target === 'normal'\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-combine');\r\n\t\t\t\treturn 150;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Water Pledge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1, metronome: 1, pledgecombo: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tfor (const action of this.queue) {\r\n\t\t\t\tif (action.choice !== 'move') continue;\r\n\t\t\t\tconst otherMove = action.move;\r\n\t\t\t\tconst otherMoveUser = action.pokemon;\r\n\t\t\t\tif (\r\n\t\t\t\t\t!otherMove || !action.pokemon || !otherMoveUser.isActive ||\r\n\t\t\t\t\totherMoveUser.fainted || action.maxMove || action.zmove\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// Check if the other move is a non-status, single-target Fire or Grass move\r\n\t\t\t\tconst otherMoveData = this.dex.moves.get(otherMove.id);\r\n\t\t\t\tif (\r\n\t\t\t\t\totherMoveUser.isAlly(source) &&\r\n\t\t\t\t\totherMoveData &&\r\n\t\t\t\t\t(otherMoveData.type === 'Fire' || otherMoveData.type === 'Grass') &&\r\n\t\t\t\t\totherMoveData.category !== 'Status' &&\r\n\t\t\t\t\totherMoveData.target === 'normal'\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.queue.prioritizeAction(action, move);\r\n\t\t\t\t\tthis.add('-waiting', source, otherMoveUser);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source) {\r\n\t\t\tconst sourceMove = this.dex.moves.get(move.sourceEffect);\r\n\t\t\tif (\r\n\t\t\t\tsourceMove &&\r\n\t\t\t\tsourceMove.category !== 'Status' &&\r\n\t\t\t\tsourceMove.target === 'normal'\r\n\t\t\t) {\r\n\t\t\t\tif (sourceMove.type === 'Grass') {\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.sideCondition = 'grasspledge';\r\n\t\t\t\t}\r\n\t\t\t\tif (sourceMove.type === 'Fire') {\r\n\t\t\t\t\tmove.type = 'Water';\r\n\t\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t\t\tmove.self = {sideCondition: 'waterpledge'};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (source.getStat('atk', false, true) > source.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonSideStart(targetSide) {\r\n\t\t\t\tthis.add('-sidestart', targetSide, 'Water Pledge');\r\n\t\t\t},\r\n\t\t\tonSideResidualOrder: 26,\r\n\t\t\tonSideResidualSubOrder: 7,\r\n\t\t\tonSideEnd(targetSide) {\r\n\t\t\t\tthis.add('-sideend', targetSide, 'Water Pledge');\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon) {\r\n\t\t\t\tif (move.secondaries && move.id !== 'secretpower') {\r\n\t\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\t\tif (pokemon.hasAbility('serenegrace') && secondary.volatileStatus === 'flinch') continue;\r\n\t\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//\r\n\twildcharge: {\r\n\t\tnum: 528,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Wild Charge\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\trecoil: [1, 4],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t// end\t\r\n\r\n\t// start: list of unattainable moves\r\n\tfrustration: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thail: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\tpursuit: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\treturn: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpower: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerfighting: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerfire: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowergrass: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerwater: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerelectric: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerice: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerpoison: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerground: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerpsychic: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerdark: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerbug: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerghost: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerdragon: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowersteel: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerflying: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerrock: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\t// end\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
