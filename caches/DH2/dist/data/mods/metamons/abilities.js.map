{
  "version": 3,
  "sources": ["../../../../data/mods/metamons/abilities.ts"],
  "sourcesContent": ["/*\r\nRatings and how they work:\r\n-1: Detrimental\r\n\t  An ability that severely harms the user.\r\n\tex. Defeatist, Slow Start\r\n 0: Useless\r\n\t  An ability with no overall benefit in a singles battle.\r\n\tex. Color Change, Plus\r\n 1: Ineffective\r\n\t  An ability that has minimal effect or is only useful in niche situations.\r\n\tex. Light Metal, Suction Cups\r\n 2: Useful\r\n\t  An ability that can be generally useful.\r\n\tex. Flame Body, Overcoat\r\n 3: Effective\r\n\t  An ability with a strong effect on the user or foe.\r\n\tex. Chlorophyll, Sturdy\r\n 4: Very useful\r\n\t  One of the more popular abilities. It requires minimal support to be effective.\r\n\tex. Adaptability, Magic Bounce\r\n 5: Essential\r\n\t  The sort of ability that defines metagames.\r\n\tex. Imposter, Shadow Tag\r\n*/\r\nexport const Abilities: {[abilityid: string]: AbilityData} = {\r\n/* Gen 7 MetaMons*/\r\n\tberserkgen7: {\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.boost({spa: 1});\r\n\t\t},\r\n\t\tname: \"Berserk-Gen 7\",\r\n\t\tshortDesc: \"This Pokemon's Sp. Atk is raised by 1 stage after it is damaged by a move.\",\r\n\t\trating: 2,\r\n\t\tnum: 201,\r\n\t},\r\n\tchimera: {\r\n\t\tonModifySpeciesPriority: 2,\r\n\t\tonModifySpecies(species, target, source, effect) {\r\n\t\t\tif (!target) return; \r\n\t\t\tif (effect && ['imposter', 'transform'].includes(effect.id)) return;\r\n\t\t\tconst types = [...new Set(target.baseMoveSlots.slice(0, 2).map(move => this.dex.moves.get(move.id).type))];\r\n\t\t\treturn {...species, types: types};\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.add('-start', pokemon, 'typechange', (pokemon.illusion || pokemon).getTypes(true).join('/'), '[silent]');\r\n\t\t},\r\n\t\tshortDesc: \"(Placeholder) User's type matches that of its first two moves (new type is displayed).\",\r\n\t\tname: \"Chimera\",\r\n\t\trating: 3,\r\n\t\tnum: -29,\r\n\t},\r\n\tfortress: {\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fighting' || move.type === 'Rock') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fortress\",\r\n\t\tshortDesc: \"The power of Fighting and Ground attacks against this Pokemon is halved.\",\r\n\t\trating: 2,\r\n\t\tnum: 85,\r\n\t},\r\n\tinfiltratorgen7: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'gmaxsteelsurge' || effect.id === 'spikes' || effect.id === 'stealthrock' || effect.id === 'stickyweb' || effect.id === 'toxicspikes') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Infiltrator-Gen 7\",\r\n\t\tshortDesc: \"Moves ignore substitutes/side conditions. This Pokemon is immune to hazards.\",\r\n\t\trating: 2.5,\r\n\t\tnum: 151,\r\n\t},\r\n\tlightrunner: {\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ground') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Light Runner\",\r\n\t\tshortDesc: \"The power of Ground-type attacks against this Pokemon is halved\",\r\n\t\trating: 2,\r\n\t\tnum: 85,\r\n\t},\r\n\tpersistence: {\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Persistence\",\r\n\t\tshortDesc: \"1.5x Defense when statused.\",\r\n\t\trating: 2.5,\r\n\t\tnum: 63,\r\n\t},\r\n\tpurepowergen7: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Pure Power boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Pure Power-Gen 7\",\r\n\t\tshortDesc: \"This Pokemon's moves of 60 power or less have 2x power, including Struggle.\",\r\n\t\trating: 5,\r\n\t\tnum: 74,\r\n\t},\r\n\t/* Gen 8 MetaMons*/\r\n\tunnerve: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Unnerve', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Unnerve\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Special attack of adjacent opponents by 1 stage.\",\r\n\t\trating: 1.5,\r\n\t\tnum: 127,\r\n\t},\r\n\tabyssalboost: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Dark') {\r\n\t\t\t\tthis.debug('Abyssal boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Dark') {\r\n\t\t\t\tthis.debug('Abyssal boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Abyssal Boost\",\r\n\t\tshortDesc: \"This Pokemon's attacking stat is multiplied by 1.5 while using a Dark-type attack.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 300,\r\n\t},\r\n\ttypesuction: {\r\n\t\tshortDesc: \"On switch-in adds the foes type(s).\",\r\n\t\tonStart(source) {\r\n\t\t\tconst newTypes = [];\r\n\t\t\tnewTypes.push(source.types[0]);\r\n\t\t\tif (source.types[1]) newTypes.push(source.types[1]);\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tfor (const type of target.types) {\r\n\t\t\t\t if (newTypes.includes(type) || type === '???') continue;\r\n\t\t\t\t\tnewTypes.push(type);\r\n\t\t\t\t}\r\n\t\t\t\tif (target.addedType && !newTypes.includes(target.addedType)) {\r\n\t\t\t\t\tnewTypes.push(target.addedType);\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', source, 'typeadd', '[from] ability: Type Suction', '[of] ' + source);\r\n\t\t\t\tsource.setType(newTypes);\r\n\t\t\t\tsource.knownType = target.side === source.side && target.knownType;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Type Suction\",\r\n\t\trating: 3.5,\r\n\t\tnum: 302,\r\n\t},\r\n\tflowerveil: {\r\n\t\tonAllyBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source)) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Flower Veil', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (source && target !== source && effect && effect.id !== 'yawn') {\r\n\t\t\t\tthis.debug('interrupting setStatus with Flower Veil');\r\n\t\t\t\tif (effect.id === 'synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Flower Veil', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.debug('Flower Veil blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Flower Veil', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flower Veil\",\r\n\t\trating: 0,\r\n\t\tnum: 166,\r\n\t},\r\n\tpillage: {\r\n\t\tid: \"pillage\",\r\n\t\tname: \"Pillage\",\r\n\t\tshortDesc: \"On switch-in, swaps ability with the opponent.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif ((pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) ||\r\n\t\t\tpokemon.species.id !== 'jellicent') {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tif (!this.effectState.switchingIn) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion', 'pillage',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'ecopy', 'lemegeton', 'modeshift', 'rebootsystem', 'concussion',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.setAbility('pillage', pokemon);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Pillage');\r\n\t\t\t\tthis.add('-activate', pokemon, 'Skill Swap', '', '', '[of] ' + target);\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + ability.name);\r\n\t\t\t\tthis.add('-activate', target, 'ability: Pillage');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdauntlessshieldgen8: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.boost({def: 1}, pokemon);\r\n\t\t},\r\n\t\tname: \"Dauntless Shield-Gen 8\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon's Defense is raised by 1 stage. Once per battle.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 235,\r\n\t},\r\n\tproteangen8: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Protean');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Protean-Gen 8\",\r\n\t\trating: 4.5,\r\n\t\tnum: 168,\r\n\t},\r\n\t/* Gen 9 MetaMons*/\r\n\trefrigerate: {\r\n\t\tshortDesc: \"Normal moves become Ice type and 1.2x power. Ice moves 1.5x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tmove.refrigerateBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.refrigerateBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Refrigerate boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Refrigerate boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Refrigerate\",\r\n\t\trating: 4,\r\n\t\tnum: 174,\r\n\t},\r\n\twiseeye: {\r\n\t\tshortDesc: \"This Pok\u00E9mon crits against opposing Pok\u00E9mon sharing a type with it.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target.hasType(source.getTypes())) return 5;\r\n\t\t},\r\n\t\tname: \"Wise Eye\",\r\n\t\trating: 3,\r\n\t},\r\n\tdancer: {\r\n\t\tname: \"Dancer\",\r\n\t\t// implemented in runMove in scripts.js\r\n\t   onModifyMove(move) {\r\n\t      if (!move.flags['dance'] || move.category === 'Status') return;\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t  move.category === 'Physical';\r\n\t\t\t} else if (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t     move.category === 'Special';\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 1.5,\r\n\t\tnum: 216,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["pokemon"]
}
