{
  "version": 3,
  "sources": ["../../../../data/mods/toho/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: MoveData} = {\r\n\t//vanilla moves\r\n\tbarrage: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 20,\r\n\t},\r\n\tleafstorm: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, wind: 1},\r\n\t},\r\n\thyperspacefury: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Junko: Lowers user's Def by 1; breaks protect.\",\r\n\t\tonTry(source) {\r\n\t\t\tif (source.species.name === 'Junko') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.hint(\"Only a Pokemon whose form is Junko can use this move.\");\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-fail', source, 'move: Hyperspace Fury');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tgigatonhammer: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, cantusetwice: 1, hammer: 1},\r\n\t},\r\n\thammerarm: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1, hammer: 1},\r\n\t},\r\n\ticehammer: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1, hammer: 1},\r\n\t},\r\n\tcrabhammer: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, hammer: 1},\r\n\t},\r\n\twoodhammer: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, hammer: 1},\r\n\t},\r\n\tdragonhammer: {\r\n\t\tinherit: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, hammer: 1},\r\n\t},\r\n\tsonicboom: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sonic Boom\",\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tblizzard: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow', 'blizzard'])) move.accuracy = true;\r\n\t\t},\r\n\t},\r\n\tpsychicterrain: {\r\n\t\tinherit: true,\r\n\t\tterrain: 'psychicterrain',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 4,\r\n\t\t\tonTryHit(target, source, effect) {\r\n\t\t\t\tif (effect && (effect.name === 'Lunatic Bullet' || effect.priority <= 0.1 || effect.target === 'self')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.isSemiInvulnerable() || target.isAlly(source)) return;\r\n\t\t\t\tif (!target.isGrounded()) {\r\n\t\t\t\t\tconst baseMove = this.dex.moves.get(effect.id);\r\n\t\t\t\t\tif (baseMove.priority > 0) {\r\n\t\t\t\t\t\tthis.hint(\"Psychic Terrain doesn't affect Pok\u00E9mon immune to Ground.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-activate', target, 'move: Psychic Terrain');\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Psychic' && attacker.isGrounded() && !attacker.isSemiInvulnerable()) {\r\n\t\t\t\t\tthis.debug('psychic terrain boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Psychic Terrain', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Psychic Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Psychic Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t// worldofnightmares field\r\n\twakeupslap: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'slp' || target.hasAbility('comatose') || target.hasAbility('worldofnightmares') || pokemon.hasAbility('worldofnightmares')) return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t},\r\n\tdreameater: {\r\n\t\tinherit: true,\r\n\t\tonTryImmunity(target, source) {\r\n\t\t\treturn target.status === 'slp' || target.hasAbility('comatose') || target.hasAbility('worldofnightmares') || source.hasAbility('worldofnightmares');\r\n\t\t},\r\n\t},\r\n\tnightmare: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.status !== 'slp' && !pokemon.hasAbility('comatose') && !pokemon.hasAbility('worldofnightmares')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', pokemon, 'Nightmare');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 9,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 4);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsleeptalk: {\r\n\t\tinherit: true,\r\n\t\tonTry(source) {\r\n\t\t\tlet usable = false;\r\n\t\t\tfor (const opponent of source.adjacentFoes()) {\r\n\t\t\t\tif (opponent.hasAbility('worldofnightmares')) {\r\n\t\t\t\t\tusable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn source.status === 'slp' || source.hasAbility('comatose') || usable;\r\n\t\t},\r\n\t},\r\n\tultrasleep: { //this move is only for worldofnightmares ability\r\n\t\tnum: -9999,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Ultrasleep\",\r\n\t\tpp: 5,\r\n\t\tpriority: -7,\r\n\t\tflags: { mirror: 1 },\r\n\t\tpseudoWeather: 'ultrasleep',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Persistent', effect);\r\n\t\t\t\t\treturn 7;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonStart(target, source) {\r\n\t\t\t\tthis.add('-fieldstart', 'move: Ultrasleep', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\t\tif (target.hasAbility('vitalspirit') || target.hasAbility('insomnia')) return;\r\n\t\t\t\tif (effect && ((effect as Move).status || effect.id === 'yawn')) {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Ultrasleep');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 23,\r\n\t\t\tonEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Ultrasleep');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: { boost: { accuracy: 1 } },\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\r\n\t//new moves\r\n\tfantasyseal: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Fantasy Seal\",\r\n\t\tshortDesc: \"Deals 1/16 max HP each turn; 1/8 on Dark, Ghost.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Salt Cure\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Fantasy Seal');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 13,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / (pokemon.hasType(['Dark', 'Ghost']) ? 8 : 16));\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Fantasy Seal');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'fantasyseal',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t},\r\n\tsilverblade: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Silver Blade\",\r\n\t\tshortDesc: \"High critical hit ratio.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, slicing: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Smart Strike\", target);\r\n\t\t},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tforbiddenbarrage: {\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Forbidden Barrage\",\r\n\t\tshortDesc: \"10% chance to make the target flinch.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Astral Barrage\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tlunaticbullet: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Lunatic Bullet\",\r\n\t\tshortDesc: \"Usually goes first. Bypasses Psychic Terrain.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psywave\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tnervepoison: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Nerve Poison\",\r\n\t\tshortDesc: \"30% chance to paralyse the target.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Clear Smog\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tironring: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Iron Ring\",\r\n\t\tshortDesc: \"Prevents the target from switching out.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Anchor Shot\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (source.isActive) target.addVolatile('trapped', source, move, 'trapper');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdivinestrike: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Divine Strike\",\r\n\t\tshortDesc: \"Always results in a critical hit.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, slicing: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Secret Sword\", target);\r\n\t\t},\r\n\t\twillCrit: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tattune: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Attune\",\r\n\t\tshortDesc: \"Raises the user's Attack, Special Attack, Accuracy by 1 stage.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Calm Mind\", target);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tspa: 1,\r\n\t\t\taccuracy: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tbodyswap: {\r\n\t\tnum: 0,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Body Swap\",\r\n\t\tshortDesc: \"Heals 1/2 of user's max HP. Changes Hecatia's forme.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Recover\", target);\r\n\t\t},\r\n\t\theal: [1, 2],\r\n\t\tonHit(target, pokemon, move) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies === 'Hecatia Lapislazuli' && !pokemon.transformed) {\r\n\t\t\t\tmove.willChangeForme = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.willChangeForme) {\r\n\t\t\t\tlet hecatiaForme;\r\n\t\t\t\tif (pokemon.species.id === 'hecatialapislazuli') hecatiaForme = \"-Earth\";\r\n\t\t\t\telse if (pokemon.species.id === 'hecatiaearth') hecatiaForme = \"-Moon\";\r\n\t\t\t\telse hecatiaForme = \" Lapislazuli\";\r\n\t\t\t\tpokemon.formeChange('Hecatia' + hecatiaForme, this.effect, false, '[msg]');\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\twillbreak: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Will Break\",\r\n\t\tshortDesc: \"(partially coded) Forces the target to switch to a random ally. Lowers the incoming ally's Attack by 1 stage.\",\r\n\t\tpp: 5,\r\n\t\tpriority: -6,\r\n\t\tflags: {reflectable: 1, mirror: 1, sound: 1, bypasssub: 1, allyanim: 1, metronome: 1, noassist: 1, failcopycat: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Roar\", target);\r\n\t\t},\r\n\t\tforceSwitch: true,\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('willbreak');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonSideEnd(targetSide) {\r\n\t\t\t\t//console.log(targetSide.active);\r\n\t\t\t\tthis.boost({atk: -1}, targetSide.active);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\texcavate: {\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 55,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Excavate\",\r\n\t\tshortDesc: \"Removes hazards from the user's side of the field. Gains effects depending on the hazards removed.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, bullet: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Throw\", target);\r\n\t\t},\r\n\t\tbeforeTurnCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('excavate');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonBeforeMovePriority: 100,\r\n\t\t\tonBeforeMove(pokemon) {\r\n\t\t\t\tthis.debug('removing hazards before attack');\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tswitch (condition) {\r\n\t\t\t\t\t\t\tcase 'spikes':\r\n\t\t\t\t\t\t\t\tpokemon.removedSpikes = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'toxicspikes':\r\n\t\t\t\t\t\t\t\tpokemon.removedTSpikes = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'stealthrock':\r\n\t\t\t\t\t\t\t\tpokemon.removedSR = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'stickyweb':\r\n\t\t\t\t\t\t\t\tpokemon.removedWebs = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'gmaxsteelsurge':\r\n\t\t\t\t\t\t\t\tpokemon.removedSteel = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Excavate', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon) {\r\n\t\t\t\tif(move.name !== 'Excavate') return;\r\n\t\t\t\tif(pokemon.removedSpikes) {\r\n\t\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\t\tchance: 100,\r\n\t\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\t\tdef: -1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(pokemon.removedTSpikes) {\r\n\t\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\t\tchance: 100,\r\n\t\t\t\t\t\tstatus: 'psn',\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(pokemon.removedSR) move.basePower = 110;\r\n\t\t\t\tif(pokemon.removedWebs) {\r\n\t\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\t\tchance: 100,\r\n\t\t\t\t\t\tonHit(target, source, move) {\r\n\t\t\t\t\t\t\tif (source.isActive) target.addVolatile('trapped', source, move, 'trapper');\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t} \r\n\t\t\t\tif(pokemon.removedSteel) move.willCrit = true;\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tpokemon.removedSpikes = false;\r\n\t\t\t\tpokemon.removedTSpikes = false;\r\n\t\t\t\tpokemon.removedSR = false;\r\n\t\t\t\tpokemon.removedWebs = false;\r\n\t\t\t\tpokemon.removedSteel = false;\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmissilebarrage: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 20,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Missile Barrage\",\r\n\t\tshortDesc: \"Hits 2-5 times in one turn.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Pin Missile\", target);\r\n\t\t},\r\n\t\tmultihit: [2, 5],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tzMove: {basePower: 140},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,QAAsC;AAAA;AAAA,EAElD,SAAS;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACV,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,MAAM,EAAC;AAAA,EACrD;AAAA,EACA,gBAAgB;AAAA,IACf,SAAS;AAAA,IACT,WAAW;AAAA,IACX,MAAM,QAAQ;AACb,UAAI,OAAO,QAAQ,SAAS,SAAS;AACpC;AAAA,MACD;AACA,WAAK,KAAK,uDAAuD;AACjE,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,uBAAuB;AACjD,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EACA,eAAe;AAAA,IACd,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,cAAc,GAAG,QAAQ,EAAC;AAAA,EACxE;AAAA,EACA,WAAW;AAAA,IACV,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,EAC7E;AAAA,EACA,WAAW;AAAA,IACV,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,EAC7E;AAAA,EACA,YAAY;AAAA,IACX,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,EACnE;AAAA,EACA,YAAY;AAAA,IACX,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,EACnE;AAAA,EACA,cAAc;AAAA,IACb,SAAS;AAAA,IACT,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,EACnE;AAAA,EACA,WAAW;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,OAAO,EAAC;AAAA,IACrD,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,UAAU;AAAA,IACT,SAAS;AAAA,IACT,aAAa,MAAM;AAClB,UAAI,KAAK,MAAM,UAAU,CAAC,QAAQ,QAAQ,UAAU,CAAC;AAAG,aAAK,WAAW;AAAA,IACzE;AAAA,EACD;AAAA,EACA,gBAAgB;AAAA,IACf,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,MACV,UAAU;AAAA,MACV,iBAAiB,QAAQ,QAAQ;AAChC,YAAI,QAAQ,QAAQ,iBAAiB,GAAG;AACvC,iBAAO;AAAA,QACR;AACA,eAAO;AAAA,MACR;AAAA,MACA,kBAAkB;AAAA,MAClB,SAAS,QAAQ,QAAQ,QAAQ;AAChC,YAAI,WAAW,OAAO,SAAS,oBAAoB,OAAO,YAAY,OAAO,OAAO,WAAW,SAAS;AACvG;AAAA,QACD;AACA,YAAI,OAAO,mBAAmB,KAAK,OAAO,OAAO,MAAM;AAAG;AAC1D,YAAI,CAAC,OAAO,WAAW,GAAG;AACzB,gBAAM,WAAW,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;AAC7C,cAAI,SAAS,WAAW,GAAG;AAC1B,iBAAK,KAAK,6DAA0D;AAAA,UACrE;AACA;AAAA,QACD;AACA,aAAK,IAAI,aAAa,QAAQ,uBAAuB;AACrD,eAAO;AAAA,MACR;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,WAAW,UAAU,UAAU,MAAM;AAChD,YAAI,KAAK,SAAS,aAAa,SAAS,WAAW,KAAK,CAAC,SAAS,mBAAmB,GAAG;AACvF,eAAK,MAAM,uBAAuB;AAClC,iBAAO,KAAK,YAAY,CAAC,MAAM,IAAI,CAAC;AAAA,QACrC;AAAA,MACD;AAAA,MACA,aAAa,OAAO,QAAQ,QAAQ;AACnC,YAAI,QAAQ,eAAe,WAAW;AACrC,eAAK,IAAI,eAAe,yBAAyB,qBAAqB,OAAO,MAAM,UAAU,MAAM;AAAA,QACpG,OAAO;AACN,eAAK,IAAI,eAAe,uBAAuB;AAAA,QAChD;AAAA,MACD;AAAA,MACA,sBAAsB;AAAA,MACtB,yBAAyB;AAAA,MACzB,aAAa;AACZ,aAAK,IAAI,aAAa,uBAAuB;AAAA,MAC9C;AAAA,IACD;AAAA,EACD;AAAA;AAAA,EAGA,YAAY;AAAA,IACX,SAAS;AAAA,IACT,kBAAkB,SAAS,QAAQ,MAAM;AACxC,UAAI,OAAO,WAAW,SAAS,OAAO,WAAW,UAAU,KAAK,OAAO,WAAW,mBAAmB,KAAK,QAAQ,WAAW,mBAAmB;AAAG,eAAO,KAAK,YAAY;AAC3K,aAAO,KAAK;AAAA,IACb;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX,SAAS;AAAA,IACT,cAAc,QAAQ,QAAQ;AAC7B,aAAO,OAAO,WAAW,SAAS,OAAO,WAAW,UAAU,KAAK,OAAO,WAAW,mBAAmB,KAAK,OAAO,WAAW,mBAAmB;AAAA,IACnJ;AAAA,EACD;AAAA,EACA,WAAW;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ,SAAS;AAChB,YAAI,QAAQ,WAAW,SAAS,CAAC,QAAQ,WAAW,UAAU,KAAK,CAAC,QAAQ,WAAW,mBAAmB,GAAG;AAC5G,iBAAO;AAAA,QACR;AACA,aAAK,IAAI,UAAU,SAAS,WAAW;AAAA,MACxC;AAAA,MACA,iBAAiB;AAAA,MACjB,WAAW,SAAS;AACnB,aAAK,OAAO,QAAQ,YAAY,CAAC;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EACA,WAAW;AAAA,IACV,SAAS;AAAA,IACT,MAAM,QAAQ;AACb,UAAI,SAAS;AACb,iBAAW,YAAY,OAAO,aAAa,GAAG;AAC7C,YAAI,SAAS,WAAW,mBAAmB,GAAG;AAC7C,mBAAS;AACT;AAAA,QACD;AAAA,MACD;AACA,aAAO,OAAO,WAAW,SAAS,OAAO,WAAW,UAAU,KAAK;AAAA,IACpE;AAAA,EACD;AAAA,EACA,YAAY;AAAA;AAAA,IACX,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAE,QAAQ,EAAE;AAAA,IACnB,eAAe;AAAA,IACf,WAAW;AAAA,MACV,UAAU;AAAA,MACV,iBAAiB,QAAQ,QAAQ;AAChC,YAAI,QAAQ,WAAW,YAAY,GAAG;AACrC,eAAK,IAAI,aAAa,QAAQ,uBAAuB,MAAM;AAC3D,iBAAO;AAAA,QACR;AACA,eAAO;AAAA,MACR;AAAA,MACA,QAAQ,QAAQ,QAAQ;AACvB,aAAK,IAAI,eAAe,oBAAoB,UAAU,MAAM;AAAA,MAC7D;AAAA,MACA,YAAY,QAAQ,QAAQ,QAAQ,QAAQ;AAC3C,YAAI,OAAO,WAAW,aAAa,KAAK,OAAO,WAAW,UAAU;AAAG;AACvE,YAAI,WAAY,OAAgB,UAAU,OAAO,OAAO,SAAS;AAChE,eAAK,IAAI,aAAa,QAAQ,kBAAkB;AAAA,QACjD;AACA,eAAO;AAAA,MACR;AAAA,MACA,iBAAiB;AAAA,MACjB,QAAQ;AACP,aAAK,IAAI,aAAa,kBAAkB;AAAA,MACzC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE;AAAA,IAChC,aAAa;AAAA,EACd;AAAA;AAAA,EAGA,aAAa;AAAA,IACZ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IAC3C,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,aAAa,MAAM;AAAA,IAC9C;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ,SAAS;AAChB,aAAK,IAAI,UAAU,SAAS,cAAc;AAAA,MAC3C;AAAA,MACA,iBAAiB;AAAA,MACjB,WAAW,SAAS;AACnB,aAAK,OAAO,QAAQ,aAAa,QAAQ,QAAQ,CAAC,QAAQ,OAAO,CAAC,IAAI,IAAI,GAAG;AAAA,MAC9E;AAAA,MACA,MAAM,SAAS;AACd,aAAK,IAAI,QAAQ,SAAS,cAAc;AAAA,MACzC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,EACP;AAAA,EACA,aAAa;AAAA,IACZ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IACnE,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,gBAAgB,MAAM;AAAA,IACjD;AAAA,IACA,WAAW;AAAA,IACX,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,kBAAkB;AAAA,IACjB,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,IACtD,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,kBAAkB,MAAM;AAAA,IACnD;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,eAAe;AAAA,IACd,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,IACtD,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,WAAW,MAAM;AAAA,IAC5C;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,aAAa;AAAA,IACZ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IAC3C,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,cAAc,MAAM;AAAA,IAC/C;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,UAAU;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IAC3C,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,eAAe,MAAM;AAAA,IAChD;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,MAAM,QAAQ,QAAQ,MAAM;AAC3B,YAAI,OAAO;AAAU,iBAAO,YAAY,WAAW,QAAQ,MAAM,SAAS;AAAA,MAC3E;AAAA,IACD;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,cAAc;AAAA,IACb,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IACnE,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,gBAAgB,MAAM;AAAA,IACjD;AAAA,IACA,UAAU;AAAA,IACV,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,QAAQ;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,QAAQ,GAAG,WAAW,EAAC;AAAA,IAC/B,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,aAAa,MAAM;AAAA,IAC9C;AAAA,IACA,QAAQ;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,MACL,UAAU;AAAA,IACX;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO,EAAC,QAAQ,qBAAoB;AAAA,IACpC,aAAa;AAAA,EACd;AAAA,EACA,UAAU;AAAA,IACT,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,QAAQ,GAAG,MAAM,GAAG,WAAW,EAAC;AAAA,IACxC,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,WAAW,MAAM;AAAA,IAC5C;AAAA,IACA,MAAM,CAAC,GAAG,CAAC;AAAA,IACX,MAAM,QAAQ,SAAS,MAAM;AAC5B,UAAI,QAAQ,YAAY,gBAAgB,yBAAyB,CAAC,QAAQ,aAAa;AACtF,aAAK,kBAAkB;AAAA,MACxB;AAAA,IACD;AAAA,IACA,yBAAyB,SAAS,QAAQ,MAAM;AAC/C,UAAI,KAAK,iBAAiB;AACzB,YAAI;AACJ,YAAI,QAAQ,QAAQ,OAAO;AAAsB,yBAAe;AAAA,iBACvD,QAAQ,QAAQ,OAAO;AAAgB,yBAAe;AAAA;AAC1D,yBAAe;AACpB,gBAAQ,YAAY,YAAY,cAAc,KAAK,QAAQ,OAAO,OAAO;AAAA,MAC1E;AAAA,IACD;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,WAAW;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,aAAa,GAAG,QAAQ,GAAG,OAAO,GAAG,WAAW,GAAG,UAAU,GAAG,WAAW,GAAG,UAAU,GAAG,aAAa,EAAC;AAAA,IACjH,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,QAAQ,MAAM;AAAA,IACzC;AAAA,IACA,aAAa;AAAA,IACb,MAAM;AAAA,MACL,MAAM,QAAQ;AACb,mBAAW,QAAQ,OAAO,KAAK,uBAAuB,GAAG;AACxD,eAAK,iBAAiB,WAAW;AAAA,QAClC;AAAA,MACD;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,UAAU;AAAA,MACV,UAAU,YAAY;AAErB,aAAK,MAAM,EAAC,KAAK,GAAE,GAAG,WAAW,MAAM;AAAA,MACxC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,EAAC;AAAA,IACvB,aAAa;AAAA,EACd;AAAA,EACA,UAAU;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,EAAC;AAAA,IAClE,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,cAAc,MAAM;AAAA,IAC/C;AAAA,IACA,mBAAmB,SAAS;AAC3B,cAAQ,YAAY,UAAU;AAAA,IAC/B;AAAA,IACA,WAAW;AAAA,MACV,UAAU;AAAA,MACV,sBAAsB;AAAA,MACtB,aAAa,SAAS;AACrB,aAAK,MAAM,gCAAgC;AAC3C,cAAM,iBAAiB,CAAC,UAAU,eAAe,eAAe,aAAa,gBAAgB;AAC7F,mBAAW,aAAa,gBAAgB;AACvC,cAAI,QAAQ,MAAM,QAAQ,KAAK,oBAAoB,SAAS,GAAG;AAC9D,oBAAQ,WAAW;AAAA,cAClB,KAAK;AACJ,wBAAQ,gBAAgB;AACxB;AAAA,cACD,KAAK;AACJ,wBAAQ,iBAAiB;AACzB;AAAA,cACD,KAAK;AACJ,wBAAQ,YAAY;AACpB;AAAA,cACD,KAAK;AACJ,wBAAQ,cAAc;AACtB;AAAA,cACD,KAAK;AACJ,wBAAQ,eAAe;AACvB;AAAA,YACF;AACA,iBAAK,IAAI,YAAY,QAAQ,MAAM,KAAK,IAAI,WAAW,IAAI,SAAS,EAAE,MAAM,yBAAyB,UAAU,OAAO;AAAA,UACvH;AAAA,QACD;AAAA,MACD;AAAA,MACA,aAAa,MAAM,SAAS;AAC3B,YAAG,KAAK,SAAS;AAAY;AAC7B,YAAG,QAAQ,eAAe;AACzB,cAAI,CAAC,KAAK;AAAa,iBAAK,cAAc,CAAC;AAC3C,eAAK,YAAY,KAAK;AAAA,YACrB,QAAQ;AAAA,YACR,QAAQ;AAAA,cACP,KAAK;AAAA,YACN;AAAA,UACD,CAAC;AAAA,QACF;AACA,YAAG,QAAQ,gBAAgB;AAC1B,cAAI,CAAC,KAAK;AAAa,iBAAK,cAAc,CAAC;AAC3C,eAAK,YAAY,KAAK;AAAA,YACrB,QAAQ;AAAA,YACR,QAAQ;AAAA,UACT,CAAC;AAAA,QACF;AACA,YAAG,QAAQ;AAAW,eAAK,YAAY;AACvC,YAAG,QAAQ,aAAa;AACvB,cAAI,CAAC,KAAK;AAAa,iBAAK,cAAc,CAAC;AAC3C,eAAK,YAAY,KAAK;AAAA,YACrB,QAAQ;AAAA,YACR,MAAM,QAAQ,QAAQA,OAAM;AAC3B,kBAAI,OAAO;AAAU,uBAAO,YAAY,WAAW,QAAQA,OAAM,SAAS;AAAA,YAC3E;AAAA,UACD,CAAC;AAAA,QACF;AACA,YAAG,QAAQ;AAAc,eAAK,WAAW;AAAA,MAC1C;AAAA,MACA,MAAM,SAAS;AACd,gBAAQ,gBAAgB;AACxB,gBAAQ,iBAAiB;AACzB,gBAAQ,YAAY;AACpB,gBAAQ,cAAc;AACtB,gBAAQ,eAAe;AAAA,MACxB;AAAA,IACD;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,aAAa;AAAA,EACd;AAAA,EACA,gBAAgB;AAAA,IACf,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,OAAO,EAAC,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,QAAQ,EAAC;AAAA,IACtD,aAAa,QAAQ,QAAQ,MAAM;AAClC,WAAK,aAAa,SAAS;AAC3B,WAAK,IAAI,SAAS,QAAQ,eAAe,MAAM;AAAA,IAChD;AAAA,IACA,UAAU,CAAC,GAAG,CAAC;AAAA,IACf,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO,EAAC,WAAW,IAAG;AAAA,IACtB,SAAS,EAAC,WAAW,IAAG;AAAA,IACxB,aAAa;AAAA,EACd;AACD;",
  "names": ["move"]
}
