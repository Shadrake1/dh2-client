{
  "version": 3,
  "sources": ["../../../../data/mods/toho/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: AbilityData} = {\r\n\tshadowshroud: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (pokemon !== target && move.type === 'Fairy') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Shadow Shroud');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\t//sun immunity implemented in scripts/pokemon\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Shadow Shroud\",\r\n\t\tshortDesc: \"This Pokemon is immune to Fairy-type moves and ignores the effects of sun.\",\r\n\t},\r\n\tchronoblade: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.flags['slicing'] && pokemon.hp >= pokemon.maxhp / 2) return priority + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chrono Blade\",\r\n\t\tshortDesc: \"This Pokemon's slicing moves have +1 priority while above half HP.\",\r\n\t},\r\n\tvampirism: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['bite']) { \r\n\t\t\t\tmove.drain ||= [1, 2];\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vampirism\",\r\n\t\tshortDesc: \"This Pokemon's biting moves heal 50% of the damage dealt.\",\r\n\t},\r\n\tfrozenworld: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('blizzard');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Frozen World\",\r\n\t\tshortDesc: \"On switchin, this Pokemon sets Blizzard.\",\r\n\t},\r\n\tshikigami: {\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.shikigami = false;\r\n\t\t\tfor (let i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tconst possibleTarget = pokemon.side.pokemon[i];\r\n\t\t\t\tconsole.log(possibleTarget.set);\r\n\t\t\t\tif (!possibleTarget.fainted && possibleTarget.set.ability === 'Shikigami Master') {\r\n\t\t\t\t\tpokemon.shikigami = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif(pokemon.shikigami) this.add('-message', `${pokemon.name}'s magical abilities are being enhanced!`);\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, attacker) {\r\n\t\t\tif(attacker.shikigami) return this.chainModify(2);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shikigami\",\r\n\t\tshortDesc: \"If a non-fainted teammate has Shikigami Master, this Pokemon's Sp. Atk is doubled.\",\r\n\t},\r\n\tshikigamimaster: {\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.master = false;\r\n\t\t\tfor (let i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tconst possibleTarget = pokemon.side.pokemon[i];\r\n\t\t\t\tif (!possibleTarget.fainted && possibleTarget.set.ability === 'Shikigami Grandmaster') {\r\n\t\t\t\t\tpokemon.master = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif(pokemon.master) this.boost({spe: 1}, pokemon);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shikigami Master\",\r\n\t\tshortDesc: \"If a non-fainted teammate has Shikigami Grandmaster, this Pokemon's Speed is raised by 1 on switchin.\",\r\n\t},\r\n\tshikigamigrandmaster: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Shikigami Grandmaster');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.isAlly(source)) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Shikigami Grandmaster\",\r\n\t\tshortDesc: \"If this Pokemon is the target of a foe's move, that move loses one additional PP.\",\r\n\t},\r\n\tdemonparade: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif(pokemon.adjacentFoes().length == 0) return;\r\n\t\t\tlet target = this.sample(pokemon.adjacentFoes());\r\n\t\t\tif (target.status) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Demon Parade\",\r\n\t\tshortDesc: \"If any Pok\u00E9mon on the opponent's side of the field is burned, this Pok\u00E9mon's Speed is doubled.\",\r\n\t},\r\n\tblindingsong: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.flags['sound'] && !pokemon.volatiles['dynamax']) { // hardcode\r\n\t\t\t\tmove.type = 'Dark';\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Blinding Song\",\r\n\t\tshortDesc: \"This Pokemon's sound-based moves become Dark type.\",\r\n\t},\r\n\tclearingstorm: {\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (move.flags['wind'] && !move.hasSheerForce) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] ability: Clearing Storm', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (move.flags['wind'] && !move.hasSheerForce) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] ability: Clearing Storm', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Clearing Storm\",\r\n\t\tshortDesc: \"This Pokemon's wind moves remove its side's hazards.\",\r\n\t},\r\n\tautumndecay: {\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category !== \"Status\" && move.flags['wind']) {\r\n\t\t\t\tthis.debug('Adding Autumn Decay poison');\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.status === 'psn') return;\r\n\t\t\t\t}\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tstatus: 'psn',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Autumn Decay\",\r\n\t\tshortDesc: \"This Pokemon's wind moves have a 100% chance to poison the target.\",\r\n\t},\r\n\tjealousy: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.target === 'normal' || move.target === 'any') {\r\n\t\t\t\treturn this.chainModify(Math.min(2, 1 + 0.1 * defender.positiveBoosts()));\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Jealousy\",\r\n\t\tshortDesc: \"This Pokemon's single-target attacks deal 10% more damage for each of the target's stat boosts, up to 100%.\",\r\n\t},\r\n\tdelusion: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion'] || this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Delusion\",\r\n\t\tshortDesc: \"This Pokemon heals 1/8 of its max HP at the end of each turn while confused or in Psychic Terrain.\",\r\n\t},\r\n\tsurprise: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Surprise', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Surprise\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Sp. Atk of opponents by 1 stage.\",\r\n\t},\r\n\twaterygrave: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.field.setWeather('raindance');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Watery Grave\",\r\n\t\tshortDesc: \"This Pokemon summons Rain Dance if it attacks and KOes another Pokemon.\",\r\n\t},\r\n\tmagicoverdrive: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Magic Overdrive\",\r\n\t\tshortDesc: \"In Psychic Terrain, this Pokemon's Special Attack is 1.3x; loses 1/8 max HP per turn.\",\r\n\t},\r\n\techo: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.flags['sound']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Echo');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.add('-immune', this.effectState.target, '[from] ability: Echo');\r\n\t\t\t}\r\n\t\t},\r\n\t\t// echo part implemented in runMove in scripts/actions\r\n\t\tflags: {},\r\n\t\tname: \"Echo\",\r\n\t\tshortDesc: \"After another Pok\u00E9mon uses a sound move, this Pok\u00E9mon uses the same move; Sound move immunity.\",\r\n\t},\r\n\thealbydesire: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ghost') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Heal by Desire');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Heal by Desire\",\r\n\t\tshortDesc: \"This Pok\u00E9mon heals 1/4 of its max HP when hit by Ghost moves; Ghost Immunity.\",\r\n\t},\r\n\tescapeartist: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tconst trappingMoves = ['thousandwaves', 'anchorshot', 'spiritshackle', 'jawlock', 'ironring'];\r\n\t\t\tif(move.volatileStatus === 'partiallytrapped' || trappingMoves.includes(move.id)) this.boost({spa: 1}, target);\r\n\t\t},\r\n\t\tonTrapPokemonPriority: -10,\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.trapped = pokemon.maybeTrapped = false;\r\n\t\t},\r\n\t\tname: \"Escape Artist\",\r\n\t\tshortDesc: \"This Pok\u00E9mon cannot be trapped; If hit by a move with that effect, its Sp. Attack is increased by 1 stage.\",\r\n\t},\r\n\tmiraclemallet: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.flags['hammer']) return priority + 1;\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.flags['hammer']) return this.chainModify(0.75);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Miracle Mallet\",\r\n\t\tshortDesc: \"This Pokemon's hammer moves have +1 priority but 0.75x power.\",\r\n\t},\r\n\tpristinerhythm: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('pristinerhythm');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.lastMove = '';\r\n\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t},\r\n\t\t\tonTryMovePriority: -2,\r\n\t\t\tonTryMove(pokemon, target, move) {\r\n\t\t\t\tif (!pokemon.hasAbility('pristinerhythm')) {\r\n\t\t\t\t\tpokemon.removeVolatile('pristinerhythm');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.callsMove) return;\r\n\t\t\t\tif (this.effectState.lastMove === move.id && pokemon.moveLastTurnResult) {\r\n\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t} else if (pokemon.volatiles['twoturnmove']) {\r\n\t\t\t\t\tif (this.effectState.lastMove !== move.id) {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.lastMove = move.id;\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tconst dmgMod = [4096, 4505, 4915, 5324, 5734, 6144];\r\n\t\t\t\tconst numConsecutive = this.effectState.numConsecutive > 5 ? 5 : this.effectState.numConsecutive;\r\n\t\t\t\tthis.debug(`Current Metronome boost: ${dmgMod[numConsecutive]}/4096`);\r\n\t\t\t\treturn this.chainModify([dmgMod[numConsecutive], 4096]);\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pristine Rhythm\",\r\n\t\tshortDesc: \"Damage of moves used on consecutive turns is increased. Max 1.5x after 5 turns.\",\r\n\t},\r\n\tworldofnightmares: {\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.getPseudoWeather('ultrasleep')) {\r\n\t\t\t\tthis.add('-ability', source, 'World of Nightmares');\r\n\t\t\t\t//this.hint(\"All Pokemon are under Comatose effect!\");\r\n\t\t\t\tthis.field.pseudoWeather.ultrasleep.source = source;\r\n\t\t\t\tthis.field.pseudoWeather.ultrasleep.duration = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-ability', source, 'World of Nightmares');\r\n\t\t\t\tthis.field.addPseudoWeather('ultrasleep');\r\n\t\t\t\t//this.hint(\"All Pokemon are under Comatose effect!\");\r\n\t\t\t\tthis.field.pseudoWeather.ultrasleep.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTryMove(target, source, move) {\r\n\t\t\tif (['ultrasleep'].includes(move.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: World of Nightmares', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 21,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('worldofnightmares')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.removePseudoWeather('ultrasleep');\r\n\t\t},\r\n\t\tname: \"World of Nightmares\",\r\n\t\tshortDesc: \"This pok\u00E9mon's opponents are considered asleep but are still able to move normally.\",\r\n\t},\r\n\tlunatictorch: {\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.isTerrain('psychicterrain') && pokemon.effectiveWeather() == '') this.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tif (this.field.isTerrain('psychicterrain') && pokemon.effectiveWeather() == '') this.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Lunatic Torch\",\r\n\t\tshortDesc: \"While Psychic Terrain is active, this Pokemon summons Sunny Day if there is no other weather.\",\r\n\t},\r\n\twinterchill: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow', 'blizzard'])) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Winter Chill\",\r\n\t\tshortDesc: \"If Snow/Blizzard is active, this Pok\u00E9mon's Special Attack is 1.3x.\",\r\n\t},\r\n\tfourseasons: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.id !== 'okinamatara' || pokemon.effectiveWeather() === '') return;\r\n\t\t\tlet newType = [];\r\n\t\t\tnewType.push(pokemon.baseSpecies.types[0]);\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\t\tcase 'sunnyday':\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\tnewType.push('Fire');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'raindance':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\tnewType.push('Water');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\tnewType.push('Rock');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hail':\r\n\t\t\t\tcase 'snow':\r\n\t\t\t\tcase 'blizzard':\r\n\t\t\t\t\tnewType.push('Ice');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.add('-ability', pokemon, 'Four Seasons');\r\n\t\t\tif(pokemon.setType(newType)) this.add('-start', pokemon, 'typechange', newType.join('/'));\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"Four Seasons\",\r\n\t\tshortDesc: \"If this Pokemon is Okina, its secondary type changes to match the active weather.\",\r\n\t},\r\n\thaniwaforces: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (!source.volatiles['substitute'] || move.category === 'Status' || move.multihit || move.flags['noparentalbond'] || move.flags['charge'] ||\r\n\t\t\tmove.flags['futuremove'] || move.spreadHit || move.isZ || move.isMax) return;\r\n\t\t\tmove.multihit = 2;\r\n\t\t\tmove.multihitType = 'parentalbond';\r\n\t\t},\r\n\t\t// Damage modifier implemented in BattleActions#modifyDamage()\r\n\t\tonSourceModifySecondaries(secondaries, target, source, move) {\r\n\t\t\tif (move.multihitType === 'parentalbond' && move.id === 'secretpower' && move.hit < 2) {\r\n\t\t\t\t// hack to prevent accidentally suppressing King's Rock/Razor Fang\r\n\t\t\t\treturn secondaries.filter(effect => effect.volatileStatus === 'flinch');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Haniwa Forces\",\r\n\t\tshortDesc: \"If this Pok\u00E9mon has a substitute, its attacks hit twice. The second hit's damage is quartered.\",\r\n\t},\r\n\tstampede: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tsource.addVolatile('stampede');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 2,\r\n\t\t\tonRestart() {\r\n\t\t\t\tthis.effectState.duration = 2;\r\n\t\t\t},\r\n\t\t\tonFractionalPriorityPriority: -1,\r\n\t\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t\tpokemon.removeVolatile('stampede');\r\n\t\t\t\t\treturn priority + 0.1;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stampede\",\r\n\t\tshortDesc: \"If this Pok\u00E9mon attacks and knocks out an opponent, its attack on the following turn goes first in its priority bracket.\",\r\n\t},\r\n\tblacksmoke: {\r\n\t\tname: \"Black Smoke\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of source.foes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Black Smoke');\r\n\t\t\t\t\t//this.add('-message', `${source.name} wants to have a fair fight!`);\r\n\t\t\t\t}\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tif (!pokemon.volatiles['blacksmoke']) {\r\n\t\t\t\t\tpokemon.addVolatile('blacksmoke');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tif (pokemon === source) return;\r\n\t\t\tfor (const target of source.foes()) {\r\n\t\t\t\tif (!target.volatiles['blacksmoke']) {\r\n\t\t\t\t\ttarget.addVolatile('blacksmoke');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\ttarget.removeVolatile('blacksmoke');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\t\tlet showMsg = false;\r\n\t\t\t\tlet i: BoostID;\r\n\t\t\t\tfor (i in boost) {\r\n\t\t\t\t\tif (boost[i]! > 0) {\r\n\t\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Black Smoke');\r\n\t\t\t\t\t//this.add('-message', `${target.name} can't change its stats!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Pokemon on the opponent's side cannot have their stats increased.\",\r\n\t},\r\n\townership: {\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif (!pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ownership');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Ownership\",\r\n\t\tshortDesc: \"This Pokemon cannot lose its item due to another Pok\u00E9mon's Ability or attack.\",\r\n\t},\r\n\tdragoneater: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ghost') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Dragon Eater');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Dragon Eater\",\r\n\t\tshortDesc: \"This Pok\u00E9mon heals 1/4 of its max HP when hit by Dragon moves; Dragon Immunity.\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["pokemon"]
}
