{
  "version": 3,
  "sources": ["../../../../data/mods/paleomons/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\tfirstflight: {\r\n\t\tname: \"First Flight\",\r\n\t\tshortDesc: \"User is considered airborne until hit with an attack. Resets upon switching out.\",\r\n\t\tonStart(target) {\r\n\t\t\tif (!this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-ability', target, 'First Flight');\r\n\t\t\t\ttarget.addVolatile('firstflight');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (target.volatiles['smackdown'] || target.volatiles['ingrain']) return false;\r\n\t\t\t\tthis.add('-start', target, 'First Flight', '[silent]');\r\n\t\t\t\tthis.add('-message', `${target.name} has flown for the first time!`);\r\n\t\t\t},\r\n\t\t\tonImmunity(type) {\r\n\t\t\t\tif (type === 'Ground') return false;\r\n\t\t\t},\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\ttarget.removeVolatile('firstflight');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'First Flight', '[silent]');\r\n\t\t\t\tthis.add('-message', `${target.name} crash-landed!`);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\theadbarrage: {\r\n\t\tname: \"Head Barrage\",\r\n\t\tshortDesc: \"All Special moves used by the user become physical and add 25% recoil.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif(move.category === 'Special') {\r\n\t\t\t\tif (!move.recoil) move.recoil = [1, 4];\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tleatherback: {\r\n\t\tname: \"Leatherback\",\r\n\t\tshortDesc: \"This Pokemon's Special Defense is raised one stage if hit by an Electric move; Electric immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spd: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leatherback');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t},\r\n\tspecterate: {\r\n\t\tname: \"Specterate\",\r\n\t\tshortDesc: \"This Pokemon's Normal-type moves become Ghost type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t},\r\n\tnightwatch: {\r\n\t\tname: \"Night Watch\",\r\n\t\tshortDesc: \"This Pokemon's attacks have 1.5x power against Dark types.\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif(target.hasType('Dark')) return this.chainModify(1.5);\r\n\t\t},\r\n\t},\r\n\tpermafrost: {\r\n\t\tname: \"Permafrost\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Permafrost');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s freezing aura turns water into ice!`);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.boost({spd: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeBeforeMovePriority: 13,\r\n\t\tonFoeBeforeMove(attacker, defender, move) {\r\n\t\t\tattacker.addVolatile('permafrost');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonModifyTypePriority: -1,\r\n\t\t\tonModifyType(move, pokemon) {\r\n\t\t\t\tif (move.type === 'Water') {\r\n\t\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAfterMove(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('permafrost');\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Water moves used against this Pokemon become Ice-type. +1 SpD when hit by Ice.\",\r\n\t\trating: 4,\r\n\t},\r\n\tsedimentary: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && ['raindance', 'primordialsea'].includes(attacker.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Sedimentary boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && ['raindance', 'primordialsea'].includes(attacker.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Sedimentary boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sedimentary\",\r\n\t\tshortDesc: \"This Pokemon's Bug-type moves have 1.5x power in Rain.\",\r\n\t},\r\n\r\n\tzenmode: {\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Eleffigy' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && pokemon.species.forme !== 'Zen') {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && pokemon.species.forme === 'Zen') {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Darmanitan-Zen\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (pokemon.species.baseSpecies === 'Eleffigy' && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.species.id !== 'eleffigyzen') pokemon.formeChange('Eleffigy-Zen');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (pokemon.species.forme === 'Zen') {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\tshortDesc: \"If Eleffigy, at end of turn changes Mode to Standard if > 1/2 max HP, else Zen.\",\r\n\t},\r\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,YAA8C;AAAA,EAC1D,aAAa;AAAA,IACZ,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ,QAAQ;AACf,UAAI,CAAC,KAAK,MAAM,iBAAiB,SAAS,GAAG;AAC5C,aAAK,IAAI,YAAY,QAAQ,cAAc;AAC3C,eAAO,YAAY,aAAa;AAAA,MACjC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,QAAQ,QAAQ;AACf,YAAI,OAAO,UAAU,WAAW,KAAK,OAAO,UAAU,SAAS;AAAG,iBAAO;AACzE,aAAK,IAAI,UAAU,QAAQ,gBAAgB,UAAU;AACrD,aAAK,IAAI,YAAY,GAAG,OAAO,oCAAoC;AAAA,MACpE;AAAA,MACA,WAAW,MAAM;AAChB,YAAI,SAAS;AAAU,iBAAO;AAAA,MAC/B;AAAA,MACA,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,eAAO,eAAe,aAAa;AAAA,MACpC;AAAA,MACA,MAAM,QAAQ;AACb,aAAK,IAAI,QAAQ,QAAQ,gBAAgB,UAAU;AACnD,aAAK,IAAI,YAAY,GAAG,OAAO,oBAAoB;AAAA,MACpD;AAAA,IACD;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ,MAAM;AAAA,IACN,WAAW;AAAA,IACX,aAAa,MAAM;AAClB,UAAG,KAAK,aAAa,WAAW;AAC/B,YAAI,CAAC,KAAK;AAAQ,eAAK,SAAS,CAAC,GAAG,CAAC;AACrC,aAAK,WAAW;AAAA,MACjB;AAAA,IACD;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ,MAAM;AAAA,IACN,WAAW;AAAA,IACX,SAAS,QAAQ,QAAQ,MAAM;AAC9B,UAAI,WAAW,UAAU,KAAK,SAAS,YAAY;AAClD,YAAI,CAAC,KAAK,MAAM,EAAC,KAAK,EAAC,CAAC,GAAG;AAC1B,eAAK,IAAI,WAAW,QAAQ,6BAA6B;AAAA,QAC1D;AACA,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,OAAO,EAAC,WAAW,EAAC;AAAA,EACrB;AAAA,EACA,YAAY;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,sBAAsB;AAAA,IACtB,aAAa,MAAM,SAAS;AAC3B,YAAM,eAAe;AAAA,QACpB;AAAA,QAAY;AAAA,QAAe;AAAA,QAAe;AAAA,QAAmB;AAAA,QAAe;AAAA,QAAgB;AAAA,MAC7F;AACA,UAAI,KAAK,SAAS,YAAY,CAAC,aAAa,SAAS,KAAK,EAAE,KAC3D,EAAE,KAAK,OAAO,KAAK,aAAa,aAAa,EAAE,KAAK,SAAS,gBAAgB,QAAQ,gBAAgB;AACrG,aAAK,OAAO;AACZ,aAAK,qBAAqB,KAAK;AAAA,MAChC;AAAA,IACD;AAAA,IACA,qBAAqB;AAAA,IACrB,YAAY,WAAW,SAAS,QAAQ,MAAM;AAC7C,UAAI,KAAK,uBAAuB,KAAK;AAAQ,eAAO,KAAK,YAAY,CAAC,MAAM,IAAI,CAAC;AAAA,IAClF;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,qBAAqB;AAAA,IACrB,YAAY,WAAW,SAAS,QAAQ,MAAM;AAC7C,UAAG,OAAO,QAAQ,MAAM;AAAG,eAAO,KAAK,YAAY,GAAG;AAAA,IACvD;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX,MAAM;AAAA,IACN,QAAQ,SAAS;AAChB,WAAK,IAAI,YAAY,SAAS,YAAY;AAC1C,WAAK,IAAI,YAAY,GAAG,QAAQ,4CAA4C;AAAA,IAC7E;AAAA,IACA,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,KAAK,SAAS,OAAO;AACxB,aAAK,MAAM,EAAC,KAAK,EAAC,CAAC;AAAA,MACpB;AAAA,IACD;AAAA,IACA,yBAAyB;AAAA,IACzB,gBAAgB,UAAU,UAAU,MAAM;AACzC,eAAS,YAAY,YAAY;AAAA,IAClC;AAAA,IACA,WAAW;AAAA,MACV,sBAAsB;AAAA,MACtB,aAAa,MAAM,SAAS;AAC3B,YAAI,KAAK,SAAS,SAAS;AAC1B,eAAK,OAAO;AAAA,QACb;AAAA,MACD;AAAA,MACA,YAAY,SAAS;AACpB,gBAAQ,eAAe,YAAY;AAAA,MACpC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,IACX,QAAQ;AAAA,EACT;AAAA,EACA,aAAa;AAAA,IACZ,qBAAqB;AAAA,IACrB,YAAY,KAAK,UAAU,UAAU,MAAM;AAC1C,UAAI,KAAK,SAAS,SAAS,CAAC,aAAa,eAAe,EAAE,SAAS,SAAS,iBAAiB,CAAC,GAAG;AAChG,aAAK,MAAM,mBAAmB;AAC9B,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,qBAAqB;AAAA,IACrB,YAAY,KAAK,UAAU,UAAU,MAAM;AAC1C,UAAI,KAAK,SAAS,SAAS,CAAC,aAAa,eAAe,EAAE,SAAS,SAAS,iBAAiB,CAAC,GAAG;AAChG,aAAK,MAAM,mBAAmB;AAC9B,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EAEA,SAAS;AAAA,IACR,iBAAiB;AAAA,IACjB,WAAW,SAAS;AACnB,UAAI,QAAQ,YAAY,gBAAgB,cAAc,QAAQ,aAAa;AAC1E;AAAA,MACD;AACA,UAAI,QAAQ,MAAM,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,UAAU,OAAO;AACvE,gBAAQ,YAAY,SAAS;AAAA,MAC9B,WAAW,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,UAAU,OAAO;AAC7E,gBAAQ,YAAY,SAAS;AAC7B,gBAAQ,eAAe,SAAS;AAAA,MACjC;AAAA,IACD;AAAA,IACA,MAAM,SAAS;AACd,UAAI,CAAC,QAAQ,UAAU,SAAS,KAAK,CAAC,QAAQ;AAAI;AAClD,cAAQ,cAAc;AACtB,aAAO,QAAQ,UAAU,SAAS;AAClC,UAAI,QAAQ,QAAQ,gBAAgB,cAAc,QAAQ,QAAQ,YAAY;AAC7E,gBAAQ,YAAY,QAAQ,QAAQ,YAAsB,KAAK,QAAQ,OAAO,UAAU;AAAA,MACzF;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,QAAQ,SAAS;AAChB,YAAI,QAAQ,QAAQ,OAAO;AAAe,kBAAQ,YAAY,cAAc;AAAA,MAC7E;AAAA,MACA,MAAM,SAAS;AACd,YAAI,QAAQ,QAAQ,UAAU,OAAO;AACpC,kBAAQ,YAAY,QAAQ,QAAQ,UAAoB;AAAA,QACzD;AAAA,MACD;AAAA,IACD;AAAA,IACA,OAAO,EAAC,cAAc,GAAG,YAAY,GAAG,WAAW,GAAG,SAAS,GAAG,eAAe,GAAG,cAAc,EAAC;AAAA,IACnG,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AACD;",
  "names": []
}
