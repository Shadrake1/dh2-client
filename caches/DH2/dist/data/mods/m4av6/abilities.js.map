{
  "version": 3,
  "sources": ["../../../../data/mods/m4av6/abilities.ts"],
  "sourcesContent": ["const hyperspaceLookup = {\r\n\tmewtwo: { move: \"Psystrike\" },\r\n\tlugia: { move: \"Aeroblast\" },\r\n\thooh: { move: \"Sacred Fire\" },\r\n\tgroudon: { move: \"Precipice Blades\" },\r\n\tkyogre: { move: \"Origin Pulse\" },\r\n\trayquaza: { move: \"Dragon Ascent\" },\r\n\tdialga: { move: \"Roar of Time\" },\r\n\tpalkia: { move: \"Spacial Rend\" },\r\n\tgiratinaorigin: { move: \"Shadow Force\" },\r\n\treshiram: { move: \"Blue Flare\" },\r\n\tzekrom: { move: \"Bolt Strike\" },\r\n\tkyurem: { move: \"Glaciate\" },\r\n\txerneas: { move: \"Geomancy\" },\r\n\tyveltal: { move: \"Oblivion Wing\" },\r\n\tzygardecomplete: { move: \"Core Enforcer\" },\r\n\tcosmog: { move: \"Teleport\" },\r\n\tsolgaleo: { move: \"Sunsteel Strike\" },\r\n\tlunala: { move: \"Moongeist Beam\" },\r\n\tnecrozmaultra: { move: \"Light That Burns the Sky\" },\r\n\tzaciancrowned: { move: \"Behemoth Blade\" },\r\n\tzamazentacrowned: { move: \"Behemoth Bash\" },\r\n\teternatus: { move: \"Eternabeam\" },\r\n\tcalyrexice: { move: \"Glacial Lance\" },\r\n\tcalyrexshadow: { move: \"Astral Barrage\" },\r\n};\r\nexport const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tgraviton: {\r\n\t\tshortDesc: \"On switch-in, this Pok\u00E9mon summons Gravity.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t},\r\n\t\tname: \"Graviton\",\r\n\t\trating: 4,\r\n\t\tnum: -1,\r\n\t},\r\n\tignite: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's Normal-type moves become Fire-type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tname: \"Ignite\",\r\n\t\trating: 4,\r\n\t\tnum: -2,\r\n\t},\r\n\tdowntoearth: {\r\n\t\tshortDesc: \"While this Pok\u00E9mon is active, the effects of terrains are disabled.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (!this.field.isTerrain('')) {\r\n\t\t\t\tthis.add('-ability', source, 'Down-to-Earth');\r\n\t\t\t\tthis.add('-message', `${source.name} suppresses the effects of the terrain!`);\r\n\t\t\t\tthis.eachEvent('TerrainChange', this.effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTerrainStart(target, source, terrain) {\r\n\t\t\tthis.add('-ability', this.effectState.target, 'Down-to-Earth');\r\n\t\t\tthis.add('-message', `${this.effectState.target.name} suppresses the effects of the terrain!`);\r\n\t\t},\r\n\t\tonEnd(source) {\r\n\t\t\tif (!this.field.isTerrain('')) this.add('-message', `${source.name} is no longer suppressing the effects of the terrain!`);\r\n\t\t\tsource.m.forceCustomBlock = true;\r\n\t\t\tif (!this.getAllActive().some(x => (x.hasAbility('downtoearth') && x !== source))) this.eachEvent('TerrainChange', this.effect);\r\n\t\t\tsource.m.forceCustomBlock = null;\r\n\t\t},\r\n\t\tname: \"Down-to-Earth\",\r\n\t\trating: 2,\r\n\t\tnum: -3,\r\n\t},\r\n\t// modded for Down-to-Earth and Acidic Surge\r\n\tmimicry: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.getAllActive().some(x => x.hasAbility('downtoearth') && !x.m.forceCustomBlock)) return;\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tlet types;\r\n\t\t\tif (this.getAllActive().some(x => x.hasAbility('downtoearth') && !x.m.forceCustomBlock)) {\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (this.field.terrain) {\r\n\t\t\t\t\tcase 'electricterrain':\r\n\t\t\t\t\t\ttypes = ['Electric'];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'grassyterrain':\r\n\t\t\t\t\t\ttypes = ['Grass'];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mistyterrain':\r\n\t\t\t\t\t\ttypes = ['Fairy'];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'psychicterrain':\r\n\t\t\t\t\t\ttypes = ['Psychic'];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'acidicterrain':\r\n\t\t\t\t\t\ttypes = ['Poison'];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst oldTypes = pokemon.getTypes();\r\n\t\t\tif (oldTypes.join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\tif ((this.field.terrain || pokemon.transformed) && !(this.getAllActive().some(x => x.hasAbility('downtoearth') && !x.m.forceCustomBlock))) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'), '[from] ability: Mimicry');\r\n\t\t\t\tif (!this.field.terrain) this.hint(\"Transform Mimicry changes you to your original un-transformed types.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Mimicry');\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tarenarock: {\r\n\t\tdesc: \"On switch-in, the field becomes Grassy Terrain. This terrain remains in effect until this Ability is no longer active for any Pok\u00E9mon.\",\r\n\t\tshortDesc: \"On switch-in, Grassy Terrain begins until this Ability is not active in battle.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.setTerrain('grassyterrain')) {\r\n\t\t\t\tthis.add('-message', `${source.name} covered the arena with unrelenting plant growth!`);\r\n\t\t\t\tthis.hint(\"Arena Rock doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.terrainState.duration = 0;\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain') && this.field.terrainState.duration !== 0) {\r\n\t\t\t\tthis.add('-ability', source, 'Arena Rock');\r\n\t\t\t\tthis.add('-message', `${source.name} covered the arena with unrelenting plant growth!`);\r\n\t\t\t\tthis.hint(\"Arena Rock doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.terrainState.source = source;\r\n\t\t\t\tthis.field.terrainState.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (this.field.terrainState.source !== pokemon || !this.field.isTerrain('grassyterrain')) return;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('arenarock')) {\r\n\t\t\t\t\tthis.field.terrainState.source = target;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.m.forceCustomBlock = true;\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\tpokemon.m.forceCustomBlock = null;\r\n\t\t},\r\n\t\tname: \"Arena Rock\",\r\n\t\trating: 4.5,\r\n\t\tnum: -4,\r\n\t},\r\n\tsharpstriker: {\r\n\t\tdesc: \"This Pok\u00E9mon's ballistic moves have their power multiplied by 1.2. Ballistic moves include Bullet Seed, Octazooka, Barrage, Rock Wrecker, Zap Cannon, Acid Spray, Aura Sphere, Focus Blast, and all moves with Ball or Bomb in their name.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's ballistic moves have 1.2x power.\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\tthis.debug('Sharp Striker boost');\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sharp Striker\",\r\n\t\trating: 3,\r\n\t\tnum: -5,\r\n\t},\r\n\tcoldsweat: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons hail. It changes the current weather to rain whenever any opposing Pok\u00E9mon has an attack that is super effective on this Pok\u00E9mon or an OHKO move. Counter, Metal Burst, and Mirror Coat count as attacking moves of their respective types, Hidden Power counts as its determined type, and Judgment, Multi-Attack, Natural Gift, Revelation Dance, Techno Blast, and Weather Ball are considered Normal-type moves.\",\r\n\t\tshortDesc: \"Summons hail on switch-in. If foe has a supereffective or OHKO move, summons rain.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.field.setWeather('raindance');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.field.setWeather('hail');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tif (pokemon === this.effectState.target) return;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.field.setWeather('raindance', pokemon);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cold Sweat\",\r\n\t\trating: 4,\r\n\t\tnum: -6,\r\n\t},\r\n\ttrashcompactor: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards. If it lands on any type of entry hazard, it clears the hazard and Stockpiles 1.\",\r\n\t\tshortDesc: \"Hazard immunity. Clears hazards, Stockpiles 1 if switched in on them.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['gmaxsteelsurge', 'spikes', 'stealthrock', 'stickyweb', 'toxicspikes']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) && !this.field.getPseudoWeather('stickyresidues')) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Trash Compactor');\r\n\t\t\t\t\t\tpokemon.addVolatile('stockpile');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] Ability: Trash Compactor', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thazardImmune: true,\r\n\t\tname: \"Trash Compactor\",\r\n\t\trating: 5,\r\n\t\tnum: -7,\r\n\t},\r\n\ttempestuous: {\r\n\t\tdesc: \"When replacing a fainted party member, this Pok\u00E9mon's Special Defense is boosted, and it charges power to double the power of its Electric-type move on its first turn.\",\r\n\t\tshortDesc: \"Gains the effect of Charge when replacing a fainted ally.\",\r\n\t\tonAfterMega(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedLastTurn) return;\r\n\t\t\tthis.boost({spd: 1}, pokemon);\r\n\t\t\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t\t\tpokemon.addVolatile('charge');\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tthis.boost({spd: 1}, pokemon);\r\n\t\t\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t\t\tpokemon.addVolatile('charge');\r\n\t\t},\r\n\t\tname: \"Tempestuous\",\r\n\t\trating: 3,\r\n\t\tnum: -8,\r\n\t},\r\n\tsootguard: {\r\n\t\tshortDesc: \"This Pok\u00E9mon receives 3/4 damage from neutrally effective attacks.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod === 0) {\r\n\t\t\t\tthis.debug('Soot Guard neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Soot Guard\",\r\n\t\trating: 3,\r\n\t\tnum: -9,\r\n\t},\r\n\tdustscatter: {\r\n\t\tshortDesc: \"This Pok\u00E9mon bypasses immunuties to its spore and powder moves.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['powder'];\r\n\t\t},\r\n\t\tname: \"Dust Scatter\",\r\n\t\trating: 2,\r\n\t\tnum: -10,\r\n\t},\r\n\tcounterclockwisespiral: {\r\n\t\tdesc: \"On switch-in, the field becomes Trick Room. This room remains in effect until this Ability is no longer active for any Pok\u00E9mon.\",\r\n\t\tshortDesc: \"On switch-in, Trick Room begins until this Ability is not active in battle.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.getPseudoWeather('trickroom')) {\r\n\t\t\t\tthis.add('-ability', source, 'Counter-Clockwise Spiral');\r\n\t\t\t\tthis.add('-message', `${source.name} twisted the dimensions!`);\r\n\t\t\t\tthis.hint(\"Counter-Clockwise Spiral doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.pseudoWeather.trickroom.source = source;\r\n\t\t\t\tthis.field.pseudoWeather.trickroom.duration = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-ability', source, 'Counter-Clockwise Spiral');\r\n\t\t\t\tthis.field.addPseudoWeather('trickroom');\r\n\t\t\t\tthis.hint(\"Counter-Clockwise Spiral doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.pseudoWeather.trickroom.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTryMove(target, source, move) {\r\n\t\t\tif (['trickroom'].includes(move.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: Counter-Clockwise Spiral', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('counterclockwisespiral')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.removePseudoWeather('trickroom');\r\n\t\t},\r\n\t\tname: \"Counter-Clockwise Spiral\",\r\n\t\trating: 4.5,\r\n\t\tnum: -11,\r\n\t},\r\n\tnightmareheart: {\r\n\t\tdesc: \"When this Pok\u00E9mon faints, the Pok\u00E9mon that knocked it out is cursed, losing 1/4 of its maximum HP, rounded down, at the end of each turn while it is active. In addition, the Pok\u00E9mon that knocked it out permanently receives this Ability, which persists even through switching, until it is knocked out and the Ability is passed along again.\",\r\n\t\tshortDesc: \"If this Pok\u00E9mon is KOed, the attacker is cursed, then permanently receives this Ability.\",\r\n\t\tonFaint(target, source, effect) {\r\n\t\t\tif (!source || !effect || target.side === source.side) return;\r\n\t\t\tif (effect.effectType === 'Move' && !effect.flags['futuremove']) {\r\n\t\t\t\tthis.add('-ability', target, 'Nightmare Heart');\r\n\t\t\t\tsource.addVolatile('curse');\r\n\t\t\t\tconst bannedAbilities = [\r\n\t\t\t\t\t'battlebond', 'comatose', 'disguise', 'insomnia', 'multitype', 'powerconstruct', 'rkssystem', 'schooling', 'shieldsdown', 'stancechange', 'truant', 'zenmode',\r\n\t\t\t\t];\r\n\t\t\t\tif (bannedAbilities.includes(source.ability)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.setAbility('nightmareheart');\r\n\t\t\t\t\tsource.baseAbility = 'nightmareheart' as ID;\r\n\t\t\t\t\tsource.ability = 'nightmareheart' as ID;\r\n\t\t\t\t\tthis.add('-ability', source, 'Nightmare Heart', '[from] Ability: Nightmare Heart');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Nightmare Heart\",\r\n\t\trating: 3,\r\n\t\tnum: -12,\r\n\t},\r\n\texecutioner: {\r\n\t\tdesc: \"When this Pok\u00E9mon's target has 1/2 or less of its maximum HP, rounded down, its attacking stat is multiplied by 1.5 while using an attack.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacking stat is 1.5x when its target has 1/2 or less HP.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (defender.hp <= defender.maxhp / 2) {\r\n\t\t\t\tthis.debug('Executioner boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (defender.hp <= defender.maxhp / 2) {\r\n\t\t\t\tthis.debug('Executioner boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Executioner\",\r\n\t\trating: 4,\r\n\t\tnum: -13,\r\n\t},\r\n\tsolarcore: {\r\n\t\tshortDesc: \"During intense sunlight, this Pok\u00E9mon can skip the charging turn of its moves.\",\r\n\t\tonChargeMove(pokemon, target, move) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Solar Core - remove charge turn for ' + move.id);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', pokemon, move.name, target);\r\n\t\t\t\treturn false; // skip charge turn\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Solar Core\",\r\n\t\trating: 2,\r\n\t\tnum: -14,\r\n\t},\r\n\ttwominded: {\r\n\t\tdesc: \"When this Pok\u00E9mon's Attack is modified, its Special Attack is modified in the opposite way, and vice versa. The same is true for its Defense and Special Defense.\",\r\n\t\tshortDesc: \"Applies the opposite of stat changes to the opposite stat (Atk/Sp. Atk, Def/Sp. Def).\",\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (!boost || effect.id === 'twominded') return;\r\n\t\t\tlet activated = false;\r\n\t\t\tconst twoMindedBoost: SparseBoostsTable = {};\r\n\t\t\tif (boost.spa) {\r\n\t\t\t\ttwoMindedBoost.atk = -1 * boost.spa;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.spd) {\r\n\t\t\t\ttwoMindedBoost.def = -1 * boost.spd;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.atk) {\r\n\t\t\t\ttwoMindedBoost.spa = -1 * boost.atk;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.def) {\r\n\t\t\t\ttwoMindedBoost.spd = -1 * boost.def;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (activated === true) {\r\n\t\t\t\tthis.add('-ability', target, 'Two-Minded');\r\n\t\t\t\tthis.boost(twoMindedBoost, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Two-Minded\",\r\n\t\trating: 4,\r\n\t\tnum: -15,\r\n\t},\r\n\tadrenaline: {\r\n\t\tdesc: \"This Pok\u00E9mon's next move is guaranteed to be a critical hit after it attacks and knocks out another Pok\u00E9mon.\",\r\n\t\tshortDesc: \"After landing a KO, this Pok\u00E9mon's next move is guaranteed to be a critical hit.\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tsource.addVolatile('laserfocus');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Adrenaline\",\r\n\t\trating: 3,\r\n\t\tnum: -16,\r\n\t},\r\n\tambush: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacks are critical hits if the user moves before the target.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) return 5;\r\n\t\t},\r\n\t\tname: \"Ambush\",\r\n\t\trating: 4,\r\n\t\tnum: -17,\r\n\t},\r\n\tsecondwind: {\r\n\t\tdesc: \"While this Pok\u00E9mon has more than 1/2 of its maximum HP, its Attack and Special Attack are halved.\",\r\n\t\tshortDesc: \"While this Pok\u00E9mon has more than 1/2 of its max HP, its Attack and Sp. Atk are halved.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 2) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, pokemon) {\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 2) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Second Wind\",\r\n\t\trating: -1,\r\n\t\tnum: -18,\r\n\t},\r\n\tbirdofprey: {\r\n\t\tdesc: \"Prevents adjacent opposing Flying-type Pok\u00E9mon from choosing to switch out unless they are immune to trapping.\",\r\n\t\tshortDesc: \"Prevents adjacent Flying-type foes from choosing to switch.\",\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Flying') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Flying')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bird of Prey\",\r\n\t\trating: 4.5,\r\n\t\tnum: -19,\r\n\t},\r\n\tshowdown: {\r\n\t\tdesc: \"While this Pok\u00E9mon is present, all Pok\u00E9mon are prevented from restoring any HP. During the effect, healing and draining moves are unusable, and Abilities and items that grant healing will not heal the user. Regenerator is also suppressed.\",\r\n\t\tshortDesc: \"While present, all Pok\u00E9mon are prevented from healing and Regenerator is suppressed.\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Showdown');\r\n\t\t\t\t}\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tif (!pokemon.volatiles['healblock']) {\r\n\t\t\t\t\tpokemon.addVolatile('healblock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['healblock']) {\r\n\t\t\t\tpokemon.addVolatile('healblock');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('showdown')) return;\r\n\t\t\t}\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\ttarget.removeVolatile('healblock');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Showdown\",\r\n\t\trating: 3.5,\r\n\t\tnum: -20,\r\n\t},\r\n\tregenerator: { // modded for Showdown\r\n\t\tinherit: true,\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.hasAbility('showdown')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t},\r\n\thardworker: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's HM moves have 1.5x power.\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (['cut', 'fly', 'surf', 'strength', 'whirlpool', 'waterfall', 'rocksmash', 'dive', 'rockclimb'].includes(move.id)) {\r\n\t\t\t\tthis.debug('Hard Worker boost');\r\n\t\t\t\treturn this.chainModify([1.5]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hard Worker\",\r\n\t\trating: 3,\r\n\t\tnum: -21,\r\n\t},\r\n\talchemist: {\r\n\t\tdesc: \"After attacking a poisoned target with a Poison-type move, this Pok\u00E9mon has an equal chance to cause one of various random effects. Possible effects include: replacing the poison status with paralysis, burn or toxic poison; afflicting the target with confusion, Torment or Encore; choosing two random stats and either boosting or lowering each one; causing the target to use Explosion if its current HP is 25% or less or afflicting it with a Curse if not; or transforming the target into Seismitoad, Ariados or Butterfree until it switches out.\",\r\n\t\tshortDesc: \"Poison-type move on poisoned target: random chance of 11 different effects.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && target.hp && move.type === 'Poison' && ['psn', 'tox'].includes(target.status)) {\r\n\t\t\t\tconst r = this.random(11);\r\n\t\t\t\tif (r < 1) {\r\n\t\t\t\t\tif (!target.setStatus('par', source)) {\r\n\t\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} couldn't be paralyzed!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (r < 2) {\r\n\t\t\t\t\tif (target.setStatus('brn', source)) {\r\n\t\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} couldn't be burned!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (r < 3) {\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)}'s poison became more severe!`);\r\n\t\t\t\t\t\ttarget.setStatus('tox', source);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)}'s poison can't get any worse!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (r < 4) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tif (!target.addVolatile('confusion')) {\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} could not be confused!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (r < 5) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tif (!target.addVolatile('encore')) {\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} could not be affected by Encore!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (r < 6) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tif (!target.addVolatile('torment')) {\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} could not be affected by Torment!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (r < 7) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tconst randStat1 = this.random(5);\r\n\t\t\t\t\tlet randStat2 = this.random(4);\r\n\t\t\t\t\tif (randStat2 === randStat1) {\r\n\t\t\t\t\t\trandStat2 = 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst alchemistBoost: SparseBoostsTable = {};\r\n\t\t\t\t\tif (randStat1 < 1) {\r\n\t\t\t\t\t\talchemistBoost.atk = -1;\r\n\t\t\t\t\t} else if (randStat1 < 2) {\r\n\t\t\t\t\t\talchemistBoost.def = -1;\r\n\t\t\t\t\t} else if (randStat1 < 3) {\r\n\t\t\t\t\t\talchemistBoost.spa = -1;\r\n\t\t\t\t\t} else if (randStat1 < 4) {\r\n\t\t\t\t\t\talchemistBoost.spd = -1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talchemistBoost.spe = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (randStat2 < 1) {\r\n\t\t\t\t\t\talchemistBoost.atk = -1;\r\n\t\t\t\t\t} else if (randStat2 < 2) {\r\n\t\t\t\t\t\talchemistBoost.def = -1;\r\n\t\t\t\t\t} else if (randStat2 < 3) {\r\n\t\t\t\t\t\talchemistBoost.spa = -1;\r\n\t\t\t\t\t} else if (randStat2 < 4) {\r\n\t\t\t\t\t\talchemistBoost.spd = -1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talchemistBoost.spe = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.boost(alchemistBoost, target, source, null, true);\r\n\t\t\t\t} else if (r < 8) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tconst randStat1 = this.random(5);\r\n\t\t\t\t\tlet randStat2 = this.random(4);\r\n\t\t\t\t\tif (randStat2 === randStat1) {\r\n\t\t\t\t\t\trandStat2 = 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst alchemistBoost: SparseBoostsTable = {};\r\n\t\t\t\t\tif (randStat1 < 1) {\r\n\t\t\t\t\t\talchemistBoost.atk = 1;\r\n\t\t\t\t\t} else if (randStat1 < 2) {\r\n\t\t\t\t\t\talchemistBoost.def = 1;\r\n\t\t\t\t\t} else if (randStat1 < 3) {\r\n\t\t\t\t\t\talchemistBoost.spa = 1;\r\n\t\t\t\t\t} else if (randStat1 < 4) {\r\n\t\t\t\t\t\talchemistBoost.spd = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talchemistBoost.spe = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (randStat2 < 1) {\r\n\t\t\t\t\t\talchemistBoost.atk = -1;\r\n\t\t\t\t\t} else if (randStat2 < 2) {\r\n\t\t\t\t\t\talchemistBoost.def = -1;\r\n\t\t\t\t\t} else if (randStat2 < 3) {\r\n\t\t\t\t\t\talchemistBoost.spa = -1;\r\n\t\t\t\t\t} else if (randStat2 < 4) {\r\n\t\t\t\t\t\talchemistBoost.spd = -1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talchemistBoost.spe = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.boost(alchemistBoost, target, source, null, true);\r\n\t\t\t\t} else if (r < 9) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tconst randStat1 = this.random(5);\r\n\t\t\t\t\tlet randStat2 = this.random(4);\r\n\t\t\t\t\tif (randStat2 === randStat1) {\r\n\t\t\t\t\t\trandStat2 = 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst alchemistBoost: SparseBoostsTable = {};\r\n\t\t\t\t\tif (randStat1 < 1) {\r\n\t\t\t\t\t\talchemistBoost.atk = 1;\r\n\t\t\t\t\t} else if (randStat1 < 2) {\r\n\t\t\t\t\t\talchemistBoost.def = 1;\r\n\t\t\t\t\t} else if (randStat1 < 3) {\r\n\t\t\t\t\t\talchemistBoost.spa = 1;\r\n\t\t\t\t\t} else if (randStat1 < 4) {\r\n\t\t\t\t\t\talchemistBoost.spd = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talchemistBoost.spe = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (randStat2 < 1) {\r\n\t\t\t\t\t\talchemistBoost.atk = 1;\r\n\t\t\t\t\t} else if (randStat2 < 2) {\r\n\t\t\t\t\t\talchemistBoost.def = 1;\r\n\t\t\t\t\t} else if (randStat2 < 3) {\r\n\t\t\t\t\t\talchemistBoost.spa = 1;\r\n\t\t\t\t\t} else if (randStat2 < 4) {\r\n\t\t\t\t\t\talchemistBoost.spd = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talchemistBoost.spe = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.boost(alchemistBoost, target, source, null, true);\r\n\t\t\t\t} else if (r < 10) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tif (target.hp >= target.maxhp / 4) {\r\n\t\t\t\t\t\tif (!target.addVolatile('curse')) {\r\n\t\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} could not be cursed!`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} suddenly exploded!`);\r\n\t\t\t\t\t\tthis.actions.useMove('explosion', target, \"[from] ability: Alchemist\", \"[of] \" + source);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-ability', source, 'Alchemist');\r\n\t\t\t\t\tif (!target.addVolatile('alchemist')) {\r\n\t\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} has already transformed!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-message', `${(pokemon.illusion ? pokemon.illusion.name : pokemon.name)} is being transformed...!?`);\r\n\t\t\t\tconst randForm = this.random(3);\r\n\t\t\t\tif (randForm < 1) {\r\n\t\t\t\t\tthis.add('-message', `It became a Seismitoad!`);\r\n\t\t\t\t\tpokemon.formeChange('Seismitoad');\r\n\t\t\t\t\tpokemon.setAbility('poisontouch');\r\n\t\t\t\t} else if (randForm < 2) {\r\n\t\t\t\t\tthis.add('-message', `It became an Ariados!`);\r\n\t\t\t\t\tpokemon.formeChange('Ariados');\r\n\t\t\t\t\tpokemon.setAbility('insomnia');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-message', `It became a Butterfree!`);\r\n\t\t\t\t\tpokemon.formeChange('Butterfree');\r\n\t\t\t\t\tpokemon.setAbility('compoundeyes');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Seismitoad', 'Ariados', 'Butterfree'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Alchemist\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\tblackmail: {\r\n\t\tdesc: \"After using a physical Dark-type move, this Pok\u00E9mon permanently replaces its target's Ability with Orderly Target. The Pok\u00E9mon with Orderly Target cannot knock out Mega Honchkrow - all of its moves will leave Mega Honchkrow with at least 1 HP. Blackmail can only affect one target per battle.\",\r\n\t\tshortDesc: \"Single-use. Physical Dark moves: permanently change target's Ability to Orderly Target.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || target.side === source.side || !target.hp || this.effectState.busted) return;\r\n\t\t\tif (target !== source && move.type === 'Dark' && move.category === 'Physical') {\r\n\t\t\t\ttarget.setAbility('orderlytarget');\r\n\t\t\t\ttarget.baseAbility = 'orderlytarget' as ID;\r\n\t\t\t\ttarget.ability = 'orderlytarget' as ID;\r\n\t\t\t\tthis.add('-ability', target, 'Orderly Target', '[from] Ability: Blackmail');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Blackmail\",\r\n\t\trating: 3,\r\n\t\tnum: -23,\r\n\t},\r\n\torderlytarget: {\r\n\t\tdesc: \"If the target of this Pok\u00E9mon's move has Blackmail, it survives every hit with at least 1 HP.\",\r\n\t\tshortDesc: \"If this Pok\u00E9mon's target has Blackmail, it survives every hit with at least 1 HP.\",\r\n\t\tonDamagePriority: -0,\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\tlet move = this.dex.moves.get(effect.id);\r\n\t\t\t\tif (move.ignoreAbility) return;\r\n\t\t\t}\r\n\t\t\tif (source === this.effectState.target && target.hasAbility('blackmail') &&\r\n\t\t\t\tdamage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', source, 'Orderly Target');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Orderly Target\",\r\n\t\trating: -1,\r\n\t\tnum: -24,\r\n\t},\r\n\tstickyresidues: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons sticky residues that prevent hazards from being cleared or moved by Court Change for five turns. Fails if the effect is already active on the user's side.\",\r\n\t\tshortDesc: \"On switch-in, prevents hazards from being cleared or moved by Court Change for 5 turns.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.addPseudoWeather('stickyresidues')) {\r\n\t\t\t\tthis.add('-message', `${source.name} set up sticky residues on the battlefield!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonEnd() {\r\n\t\t\t\tthis.add('-message', `The sticky residues disappeared from the battlefield!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Sticky Residues\",\r\n\t\trating: 3,\r\n\t\tnum: -25,\r\n\t},\r\n\tdisguise: { // modded for Mega Mimikyu\r\n\t\tinherit: true,\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (['mimikyu', 'mimikyutotem'].includes(pokemon.species.id) && this.effectState.busted) {\r\n\t\t\t\tconst speciesid = pokemon.species.id === 'mimikyutotem' ? 'Mimikyu-Busted-Totem' : 'Mimikyu-Busted';\r\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get(speciesid));\r\n\t\t\t}\r\n\t\t\tif (pokemon.canMegaEvo && this.effectState.busted) {\r\n\t\t\t\tpokemon.canMegaEvo = 'mimikyubustedmega';\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tspectralanger: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's Attack rises after it uses an attack that is super effective on the target.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status' && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.boost({atk: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterSubDamage(damage, target, source, move) { // should still activate when targeting a Substitute\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status' && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.boost({atk: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spectral Anger\",\r\n\t\trating: 3,\r\n\t\tnum: -26,\r\n\t},\r\n\tdiamonddust: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Diamond Dust for 5 turns. During the effect, Pok\u00E9mon are immune to all Rock-type attacks and Stealth Rock; Weather Ball becomes an Ice-type move, and its base power is 100; and other weather-related moves and Abilities behave as they do in Hail.\",\r\n\t\tshortDesc: \"5 turns: all Pok\u00E9mon are immune to Rock; counts as hail.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('diamonddust');\r\n\t\t},\r\n\t\tname: \"Diamond Dust\",\r\n\t\trating: 3,\r\n\t\tnum: -27,\r\n\t},\r\n\t// modded for Diamond Dust:\r\n\tforecast: {\r\n\t\tinherit: true,\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Castform' || pokemon.transformed) return;\r\n\t\t\tlet forme = null;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tif (pokemon.species.id !== 'castformsunny') forme = 'Castform-Sunny';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tif (pokemon.species.id !== 'castformrainy') forme = 'Castform-Rainy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'diamonddust':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tif (pokemon.species.id !== 'castformsnowy') forme = 'Castform-Snowy';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (pokemon.species.id !== 'castform') forme = 'Castform';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (pokemon.isActive && forme) {\r\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ticebody: {\r\n\t\tshortDesc: \"If Hail, Snow or Diamond Dust is active, heals 1/16 of its max HP each turn; immunity to Hail.\",\r\n\t\tinherit: true,\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (effect.id === 'hail' || effect.id === 'diamonddust' || effect.id === 'snow') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ticeface: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"If Eiscue, the first physical hit it takes deals 0 damage. Effect restored in Hail, Snow, Diamond Dust.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.isWeather(['hail', 'diamonddust', 'snow']) &&\r\n\t\t\t\tpokemon.species.id === 'eiscuenoice' && !pokemon.transformed) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = false;\r\n\t\t\t\tpokemon.formeChange('Eiscue', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherChange(pokemon, source, sourceEffect) {\r\n\t\t\t// snow/hail resuming because Cloud Nine/Air Lock ended does not trigger Ice Face\r\n\t\t\tif ((sourceEffect as Ability)?.suppressWeather) return;\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tif (this.field.isWeather(['hail', 'diamonddust', 'snow']) &&\r\n\t\t\t\tpokemon.species.id === 'eiscuenoice' && !pokemon.transformed) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = false;\r\n\t\t\t\tpokemon.formeChange('Eiscue', this.effect, true);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tslushrush: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"If Hail, Snow or Diamond Dust is active, this Pok\u00E9mon's Speed is doubled.\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather(['hail', 'diamonddust', 'snow'])) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsnowcloak: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"If Hail, Snow or Diamond Dust is active, evasiveness is 1.25x; immunity to Hail.\",\r\n\t\tonModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tif (this.field.isWeather(['hail', 'diamonddust', 'snow'])) {\r\n\t\t\t\tthis.debug('Snow Cloak - decreasing accuracy');\r\n\t\t\t\treturn this.chainModify([3277, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tprehistoricrage: {\r\n\t\tdesc: \"This Pok\u00E9mon's Dragon-type moves' type effectiveness against Fairy is changed to be super effective.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Dragon-type moves are super effective against Fairy-types.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Prehistoric Rage');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Dragon-type moves are super effective against Fairy-types!`);\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.type !== 'Dragon') return;\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Dragon'] = true;\r\n\t\t\t\t(move as any).prehistoricrageBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Prehistoric Rage\",\r\n\t\trating: 3,\r\n\t\tnum: -28,\r\n\t},\r\n\tlusterswap: {\r\n\t\tdesc: \"On entry, this Pok\u00E9mon's type changes to match its first move that's super effective against an adjacent opponent.\",\r\n\t\tshortDesc: \"On entry: type changes to match its first move that's super effective against an adjacent opponent.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\tconst moveType = move.id === 'hiddenpower' ? pokemon.hpType : move.type;\r\n\t\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\t\tif (!target || target.fainted || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, target) && this.dex.getEffectiveness(moveType, target) > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Luster Swap');\r\n\t\t\t\t\t\tif (!pokemon.setType(moveType)) continue;\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} changed its type to match its ${move.name}!`);\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', moveType);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.add('-ability', pokemon, 'Luster Swap');\r\n\t\t\tthis.add('-message', `${pokemon.name} can't hit any opponent super effectively!`);\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tname: \"Luster Swap\",\r\n\t\trating: 3,\r\n\t\tnum: -29,\r\n\t},\r\n\tacidicsurge: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Acidic Terrain for 5 turns. During the effect, the power of Poison-type attacks made by grounded Pok\u00E9mon is multiplied by 1.3, and grounded Steel-types are not immune to Poison-type damage. Steel-type Pok\u00E9mon are still immune to being poisoned and badly poisoned, except by Pok\u00E9mon with Corrosion. Camouflage transforms the user into a Poison-type, Nature Power becomes Sludge Bomb, and Secret Power has a 30% chance to cause poison. Lasts for 8 turns if the user is holding a Terrain Extender (such as through Skill Swap).\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Poison power, Steel not immune to Poison type.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tname: \"Acidic Surge\",\r\n\t\trating: 4,\r\n\t\tnum: -30,\r\n\t},\r\n\tflowergift: { // modded for Mega Meganium\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"If user is Cherrim or Mega Meganium and Sunny Day is active: 1.5x ally team Atk and Sp. Def.\",\r\n\t\tonAllyModifyAtkPriority: 3,\r\n\t\tonAllyModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.species.name !== 'Meganium-Mega') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifySpDPriority: 4,\r\n\t\tonAllyModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.species.name !== 'Meganium-Mega') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsavage: {\r\n\t\tdesc: \"This Pok\u00E9mon's biting moves become multi-hit moves that hit three times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. Each hit's damage is cut to one third.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's biting moves hit three times. Each hit's damage is cut to one third.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.multihit) return;\r\n\t\t\tif (move.flags['bite'] && !move.isZ && !move.isMax) {\r\n\t\t\t\tmove.multihit = 3;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.flags['bite']) return this.chainModify([0x0555, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Savage\",\r\n\t\trating: 3.5,\r\n\t\tnum: -31,\r\n\t},\r\n\tvolcanicsinge: {\r\n\t\tdesc: \"After any of this Pok\u00E9mon's stats is reduced, making contact with a Pok\u00E9mon on its team burns the attacker. The duration is one turn for each stat stage that was reduced, and the duration is extended if stats are reduced again while it is already in effect.\",\r\n\t\tshortDesc: \"After stat reduction, contact moves burn attacker. Duration = amount of stat reduction.\",\r\n\t\tname: \"Volcanic Singe\",\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tlet num = boost[i]!;\r\n\t\t\t\t\twhile (num !== 0) {\r\n\t\t\t\t\t\ttarget.side.addSideCondition('volcanicsinge');\r\n\t\t\t\t\t\tnum++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(side) {\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Volcanic Singe');\r\n\t\t\t\tthis.add('-message', `The air around ${this.effectState.source.name}'s team was superheated!`);\r\n\t\t\t\tthis.hint(`During Volcanic Singe, making contact with a Pok\u00E9mon on ${this.effectState.source.name}'s team will result in a burn!`);\r\n\t\t\t\tthis.hint(`The effect is extended each time ${this.effectState.source.name}'s stats are lowered!`);\r\n\t\t\t\tthis.effectState.duration = 2;\r\n\t\t\t},\r\n\t\t\tonRestart(side) {\r\n\t\t\t\tthis.effectState.duration++;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.side === this.effectState.target && move.flags['contact']) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 10,\r\n\t\t\tonResidual(side) {\r\n\t\t\t\tif (this.effectState.duration > 1) {\r\n\t\t\t\t\tthis.add('-message', `There are ${this.effectState.duration} turns left of Volcanic Singe!`);\r\n\t\t\t\t} else if (this.effectState.duration === 1) {\r\n\t\t\t\t\tthis.add('-message', `There is one turn left of Volcanic Singe!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(side) {\r\n\t\t\t\tthis.add('-message', `The air around ${this.effectState.source.name}'s team cooled down!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\trating: 3.5,\r\n\t\tnum: -32,\r\n\t},\r\n\t/*settle: {\r\n\t\tdesc: \"When using a given special move for the first time in at least three turns, this Pok\u00E9mon uses its Attack stat, and the power is increased by 100%. Has no effect if the same special move has been used in the last three turns.\",\r\n\t\tshortDesc: \"On using special move for the first time in at least 3 turns: move uses Atk stat, 2x power.\",\r\n\t\tname: \"Settle\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tlet num = 0;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tnum++;\r\n\t\t\t\tconst checkSlot = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\tif (move.id === checkSlot.id) {\r\n\t\t\t\t\tif (num === 1 && !pokemon.volatiles['settle1']) {\r\n\t\t\t\t\t\tif (move.category !== 'Special') return;\r\n\t\t\t\t\t\tpokemon.addVolatile('settle1');\r\n\t\t\t\t\t\t(move as any).settleBoosted = true;\r\n\t\t\t\t\t} else if (num === 2 && !pokemon.volatiles['settle2']) {\r\n\t\t\t\t\t\tif (move.category !== 'Special') return;\r\n\t\t\t\t\t\tpokemon.addVolatile('settle2');\r\n\t\t\t\t\t\t(move as any).settleBoosted = true;\r\n\t\t\t\t\t} else if (num === 3 && !pokemon.volatiles['settle3']) {\r\n\t\t\t\t\t\tif (move.category !== 'Special') return;\r\n\t\t\t\t\t\tpokemon.addVolatile('settle3');\r\n\t\t\t\t\t\t(move as any).settleBoosted = true;\r\n\t\t\t\t\t} else if (num === 4 && !pokemon.volatiles['settle4']) {\r\n\t\t\t\t\t\tif (move.category !== 'Special') return;\r\n\t\t\t\t\t\tpokemon.addVolatile('settle4');\r\n\t\t\t\t\t\t(move as any).settleBoosted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif ((move as any).settleBoosted) {\r\n\t\t\t\tthis.hint(`${move.name} was boosted by Settle!`);\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 3,\r\n\t\tnum: -33,\r\n\t},*/\r\n\tsettle: {\r\n\t\tdesc: \"When using a given special move for the first time in at least three turns after its last boost, this Pok\u00E9mon uses its Attack stat instead of Special Attack, and the move's power is doubled.\",\r\n\t\tshortDesc: \"1st use of a special move (after 3 turns): uses Atk and 2x power.\",\r\n\t\tname: \"Settle\",\r\n\t\trating: 3,\r\n\t\tnum: -33,\r\n\t\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.m.settleCooldowns = {}; // { [moveId]: lastBoostTurn }\r\n\t\t\tpokemon.m.settleReadyMessagesShown = {}; // { [moveId]: boolean }\r\n\t\t},\r\n\t\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.category !== 'Special' || move.basePower <= 0) return;\r\n\t\r\n\t\t\tif (!pokemon.m.settleCooldowns) {\r\n\t\t\t\tpokemon.m.settleCooldowns = {};\r\n\t\t\t}\r\n\t\r\n\t\t\tconst lastBoostTurn = pokemon.m.settleCooldowns[move.id];\r\n\t\t\tconst turnsSinceLastBoost = lastBoostTurn !== undefined ? this.turn - lastBoostTurn : Infinity;\r\n\t\r\n\t\t\tif (turnsSinceLastBoost > 2) {\r\n\t\t\t\tmove.overrideOffensiveStat = 'atk';\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Settle');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} focused its strength into a powered-up ${move.name}!`);\r\n\t\t\t\tpokemon.m.settleCooldowns[move.id] = this.turn;\r\n\t\r\n\t\t\t\t// Reset ready flag\r\n\t\t\t\tif (pokemon.m.settleReadyMessagesShown) {\r\n\t\t\t\t\tpokemon.m.settleReadyMessagesShown[move.id] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.m.settleCooldowns) return;\r\n\t\r\n\t\t\tif (!pokemon.m.settleReadyMessagesShown) {\r\n\t\t\t\tpokemon.m.settleReadyMessagesShown = {};\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (const moveId in pokemon.m.settleCooldowns) {\r\n\t\t\t\tconst lastTurn = pokemon.m.settleCooldowns[moveId];\r\n\t\t\t\tconst turnsSince = this.turn - lastTurn;\r\n\t\t\t\tconst moveName = this.dex.moves.get(moveId).name;\r\n\t\t\t\tconst turnsUntilReady = Math.max(0, 3 - turnsSince);\r\n\t\r\n\t\t\t\tif (turnsUntilReady > 0) {\r\n\t\t\t\t\tconst message =\r\n\t\t\t\t\t\tturnsUntilReady === 1\r\n\t\t\t\t\t\t\t? `${pokemon.name}'s ${moveName} will be available for a power-up next turn.`\r\n\t\t\t\t\t\t\t: `${pokemon.name}'s ${moveName} will be available for a power-up in ${turnsUntilReady} turn(s).`;\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Settle');\r\n\t\t\t\t\tthis.add('-message', message);\r\n\t\t\t\t\tpokemon.m.settleReadyMessagesShown[moveId] = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!pokemon.m.settleReadyMessagesShown[moveId]) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Settle');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name}'s ${moveName} is ready to power up again!`);\r\n\t\t\t\t\t\tpokemon.m.settleReadyMessagesShown[moveId] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\theavenlytechniques: {\r\n\t\tshortDesc: \"Slicing moves: +1 priority at full HP, always crit at 1/3 HP or less, +1 Defense otherwise.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.flags['slicing'] && pokemon.hp === pokemon.maxhp) return priority + 1;\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (source.hp === source.maxhp || source.hp <= source.maxhp / 3) return;\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.boost({def: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterSubDamage(damage, target, source, move) { // should still activate when targeting a Substitute\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (source.hp === source.maxhp || source.hp <= source.maxhp / 3) return;\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.boost({def: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio, source, target, move) {\r\n\t\t\tif (move.flags['slicing'] && source.hp <= source.maxhp / 3) return 5;\r\n\t\t},\r\n\t\tname: \"Heavenly Techniques\",\r\n\t\trating: 3,\r\n\t\tnum: -34,\r\n\t},\r\n\trotation: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon's Defense or Special Defense is raised by 1 stage based on the weaker combined attacking stat of all opposing Pok\u00E9mon. Special Defense is raised if their Special Attack is higher, and Defense is raised if their Attack is the same or higher.\",\r\n\t\tshortDesc: \"On switch-in, Defense or Sp. Def is raised 1 stage based on the foes' weaker Attack.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totalatk = 0;\r\n\t\t\tlet totalspa = 0;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\ttotalatk += target.getStat('atk', false, true);\r\n\t\t\t\ttotalspa += target.getStat('spa', false, true);\r\n\t\t\t}\r\n\t\t\tif (totalatk && totalatk >= totalspa) {\r\n\t\t\t\tthis.boost({def: 1});\r\n\t\t\t} else if (totalspa) {\r\n\t\t\t\tthis.boost({spd: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rotation\",\r\n\t\trating: 4,\r\n\t\tnum: -35,\r\n\t},\r\n\tspiritofgiving: {\r\n\t\tdesc: \"On switch-in, every Pok\u00E9mon in this Pok\u00E9mon's party regains the item it started with, even if the item was a popped Air Balloon, if the item was picked up by a Pok\u00E9mon with the Pickup Ability, or the item was lost to Bug Bite, Covet, Incinerate, Knock Off, Pluck, or Thief. It doesn't work if the Pok\u00E9mon is already holding something else.\",\r\n\t\tshortDesc: \"Restores the party's used or removed items on switch-in.\",\r\n\t\tname: \"Spirit of Giving\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst side = pokemon.side;\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const ally of side.pokemon) {\r\n\t\t\t\tif (ally.item) continue;\r\n\t\t\t\tif ((ally as any).lostItemForDelibird) {\r\n\t\t\t\t\tconst item = (ally as any).lostItemForDelibird;\r\n\t\t\t\t\tif (ally.setItem(item)) {\r\n\t\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\t\tthis.add('-ability', pokemon, 'Spirit of Giving');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.add('-item', ally, this.dex.items.get(item), '[from] Ability: Spirit of Giving');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 4,\r\n\t\tnum: -36,\r\n\t},\r\n\t/*\r\n\tasonesawsbuck: {\r\n\t\tdesc: \"The combination of Hustle and A Winter's Tale. This Pok\u00E9mon's Attack is multiplied by 1.5 and the accuracy of its physical attacks is multiplied by 0.8. The damage of this Pok\u00E9mon's Ice-type moves used on consecutive turns is increased, up to a maximum of 1.5x after 5 turns. If Hail is active, the effect is doubled for a maximum of 2x after 5 turns.\",\r\n\t\tshortDesc: \"The combination of Hustle and A Winter's Tale.\",\r\n\t\tname: \"As One (Sawsbuck)\",\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'As One');\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('awinterstale');\r\n\t\t},\r\n\t\t// This should be applied directly to the stat as opposed to chaining with the others\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 4,\r\n\t\tnum: -2000, // does not exist\r\n\t},\r\n*/\r\n\tspringfever: {\r\n\t\tdesc: \"While this Pok\u00E9mon is active, if any Pok\u00E9mon uses a Fire-type move, it is prevented from executing and the attacker loses 1/4 of its maximum HP, rounded half up. This effect does not happen if the Fire-type move is prevented by Primordial Sea.\u200B\",\r\n\t\tshortDesc: \"While active, any Pok\u00E9mon using a Fire move loses 1/4 max HP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-message', `${pokemon.name} fills the air with explosive powder!`);\r\n\t\t},\r\n\t\tonAnyTryMovePriority: -1,\r\n\t\tonAnyTryMove(pokemon, target, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Powder');\r\n\t\t\t\tthis.damage(this.clampIntRange(Math.round(pokemon.maxhp / 4), 1));\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spring Fever\",\r\n\t\trating: 4,\r\n\t\tnum: -37,\r\n\t},\r\n\tsummerdays: {\r\n\t\tdesc: \"If Sunny Day is active, this Pokemon's Special Attack is multiplied by 1.5 and it loses 1/8 of its maximum HP, rounded down, at the end of each turn. If this Pokemon is holding Utility Umbrella, its Special Attack remains the same and it does not lose any HP.\",\r\n\t\tshortDesc: \"If Sunny Day is active, this Pokemon's Sp. Atk is 1.5x; loses 1/8 max HP per turn.\",\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Summer Days\",\r\n\t\trating: 2,\r\n\t\tnum: -38,\r\n\t},\r\n\tautumnleaves: {\r\n\t\tdesc: \"This Pok\u00E9mon's Grass-type attacks cause the Ghost type to be added to the target, effectively making it have two or three types. Has no effect if the target is already a Ghost-type. If Forest's Curse or Electroplating adds a type to the target, it replaces the type added by this Ability and vice versa.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Grass attacks add Ghost to the targets' type(s).\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (move.category !== 'Status' && move.type === 'Grass') {\r\n\t\t\t\tif (target.hasType('Ghost')) return;\r\n\t\t\t\tif (!target.addType('Ghost')) return;\r\n\t\t\t\tthis.add('-start', target, 'typeadd', 'Ghost', '[from] Ability: Autumn Leaves');\r\n\r\n\t\t\t\tif (target.side.active.length === 2 && target.position === 1) {\r\n\t\t\t\t\t// Curse Glitch\r\n\t\t\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\t\t\tif (action && action.move.id === 'curse') {\r\n\t\t\t\t\t\taction.targetLoc = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Autumn Leaves\",\r\n\t\trating: 4,\r\n\t\tnum: -39,\r\n\t},\r\n\twinterstale: {\r\n\t\tdesc: \"The damage of this Pok\u00E9mon's Ice-type moves used on consecutive turns is increased, up to a maximum of 1.5x after 5 turns. If Hail is active, the effect is doubled for a maximum of 2x after 5 turns.\",\r\n\t\tshortDesc: \"Damage of Ice moves used on consecutive turns is increased, max 1.5x (2x in Hail).\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('winterstale');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t},\r\n\t\t\tonTryMovePriority: -2,\r\n\t\t\tonTryMove(pokemon, target, move) {\r\n\t\t\t\tif (!pokemon.hasAbility('winterstale') && !pokemon.hasAbility('asonesawsbuck')) {\r\n\t\t\t\t\tpokemon.removeVolatile('winterstale');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.type === 'Ice' && pokemon.moveLastTurnResult) {\r\n\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t} else if (pokemon.volatiles['twoturnmove']) {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.lastMove = move.id;\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tconst dmgMod = [0x1000, 0x1333, 0x1666, 0x1999, 0x1CCC, 0x2000];\r\n\t\t\t\tconst numConsecutive = this.effectState.numConsecutive > 5 ? 5 : this.effectState.numConsecutive;\r\n\t\t\t\tif (['hail', 'snow'].includes(source.effectiveWeather())) {\r\n\t\t\t\t\treturn this.chainModify([dmgMod[numConsecutive], 0x1000]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn damage * (1 + (this.effectState.numConsecutive / 10));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Winter's Tale\",\r\n\t\trating: 4,\r\n\t\tnum: -40,\r\n\t},\r\n\tdesertgales: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Desert Gales for 5 turns. During the effect, Ground-, Rock-, and Steel-type attacks have their power multiplied by 1.2; Normal-type moves become Ground-type moves; Weather Ball becomes a Ground-type move, and its base power is 100; and other weather-related moves and Abilities behave as they do in Sandstorm.\",\r\n\t\tshortDesc: \"5 turns. +Ground/Rock/Steel power, Normal moves become Ground-type.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('desertgales');\r\n\t\t},\r\n\t\tname: \"Desert Gales\",\r\n\t\trating: 4,\r\n\t\tnum: -41,\r\n\t},\r\n\t// modded for Desert Gales\r\n\tsandforce: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isWeather('sandstorm') || this.field.isWeather('desertgales')) {\r\n\t\t\t\tif (move.type === 'Rock' || move.type === 'Ground' || move.type === 'Steel') {\r\n\t\t\t\t\tthis.debug('Sand Force boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"This Pok\u00E9mon's Ground/Rock/Steel attacks do 1.3x in Sandstorm and Desert Gales; immunity to Sandstorm.\",\r\n\t},\r\n\tsandrush: {\r\n\t\tinherit: true,\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm') || this.field.isWeather('desertgales')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If Sandstorm or Desert Gales is active, this Pok\u00E9mon's Speed is doubled; immunity to Sandstorm.\",\r\n\t},\r\n\tsandveil: {\r\n\t\tinherit: true,\r\n\t\tonModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tif (this.field.isWeather('sandstorm') || this.field.isWeather('desertgales')) {\r\n\t\t\t\tthis.debug('Sand Veil - decreasing accuracy');\r\n\t\t\t\treturn this.chainModify([3277, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If Sandstorm or Desert Gales is active, this Pok\u00E9mon's evasiveness is 1.25x; immunity to Sandstorm.\",\r\n\t},\r\n\tsteelbreaker: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacks are critical hits if the target is a Steel-type Pok\u00E9mon.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && target.hasType('Steel')) return 5;\r\n\t\t},\r\n\t\tname: \"Steelbreaker\",\r\n\t\trating: 3,\r\n\t\tnum: -42,\r\n\t},\r\n\telegance: {\r\n\t\tdesc: \"This Pok\u00E9mon's moves have their secondary effect chance guaranteed, unless it has a non-volatile status condition, is confused, or is affected by Attract, Disable, Encore, Heal Block, Taunt, or Torment.\",\r\n\t\tshortDesc: \"Secondary effects of moves are guaranteed unless it has a status or a mental affliction.\",\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (attacker.status) return;\r\n\t\t\tif (attacker.volatiles['attract'] || attacker.volatiles['confusion'] ||\r\n\t\t\t\tattacker.volatiles['disable'] || attacker.volatiles['encore'] || attacker.volatiles['healblock'] ||\r\n\t\t\t\tattacker.volatiles['taunt'] || attacker.volatiles['torment']) return;\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('maximizing secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance = 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance = 100;\r\n\t\t},\r\n\t\tname: \"Elegance\",\r\n\t\trating: 5,\r\n\t\tnum: -43,\r\n\t},\r\n\tseismicscream: {\r\n\t\tdesc: \"This Pok\u00E9mon uses Earthquake at 60 base power after using a sound-based move. If the sound-based move is a special attack, the Earthquake that is used is also a special attack.\",\r\n\t\tshortDesc: \"Follows up sound moves with an Earthquake of 60 BP.\",\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (!move || !target || !target.hp) return;\r\n\t\t\tif (target !== source && target.hp && move.flags['sound']) {\r\n\t\t\t\tthis.effectState.target.addVolatile('seismicscream');\r\n\t\t\t\t/*\r\n\t\t\t\tthis.add('-anim', source, \"Earthquake\", target);\r\n\t\t\t\t*/\r\n\t\t\t\tthis.actions.useMove('earthquake', this.effectState.target); // going to rework this a bit\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Seismic Scream\",\r\n\t\trating: 3,\r\n\t\tnum: -44,\r\n\t},\r\n\tacidrock: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon poisons every Pok\u00E9mon on the field. Pok\u00E9mon with Soundproof are immune. Poison inflicted through this Ability does half as much damage as normal poison.\",\r\n\t\tshortDesc: \"On switch-in, this Pok\u00E9mon poisons every Pok\u00E9mon on the field.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon) || target.status) continue;\r\n\t\t\t\tif (target.hasAbility('soundproof')) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Acid Rock');\r\n\t\t\t\t\tthis.add('-immune', target, \"[from] ability: Soundproof\", \"[of] \" + target);\r\n\t\t\t\t} else if (!target.runStatusImmunity('psn')) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Acid Rock');\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (target.setStatus('psn', pokemon)) {\r\n\t\t\t\t\t\tthis.hint(`Poison inflicted through Acid Rock is only half as damaging as normal poison.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Acid Rock\",\r\n\t\trating: 4,\r\n\t\tnum: -45,\r\n\t},\r\n\tcoupdegrass: {\r\n\t\tdesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less of its maximum HP, rounded down. Does not affect moves that have multiple targets.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less HP.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\tif (!action) return;\r\n\t\t\tconst target = this.getTarget(action.pokemon, action.move, action.targetLoc);\r\n\t\t\tif (!target) return;\r\n\t\t\tif (action.move.target != 'allAdjacentFoes' && action.move.target != 'allAdjacent' && target.hp && target.hp <= target.maxhp / 2) {\r\n\t\t\t\tpokemon.addVolatile('coupdegrass');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\t\tif (action) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Coup de Grass');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} prepared to move immediately!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority) {\r\n\t\t\t\treturn priority + 0.1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Coup de Grass\",\r\n\t\trating: 3,\r\n\t\tnum: -46,\r\n\t},\r\n\tmasquerade: {\r\n\t\tdesc: \"This Pok\u00E9mon inherits the Ability of the last unfainted Pokemon in its party until it takes direct damage from another Pok\u00E9mon's attack. Abilities that cannot be copied are \\\"No Ability\\\", As One, Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Gulp Missile, Hunger Switch, Ice Face, Illusion, Imposter, Multitype, Neutralizing Gas, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, Wonder Guard, and Zen Mode.\",\r\n\t\tshortDesc: \"Inherits the Ability of the last party member. Wears off when attacked.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || pokemon.volatiles['masquerade']) return;\r\n\t\t\tpokemon.addVolatile('masquerade');\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (!pokemon.side.pokemon[i]) continue;\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hugepower', 'hungerswitch', 'illusion', 'imposter', 'neutralizinggas',\r\n\t\t\t\t\t'powerofalchemy', 'purepower', 'receiver', 'trace', 'wonderguard',\r\n\t\t\t\t];\r\n\t\t\t\tif (\r\n\t\t\t\t\tpokemon.side.pokemon[i].fainted ||\r\n\t\t\t\t\tpokemon.side.pokemon[i].getAbility().flags['notrace'] || additionalBannedAbilities.includes(pokemon.side.pokemon[i].ability)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i] || pokemon === pokemon.side.pokemon[i]) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst masquerade = pokemon.side.pokemon[i];\r\n\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\tpokemon.setAbility(masquerade.ability);\r\n\t\t\tthis.hint(`${pokemon.name} inherited ${this.dex.abilities.get(pokemon.ability).name} from ${masquerade.name}!`);\r\n\t\t\tthis.add('-ability', pokemon, this.dex.abilities.get(pokemon.ability).name, '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (pokemon.hasAbility('masquerade')) return;\r\n\t\t\t\tif (this.effectState.busted) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name}'s Masquerade wore off!`);\r\n\t\t\t\t\tpokemon.setAbility('masquerade');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Masquerade\",\r\n\t\trating: 3,\r\n\t\tnum: -47,\r\n\t},\r\n\tbodyofwater: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Water-type attack, damage is calculated using the user's Defense stat as its Attack or its Special Defense as its Special Attack. Other effects that modify the Attack and Special Attack stats are used as normal, including stat stage changes.\",\r\n\t\tshortDesc: \"Water-type attacks use Def as Atk and Sp. Def as Sp. Atk in damage calculation.\",\r\n\t\tname: \"Body of Water\",\r\n\t\tonModifyMove(move, attacker) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tif (move.category === 'Special') {\r\n\t\t\t\t\tmove.overrideOffensiveStat = 'spd';\r\n\t\t\t\t}\r\n\t\t\t\telse if (move.category === 'Physical') {\r\n\t\t\t\t\tmove.overrideOffensiveStat = 'def';\r\n\t\t\t\t}\r\n\t\t\t\t(move as any).bodyofwaterBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 3.5,\r\n\t\tnum: -48,\r\n\t},\r\n\teverlastingwinter: {\r\n\t\tdesc: \"On switch-in, the weather becomes Hail. This weather remains in effect until this Ability is no longer active for any Pok\u00E9mon, or the weather is changed by Delta Stream, Desolate Land or Primordial Sea.\",\r\n\t\tshortDesc: \"On switch-in, hail begins until this Ability is not active in battle.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.setWeather('hail')) {\r\n\t\t\t\tthis.add('-message', `${source.name} created an unrelenting winter storm!`);\r\n\t\t\t\tthis.hint(\"Everlasting Winter doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.weatherState.duration = 0;\r\n\t\t\t} else if (this.field.isWeather('hail') && this.field.weatherState.duration !== 0) {\r\n\t\t\t\tthis.add('-ability', source, 'Everlasting Winter');\r\n\t\t\t\tthis.add('-message', `${source.name} created an unrelenting winter storm!`);\r\n\t\t\t\tthis.hint(\"Everlasting Winter doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.weatherState.source = source;\r\n\t\t\t\tthis.field.weatherState.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('everlastingwinter') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'hail' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('everlastingwinter')) {\r\n\t\t\t\t\tthis.field.weatherState.source = target;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearWeather();\r\n\t\t},\r\n\t\tname: \"Everlasting Winter\",\r\n\t\trating: 4.5,\r\n\t\tnum: -49,\r\n\t},\r\n\t// modded for Everlasting Winter\r\n\tdeltastream: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('everlastingwinter') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'deltastream' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tdesolateland: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('everlastingwinter') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'desolateland' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tprimordialsea: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('everlastingwinter') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'primordialsea' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tforgery: {\r\n\t\tdesc: \"This Pok\u00E9mon inherits the item of the last unfainted Pokemon in its party.\",\r\n\t\tshortDesc: \"Inherits the item of the last party member.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.species.name !== 'Zoroark-Mega') return;\r\n\t\t\tpokemon.addVolatile('forgery');\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!pokemon.side.pokemon[i] || pokemon.side.pokemon[i].fainted ||\r\n\t\t\t\t\t!pokemon.side.pokemon[i].item || this.dex.items.get(pokemon.side.pokemon[i].item).zMove ||\r\n\t\t\t\t\t this.dex.items.get(pokemon.side.pokemon[i].item).megaStone\r\n\t\t\t\t) continue;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i]) return;\r\n\t\t\tif (pokemon === pokemon.side.pokemon[i]) return;\r\n\t\t\tconst forgery = pokemon.side.pokemon[i];\r\n\t\t\tthis.add('-ability', pokemon, 'Forgery');\r\n\t\t\tpokemon.item = forgery.item;\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Zoroarkite became a replica of the ${this.dex.items.get(forgery.item).name} belonging to ${forgery.name}!`);\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.species.name !== 'Zoroark-Mega') return;\r\n\t\t\tif (!pokemon.item) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Forgery');\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s Zoroarkite returned to normal!`);\r\n\t\t\t\tpokemon.item = 'zoroarkite' as ID;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.species.name !== 'Zoroark-Mega') return;\r\n\t\t\tif (pokemon.item !== 'zoroarkite') {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Forgery');\r\n\t\t\t\tthis.add('-message', `${pokemon.name}'s Zoroarkite returned to normal!`);\r\n\t\t\t\tpokemon.item = 'zoroarkite' as ID;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Forgery\",\r\n\t\trating: 3,\r\n\t\tnum: -50,\r\n\t},\r\n\tclairvoyance: {\r\n\t\tdesc: \"This Pok\u00E9mon's Psychic-type moves take effect two turns after being used. At the end of that turn, the damage is calculated at that time and dealt to the Pok\u00E9mon at the position the target had when the move was used. Only one move can be delayed at a time. If the user is no longer active at the time an attacking move should hit, damage is calculated based on the user's natural Attack or Special Attack stat, types, and level, with no boosts from its held item or Ability. Status moves are used by the Pok\u00E9mon at the position the user had when the move was used.\",\r\n\t\tshortDesc: \"Psychic-type moves delayed until two turns later, but only one at a time.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (\r\n\t\t\t\tmove && move.type === 'Psychic' && source.hasAbility('clairvoyance') &&\r\n\t\t\t\tsource.side.addSlotCondition(source, 'clairvoyance')\r\n\t\t\t) {\r\n\t\t\t\tObject.assign(source.side.slotConditions[source.position]['clairvoyance'], {\r\n\t\t\t\t\tduration: 3,\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\ttarget: null,\r\n\t\t\t\t\tmove: move,\r\n\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\tside: target.side,\r\n\t\t\t\t\tmoveData: this.dex.moves.get(move),\r\n\t\t\t\t});\r\n\t\t\t\tthis.add('-ability', source, 'Clairvoyance');\r\n\t\t\t\tthis.add('-message', `${source.name} cast ${move.name} into the future!`);\r\n\t\t\t\tsource.deductPP(move.id, 1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonResidualOrder: 3,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get(data.move);\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Clairvoyance');\r\n\t\t\t\tif (!data.target) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because there was no target.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.add('-message', `${this.effectState.source.name}'s ${move.name} took effect!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\t\t\t\tdata.moveData.isFutureMove = true;\r\n\t\t\t\tdelete data.moveData.flags['contact'];\r\n\t\t\t\tdelete data.moveData.flags['protect'];\r\n\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\tthis.actions.useMove(move, target, data.target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\t\tif (data.source.isActive) {\r\n\t\t\t\t\t\tthis.add('-anim', data.source, hitMove, data.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Clairvoyance\",\r\n\t\trating: 3,\r\n\t\tnum: -51,\r\n\t},\r\n\tsleightofhand: {\r\n\t\tdesc: \"This Pok\u00E9mon's contact moves become special attacks and do not make contact with the target.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's contact moves become special and non-contact.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (move.category !== 'Special') move.category = 'Special';\r\n\t\t\t\tdelete move.flags['contact'];\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sleight of Hand\",\r\n\t\trating: 3,\r\n\t\tnum: -52,\r\n\t},\r\n\tmoleawhac: {\r\n\t\tdesc: \"This Pok\u00E9mon's Attack is raised by 1 stage at the end of each full turn if it uses an attacking move. Its Attack boosts are cleared and its Attack is not increased on the same turn when it is hit by a contact move.\",\r\n\t\tshortDesc: \"Atk rises 1 stage on each attacking turn; Atk reset on contact.\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tconst moleawhacBoost: SparseBoostsTable = {};\r\n\t\t\t\tmoleawhacBoost.atk = -1 * target.boosts['atk'];\r\n\t\t\t\tthis.boost(moleawhacBoost, target, target);\r\n\t\t\t\ttarget.addVolatile('moleawhac');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tsource.addVolatile('moleawhac');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns && !pokemon.volatiles['moleawhac']) {\r\n\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tname: \"Mole-a-Whac\",\r\n\t\trating: 4.5,\r\n\t\tnum: -53,\r\n\t},\r\n\tsos: {\r\n\t\tdesc: \"If this Pok\u00E9mon is a Wishiwashi that has Mega Evolved, it calls for help and changes form at the end of each full turn it has been on the field, building up to Mega Wishiwashi (School Form) over five turns.\",\r\n\t\tshortDesc: \"More Wishiwashi spawn at the end of each turn.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.species.id === 'wishiwashimega' && pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tthis.add('-message', `Startled by the Mega Evolution, ${pokemon.name}'s school dispersed...`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Wishiwashi' || pokemon.transformed || !pokemon.hp || !pokemon.activeTurns ||\r\n\t\t\t\tpokemon.species.id === 'wishiwashi' || pokemon.species.id === 'wishiwashischool' ||\r\n\t\t\t\tpokemon.species.id === 'wishiwashimegaschool'\r\n\t\t\t) return;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: SOS');\r\n\t\t\tthis.add('-message', `${pokemon.name} called for help!`);\r\n\t\t\tif (pokemon.species.id === 'wishiwashimega') {\r\n\t\t\t\tpokemon.formeChange('Wishiwashi-Mega-1', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'wishiwashimega1') {\r\n\t\t\t\tpokemon.formeChange('Wishiwashi-Mega-2', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'wishiwashimega2') {\r\n\t\t\t\tpokemon.formeChange('Wishiwashi-Mega-3', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'wishiwashimega3') {\r\n\t\t\t\tpokemon.formeChange('Wishiwashi-Mega-4', this.effect, true);\r\n\t\t\t} else if (pokemon.species.id === 'wishiwashimega4') {\r\n\t\t\t\tpokemon.formeChange('Wishiwashi-Mega-School', this.effect, true);\r\n\t\t\t}\r\n\t\t\tthis.add('-message', `More of ${pokemon.name}'s friends came together!`);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n\t\t\t) * pokemon.level / 100 + 10);\r\n\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"SOS\",\r\n\t\trating: 5,\r\n\t\tnum: -54,\r\n\t},\r\n\tstancechange: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Changes Aegislash/Falinks-Mega to Blade Forme/Combat before attack, Shield Forme/Legion before King's Shield.\",\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif ((attacker.species.baseSpecies !== 'Aegislash' && !attacker.species.name.startsWith('Falinks-Mega')) || attacker.transformed) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;\r\n\t\t\tif (attacker.species.baseSpecies === 'Aegislash') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else if (attacker.species.name.startsWith('Falinks-Mega')) {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Falinks-Mega-Legion' : 'Falinks-Mega-Combat');\r\n\t\t\t\tif (attacker.species.name !== targetForme) {\r\n\t\t\t\t\tattacker.formeChange(targetForme);\r\n\t\t\t\t\tif (targetForme === 'Falinks-Mega-Legion') {\r\n\t\t\t\t\t\tthis.add('-message', `${attacker.name} changed to Legion formation!`);\r\n\t\t\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-message', `${attacker.name} changed to Combat formation!`);\r\n\t\t\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Mega Falinks\r\n\t\t\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpoolfloaties: {\r\n\t\tdesc: \"This Pok\u00E9mon and its adjacent allies are immune to Water-type moves. For 3 turns after the user or its adjacent allies use a Water-type move or are hit by a Water-type move, they are also immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as they remain active. If they use Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball override this immunity if the user is under any of their effects.\",\r\n\t\tshortDesc: \"Pok\u00E9mon and allies: gain Ground immunity from Water moves; Water immunity.\",\r\n\t\tonAnyTryHit(target, source, move) {\r\n\t\t\tif (target !== source && target.side === this.effectState.target.side && move.type === 'Water') {\r\n\t\t\t\ttarget.addVolatile('poolfloaties');\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Pool Floaties', '[of] ' + this.effectState.target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (target !== source && source.side === this.effectState.target.side && move.type === 'Water') {\r\n\t\t\t\tsource.addVolatile('poolfloaties');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (\r\n\t\t\t\t\ttarget.volatiles['smackdown'] || target.volatiles['ingrain'] || this.field.getPseudoWeather('Gravity')\r\n\t\t\t\t) return false;\r\n\t\t\t\tthis.add('-start', target, 'Pool Floaties', '[silent]');\r\n\t\t\t\tif (target === this.effectState.source) {\r\n\t\t\t\t\tthis.add('-message', `${target.name} was lifted up by its pool floaties!`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} was lifted up by ${this.effectState.source.name}'s pool floaties!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonImmunity(type) {\r\n\t\t\t\tif (type === 'Ground') return false;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 15,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Pool Floaties', '[silent]');\r\n\t\t\t\tthis.add('-message', `${(target.illusion ? target.illusion.name : target.name)} floated back down!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Pool Floaties\",\r\n\t\trating: 3,\r\n\t\tnum: -55,\r\n\t},\r\n\tredlicorice: {\r\n\t\tdesc: \"This Pok\u00E9mon's Fairy-type attacks cause the target to become sticky and flammable. When a Fire-type attack is used against a target that is sticky and flammable, its power is multiplied by 1.5, and the target is burned but is no longer sticky and flammable. When a Fire-type attack is used by an attacker that is sticky and flammable, the user takes recoil damage equal to 50% the HP lost by the target (rounded half up, but not less than 1 HP), and the user is burned but is no longer sticky and flammable.\",\r\n\t\tshortDesc: \"Fairy attacks make target sticky; Fire attacks: burn, 50% more damage to sticky Pok\u00E9mon.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (move.category !== 'Status' && move.type === 'Fairy') {\r\n\t\t\t\ttarget.addVolatile('redlicorice');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Sticky Gel', '[from] ability: Red Licorice', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\t\tif (effect && effect.effectType === 'Move' && effect.type === 'Fire' && source === this.effectState.target) {\r\n\t\t\t\t\tif (this.effectState.damage) {\r\n\t\t\t\t\t\tif (target.hp <= damage) {\r\n\t\t\t\t\t\t\tthis.effectState.damage += target.hp;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.effectState.damage += damage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (target.hp <= damage) {\r\n\t\t\t\t\t\t\tthis.effectState.damage = target.hp;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.effectState.damage = damage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.lit = true;\r\n\t\t\t\t} else if (effect && effect.effectType === 'Move' && effect.type === 'Fire' && target === this.effectState.target) {\r\n\t\t\t\t\tthis.effectState.lit = true;\r\n\t\t\t\t\treturn damage * 1.5;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (this.effectState.lit) {\r\n\t\t\t\t\tpokemon.removeVolatile('redlicorice');\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Sticky Gel', '[silent]');\r\n\t\t\t\t\tthis.hint(\"The sticky gel ignited!\");\r\n\t\t\t\t\tif (this.effectState.damage) {\r\n\t\t\t\t\t\tthis.damage(this.effectState.damage / 2, this.effectState.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.trySetStatus('brn', this.effectState.source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Red Licorice\",\r\n\t\trating: 3,\r\n\t\tnum: -56,\r\n\t},\r\n\tstygianshades: {\r\n\t\tdesc: \"This Pok\u00E9mon's Dark-type status moves set one layer of Spikes on the opposing side of the field.\",\r\n\t\tshortDesc: \"Dark-type status moves set spikes on the opposing side.\",\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (!move || !source) return;\r\n\t\t\tif (move.type === 'Dark' && move.category === 'Status') {\r\n\t\t\t\tthis.add('-ability', this.effectState.target, 'Stygian Shades');\r\n\t\t\t\tthis.effectState.target.side.foe.addSideCondition('spikes');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Stygian Shades\",\r\n\t\trating: 3,\r\n\t\tnum: -57,\r\n\t},\r\n\tlongwhip: {\r\n\t\tdesc: \"This Pok\u00E9mon's multi-hit attacks do damage at the end of each turn, for the maximum number of times the attack could hit, instead of being used immediately. More than one move can stack in this way.\",\r\n\t\tshortDesc: \"Multi-hit attacks: damage over time, for as many turns as they could hit.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (move.multihit) {\r\n\t\t\t\tthis.add('-ability', source, 'Long Whip');\r\n\t\t\t\tthis.add('-message', `${source.name} prepared to whip ${(target.illusion ? target.illusion.name : target.name)}'s team with ${move.name}!`);\r\n\t\t\t\tsource.deductPP(move.id, 1);\r\n\t\t\t\tif (move.accuracy && typeof move.accuracy === 'number') {\r\n\t\t\t\t\tif (this.randomChance((100 - move.accuracy), 100)) {\r\n\t\t\t\t\t\tthis.add('-message', `But it failed!`);\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet whipMove = null;\r\n\t\t\t\tif (target.side.addSlotCondition(target, 'longwhip1')) {\r\n\t\t\t\t\twhipMove = 'longwhip1';\r\n\t\t\t\t} else if (target.side.addSlotCondition(target, 'longwhip2')) {\r\n\t\t\t\t\twhipMove = 'longwhip2';\r\n\t\t\t\t} else if (target.side.addSlotCondition(target, 'longwhip3')) {\r\n\t\t\t\t\twhipMove = 'longwhip3';\r\n\t\t\t\t} else if (target.side.addSlotCondition(target, 'longwhip4')) {\r\n\t\t\t\t\twhipMove = 'longwhip4';\r\n\t\t\t\t} else if (target.side.addSlotCondition(target, 'longwhip5')) {\r\n\t\t\t\t\twhipMove = 'longwhip5';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-message', `But it failed!`);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tlet numberHits;\r\n\t\t\t\tif (Array.isArray(move.multihit) && move.multihit.length) {\r\n\t\t\t\t\tnumberHits = move.multihit[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnumberHits = move.multihit;\r\n\t\t\t\t}\r\n\t\t\t\tObject.assign(target.side.slotConditions[target.position][whipMove], {\r\n\t\t\t\t\tduration: numberHits,\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\tmove: move,\r\n\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\tside: target.side,\r\n\t\t\t\t\tmoveData: this.dex.moves.get(move),\r\n\t\t\t\t});\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Long Whip\",\r\n\t\trating: 3,\r\n\t\tnum: -58,\r\n\t},\r\n\tgravitationalpull: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards and incorporates them into its body. Pok\u00E9mon making contact with this Pok\u00E9mon are affected by all of the hazards on both sides of the field, in the same way as if they had switched in.\",\r\n\t\tshortDesc: \"Hazard immunity. On contact, attackers suffer the effects of hazards on the field.\",\r\n\t\tname: \"Gravitational Pull\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\tactive.removeVolatile('gravitationalpull');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.addVolatile('gravitationalpull');\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['gravitationalpull']) return;\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.addVolatile('gravitationalpull');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.volatiles['gravitationalpull']) {\r\n\t\t\t\tpokemon.removeVolatile('gravitationalpull');\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.hasAbility('gravitationalpull') && active !== pokemon) {\r\n\t\t\t\t\t\tactive.addVolatile('gravitationalpull');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst hazards = [\r\n\t\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const sideCondition of hazards) {\r\n\t\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) || pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-message', `The hazards on the field returned to their original positions!`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'ability: Gravitational Pull');\r\n\t\t\t\tconst hazards = [\r\n\t\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const sideCondition of hazards) {\r\n\t\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) || pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-message', `The hazards on the field are surrounding ${pokemon.name}!`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'ability: Gravitational Pull', '[silent]');\r\n\t\t\t},\r\n\t\t\tonDamagingHitOrder: 1,\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tif (move.flags['contact']) {\r\n\t\t\t\t\tlet success = undefined;\r\n\t\t\t\t\tif (target.side.getSideCondition('spikes') || target.side.foe.getSideCondition('spikes')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet layers = 0;\r\n\t\t\t\t\t\tif (target.side.sideConditions['spikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.sideConditions['spikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.foe.sideConditions['spikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.foe.sideConditions['spikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst damageAmounts = [0, 3, 4, 6, 6, 6, 6]; // 1/8, 1/6, 1/4 - caps at 3\r\n\t\t\t\t\t\tthis.damage(damageAmounts[layers] * source.maxhp / 24, source, target);\r\n\t\t\t\t\t\t// this.add('-message', `${source.name} was hurt by the spikes!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('toxicspikes') || target.side.foe.getSideCondition('toxicspikes')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet layers = 0;\r\n\t\t\t\t\t\tif (target.side.sideConditions['toxicspikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.sideConditions['toxicspikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.foe.sideConditions['toxicspikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.foe.sideConditions['toxicspikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (layers >= 2) {\r\n\t\t\t\t\t\t\tsource.trySetStatus('tox', target);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('stealthrock') || target.side.foe.getSideCondition('stealthrock')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst typeMod = this.clampIntRange(source.runEffectiveness(this.dex.getActiveMove('stealthrock')), -6, 6);\r\n\t\t\t\t\t\tthis.damage(source.maxhp * Math.pow(2, typeMod) / 8, source, target);\r\n\t\t\t\t\t\t// this.add('-message', `Pointed stones dug into ${source.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('stickyweb') || target.side.foe.getSideCondition('stickyweb')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.add('-activate', source, 'move: Sticky Web');\r\n\t\t\t\t\t\tthis.boost({spe: -1}, source, target, this.dex.getActiveMove('stickyweb'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('gmaxsteelsurge') || target.side.foe.getSideCondition('gmaxsteelsurge')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst steelHazard = this.dex.getActiveMove('Stealth Rock');\r\n\t\t\t\t\t\tsteelHazard.type = 'Steel';\r\n\t\t\t\t\t\tconst typeMod = this.clampIntRange(source.runEffectiveness(steelHazard), -6, 6);\r\n\t\t\t\t\t\tthis.damage(source.maxhp * Math.pow(2, typeMod) / 8, source, target);\r\n\t\t\t\t\t\t// this.add('-message', `${source.name} was hurt by the sharp spikes!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\thazardImmune: true,\r\n\t\trating: 3,\r\n\t\tnum: -59,\r\n\t},\r\n\tchakralock: {\r\n\t\tdesc: \"After this Pok\u00E9mon uses an attack that is super effective on the target, the target is burned.\",\r\n\t\tshortDesc: \"After an attack that is super effective on the target, the target is burned.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status' && target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\ttarget.trySetStatus('brn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Chakra Lock\",\r\n\t\trating: 3,\r\n\t\tnum: -60,\r\n\t},\r\n\tvajra: {\r\n\t\tdesc: \"This Pok\u00E9mon's Dark-type moves become Electric-type moves and have their power multiplied by 1.2. This effect comes after other effects that change a move's type, but before Ion Deluge and Electrify's effects.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Dark-type moves become Electric-type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Dark' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tname: \"Vajra\",\r\n\t\trating: 4,\r\n\t\tnum: -61,\r\n\t},\r\n\tinnerfortitude: {\r\n\t\tdesc: \"When this Pok\u00E9mon has 1/2 or less of its maximum HP, rounded down, its Defense and Special Defense are doubled. This Pok\u00E9mon also cannot fall asleep. Gaining this Ability while asleep cures it.\",\r\n\t\tshortDesc: \"At 1/2 or less of max HP, Defense and Special Defense are doubled. Cannot fall asleep.\",\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tthis.debug('Inner Fortitude boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tthis.debug('Inner Fortitude boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'slp') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Inner Fortitude');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'slp') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Fortitude');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Inner Fortitude\",\r\n\t\trating: 4,\r\n\t\tnum: -62,\r\n\t},\r\n\t/*\r\n\tbuildup: {\r\n\t\tdesc: \"This Pok\u00E9mon restores 1/8 of its maximum HP, rounded down, at the end of each full turn if it uses an attacking move, but only if it was not hit by a damaging move in the same turn.\",\r\n\t\tshortDesc: \"Healed by 1/8 of its max HP each attacking turn; fails if attacked same turn.\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\ttarget.addVolatile('buildup');\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tsource.addVolatile('buildup');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns && !pokemon.volatiles['buildup']) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tname: \"Buildup\",\r\n\t\trating: 4,\r\n\t\tnum: -63,\r\n\t},\r\n*/\r\n\timplode: {\r\n\t\tdesc: \"This Pok\u00E9mon does not suffer the drawbacks of recoil moves and sacrificial moves as long as a target is successfully KOed.\",\r\n\t\tshortDesc: \"If it KOs a target, ignores recoil and self-KO effects of that move.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.recoil || move.mindBlownRecoil || (move.selfdestruct && move.selfdestruct === 'always')) {\r\n\t\t\t\tthis.effectState.target.addVolatile('implode');\r\n\t\t\t\tthis.effectState.target.volatiles['implode'].move = move;\r\n\t\t\t\tthis.effectState.target.volatiles['implode'].recoil = move.recoil;\r\n\t\t\t\tthis.effectState.target.volatiles['implode'].mindBlownRecoil = move.mindBlownRecoil;\r\n\t\t\t\tdelete move.recoil;\r\n\t\t\t\tdelete move.mindBlownRecoil;\r\n\t\t\t\tif (move.selfdestruct && move.selfdestruct === 'always') {\r\n\t\t\t\t\tthis.effectState.target.volatiles['implode'].selfdestruct = move.selfdestruct;\r\n\t\t\t\t\tdelete move.selfdestruct;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (!this.effectState.target.volatiles['implode']) return;\r\n\t\t\tif (this.effectState.target.volatiles['implode'].selfdestruct) this.add('-anim', target, \"Breakneck Blitz\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonAfterMove(source, target, move) { \r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tif (pokemon !== source && !pokemon.hp) {\r\n\t\t\t\t\t\tsource.removeVolatile('implode');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (target !== source && !target.hp) {\r\n\t\t\t\t\tsource.removeVolatile('implode');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.effectState.recoil && move.totalDamage) {\r\n\t\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\t\tthis.damage(this.clampIntRange(Math.round((this.activeMove.totalDamage as number) * this.effectState.recoil[0] / this.effectState.recoil[1]), 1), source, source, 'recoil');\r\n\t\t\t\t}\r\n\t\t\t\tif (this.effectState.mindBlownRecoil) {\r\n\t\t\t\t\tthis.damage(Math.round(source.maxhp / 2), source, source, this.dex.conditions.get('Mind Blown'), true);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.effectState.selfdestruct) {\r\n\t\t\t\t\tthis.faint(source, source, this.effectState.move);\r\n\t\t\t\t}\r\n\t\t\t\tsource.removeVolatile('implode');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Implode\",\r\n\t\trating: 4,\r\n\t\tnum: -64,\r\n\t},\r\n\terraticcode: {\r\n\t\tdesc: \"While this Pok\u00E9mon is present, all Pok\u00E9mon are prevented from from using the same move twice in a row.\",\r\n\t\tshortDesc: \"While present, all Pok\u00E9mon are prevented from using the same move twice in a row.\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Erratic Code');\r\n\t\t\t\t}\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tif (!pokemon.volatiles['torment']) {\r\n\t\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['torment']) {\r\n\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('erraticcode')) return;\r\n\t\t\t}\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\ttarget.removeVolatile('torment');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Erratic Code\",\r\n\t\trating: 3.5,\r\n\t\tnum: -66,\r\n\t},\r\n\t/*cheapheat: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses an attacking move, before the move hits, the Pok\u00E9mon's attacking stat and the target's defending stat are raised by 1 stage. The stats that were raised are lowered by 1 stage after the move hits.\",\r\n\t\tshortDesc: \"User's attacking stat and foe's defending stat: +1 before move, -1 after move.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (!move.basePower || target === source || move.spreadHit) return;\r\n\t\t\tconst activated = false;\r\n\t\t\tlet attackingStat = 'atk';\r\n\t\t\tlet defendingStat = 'def';\r\n\t\t\tif (move.category === 'Special') {\r\n\t\t\t\tattackingStat = 'spa';\r\n\t\t\t}\r\n\t\t\tif (move.useSourceDefensiveAsOffensive) {\r\n\t\t\t\tattackingStat = attackingStat === 'atk' ? 'def' : 'spd';\r\n\t\t\t}\r\n\t\t\tif (move.defensiveCategory) {\r\n\t\t\t\tdefendingStat = move.defensiveCategory === 'Physical' ? 'def' : 'spd';\r\n\t\t\t} else {\r\n\t\t\t\tdefendingStat = move.category === 'Physical' ? 'def' : 'spd';\r\n\t\t\t}\r\n\t\t\tthis.add('-ability', source, 'Cheap Heat', 'boost');\r\n\t\t\tif (move.useTargetOffensive) {\r\n\t\t\t\tconst cheapHeatBoost: SparseBoostsTable = {};\r\n\t\t\t\tif (attackingStat === 'atk') cheapHeatBoost.atk = 1;\r\n\t\t\t\tif (attackingStat === 'def' || defendingStat === 'def') cheapHeatBoost.def = 1;\r\n\t\t\t\tif (attackingStat === 'spa') cheapHeatBoost.spa = 1;\r\n\t\t\t\tif (attackingStat === 'spd' || defendingStat === 'spd') cheapHeatBoost.spd = 1;\r\n\t\t\t\ttarget.addVolatile('cheapheat');\r\n\t\t\t\ttarget.volatiles['cheapheat'].source = source;\r\n\t\t\t\ttarget.volatiles['cheapheat'].boost = cheapHeatBoost;\r\n\t\t\t\tthis.runEvent('CheapHeat', target);\r\n\t\t\t} else {\r\n\t\t\t\tconst cheapHeatBoostSource: SparseBoostsTable = {};\r\n\t\t\t\tconst cheapHeatBoostTarget: SparseBoostsTable = {};\r\n\t\t\t\tsource.addVolatile('cheapheat');\r\n\t\t\t\tsource.volatiles['cheapheat'].source = source;\r\n\t\t\t\tsource.volatiles['cheapheat'].boost = cheapHeatBoostSource;\r\n\t\t\t\tif (attackingStat === 'atk') source.volatiles['cheapheat'].boost.atk = 1;\r\n\t\t\t\tif (attackingStat === 'def') source.volatiles['cheapheat'].boost.def = 1;\r\n\t\t\t\tif (attackingStat === 'spa') source.volatiles['cheapheat'].boost.spa = 1;\r\n\t\t\t\tif (attackingStat === 'spd') source.volatiles['cheapheat'].boost.spd = 1;\r\n\t\t\t\tthis.runEvent('CheapHeat', source);\r\n\t\t\t\ttarget.addVolatile('cheapheat');\r\n\t\t\t\ttarget.volatiles['cheapheat'].source = source;\r\n\t\t\t\ttarget.volatiles['cheapheat'].boost = cheapHeatBoostTarget;\r\n\t\t\t\tif (defendingStat === 'def') target.volatiles['cheapheat'].boost.def = 1;\r\n\t\t\t\tif (defendingStat === 'spd') target.volatiles['cheapheat'].boost.spd = 1;\r\n\t\t\t\tthis.runEvent('CheapHeat', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tfor (const defender of this.getAllActive()) {\r\n\t\t\t\tthis.runEvent('ReverseCheapHeat', defender);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const defender of this.getAllActive()) {\r\n\t\t\t\tthis.runEvent('ReverseCheapHeat', defender);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonCheapHeat(pokemon) {\r\n\t\t\t\tthis.boost(this.effectState.boost, pokemon, this.effectState.source, null, true);\r\n\t\t\t\tthis.effectState.activeMove = this.activeMove;\r\n\t\t\t\tthis.effectState.completed = true;\r\n\t\t\t},\r\n\t\t\tonReverseCheapHeat(pokemon) {\r\n\t\t\t\tif (!pokemon.hp) return;\r\n\t\t\t\tlet i: BoostName;\r\n\t\t\t\tfor (i in this.effectState.boost) {\r\n\t\t\t\t\tthis.effectState.boost[i]! *= -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost(this.effectState.boost, pokemon, this.effectState.source, null, true);\r\n\t\t\t\tpokemon.removeVolatile('cheapheat');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Cheap Heat\",\r\n\t\trating: 3,\r\n\t\tnum: -67,\r\n\t},*/\r\n\tcheapheat: {\r\n\t\tname: \"Cheap Heat\",\r\n\t\tshortDesc: \"Boosts user's attacking stat and targets' defending stats before hitting. Reverts after.\",\r\n\t\tdesc: \"When this Pok\u00E9mon uses a damaging move, it boosts its relevant attacking stat (Attack or Sp. Atk) by 1 stage and the target's corresponding defending stat (Defense or Sp. Def) by 1 stage before damage is calculated. After the hit, both stats are lowered by 1 stage.\",\r\n\t\trating: 3,\r\n\t\tnum: -67,\r\n\t\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.m.cheapHeatTargets = new Map<AnyObject, BoostID>();\r\n\t\t\tpokemon.m.cheapHeatSelfBoosted = null;\r\n\t\t},\r\n\t\r\n\t\tonBeforeMove(pokemon, _target, move) {\r\n\t\t\tif (move.category === 'Status' || move.basePower <= 0) return;\r\n\t\r\n\t\t\tconst offensiveStat: BoostID = move.category === 'Physical' ? 'atk' : 'spa';\r\n\t\t\tconst defensiveStat: BoostID = move.category === 'Physical' ? 'def' : 'spd';\r\n\t\r\n\t\t\t// Boost user's attacking stat\r\n\t\t\tconst selfBoost: SparseBoostsTable = {};\r\n\t\t\tselfBoost[offensiveStat] = 1;\r\n\t\t\tthis.boost(selfBoost, pokemon, pokemon, this.dex.abilities.get('Cheap Heat'));\r\n\t\t\tpokemon.m.cheapHeatSelfBoosted = offensiveStat;\r\n\t\r\n\t\t\t// Determine valid targets\r\n\t\t\tconst targets: Pokemon[] = [];\r\n\t\r\n\t\t\tif (move.target === 'allAdjacent' || move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of pokemon.side.foe.active) {\r\n\t\t\t\t\tif (foe && !foe.fainted && pokemon.isAdjacent(foe)) {\r\n\t\t\t\t\t\ttargets.push(foe);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (move.target === 'allAdjacent') {\r\n\t\t\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\t\t\tif (ally && ally !== pokemon && !ally.fainted && pokemon.isAdjacent(ally)) {\r\n\t\t\t\t\t\t\ttargets.push(ally);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Single target \u2014 use target passed in\r\n\t\t\t\tif (_target && _target.isActive && !_target.fainted) {\r\n\t\t\t\t\ttargets.push(_target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Boost all chosen targets\r\n\t\t\tpokemon.m.cheapHeatTargets = new Map();\r\n\t\t\tfor (const t of targets) {\r\n\t\t\t\tconst targetBoost: SparseBoostsTable = {};\r\n\t\t\t\ttargetBoost[defensiveStat] = 1;\r\n\t\t\t\tthis.boost(targetBoost, t, pokemon, this.dex.abilities.get('Cheap Heat'));\r\n\t\t\t\tpokemon.m.cheapHeatTargets.set(t, defensiveStat);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\tonAfterMove(pokemon, _target, move) {\r\n\t\t\tif (move.category === 'Status' || move.basePower <= 0) return;\r\n\t\r\n\t\t\t// Revert user's stat\r\n\t\t\tconst stat = pokemon.m.cheapHeatSelfBoosted;\r\n\t\t\tif (stat) {\r\n\t\t\t\tconst debuff: SparseBoostsTable = {};\r\n\t\t\t\tdebuff[stat as keyof BoostsTable] = -1;\r\n\t\t\t\tthis.boost(debuff, pokemon, pokemon, this.dex.abilities.get('Cheap Heat'));\r\n\t\t\t\tpokemon.m.cheapHeatSelfBoosted = null;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Revert all targets' stat boosts\r\n\t\t\tif (pokemon.m.cheapHeatTargets) {\r\n\t\t\t\tfor (const [t, boostedStat] of pokemon.m.cheapHeatTargets.entries()) {\r\n\t\t\t\t\tif (!t?.isActive) continue;\r\n\t\t\t\t\tconst revert: SparseBoostsTable = {};\r\n\t\t\t\t\trevert[boostedStat as keyof BoostsTable] = -1;\r\n\t\t\t\t\tthis.boost(revert, t, pokemon, this.dex.abilities.get('Cheap Heat'));\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.m.cheapHeatTargets.clear();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tstaccato: {\r\n\t\tdesc: \"If this Pok\u00E9mon cures an opposing Pok\u00E9mon's non-volatile status condition, the affected Pok\u00E9mon will be paralyzed.\",\r\n\t\tshortDesc: \"When curing a foe's status (ex. Purify, Sparkling Aria), replaces with paralysis.\",\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (['purify', 'sparklingaria', 'wakeupslap', 'smellingsalts', 'uproar'].includes(move.id)) {\r\n\t\t\t\ttarget.addVolatile('staccato', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (this.effectState.busted) {\r\n\t\t\t\t\tthis.add('-ability', this.effectState.source, 'Staccato');\r\n\t\t\t\t\tpokemon.setStatus('par', this.effectState.source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAfterMoveSecondary(source, target, move) {\r\n\t\t\t\ttarget.removeVolatile('staccato');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Staccato\",\r\n\t\trating: 3,\r\n\t\tnum: -68,\r\n\t},\r\n\t/*\r\n\tgyaru: {\r\n\t\tdesc: \"This Pok\u00E9mon's Fighting-type moves become Fire-type moves and have their power multiplied by 1.2. This effect comes after other effects that change a move's type, but before Ion Deluge and Electrify's effects.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Fighting-type moves become Fire-type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Fighting' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\t(move as any).gyaruBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif ((move as any).gyaruBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Gyaru\",\r\n\t\trating: 4,\r\n\t\tnum: -69,\r\n\t},\r\n*/\r\n\telectroplating: {\r\n\t\tdesc: \"This Pok\u00E9mon's Electric-type attacks that make contact cause the Steel type to be added to the target, effectively making it have two or three types. Has no effect if the target is already a Steel-type. If Forest's Curse, Trick-or-Treat or Autumn Leaves adds a type to the target, it replaces the type added by this Ability and vice versa.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Electric contact moves add steel to the targets' type(s).\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (move.type === 'Electric' && move.flags['contact']) {\r\n\t\t\t\tif (target.hasType('Steel')) return;\r\n\t\t\t\tif (!target.addType('Steel')) return;\r\n\t\t\t\tthis.add('-start', target, 'typeadd', 'Steel', '[from] Ability: Electroplating');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Electroplating\",\r\n\t\trating: 4,\r\n\t\tnum: -70,\r\n\t},\r\n\tcomedian: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to Fairy-type moves. When hit by a Fairy-type move, it raises its Attack and its adjacent allies' Attack by 1 stage each.\",\r\n\t\tshortDesc: \"Fairy immunity; user's Attack and allies' Attack are both raised 1 stage if user is hit by a Fairy move.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fairy') {\r\n\t\t\t\tlet activated = false;\r\n\t\t\t\tfor (const ally of target.side.active) {\r\n\t\t\t\t\tif (!ally || (!ally.isAdjacent(target) && ally !== target)) continue;\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-ability', target, 'Comedian', 'boost');\r\n\t\t\t\t\t\tthis.add('-message', `${target.name} is howling with laughter!`);\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.boost({atk: 1}, ally, target, null, true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Comedian');\r\n\t\t\t\t\tthis.add('-message', `${target.name} is howling with laughter!`);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Fairy') {\r\n\t\t\t\tlet activated = false;\r\n\t\t\t\tfor (const ally of target.side.active) {\r\n\t\t\t\t\tif (!ally || (!ally.isAdjacent(target) && ally !== target)) continue;\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-ability', target, 'Comedian', 'boost');\r\n\t\t\t\t\t\tthis.add('-message', `${target.name} is howling with laughter!`);\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.boost({atk: 1}, ally, target, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Comedian\",\r\n\t\trating: 3,\r\n\t\tnum: -71,\r\n\t},\r\n\tpacifyingpelt: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to Fighting-type moves and restores 1/4 of its maximum HP, rounded down, when hit by a Fighting-type move.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon heals 1/4 of its max HP when hit by Fighting moves; Fighting immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fighting') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Pacifying Pelt');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Pacifying Pelt\",\r\n\t\trating: 4,\r\n\t\tnum: -72,\r\n\t},\r\n\talluring: {\r\n\t\tshortDesc: \"This Pok\u00E9mon removes the pivoting effect of opposing Pok\u00E9mon's moves.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Alluring');\r\n\t\t\tthis.add('-message', `Pok\u00E9mon opposing ${pokemon.name} can't pivot out of battle!`);\r\n\t\t},\r\n\t\tonAnyModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.side === this.effectState.target.side) return;\r\n\t\t\tif (move.selfSwitch && !move.ignoreAbility) delete move.selfSwitch;\r\n\t\t},\r\n\t\tname: \"Alluring\",\r\n\t\trating: 4,\r\n\t\tnum: -73,\r\n\t},\r\n\trebel: {\r\n\t\tshortDesc: \"This Pok\u00E9mon and allies: 1.3x damage when any Pok\u00E9mon has stat drops.\",\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tlet rebel = null;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tlet statDrop: BoostName;\r\n\t\t\t\tfor (statDrop in pokemon.boosts) {\r\n\t\t\t\t\tif (pokemon.boosts[statDrop] < 0) rebel = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (rebel) {\r\n\t\t\t\tthis.debug('Rebel boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rebel\",\r\n\t\trating: 2.5,\r\n\t\tnum: -74,\r\n\t},\r\n\t/*\r\n\tagitate: {\r\n\t\tdesc: \"When this Pok\u00E9mon raises or lowers another Pok\u00E9mon's stat stages, the effect is increased by one stage for each affected stat.\",\r\n\t\tshortDesc: \"Increases stat stage changes the Pok\u00E9mon inflicts by 1 stage.\",\r\n\t\tonAnyBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tif (!target || !source || target === source || source !== this.effectState.target) return; // doesn't work on itself\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) boost[i]! -= 1; // exacerbate debuffs\r\n\t\t\t\tif (boost[i]! > 0) boost[i]! += 1; // augment buffs\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Agitate\",\r\n\t\trating: 3,\r\n\t\tnum: -75,\r\n\t},\r\n\tsnowflake: {\r\n\t\tdesc: \"After this Pok\u00E9mon takes damage from a Rock-type move, including Stealth Rock, it also sets up Aurora Veil regardless of the current weather. It can still set an Aurora Veil even if the damage knocks it out.\",\r\n\t\tshortDesc: \"Sets up Aurora Veil after taking Rock damage, Stealth Rock - even if it faints.\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && ((effect.effectType === 'Move' && effect.type === 'Rock') || (effect.id === 'stealthrock'))\r\n\t\t\t) {\r\n\t\t\t\tthis.effectState.veiled = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (this.effectState.veiled) {\r\n\t\t\t\tthis.effectState.veiled = null;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Snowflake');\r\n\t\t\t\tpokemon.side.addSideCondition('auroraveil');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tif (this.effectState.veiled) {\r\n\t\t\t\tthis.effectState.veiled = null;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Snowflake');\r\n\t\t\t\tpokemon.side.addSideCondition('auroraveil');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Snowflake\",\r\n\t\trating: 3.5,\r\n\t\tnum: -76,\r\n\t},\r\n\tlethality: {\r\n\t\tshortDesc: \"Slicing moves: doubled damage if the target has full HP.\",\r\n\t\tonModifyMove(critRatio, source, target, move) {\r\n\t\t\tif (move.flags['slicing'] && move.basePower && target.hp === target.maxhp) {\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lethality\",\r\n\t\trating: 3.5,\r\n\t\tnum: -77,\r\n\t},\r\n*/\r\n\tqueensgambit: {\r\n\t\tdesc: \"If this Pok\u00E9mon switched in on the same turn, priority moves from opposing Pok\u00E9mon targeted at itself or at allies are prevented from having an effect. If this Ability is activated, its own first move then has +3 priority.\",\r\n\t\tshortDesc: \"Only while switching in, protects the team from priority; gains +3 priority on its next move if it does.\",\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tif (this.effectState.target.activeTurns) return;\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', target, \"ability: Queen's Gambit\", move, '[of] ' + dazzlingHolder);\r\n\t\t\t\tthis.effectState.target.addVolatile('queensgambit');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is ready to strike back!`);\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\t\treturn priority + 3;\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Queen's Gambit\",\r\n\t\trating: 2,\r\n\t\tnum: -78,\r\n\t},\r\n\tuplifting: {\r\n\t\tshortDesc: \"While this Pok\u00E9mon is present, all Pok\u00E9mon are non-grounded.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Uplifting');\r\n\t\t\tthis.add('-message', `While ${pokemon.name} is present, all Pok\u00E9mon are non-grounded.`);\r\n\t\t},\r\n\t\t// effect is in scripts.ts\r\n\t\tname: \"Uplifting\",\r\n\t\trating: 4,\r\n\t\tnum: -79,\r\n\t},\r\n\r\n\t\t\t// Kalos content\r\n\r\n\tmanagate: {\r\n\t\tdesc: \"When using a Psychic-type move, this Pok\u00E9mon moves last among Pok\u00E9mon using the same or greater priority moves, then switches out to a chosen ally.\",\r\n\t\tshortDesc: \"Psychic moves: move last in priority bracket, pivot the user out.\",\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.category === \"Status\" && move.type === \"Psychic\") return -0.1;\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category === \"Status\" && move.type === \"Psychic\" && !move.selfSwitch) move.selfSwitch = true;\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (move.category === \"Status\" && move.type === \"Psychic\" && move.selfSwitch && this.canSwitch(source.side)) {\r\n\t\t\t\tthis.add('-ability', source, 'Mana Gate');\r\n\t\t\t\tthis.add('-message', `${source.name} switches out using Mana Gate!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Mana Gate\",\r\n\t\trating: 3,\r\n\t\tnum: -1001,\r\n\t},\r\n\tpartialeclipse: {\r\n\t\tdesc: \"Causes all adjacent Pok\u00E9mon to lose 1/8 of their maximum HP, rounded down, at the end of each turn if this Pok\u00E9mon has 1/2 or less of its maximum HP.\",\r\n\t\tshortDesc: \"When HP is 1/2 or less, adjacent Pok\u00E9mon lose 1/8 of their max HP each turn.\",\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.hp || pokemon.hp > pokemon.maxhp / 2) return;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target && target.hp) this.damage(target.baseMaxhp / 8, target, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Partial Eclipse\",\r\n\t\trating: 3,\r\n\t\tnum: -1002,\r\n\t},\r\n\tmarshlandlord: {\r\n\t\tshortDesc: \"On switch-in, summons Water Sport and Mud Sport.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-ability', source, 'Marshland Lord');\r\n\t\t\tthis.field.addPseudoWeather('watersport');\r\n\t\t\tthis.field.addPseudoWeather('mudsport');\r\n\t\t},\r\n\t\tname: \"Marshland Lord\",\r\n\t\trating: 3.5,\r\n\t\tnum: -1003,\r\n\t},\r\n\tbadinfluence: {\r\n\t\tshortDesc: \"If this Pok\u00E9mon has a stat stage lowered, all Pok\u00E9mon on the field have the same stat stage lowered.\",\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (!boost || effect.id === 'mirrorarmor' || effect.id === 'badinfluence') return;\r\n\t\t\tlet b: BoostName;\r\n\t\t\tconst negativeBoost: SparseBoostsTable = {};\r\n\t\t\tfor (b in boost) {\r\n\t\t\t\tif (boost[b]! < 0) {\r\n\t\t\t\t\tif (target.boosts[b] === -6) continue;\r\n\t\t\t\t\tnegativeBoost[b] = boost[b];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon === target || pokemon.fainted) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', target, 'Bad Influence');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost(negativeBoost, pokemon, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bad Influence\",\r\n\t\trating: 4,\r\n\t\tnum: -1004,\r\n\t},\r\n\tpetrification: {\r\n\t\tshortDesc: \"Ice immunity; adds Rock to this Pok\u00E9mon when hit with an Ice move.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ice') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (target.hasType('Rock') || !target.addType('Rock')) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Petrification');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', target, 'typeadd', 'Rock', '[from] ability: Petrification');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Petrification\",\r\n\t\trating: 3,\r\n\t\tnum: -1005,\r\n\t},\r\n\trepulsive: {\r\n\t\tshortDesc: \"When lowering a target's stats, also lowers target's Defense by 1 stage.\",\r\n\t\tonAnyAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || source !== this.effectState.target || effect.name === 'Repulsive') return;\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered && target.hp) {\r\n\t\t\t\tthis.add('-ability', source, 'Repulsive');\r\n\t\t\t\tthis.boost({def: -1}, target, source, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Repulsive\",\r\n\t\trating: 3,\r\n\t\tnum: -1006,\r\n\t},\r\n\thyperspacemayhem: {\r\n\t\tshortDesc: \"Hyperspace Hole summons a random restricted Legendary Pok\u00E9mon to attack instead.\",\r\n\t\tname: \"Hyperspace Mayhem\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move && move.id === 'hyperspacehole') move.target = 'self'; // cosmetic\r\n\t\t},\r\n\t\tonSourceTryHitPriority: 1,\r\n\t\tonSourceTryHit(target, source, move) {\r\n\t\t\tif (\r\n\t\t\t\tmove && move.id === 'hyperspacehole' && source.hasAbility('hyperspacemayhem')\r\n\t\t\t) {\r\n\t\t\t\tlet summons = [];\r\n\t\t\t\tfor (const id in hyperspaceLookup) summons.push(id);\r\n\t\t\t\tconst summon = this.sample(summons);\r\n\t\t\t\tconst userBackup = {\r\n\t\t\t\t\tname: source.name,\r\n\t\t\t\t\tfullname: source.fullname,\r\n\t\t\t\t\tstatus: source.status,\r\n\t\t\t\t\tgender: source.gender,\r\n\t\t\t\t\tspecies: source.species,\r\n\t\t\t\t\tnature: this.dex.natures.get(source.set.nature).name,\r\n\t\t\t\t\tevs: source.set.evs,\r\n\t\t\t\t\tivs: source.set.ivs,\r\n\t\t\t\t\tshiny: source.set.shiny, //update with \"were we shiny last turn\"\r\n\t\t\t\t\tvolatiles: source.volatiles,\r\n\t\t\t\t\tlevel: source.level,\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tthis.add('-ability', source, 'Hyperspace Mayhem');\r\n\t\t\t\t\r\n\t\t\t\t//Shininess check moved here, to as early as we can after doing the backup.\r\n\t\t\t\tlet isShiny = userBackup.shiny;\r\n\t\t\t\t//console.log(\"Are shiny already? \" + isShiny);\r\n\t\t\t\tif (this.randomChance(1, 4096) || this.randomChance(1, 4096) || this.randomChance(1, 4096)) { // Shiny Charm P:\r\n\t\t\t\t\t//console.log(\"Rolled a Shiny\");\r\n\t\t\t\t\tisShiny = true;\r\n\t\t\t\t\tsource.set.shiny = true;\r\n\t\t\t\t\tsource.shiny = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"Rolled a non-Shiny\");\r\n\t\t\t\t\tisShiny = false;\r\n\t\t\t\t\tsource.set.shiny = false;\r\n\t\t\t\t\tsource.shiny = false;\r\n\t\t\t\t}\r\n\t\t\t\tlet wasShiny = userBackup.shiny ? true : false;\r\n\t\t\t\tif (wasShiny != isShiny) {\r\n\t\t\t\t\t//console.log(\"Switching shininess\");\r\n\t\t\t\t\tlet details = source.species + (userBackup.level === 100 ? '' : ', L' + userBackup.level) +\r\n\t\t\t\t\t\t(userBackup.gender === '' ? '' : ', ' + userBackup.gender) + (isShiny ? ', shiny' : '');\r\n\t\t\t\t\tthis.add('replace', source, details); //???\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst boostBackup: SparseBoostsTable = {};\r\n\t\t\t\tfor (const stat in source.boosts) {\r\n\t\t\t\t\tboostBackup[stat] = source.boosts[stat];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsource.volatiles = {}; // clear volatiles silently\r\n\t\t\t\tsource.addVolatile('hyperspacemayhem', source, null); // appropriately modify certain moves, like Teleport and Shadow Force\r\n\t\t\t\tthis.add('-message', `By using Hyperspace Hole, ${source.name} summons a Legendary Pok\u00E9mon!`);\r\n\r\n\t\t\t\tfor (const stat in boostBackup) {\r\n\t\t\t\t\tboostBackup[stat] *= -1;\r\n\t\t\t\t}\r\n\t\t\t\tsource.volatiles['hyperspacemayhem'].midtransform = true;\r\n\t\t\t\tthis.boost(boostBackup, source, source, null, true);\r\n\t\t\t\tsource.name = this.dex.species.get(summon).baseSpecies ? this.dex.species.get(summon).baseSpecies : this.dex.species.get(summon).name;\r\n\t\t\t\tsource.fullname = source.side.id + ': ' + source.name;\r\n\t\t\t\tsource.gender = ''; // not dealing with this because (thank goodness!) none of these have genders anyway\r\n\t\t\t\tsource.set.evs = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0};\r\n\t\t\t\tsource.set.ivs = {hp: this.random(32), atk: this.random(32), def: this.random(32), spa: this.random(32), spd: this.random(32), spe: this.random(32)};\r\n\t\t\t\t// to do: set three of those to 31 at random\r\n\t\t\t\t\r\n\t\t\t\tlet ivs = [];\r\n\t\t\t\tlet ivsB = [];\r\n\t\t\t\tlet ivsC = [];\r\n\t\t\t\tlet perfectIVs = [];\r\n\t\t\t\tfor (const id in source.set.ivs) ivs.push(id);\r\n\t\t\t\tperfectIVs.push(this.sample(ivs));\r\n\t\t\t\tfor (const id in source.set.ivs) {\r\n\t\t\t\t\tif (perfectIVs.includes(id)) continue;\r\n\t\t\t\t\tivsB.push(id);\r\n\t\t\t\t}\r\n\t\t\t\tperfectIVs.push(this.sample(ivsB));\r\n\t\t\t\tfor (const id in source.set.ivs) {\r\n\t\t\t\t\tif (perfectIVs.includes(id)) continue;\r\n\t\t\t\t\tivsC.push(id);\r\n\t\t\t\t}\r\n\t\t\t\tperfectIVs.push(this.sample(ivsC));\r\n\t\t\t\tsource.set.ivs[perfectIVs[0]] = 31;\r\n\t\t\t\tsource.set.ivs[perfectIVs[1]] = 31;\r\n\t\t\t\tsource.set.ivs[perfectIVs[2]] = 31;\r\n\r\n\t\t\t\tconst natures = this.dex.natures.all();\r\n\t\t\t\tsource.nature = this.sample(natures).name;\r\n        \r\n\t\t\t\tthis.add('-message', `It's ${source.name}!`);\r\n\r\n\t\t\t\tsource.volatiles['hyperspacemayhem'].userBackup = userBackup;\r\n\t\t\t\tsource.volatiles['hyperspacemayhem'].fakelegend = true;\r\n\t\t\t\tsource.formeChange(this.dex.species.get(summon), move); // make sure this is silent?\r\n\t\t\t\tif (hyperspaceLookup[summon].move === \"Geomancy\" || hyperspaceLookup[summon].move === \"Shadow Force\") {\r\n\t\t\t\t\tthis.add('-prepare', source, hyperspaceLookup[summon].move);\r\n\t\t\t\t\tsource.addVolatile(this.dex.moves.get(hyperspaceLookup[summon].move).id, target);\r\n\t\t\t\t}\r\n\t\t\t\tif (hyperspaceLookup[summon].move === \"Geomancy\") source.volatiles['hyperspacemayhem'].geomancy = true;\r\n\t\t\t\tthis.actions.useMove(hyperspaceLookup[summon].move, source, this.getRandomTarget(source, hyperspaceLookup[summon].move), this.dex.moves.get('instruct'));\r\n\t\t\t\tif (hyperspaceLookup[summon].move === \"Geomancy\") {\r\n\t\t\t\t\tsource.volatiles['hyperspacemayhem'].geomancy = null;\r\n\t\t\t\t\tsource.name = this.dex.species.get(summon).baseSpecies ? this.dex.species.get(summon).baseSpecies : this.dex.species.get(summon).name;\r\n\t\t\t\t\tsource.fullname = source.side.id + ': ' + source.name;\r\n\t\t\t\t}\r\n\t\t\t\tif (hyperspaceLookup[summon].move === \"Teleport\") this.add('-message', `Oops! Looks like ${source.name} doesn't know how to battle!`);\r\n\t\t\t\tsource.volatiles['hyperspacemayhem'].fakelegend = null;\r\n\r\n\t\t\t\t// to do: make a special exception for Zacian and Rayquaza's stat modifiers\r\n\t\t\t\t// (they *should* work correctly as-is, but the way they display will be very misleading)\r\n\r\n\t\t\t\t// then change everything back to Hoopa\r\n\t\t\t\tsource.name = userBackup.name;\r\n\t\t\t\tsource.fullname = userBackup.fullname;\r\n\t\t\t\tsource.status = userBackup.status;\r\n\t\t\t\tsource.gender = userBackup.gender;\r\n\t\t\t\tsource.nature = userBackup.nature;\r\n\t\t\t\tsource.set.evs = userBackup.evs;\r\n\t\t\t\tsource.set.ivs = userBackup.ivs;\r\n\t\t\t\t//Okay so what this relies on is just. not updating this. this doesnt update visually on its own,\r\n\t\t\t\t//so I'm using it to store whether we WERE shiny last turn. \r\n\t\t\t\t//Practically, it would never be shiny twice in a row, but Iiiiiii this is fine.\r\n\t\t\t\t//source.set.shiny = userBackup.shiny;\r\n\t\t\t\tsource.shiny = userBackup.shiny;\r\n\r\n\t\t\t\t// silently restore boosts\r\n\t\t\t\tif (hyperspaceLookup[summon].move !== \"Geomancy\") {\r\n\t\t\t\t\tconst resetStats: SparseBoostsTable = {};\r\n\t\t\t\t\tfor (const stat in source.boosts) {\r\n\t\t\t\t\t\tresetStats[stat] = source.boosts[stat] * -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.boost(resetStats, source, source, null, true);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const stat in boostBackup) {\r\n\t\t\t\t\tboostBackup[stat] *= -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost(boostBackup, source, source, null, true);\r\n\t\t\t\tsource.volatiles['hyperspacemayhem'].midtransform = null;\r\n\t\t\t\tdelete source.volatiles['hyperspacemayhem']; // for everything\r\n\t\t\t\tsource.volatiles = userBackup.volatiles;\r\n\r\n\t\t\t\t// change form back\r\n\t\t\t\tsource.formeChange(userBackup.species, move);\r\n\r\n\t\t\t\tthis.add('-message', `${this.dex.species.get(summon).baseSpecies ? this.dex.species.get(summon).baseSpecies : this.dex.species.get(summon).name} went back home!`);\r\n\t\t\t\tthis.add('-message', `Bye, bye, ${this.dex.species.get(summon).baseSpecies ? this.dex.species.get(summon).baseSpecies : this.dex.species.get(summon).name}!`);\r\n\r\n\t\t\t\treturn null; // Hyperspace Hole itself doesn't actually get used\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonModifyMove(move, pokemon) {\r\n\t\t\t\tif (move.selfSwitch) delete move.selfSwitch; // for Cosmog\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, effect) {\r\n\t\t\t\tthis.hint(`${target.name} is a different Pok\u00E9mon, so the damage it takes doesn't affect ${this.effectState.userBackup.name}!`);\r\n\t\t\t\treturn 0;\r\n\t\t\t},\r\n\t\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\t\treturn null; // avoid ever rolling Flame Body, Static, et cetera\r\n\t\t\t},\r\n\t\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\t\tif (status.id === 'geomancy' || status.id === 'shadowforce') return;\r\n\t\t\t\treturn null; // avoid ever rolling Cursed Body, et cetera\r\n\t\t\t},\r\n\t\t\tonBasePower(basePower, user, target, move) {\r\n\t\t\t\tif (user.baseSpecies.num === 487 && (move.type === 'Ghost' || move.type === 'Dragon')) { // for Giratina\r\n\t\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\trating: 4,\r\n\t\tnum: -1007,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
