{
  "version": 3,
  "sources": ["../../../../data/mods/m4av6/scripts.ts"],
  "sourcesContent": ["import {toID} from '../../../sim/dex-data';\r\n\r\n// tiering information\r\nconst ag = [\"gengarmega\", \"rayquazamega\", \"zacian\", \"zaciancrowned\", \"calyrexshadow\"];\r\nconst uber = [\r\n\t// M4A first\r\n\t\"butterfreemega\", \"cinderacemega\", \"dragapultmega\", \"clefablemega\", \"dodriomega\", \"empoleonmega\", \"hydreigonmega\", \"slowkinggalarmega\",\r\n\t// Natdex second\r\n\t\"alakazammega\", \"blastoisemega\", \"blazikenmega\", \"cinderace\", \"darkrai\", \"darmanitangalar\", \"deoxysattack\", \"deoxysspeed\", \"deoxys\", \"dialga\", \"dracovish\", \"dragapult\", \"lucariomega\", \"eternatus\", \"giratina\", \"giratinaorigin\", \"groudon\", \"groudonprimal\", \"hooh\", \"kangaskhanmega\", \"kyogre\", \"kyogreprimal\", \"kyuremblack\", \"kyuremwhite\", \"landorus\", \"lucariomega\", \"lugia\", \"lunala\", \"magearna\", \"magearnaoriginal\", \"marshadow\", \"metagrossmega\", \"mewtwo\", \"mewtwomegax\", \"mewtwomegay\", \"naganadel\", \"necrozmadawnwings\", \"necrozmaduskmane\", \"necrozmaultra\", \"palkia\", \"pheromosa\", \"rayquaza\", \"reshiram\", \"salamencemega\", \"shayminsky\", \"solgaleo\", \"spectrier\", \"tornadustherian\", \"urshifu\", \"xerneas\", \"yveltal\", \"zamazenta\", \"zamazentacrowned\", \"zekrom\", \"zygarde\", \"zygardecomplete\", \"calyrexice\", \"arceus\", \"arceusfire\", \"arceuswater\", \"arceuselectric\", \"arceusgrass\", \"arceusice\", \"arceusfighting\", \"arceuspoison\", \"arceusground\", \"arceusflying\", \"arceuspsychic\", \"arceusbug\", \"arceusrock\", \"arceusghost\", \"arceusdragon\", \"arceusdark\", \"arceussteel\", \"arceusfairy\", \"genesect\", \"genesectburn\", \"genesectchill\", \"genesectdouse\", \"genesectshock\",\r\n];\r\nconst viabilityList = [\r\n\t\"aegislash\", \"alomomola\", \"amoonguss\", \"arctozolt\", \"azumarill\", \"barraskewda\", \"bisharp\", \"blacephalon\", \"blaziken\", \"blissey\", \"buzzwole\",\r\n\t\"clefable\", \"corviknight\", \"deoxysdefense\", \"dragonite\", \"excadrill\", \"ferrothorn\", \"garchomp\", \"gastrodon\", \"gengar\", \"gliscor\",\r\n\t\"greninjaash\", \"greninja\", \"grimmsnarl\", \"hawlucha\", \"heatran\", \"hippowdon\", \"hoopaunbound\", \"hydreigon\", \"kartana\", \"keldeo\", \"kommoo\",\r\n\t\"kyurem\", \"landorustherian\", \"latias\", \"magnezone\", \"melmetal\", \"mew\", \"moltres\", \"nidoqueen\", \"pelipper\", \"regieleki\", \"rillaboom\", \"rotomwash\", \"scizor\",\r\n\t\"serperior\", \"skarmory\", \"slowbro\", \"slowking\", \"slowkinggalar\", \"tangrowth\", \"tapubulu\", \"tapufini\", \"tapukoko\", \"tapulele\", \"thundurus\", \"torkoal\",\r\n\t\"toxapex\", \"tyranitar\", \"urshifurapidstrike\", \"victini\", \"volcanion\", \"volcarona\", \"weavile\", \"zapdos\", \"zapdosgalar\", \"zeraora\",\r\n];\r\nconst megaViabilityList = [\r\n\t\"araquanidmega\", \"bastiodonmega\", \"bibarelmega\", \"chandeluremega\", \"conkeldurrmega\", \"corviknightmega\", \"dhelmisemega\", \"dragalgemega\",\r\n\t\"eelektrossmega\", \"falinksmega\", \"flygonmega\", \"froslassmega\", \"garbodormega\", \"hawluchamega\", \"honchkrowmega\", \"infernapemega\", \"inteleonmega\",\r\n\t\"krookodilemega\", \"lanturnmega\", \"latiasmega\", \"lopunnymega\", \"lurantismega\", \"luxraymega\", \"lycanrocmega\", \"magmortarmega\", \"medichammega\",\r\n\t\"meowsticmega\", \"mimikyumega\", \"mimikyumegabusted\", \"nidoqueenmega\", \"noivernmega\", \"orbeetlemega\", \"raichumega\", \"regicemega\", \"reuniclusmega\",\r\n\t\"scizormega\", \"sirfetchdmega\", \"slowkingmega\", \"staraptormega\", \"starmiemega\", \"stoutlandmega\", \"swampertmega\", \"talonflamemega\",\r\n\t\"typhlosionmega\", \"tyranitarmega\", \"tyrantrummega\", \"vanilluxemega\", \"wailordmega\",\r\n];\r\n/*\r\n// doubles tiers (currently unused because the teambuilder doesn't support them well)\r\nconst vgcbanned = [\"mew\", \"celebi\", \"jirachi\", \"deoxys\", \"deoxysattack\", \"deoxysdefense\", \"deoxysspeed\", \"phione\", \"manaphy\", \"darkrai\", \"shaymin\", \"shayminsky\", \"victini\", \"keldeo\", \"keldeoresolute\", \"meloetta\", \"greninjaash\", \"diancie\", \"dianciemega\", \"hoopa\", \"hoopaunbound\", \"volcanion\", \"magearna\", \"magearnaoriginal\", \"marshadow\", \"zeraora\", \"zarude\", \"arceus\", \"arceusfire\", \"arceuswater\", \"arceuselectric\", \"arceusgrass\", \"arceusice\", \"arceusfighting\", \"arceuspoison\", \"arceusground\", \"arceusflying\", \"arceuspsychic\", \"arceusbug\", \"arceusrock\", \"arceusghost\", \"arceusdragon\", \"arceusdark\", \"arceussteel\", \"arceusfairy\", \"genesect\", \"genesectburn\", \"genesectchill\", \"genesectdouse\", \"genesectshock\"];\r\nconst restricted = [\"mewtwo\", \"hooh\", \"lugia\", \"kyogre\", \"kyogreprimal\", \"groudon\", \"groudonprimal\", \"rayquaza\", \"rayquazamega\", \"dialga\", \"palkia\", \"giratina\", \"giratinaorigin\", \"reshiram\", \"zekrom\", \"kyurem\", \"kyuremblack\", \"kyuremwhite\", \"xerneas\", \"yveltal\", \"zygarde\", \"zygarde10\", \"zygardecomplete\", \"cosmog\", \"cosmoem\", \"solgaleo\", \"lunala\", \"necrozma\", \"necrozmadawnwings\", \"necrozmaduskmane\", \"necrozmaultra\", \"zacian\", \"zaciancrowned\", \"zamazenta\", \"zamazentacrowned\", \"eternatus\", \"calyrex\", \"calyrexice\", \"calyrexshadow\"];\r\nconst s = [\"incineroar\", \"dhelmisemega\", \"slowkingmega\", \"tapufini\"];\r\nconst aplus = [\"blastoise\", \"moltresgalar\", \"glastrier\", \"ninetalesalolamega\", \"mawilemega\", \"rillaboommega\", \"regieleki\", \"spectrier\", \"urshifu\", \"whimsicott\"];\r\nconst a = [\"amoonguss\", \"aurorusmega\", \"empoleonmega\", \"falinksmegalegion\", \"metagrossmega\"];\r\nconst aminus = [\"aegislash\", \"clefairy\", \"comfey\", \"dusclops\", \"grimmsnarl\", \"hatterene\", \"kartana\", \"landorustherian\", \"charizardmegay\", \"cinderacemega\", \"gengarmega\", \"gigalithmega\", \"kangaskhanmega\", \"orbeetlemega\", \"reuniclusmega\", \"murkrow\"];\r\nconst bplus = [\"arctovish\", \"arctozolt\", \"dracovish\", \"dracozolt\", \"excadrill\", \"indeedeef\", \"kommoo\", \"ludicolo\", \"hawluchamega\", \"luxraymega\", \"salamencemega\", \"politoed\", \"tapulele\", \"torkoal\", \"venusaur\"];\r\nconst b = [\"araquanid\", \"gothitelle\", \"hitmontop\", \"kingdra\", \"dragonitemega\", \"meowsticfmega\", \"pelipper\", \"porygon2\", \"rillaboom\", \"rotomheat\", \"stakataka\", \"urshifurapidstrike\", \"zapdos\"];\r\nconst bminus = [\"cresselia\", \"dragapult\", \"ferrothorn\", \"weezinggalar\", \"gastrodon\", \"araquanidmega\", \"corviknightmega\", \"flygonmega\", \"mudsdalemega\", \"samurottmega\", \"milotic\", \"raichu\", \"rotomwash\", \"tapubulu\", \"togekiss\", \"tsareena\", \"weezing\"];\r\nconst c = [\"aerodactyl\", \"marowakalola\", \"bronzong\", \"coalossal\", \"celesteela\", \"crobat\", \"articunogalar\", \"zapdosgalar\", \"gyarados\", \"heatran\", \"jellicent\", \"liepard\", \"dragalgemega\", \"hydreigonmega\", \"honchkrowmega\", \"leavannymega\", \"registeelmega\", \"swampertmega\", \"meowsticm\", \"ninetales\", \"regigigas\", \"sirfetchd\", \"slaking\", \"staraptor\", \"suicune\", \"terrakion\", \"tornadus\", \"weavile\"];\r\n*/\r\n\r\nexport const Scripts: ModdedBattleScriptsData = {\r\n\tinherit: 'gen8',\r\n\tgen: 8,\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['Mega of the Day!', 'Popular', 'Popular Megas', 'Other Megas', 'Heat!', 'NFE'],\r\n\t},\r\n\tinit() {\r\n\t\tif (this.dataCache.Pokedex.raichumega) return; // don't bother generating the dex if it's already stored!\r\n\t\tlet megaList = [];\r\n\t\tfor (const id in this.dataCache.Pokedex) {\r\n\t\t\tconst pokemon = this.dataCache.Pokedex[id];\r\n\r\n\t\t\t// modding\r\n\t\t\tif (pokemon.movepoolAdditions) {\r\n\t\t\t\tfor (const move of pokemon.movepoolAdditions) {\r\n\t\t\t\t\tthis.modData('Learnsets', this.toID(id)).learnset[this.toID(move)] = [\"8M\"];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// generating Megas\r\n\t\t\tif (pokemon && pokemon.mega) {\r\n\t\t\t\tconst newMega = this.dataCache.Pokedex[pokemon.mega] = {name: pokemon.megaName};\r\n\r\n\t\t\t\tpokemon.otherFormes = pokemon.otherFormes ? pokemon.otherFormes.concat([newMega.name]) : [pokemon.megaName];\r\n\t\t\t\tpokemon.formeOrder = pokemon.formeOrder ? pokemon.formeOrder.concat([newMega.name]) : [pokemon.name, pokemon.megaName];\r\n\r\n\t\t\t\tnewMega.num = pokemon.num;\r\n\t\t\t\tnewMega.baseSpecies = pokemon.name;\r\n\t\t\t\tnewMega.forme = \"Mega\";\r\n\r\n\t\t\t\tnewMega.types = pokemon.megaType || pokemon.types;\r\n\t\t\t\tnewMega.abilities = pokemon.megaAbility || pokemon.abilities;\r\n\t\t\t\tnewMega.baseStats = pokemon.megaStats || pokemon.baseStats;\r\n\t\t\t\tnewMega.heightm = pokemon.megaHeightm || pokemon.heightm;\r\n\t\t\t\tnewMega.weightkg = pokemon.megaWeightkg || pokemon.weightkg;\r\n\t\t\t\tnewMega.eggGroups = pokemon.eggGroups;\r\n\t\t\t\tnewMega.color = pokemon.megaColor || pokemon.color;\r\n\t\t\t\tnewMega.battleOnly = pokemon.name; // just in case\r\n\r\n\t\t\t\tnewMega.creator = pokemon.megaCreator || null;\r\n\t\t\t\tnewMega.requiredItem = pokemon.megaStone || null;\r\n\t\t\t\tif (!this.modData('FormatsData', pokemon.mega)) this.data.FormatsData[pokemon.mega] = { };\r\n\r\n\t\t\t\tif (uber.includes(pokemon.mega)) this.modData('FormatsData', pokemon.mega).tier = \"Uber\";\r\n\t\t\t\telse {\r\n\t\t\t\t\tmegaList.push(pokemon.mega);\r\n\t\t\t\t\tif (megaViabilityList.includes(pokemon.mega)) this.modData('FormatsData', pokemon.mega).tier = \"Popular Megas\";\r\n\t\t\t\t\telse this.modData('FormatsData', pokemon.mega).tier = \"Other Megas\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// tiering\r\n\t\t\tif (!this.modData('FormatsData', id) && this.dataCache.Pokedex[id].creator) this.data.FormatsData[id] = { }; // for non-dynamic Pok\u00E9mon like Sawsbuck\r\n\t\t\tif (this.modData('FormatsData', id)) {\r\n\t\t\t\tif (this.modData('FormatsData', id).isNonstandard === 'Past') this.modData('FormatsData', id).isNonstandard = null;\r\n\t\t\t\t// singles tiers\r\n\t\t\t\tif (ag.includes(id)) this.modData('FormatsData', id).tier = \"AG\";\r\n\t\t\t\telse if (uber.includes(id)) this.modData('FormatsData', id).tier = \"Uber\";\r\n\t\t\t\telse if (viabilityList.includes(id)) this.modData('FormatsData', id).tier = \"Popular\";\r\n\t\t\t\telse if (megaViabilityList.includes(id)) this.modData('FormatsData', id).tier = \"Popular Megas\";\r\n\t\t\t\telse if (this.dataCache.Pokedex[id] && this.dataCache.Pokedex[id].name.includes('-Mega')) this.modData('FormatsData', id).tier = \"Other Megas\";\r\n\t\t\t\telse if (!this.modData('FormatsData', id).isNonstandard && this.dataCache.Pokedex[id] && !this.dataCache.Pokedex[id].evos && !id.startsWith('pikachu') && !id.startsWith('meltan')) this.modData('FormatsData', id).tier = \"Heat!\"; // default (FE)\r\n\t\t\t\telse if (!this.modData('FormatsData', id).isNonstandard) this.modData('FormatsData', id).tier = \"NFE\"; // default (NFE)\r\n\t\t\t\tif (id === 'crucibellemega') this.modData('FormatsData', id).tier = \"CAP\"; // hard-coding for things that don't exist\r\n\t\t\t}\r\n\t\t}\r\n\t\t// up to three Megas of the Day\r\n\t\tlet random1 = Math.floor(Math.random() * megaList.length);\r\n\t\tlet random2 = Math.floor(Math.random() * (megaList.length - 1));\r\n\t\tlet random3 = Math.floor(Math.random() * (megaList.length - 2));\r\n\t\tif (random2 >= random1) random2 += 1;\r\n\t\tif (random3 >= random1) random3 += 1;\r\n\t\tif (random3 >= random2) random3 += 1;\r\n\t\tthis.modData('FormatsData', megaList[random1]).tier = \"Mega of the Day!\";\r\n\t\tthis.modData('FormatsData', megaList[random2]).tier = \"Mega of the Day!\";\r\n\t\tthis.modData('FormatsData', megaList[random3]).tier = \"Mega of the Day!\";\r\n\t// console.log('Megas of the Day: ' + megaList[random1] + ', ' + megaList[random2] + ', ' + megaList[random3]); \r\n\t},\r\n\r\n\tactions: {\r\n\tcanMegaEvo(pokemon) {\r\n\t\tconst altForme = pokemon.baseSpecies.otherFormes && this.dex.species.get(pokemon.baseSpecies.otherFormes[0]);\r\n\t\tconst item = pokemon.getItem();\r\n\t\tif (\r\n\t\t  altForme?.isMega && altForme?.requiredMove &&\r\n\t\t  pokemon.baseMoves.includes(this.dex.toID(altForme.requiredMove)) && !item.zMove\r\n\t\t) {\r\n\t\t\treturn altForme.name;\r\n\t\t}\r\n\t\tif (item.name === \"Lycanite\" && pokemon.species.name === \"Lycanroc-Midnight\") return \"Lycanroc-Midnight-Mega\";\r\n\t\tif (item.name === \"Lycanite\" && pokemon.species.name === \"Lycanroc-Dusk\") return \"Lycanroc-Dusk-Mega\";\r\n\t\tif (item.name === \"Raichunite\" && pokemon.species.name === \"Raichu-Alola\") return null;\r\n\t\tif (item.name === \"Slowbronite\" && pokemon.species.name === \"Slowbro-Galar\") return null;\r\n\t\tif (item.name === \"Slowkinite\" && pokemon.species.name === \"Slowking-Galar\") return \"Slowking-Galar-Mega\";\r\n\t\tif (item.name === \"Gourgeite\" && pokemon.species.name === \"Gourgeist-Small\") return \"Gourgeist-Small-Mega\";\r\n\t\tif (item.name === \"Gourgeite\" && pokemon.species.name === \"Gourgeist-Large\") return \"Gourgeist-Large-Mega\";\r\n\t\tif (item.name === \"Gourgeite\" && pokemon.species.name === \"Gourgeist-Super\") return \"Gourgeist-Super-Mega\";\r\n\t\tif (item.name === \"Reginite\") {\r\n\t\t\t\tif (pokemon.species.name === \"Regice\") return \"Regice-Mega\";\r\n\t\t\t\tif (pokemon.species.name === \"Registeel\") return \"Registeel-Mega\";\r\n\t\t}\r\n\t\tif (item.name === \"Meowsticite\" && pokemon.species.name === \"Meowstic-F\") return \"Meowstic-F-Mega\";\r\n\t\tif (item.name === \"Sawsbuckite\" && pokemon.species.id === \"sawsbucksummer\") return \"Sawsbuck-Summer-Mega\";\r\n\t\tif (item.name === \"Sawsbuckite\" && pokemon.species.id === \"sawsbuckautumn\") return \"Sawsbuck-Autumn-Mega\";\r\n\t\tif (item.name === \"Sawsbuckite\" && pokemon.species.id === \"sawsbuckwinter\") return \"Sawsbuck-Winter-Mega\";\r\n\t\tif (item.name === \"Toxtricitite\" && pokemon.species.name === \"Toxtricity-Low-Key\") return \"Toxtricity-Low-Key-Mega\";\r\n\t\tif (item.name === \"Ninetalesite\") {\r\n\t\t\tif (pokemon.species.name === \"Ninetales-Alola\") return \"Ninetales-Alola-Mega\";\r\n\t\t\telse return null;\r\n\t\t}\r\n\t\tif (item.name === \"Dugtrionite\" && pokemon.species.name === \"Dugtrio-Alola\") return null;\r\n\t\tif (item.name === \"Rapidashinite\" && pokemon.species.name === \"Rapidash-Galar\") return null;\r\n\t\tif (item.name === \"Wormadamite\") {\r\n\t\t\tif (pokemon.species.name === \"Wormadam-Sandy\") return \"Wormadam-Sandy-Mega\";\r\n\t\t\telse return null;\r\n\t\t}\r\n\t\tif (item.name === \"Hoopanite\" && pokemon.species.name === \"Hoopa-Unbound\") return null;\r\n\t\tif (item.megaEvolves !== pokemon.species.name || item.megaStone === pokemon.species.name) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn item.megaStone;\r\n\t},\r\n\trunMegaEvo(pokemon: Pokemon) {\r\n\t\tconst speciesid = pokemon.canMegaEvo || pokemon.canUltraBurst;\r\n\t\tif (!speciesid) return false;\r\n\r\n\t\tif (pokemon.illusion) this.battle.singleEvent('End', this.battle.dex.abilities.get('Illusion'), pokemon.abilityState, pokemon);\r\n\t\tpokemon.formeChange(speciesid, pokemon.getItem(), true);\r\n\r\n\t\t// Limit one mega evolution\r\n\t\tconst wasMega = pokemon.canMegaEvo;\r\n\t\tfor (const ally of pokemon.side.pokemon) {\r\n\t\t\tif (wasMega) {\r\n\t\t\t\tally.canMegaEvo = null;\r\n\t\t\t} else {\r\n\t\t\t\tally.canUltraBurst = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.battle.runEvent('AfterMega', pokemon);\r\n\t\treturn true;\r\n\t},\r\n\r\n\t},\r\n\r\n\t getDamage(\r\n\t\tsource: Pokemon, target: Pokemon, move: string | number | ActiveMove,\r\n\t\tsuppressMessages = false\r\n\t): number | undefined | null | false {\r\n\t\tif (typeof move === 'string') move = this.dex.getActiveMove(move);\r\n\r\n\t\tif (typeof move === 'number') {\r\n\t\t\tconst basePower = move;\r\n\t\t\tmove = new Dex.Move({\r\n\t\t\t\tbasePower,\r\n\t\t\t\ttype: '???',\r\n\t\t\t\tcategory: 'Physical',\r\n\t\t\t\twillCrit: false,\r\n\t\t\t}) as ActiveMove;\r\n\t\t\tmove.hit = 0;\r\n\t\t}\r\n\r\n\t\tif (!move.ignoreImmunity || (move.ignoreImmunity !== true && !move.ignoreImmunity[move.type])) {\r\n\t\t\tif (!target.runImmunity(move.type, !suppressMessages)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (move.ohko) return target.maxhp;\r\n\t\tif (move.damageCallback) return move.damageCallback.call(this.battle, source, target);\r\n\t\tif (move.damage === 'level') {\r\n\t\t\treturn source.level;\r\n\t\t} else if (move.damage) {\r\n\t\t\treturn move.damage;\r\n\t\t}\r\n\r\n\t\tconst category = this.battle.getCategory(move);\r\n\r\n\t\tlet basePower: number | false | null = move.basePower;\r\n\t\tif (move.basePowerCallback) {\r\n\t\t\tbasePower = move.basePowerCallback.call(this.battle, source, target, move);\r\n\t\t}\r\n\t\tif (!basePower) return basePower === 0 ? undefined : basePower;\r\n\t\tbasePower = this.battle.clampIntRange(basePower, 1);\r\n\r\n\t\tlet critMult;\r\n\t\tlet critRatio = this.battle.runEvent('ModifyCritRatio', source, target, move, move.critRatio || 0);\r\n\t\tif (this.battle.gen <= 5) {\r\n\t\t\tcritRatio = this.battle.clampIntRange(critRatio, 0, 5);\r\n\t\t\tcritMult = [0, 16, 8, 4, 3, 2];\r\n\t\t} else {\r\n\t\t\tcritRatio = this.battle.clampIntRange(critRatio, 0, 4);\r\n\t\t\tif (this.battle.gen === 6) {\r\n\t\t\t\tcritMult = [0, 16, 8, 2, 1];\r\n\t\t\t} else {\r\n\t\t\t\tcritMult = [0, 24, 8, 2, 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst moveHit = target.getMoveHitData(move);\r\n\t\tmoveHit.crit = move.willCrit || false;\r\n\t\tif (move.willCrit === undefined) {\r\n\t\t\tif (critRatio) {\r\n\t\t\t\tmoveHit.crit = this.battle.randomChance(1, critMult[critRatio]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (moveHit.crit) {\r\n\t\t\tmoveHit.crit = this.battle.runEvent('CriticalHit', target, null, move);\r\n\t\t}\r\n\r\n\t\t// happens after crit calculation\r\n\t\tbasePower = this.battle.runEvent('BasePower', source, target, move, basePower, true);\r\n\r\n\t\tif (!basePower) return 0;\r\n\t\tbasePower = this.battle.clampIntRange(basePower, 1);\r\n\t\t// Hacked Max Moves have 0 base power, even if you Dynamax\r\n\t\tif ((!source.volatiles['dynamax'] && move.isMax) || (move.isMax && this.dex.moves.get(move.baseMove).isMax)) {\r\n\t\t\tbasePower = 0;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tbasePower < 60 && source.getTypes(true).includes(move.type) && source.terastallized && move.priority <= 0 &&\r\n\t\t\t// Hard move.basePower check for moves like Dragon Energy that have variable BP\r\n\t\t\t!move.multihit && !((move.basePower === 0 || move.basePower === 150) && move.basePowerCallback)\r\n\t\t) {\r\n\t\t\tbasePower = 60;\r\n\t\t}\r\n\r\n\t\tconst level = source.level;\r\n\r\n\t\tconst attacker = move.overrideOffensivePokemon === 'target' ? target : source;\r\n\t\tconst defender = move.overrideDefensivePokemon === 'source' ? source : target;\r\n\r\n\t\tconst isPhysical = move.category === 'Physical';\r\n\t\tlet attackStat: StatIDExceptHP = move.overrideOffensiveStat || (isPhysical ? 'atk' : 'spa');\r\n\t\tif (move.useTargetOffensive || (move as any).settleBoosted) attackStat = 'atk'; // hard-coding for M4A\r\n\t\tconst defenseStat: StatIDExceptHP = move.overrideDefensiveStat || (isPhysical ? 'def' : 'spd');\r\n\r\n\t\tconst statTable = {atk: 'Atk', def: 'Def', spa: 'SpA', spd: 'SpD', spe: 'Spe'};\r\n\r\n\t\tlet atkBoosts = attacker.boosts[attackStat];\r\n\t\tif ((move as any).bodyofwaterBoosted) { // hard-coding for M4A\r\n\t\t\tif (attackStat === 'def') {\r\n\t\t\t\tatkBoosts = attacker.boosts['atk'];\r\n\t\t\t} else if (attackStat === 'spd') {\r\n\t\t\t\tatkBoosts = attacker.boosts['spa'];\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet defBoosts = defender.boosts[defenseStat];\r\n\r\n\t\tlet ignoreNegativeOffensive = !!move.ignoreNegativeOffensive;\r\n\t\tlet ignorePositiveDefensive = !!move.ignorePositiveDefensive;\r\n\r\n\t\tif (moveHit.crit) {\r\n\t\t\tignoreNegativeOffensive = true;\r\n\t\t\tignorePositiveDefensive = true;\r\n\t\t}\r\n\t\tconst ignoreOffensive = !!(move.ignoreOffensive || (ignoreNegativeOffensive && atkBoosts < 0));\r\n\t\tconst ignoreDefensive = !!(move.ignoreDefensive || (ignorePositiveDefensive && defBoosts > 0));\r\n\r\n\t\tif (ignoreOffensive) {\r\n\t\t\tthis.battle.debug('Negating (sp)atk boost/penalty.');\r\n\t\t\tatkBoosts = 0;\r\n\t\t}\r\n\t\tif (ignoreDefensive) {\r\n\t\t\tthis.battle.debug('Negating (sp)def boost/penalty.');\r\n\t\t\tdefBoosts = 0;\r\n\t\t}\r\n\r\n\t\tlet attack = attacker.calculateStat(attackStat, atkBoosts, 1, source);\r\n\t\tlet defense = defender.calculateStat(defenseStat, defBoosts, 1, target);\r\n\r\n\t\tattackStat = (category === 'Physical' ? 'atk' : 'spa');\r\n\r\n\t\t// Apply Stat Modifiers\r\n\t\tattack = this.battle.runEvent('Modify' + statTable[attackStat], source, target, move, attack);\r\n\t\tdefense = this.battle.runEvent('Modify' + statTable[defenseStat], target, source, move, defense);\r\n\r\n\t\tif (this.battle.gen <= 4 && ['explosion', 'selfdestruct'].includes(move.id) && defenseStat === 'def') {\r\n\t\t\tdefense = this.battle.clampIntRange(Math.floor(defense / 2), 1);\r\n\t\t}\r\n\r\n\t\tconst tr = this.battle.trunc;\r\n\r\n\t\t// int(int(int(2 * L / 5 + 2) * A * P / D) / 50);\r\n\t\tconst baseDamage = tr(tr(tr(tr(2 * level / 5 + 2) * basePower * attack) / defense) / 50);\r\n\r\n\t\t// Calculate damage modifiers separately (order differs between generations)\r\n\t\treturn this.modifyDamage(baseDamage, source, target, move, suppressMessages);\r\n\t},\r\n\r\n\tboost(\r\n\t\tboost: SparseBoostsTable, target: Pokemon | null = null, source: Pokemon | null = null,\r\n\t\teffect: Effect | null = null, isSecondary = false, isSelf = false\r\n\t) {\r\n\t\tif (this.event) {\r\n\t\t\tif (!target) target = this.event.target;\r\n\t\t\tif (!source) source = this.event.source;\r\n\t\t\tif (!effect) effect = this.effect;\r\n\t\t}\r\n\t\tif (!target?.hp) return 0;\r\n\t\tif (!target.isActive) return false;\r\n\t\tif (this.gen > 5 && !target.side.foePokemonLeft()) return false;\r\n\t\tboost = this.runEvent('ChangeBoost', target, source, effect, {...boost});\r\n\t\tboost = target.getCappedBoost(boost);\r\n\t\tboost = this.runEvent('TryBoost', target, source, effect, {...boost});\r\n\t\tlet success = null;\r\n\t\tlet boosted = isSecondary;\r\n\t\tlet boostName: BoostID;\r\n\t\tfor (boostName in boost) {\r\n\t\t\tconst currentBoost: SparseBoostsTable = {\r\n\t\t\t\t[boostName]: boost[boostName],\r\n\t\t\t};\r\n\t\t\tlet boostBy = target.boostBy(currentBoost);\r\n\t\t\tlet msg = '-boost';\r\n\t\t\tif (boost[boostName]! < 0 || target.boosts[boostName] === -6) {\r\n\t\t\t\tmsg = '-unboost';\r\n\t\t\t\tboostBy = -boostBy;\r\n\t\t\t}\r\n\t\t\tif (target.volatiles['hyperspacemayhem'] && target.volatiles['hyperspacemayhem'].midtransform && !target.volatiles['hyperspacemayhem'].geomancy) {\r\n\t\t\t\tthis.runEvent('AfterEachBoost', target, source, effect, currentBoost);\r\n\t\t\t\tif (target.volatiles['hyperspacemayhem'].fakelegend) {\r\n\t\t\t\t\t// this will be for writing fake boost messages\r\n\t\t\t\t\tlet boostMessage = target.name;\r\n\t\t\t\t\tif (effect.effectType === 'Ability' && !boosted) {\r\n\t\t\t\t\t\tthis.add('-ability', target, effect.name, 'boost');\r\n\t\t\t\t\t\tboosted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (boostName === 'atk') boostMessage += `'s Attack`;\r\n\t\t\t\t\tif (boostName === 'def') boostMessage += `'s Defense`;\r\n\t\t\t\t\tif (boostName === 'spa') boostMessage += `'s Sp. Atk`;\r\n\t\t\t\t\tif (boostName === 'spd') boostMessage += `'s Sp. Def`;\r\n\t\t\t\t\tif (boostName === 'spe') boostMessage += `'s Speed`;\r\n\t\t\t\t\tif (boostName === 'evasion') boostMessage += `'s evasion`;\r\n\t\t\t\t\tif (boostName === 'accuracy') boostMessage += `'s accuracy`;\r\n\t\t\t\t\tif (boostBy === 3 && msg !== '-unboost') boostMessage += ` rose drastically!`;\r\n\t\t\t\t\tif (boostBy === 2 && msg !== '-unboost') boostMessage += ` rose sharply!`;\r\n\t\t\t\t\tif (boostBy === 1 && msg !== '-unboost') boostMessage += ` rose!`;\r\n\t\t\t\t\tif (boostBy === 1 && msg === '-unboost') boostMessage += ` fell!`;\r\n\t\t\t\t\tif (boostBy === 2 && msg === '-unboost') boostMessage += ` fell harshly!`;\r\n\t\t\t\t\tif (boostBy === 3 && msg === '-unboost') boostMessage += ` fell severely!`;\r\n\t\t\t\t\tthis.add('-message', `${boostMessage}`);\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (target.volatiles['hyperspacemayhem'] && target.volatiles['hyperspacemayhem'].geomancy) {\r\n\t\t\t\ttarget.name = target.volatiles['hyperspacemayhem'].userBackup.name;\r\n\t\t\t\ttarget.fullname = target.volatiles['hyperspacemayhem'].userBackup.fullname;\r\n\t\t\t}\r\n\t\t\tif (boostBy) {\r\n\t\t\t\tsuccess = true;\r\n\t\t\t\tswitch (effect?.id) {\r\n\t\t\t\tcase 'bellydrum': case 'angerpoint':\r\n\t\t\t\t\tthis.add('-setboost', target, 'atk', target.boosts['atk'], '[from] ' + effect.fullname);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bellydrum2':\r\n\t\t\t\t\tthis.add(msg, target, boostName, boostBy, '[silent]');\r\n\t\t\t\t\tthis.hint(\"In Gen 2, Belly Drum boosts by 2 when it fails.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'zpower':\r\n\t\t\t\t\tthis.add(msg, target, boostName, boostBy, '[zeffect]');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!effect) break;\r\n\t\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\t\tthis.add(msg, target, boostName, boostBy);\r\n\t\t\t\t\t} else if (effect.effectType === 'Item') {\r\n\t\t\t\t\t\tthis.add(msg, target, boostName, boostBy, '[from] item: ' + effect.name);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (effect.effectType === 'Ability' && !boosted) {\r\n\t\t\t\t\t\t\tthis.add('-ability', target, effect.name, 'boost');\r\n\t\t\t\t\t\t\tboosted = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.add(msg, target, boostName, boostBy);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('AfterEachBoost', target, source, effect, currentBoost);\r\n\t\t\t} else if (effect?.effectType === 'Ability') {\r\n\t\t\t\tif (isSecondary || isSelf) this.add(msg, target, boostName, boostBy);\r\n\t\t\t} else if (!isSecondary && !isSelf) {\r\n\t\t\t\tthis.add(msg, target, boostName, boostBy);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.runEvent('AfterBoost', target, source, effect, boost);\r\n\t\tif (success) {\r\n\t\t\tif (Object.values(boost).some(x => x > 0)) target.statsRaisedThisTurn = true;\r\n\t\t\tif (Object.values(boost).some(x => x < 0)) target.statsLoweredThisTurn = true;\r\n\t\t}\r\n\t\treturn success;\r\n\t},\r\n\r\npokemon: {\r\n\tlostItemForDelibird: null,\r\n\tsetItem(item: string | Item, source?: Pokemon, effect?: Effect) {\r\n\t\tif (!this.hp) return false;\r\n\t\tif (this.itemState.knockedOff) return false;\r\n\t\tif (typeof item === 'string') item = this.battle.dex.items.get(item);\r\n\r\n\t\tconst effectid = this.battle.effect ? this.battle.effect.id : '';\r\n\t\tconst RESTORATIVE_BERRIES = new Set([\r\n\t\t\t'leppaberry', 'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry',\r\n\t\t] as ID[]); // manually pasted in const RESTORATIVE_BERRIES because its absence caused a bug\r\n\t\tif (RESTORATIVE_BERRIES.has('leppaberry' as ID)) {\r\n\t\t\tconst inflicted = ['trick', 'switcheroo'].includes(effectid);\r\n\t\t\tconst external = inflicted && source && !source.isAlly(this);\r\n\t\t\tthis.pendingStaleness = external ? 'external' : 'internal';\r\n\t\t} else {\r\n\t\t\tthis.pendingStaleness = undefined;\r\n\t\t}\r\n\t\tconst oldItem = this.getItem();\r\n\t\tconst oldItemState = this.itemState;\r\n\t\tthis.item = item.id;\r\n\t\tthis.itemState = {id: item.id, target: this};\r\n\t\tif (oldItem.exists) this.battle.singleEvent('End', oldItem, oldItemState, this);\r\n\t\tif (item.id) {\r\n\t\t\tthis.battle.singleEvent('Start', item, this.itemState, this, source, effect);\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tsetAbility(ability: string | Ability, source?: Pokemon | null, isFromFormeChange = false, isTransform = false) {\r\n\t\tif (!this.hp) return false;\r\n\t\tif (typeof ability === 'string') ability = this.battle.dex.abilities.get(ability);\r\n\t\tconst oldAbility = this.ability;\r\n\t\tif (!isFromFormeChange) {\r\n\t\t\tif (ability.isPermanent || this.getAbility().isPermanent) return false;\r\n\t\t}\r\n\t\tif (!isTransform) {\r\n\t\t\tconst setAbilityEvent: boolean | null = this.battle.runEvent('SetAbility', this, source, this.battle.effect, ability);\r\n\t\t\tif (!setAbilityEvent) return setAbilityEvent;\r\n\t\t}\r\n\t\tthis.battle.singleEvent('End', this.battle.dex.abilities.get(oldAbility), this.abilityState, this, source);\r\n\t\tif (this.battle.effect && this.battle.effect.effectType === 'Move' && !isFromFormeChange) {\r\n\t\t\tthis.battle.add('-endability', this, this.battle.dex.abilities.get(oldAbility), '[from] move: ' +\r\n\t\t\t\tthis.battle.dex.moves.get(this.battle.effect.id));\r\n\t\t}\r\n\t\tthis.ability = ability.id;\r\n\t\tthis.abilityState = {id: ability.id, target: this};\r\n\t\tif (ability.id && this.battle.gen > 3 &&\r\n\t\t\t(!isTransform || oldAbility !== ability.id || this.battle.gen <= 4)) {\r\n\t\t\tthis.battle.singleEvent('PreStart', ability, this.abilityState, this, source); // only change\r\n\t\t\tthis.battle.singleEvent('Start', ability, this.abilityState, this, source);\r\n\t\t}\r\n\t\tthis.abilityOrder = this.battle.abilityOrder++;\r\n\t\treturn oldAbility;\r\n\t},\r\n\trunEffectiveness(move: ActiveMove) {\r\n\t\tlet totalTypeMod = 0;\r\n\t\tfor (const type of this.getTypes()) {\r\n\t\t\tif (type === 'Fairy' && (move as any).prehistoricrageBoosted) {\r\n\t\t\t\ttotalTypeMod += 1;\r\n\t\t\t} else {\r\n\t\t\t\tlet typeMod = this.battle.dex.getEffectiveness(move, type);\r\n\t\t\t\ttypeMod = this.battle.singleEvent('Effectiveness', move, null, this, type, move, typeMod);\r\n\t\t\t\ttotalTypeMod += this.battle.runEvent('Effectiveness', this, type, move, typeMod);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn totalTypeMod;\r\n\t},\r\n\tisGrounded(negateImmunity = false) {\r\n\t\tif ('gravity' in this.battle.field.pseudoWeather) return true;\r\n\t\tif ('ingrain' in this.volatiles && this.battle.gen >= 4) return true;\r\n\t\tif ('smackdown' in this.volatiles) return true;\r\n\t\tconst item = (this.ignoringItem() ? '' : this.item);\r\n\t\tif (item === 'ironball') return true;\r\n\t\t// If a Fire/Flying type uses Burn Up and Roost, it becomes ???/Flying-type, but it's still grounded.\r\n\t\tif (!negateImmunity && this.hasType('Flying') && !(this.hasType('???') && 'roost' in this.volatiles)) return false;\r\n\t\tif (this.hasAbility('levitate') && !this.battle.suppressingAbility(this)) return null;\r\n\t\tif ('magnetrise' in this.volatiles) return false;\r\n\t\tif ('telekinesis' in this.volatiles) return false;\r\n\t\tif ('poolfloaties' in this.volatiles) return false;\r\n\t\tfor (const target of this.battle.getAllActive()) {\r\n\t\t\tif (target.hasAbility('uplifting')) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn item !== 'airballoon';\r\n\t},\r\n\tgetMoveTargets(move: ActiveMove, target: Pokemon): {targets: Pokemon[], pressureTargets: Pokemon[]} {\r\n\t\tlet targets: Pokemon[] = [];\r\n\r\n\t\tswitch (move.target) {\r\n\t\tcase 'all':\r\n\t\tcase 'foeSide':\r\n\t\tcase 'allySide':\r\n\t\tcase 'allyTeam':\r\n\t\t\tif (!move.target.startsWith('foe')) {\r\n\t\t\t\ttargets.push(...this.alliesAndSelf());\r\n\t\t\t}\r\n\t\t\tif (!move.target.startsWith('ally')) {\r\n\t\t\t\ttargets.push(...this.foes(true));\r\n\t\t\t}\r\n\t\t\tif (targets.length && !targets.includes(target)) {\r\n\t\t\t\tthis.battle.retargetLastMove(targets[targets.length - 1]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'allAdjacent':\r\n\t\t\ttargets.push(...this.adjacentAllies());\r\n\t\t\t// falls through\r\n\t\tcase 'allAdjacentFoes':\r\n\t\t\ttargets.push(...this.adjacentFoes());\r\n\t\t\tif (targets.length && !targets.includes(target)) {\r\n\t\t\t\tthis.battle.retargetLastMove(targets[targets.length - 1]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'allies':\r\n\t\t\ttargets = this.alliesAndSelf();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconst selectedTarget = target;\r\n\t\t\tif (!target || (target.fainted && !target.isAlly(this)) && this.battle.gameType !== 'freeforall') {\r\n\t\t\t\t// If a targeted foe faints, the move is retargeted\r\n\t\t\t\tconst possibleTarget = this.battle.getRandomTarget(this, move);\r\n\t\t\t\tif (!possibleTarget) return {targets: [], pressureTargets: []};\r\n\t\t\t\ttarget = possibleTarget;\r\n\t\t\t}\r\n\t\t\tif (this.battle.activePerHalf > 1 && !move.tracksTarget) {\r\n\t\t\t\tconst isCharging = move.flags['charge'] && !this.volatiles['twoturnmove'] &&\r\n\t\t\t\t\t!((move.id.startsWith('solarb') || this.hasAbility('solarcore')) && this.battle.field.isWeather(['sunnyday', 'desolateland'])) &&\r\n\t\t\t\t\t!(this.hasItem('powerherb') && move.id !== 'skydrop');\r\n\t\t\t\tif (!isCharging) {\r\n\t\t\t\t\ttarget = this.battle.priorityEvent('RedirectTarget', this, this, move, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.smartTarget) {\r\n\t\t\t\ttargets = this.getSmartTargets(target, move);\r\n\t\t\t\ttarget = targets[0];\r\n\t\t\t} else {\r\n\t\t\t\ttargets.push(target);\r\n\t\t\t}\r\n\t\t\tif (target.fainted && !move.flags['futuremove']) {\r\n\t\t\t\treturn {targets: [], pressureTargets: []};\r\n\t\t\t}\r\n\t\t\tif (selectedTarget !== target) {\r\n\t\t\t\tthis.battle.retargetLastMove(target);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Resolve apparent targets for Pressure.\r\n\t\tlet pressureTargets = targets;\r\n\t\tif (move.target === 'foeSide') {\r\n\t\t\tpressureTargets = [];\r\n\t\t}\r\n\t\tif (move.flags['mustpressure']) {\r\n\t\t\tpressureTargets = this.foes();\r\n\t\t}\r\n\r\n\t\treturn {targets, pressureTargets};\r\n\t},\r\n\tcureStatus(pokemon: Pokemon, silent = false) {\r\n\t\tif (!this.hp || !this.status) return false;\r\n\t\tthis.battle.add('-curestatus', this, this.status, silent ? '[silent]' : '[msg]');\r\n\t\tif (this.status === 'slp' && this.removeVolatile('nightmare')) {\r\n\t\t\tthis.battle.add('-end', this, 'Nightmare', '[silent]');\r\n\t\t}\r\n\t\tthis.setStatus('');\r\n\t\tif (this.volatiles['staccato']) {\r\n\t\t\tthis.volatiles['staccato'].busted = true;\r\n\t\t\tthis.removeVolatile('staccato');\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tignoringItem() { // modded for Hyperspace Mayhem: even if the holder has an item, the summoned Pok\u00E9mon doesn't!\r\n\t\treturn !!(\r\n\t\t\tthis.itemState.knockedOff || // Gen 3-4\r\n\t\t\t(this.battle.gen >= 5 && !this.isActive) ||\r\n\t\t\t(!this.getItem().ignoreKlutz && this.hasAbility('klutz')) ||\r\n\t\t\tthis.volatiles['embargo'] || this.volatiles['hyperspacemayhem'] || this.battle.field.pseudoWeather['magicroom']\r\n\t\t);\r\n\t},\r\n\tformeChange( // modified for Hyperspace Mayhem\r\n\t\tspeciesId: string | Species, source: Effect = this.battle.effect,\r\n\t\tisPermanent?: boolean, message?: string\r\n\t) {\r\n\t\tconst rawSpecies = this.battle.dex.species.get(speciesId);\r\n\r\n\t\tconst species = this.setSpecies(rawSpecies, source);\r\n\t\tif (!species) return false;\r\n\r\n\t\tif (this.battle.gen <= 2) return true;\r\n\r\n\t\t// The species the opponent sees\r\n\t\tconst apparentSpecies =\r\n\t\t\tthis.illusion ? this.illusion.species.name : species.baseSpecies;\r\n\t\tif (isPermanent || source.id === 'hyperspacehole') {\r\n\t\t\tif (isPermanent) this.baseSpecies = rawSpecies;\r\n\t\t\tthis.details = species.name + (this.level === 100 ? '' : ', L' + this.level) +\r\n\t\t\t\t(this.gender === '' ? '' : ', ' + this.gender) + (this.set.shiny ? ', shiny' : '');\r\n\t\t\tlet details = (this.illusion || this).details;\r\n\t\t\tif (this.terastallized) details += `, tera:${this.terastallized}`;\r\n\t\t\tthis.battle.add('detailschange', this, details);\r\n\t\t\tif (source.effectType === 'Item') {\r\n\t\t\t\tthis.canTerastallize = null; // National Dex behavior\r\n\t\t\t\tif (source.zMove) {\r\n\t\t\t\t\tthis.battle.add('-burst', this, apparentSpecies, species.requiredItem);\r\n\t\t\t\t\tthis.moveThisTurnResult = true; // Ultra Burst counts as an action for Truant\r\n\t\t\t\t} else if (source.onPrimal) {\r\n\t\t\t\t\tif (this.illusion) {\r\n\t\t\t\t\t\tthis.ability = '';\r\n\t\t\t\t\t\tthis.battle.add('-primal', this.illusion, species.requiredItem);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.battle.add('-primal', this, species.requiredItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// So a Mega Evolution message isn't sent while we're waiting on Ogerpon text\r\n\t\t\t\t\tif (source.megaEvolves) {\r\n\t\t\t\t\t\tthis.battle.add('-mega', this, apparentSpecies, species.requiredItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.moveThisTurnResult = true; // Mega Evolution counts as an action for Truant\r\n\t\t\t\t}\r\n\t\t\t} else if (source.effectType === 'Status') {\r\n\t\t\t\t// Shaymin-Sky -> Shaymin\r\n\t\t\t\tthis.battle.add('-formechange', this, species.name, message);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (source.effectType === 'Ability') {\r\n\t\t\t\tthis.battle.add('-formechange', this, species.name, message, `[from] ability: ${source.name}`);\r\n\t\t\t} else if (source.id === 'hyperspacehole') {\r\n\t\t\t\tthis.battle.add('-formechange', this, this.illusion ? this.illusion.species.name : species.name, '[silent]');\r\n\t\t\t} else {\r\n\t\t\t\tthis.battle.add('-formechange', this, this.illusion ? this.illusion.species.name : species.name, message);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isPermanent && !['disguise', 'iceface'].includes(source.id)) {\r\n\t\t\tif (this.illusion) {\r\n\t\t\t\tthis.ability = ''; // Don't allow Illusion to wear off\r\n\t\t\t}\r\n\t\t\tthis.setAbility(species.abilities['0'], null, true);\r\n\t\t\tthis.baseAbility = this.ability;\r\n\t\t}\r\n\t\tif (source.id === 'hyperspacehole') {\r\n\t\t\tif (this.volatiles['hyperspacemayhem']) {\r\n\t\t\t\tthis.setAbility(species.abilities['0'], null, true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setAbility('hyperspacemayhem', null, true);\r\n\t\t\t}\r\n\t\t\tif (this.species.forme.startsWith('Mega') || this.species.forme.startsWith('Ultra')) this.battle.add('-start', this, 'typechange', this.getTypes(true).join('/'), '[silent]');\r\n\t\t}\r\n\t\tif (this.terastallized) {\r\n\t\t\tthis.knownType = true;\r\n\t\t\tthis.apparentType = this.terastallized;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n},\r\n\r\nfield: { // modified for Arena Rock and Down-to-Earth\r\n\tsetTerrain(status: string | Effect, source: Pokemon | 'debug' | null = null, sourceEffect: Effect | null = null) {\r\n\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\tif (!sourceEffect && this.battle.effect) sourceEffect = this.battle.effect;\r\n\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\t\tif (!source) throw new Error(`setting terrain without a source`);\r\n\r\n\t\tif (this.terrain === status.id) return false;\r\n\t\tif (source) { // modded: this whole section added for Arena Rock\r\n\t\t\tconst result = this.battle.runEvent('SetTerrain', source, source, status);\r\n\t\t\tif (this.terrain === 'grassyterrain' && this.battle.getAllActive().some(x => x.hasAbility('arenarock') && !x.m.forceCustomBlock)) {\r\n\t\t\t\tif ((sourceEffect as Move)?.terrain) {\r\n\t\t\t\t\tthis.battle.add('-fail', source, sourceEffect, '[from] ' + this.terrain);\r\n\t\t\t\t} else if (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\t\tthis.battle.add('-ability', source, sourceEffect, '[from] ' + this.terrain, '[fail]');\r\n\t\t\t\t}\r\n\t\t\t\tthis.battle.add('-message', `Nothing can break through this unrelenting plant growth!`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} // end of modded section\r\n\t\tconst prevTerrain = this.terrain;\r\n\t\tconst prevTerrainState = this.terrainState;\r\n\t\tthis.terrain = status.id;\r\n\t\tthis.terrainState = {\r\n\t\t\tid: status.id,\r\n\t\t\tsource,\r\n\t\t\tsourceSlot: source.getSlot(),\r\n\t\t\tduration: status.duration,\r\n\t\t};\r\n\t\tif (status.durationCallback) {\r\n\t\t\tthis.terrainState.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t}\r\n\t\tif (!this.battle.singleEvent('FieldStart', status, this.terrainState, this, source, sourceEffect)) {\r\n\t\t\tthis.terrain = prevTerrain;\r\n\t\t\tthis.terrainState = prevTerrainState;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.battle.getAllActive().some(x => x.hasAbility('downtoearth') && !x.m.forceCustomBlock)) return true; // modded: skip the TerrainChange\r\n\t\tthis.battle.eachEvent('TerrainChange', sourceEffect);\r\n\t\treturn true;\r\n\t},\r\n\r\n\tclearTerrain() {\r\n\t\tif (!this.terrain) return false;\r\n\t\tif (this.isTerrain('grassyterrain') && this.battle.getAllActive().some(x => x.hasAbility('arenarock') && !x.m.forceCustomBlock)) return false; // modded for Arena Rock\r\n\t\tconst prevTerrain = this.getTerrain();\r\n\t\tthis.battle.singleEvent('FieldEnd', prevTerrain, this.terrainState, this);\r\n\t\tthis.terrain = '';\r\n\t\tthis.terrainState = {id: ''};\r\n\t\tthis.battle.eachEvent('TerrainChange');\r\n\t\treturn true;\r\n\t},\r\n\r\n\tisTerrain(terrain: string | string[], target?: Pokemon | Side | Battle) {\r\n\t\tif (this.battle.getAllActive().some(x => x.hasAbility('downtoearth') && !x.m.forceCustomBlock)) return false; // modded\r\n\t\tconst ourTerrain = this.effectiveTerrain(target);\r\n\t\tif (!Array.isArray(terrain)) {\r\n\t\t\treturn ourTerrain === toID(terrain);\r\n\t\t}\r\n\t\treturn terrain.map(toID).includes(ourTerrain);\r\n\t},\r\n},\r\n\r\n};\r\n"],
  "mappings": "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",
  "names": ["basePower"]
}
