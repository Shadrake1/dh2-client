{
  "version": 3,
  "sources": ["../../../../data/mods/teraforming/moves.ts"],
  "sourcesContent": ["export const Moves: import('../../../sim/dex-moves').ModdedMoveDataTable = {\r\n\tarcanerush: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Always crits in Electric Terrain. Sets Electric Terrain if not up.\",\r\n\t\tname: \"Arcane Rush\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tterrain: 'electricterrain',\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dynamax Cannon\", target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove.willCrit = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tboomingsands: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"100% chance to lower the target's Sp. Defense by 1.\",\r\n\t\tname: \"Booming Sands\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, sound: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Round\", target);\r\n\t\t\tthis.add('-anim', source, \"Stomping Tantrum\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tspookyslash: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"100% chance to disable foe for 1 turn.\",\r\n\t\tname: \"Spooky Slash\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, slicing: 1, contact: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Night Slash\", target);\r\n\t\t\tthis.add('-anim', source, \"Hex\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'disable',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\t\r\n\t// non-new moves\r\n\tpursuit: {\r\n\t\tinherit: true,\r\n    \tisNonstandard: null,\r\n\t},\r\n\tdisable: {\r\n\t\tnum: 50,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Disable\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1},\r\n\t\tvolatileStatus: 'disable',\r\n\t\tonTryHit(target) {\r\n\t\t\tif (!target.lastMove || target.lastMove.isZ || target.lastMove.isMax || target.lastMove.id === 'struggle') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Spooky Slash\") {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\t// The target hasn't taken its turn, or Cursed Body activated and the move was not used through Dancer or Instruct\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.queue.willMove(pokemon) ||\r\n\t\t\t\t\t(pokemon === this.activePokemon && this.activeMove && !this.activeMove.isExternal)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.effectState.duration--;\r\n\t\t\t\t}\r\n\t\t\t\tif (!pokemon.lastMove) {\r\n\t\t\t\t\tthis.debug(`Pokemon hasn't moved yet`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === pokemon.lastMove.id) {\r\n\t\t\t\t\t\tif (!moveSlot.pp) {\r\n\t\t\t\t\t\t\tthis.debug('Move out of PP');\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (effect.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Disable', pokemon.lastMove.name, '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Disable', pokemon.lastMove.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.move = pokemon.lastMove.id;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 17,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Disable');\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 7,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && move.id === this.effectState.move) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tteraused: {\r\n\t\tshortDesc: \"Prevents Terastalization from being used multiple times.\",\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Tera Used\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1},\r\n\t\tsideCondition: 'teraused',\r\n\t\tcondition: {},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
