{
  "version": 3,
  "sources": ["../../../../data/mods/gen9crossoverchaos/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\r\n\tgen: 9,\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['CC OU', 'CC Ubers', 'CC UU', 'unintroduced'],\r\n\t},\r\n\r\n\tgetDamage(\r\n\t\tpokemon: Pokemon, target: Pokemon, move: string | number | ActiveMove,\r\n\t\tsuppressMessages = false\r\n\t): number | undefined | null | false {\r\n\t\tif (typeof move === 'string') move = this.dex.getActiveMove(move);\r\n\r\n\t\tif (typeof move === 'number') {\r\n\t\t\tconst basePower = move;\r\n\t\t\tmove = new Dex.Move({\r\n\t\t\t\tbasePower,\r\n\t\t\t\ttype: '???',\r\n\t\t\t\tcategory: 'Physical',\r\n\t\t\t\twillCrit: false,\r\n\t\t\t}) as ActiveMove;\r\n\t\t\tmove.hit = 0;\r\n\t\t}\r\n\r\n\t\tif (!move.ignoreImmunity || (move.ignoreImmunity !== true && !move.ignoreImmunity[move.type])) {\r\n\t\t\tif (!target.runImmunity(move.type, !suppressMessages)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (move.ohko) return target.maxhp;\r\n\t\tif (move.damageCallback) return move.damageCallback.call(this, pokemon, target);\r\n\t\tif (move.damage === 'level') {\r\n\t\t\treturn pokemon.level;\r\n\t\t} else if (move.damage) {\r\n\t\t\treturn move.damage;\r\n\t\t}\r\n\r\n\t\tconst category = this.getCategory(move);\r\n\t\tconst defensiveCategory = move.defensiveCategory || category;\r\n\r\n\t\tlet basePower: number | false | null = move.basePower;\r\n\t\tif (move.basePowerCallback) {\r\n\t\t\tbasePower = move.basePowerCallback.call(this, pokemon, target, move);\r\n\t\t}\r\n\t\tif (!basePower) return basePower === 0 ? undefined : basePower;\r\n\t\tbasePower = this.clampIntRange(basePower, 1);\r\n\r\n\t\tlet critMult;\r\n\t\tlet critRatio = this.runEvent('ModifyCritRatio', pokemon, target, move, move.critRatio || 0);\r\n\t\tif (this.gen <= 5) {\r\n\t\t\tcritRatio = this.clampIntRange(critRatio, 0, 5);\r\n\t\t\tcritMult = [0, 16, 8, 4, 3, 2];\r\n\t\t} else {\r\n\t\t\tcritRatio = this.clampIntRange(critRatio, 0, 4);\r\n\t\t\tif (this.gen === 6) {\r\n\t\t\t\tcritMult = [0, 16, 8, 2, 1];\r\n\t\t\t} else {\r\n\t\t\t\tcritMult = [0, 24, 8, 2, 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst moveHit = target.getMoveHitData(move);\r\n\t\tmoveHit.crit = move.willCrit || false;\r\n\t\tif (move.willCrit === undefined) {\r\n\t\t\tif (critRatio) {\r\n\t\t\t\tmoveHit.crit = this.randomChance(1, critMult[critRatio]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (moveHit.crit) {\r\n\t\t\tmoveHit.crit = this.runEvent('CriticalHit', target, null, move);\r\n\t\t}\r\n\r\n\t\t// happens after crit calculation\r\n\t\tbasePower = this.runEvent('BasePower', pokemon, target, move, basePower, true);\r\n\r\n\t\tif (!basePower) return 0;\r\n\t\tbasePower = this.clampIntRange(basePower, 1);\r\n\r\n\t\tconst level = pokemon.level;\r\n\r\n\t\tconst attacker = pokemon;\r\n\t\tconst defender = target;\r\n\t\tlet attackStat: StatNameExceptHP = category === 'Physical' ? 'atk' : 'spa';\r\n\t\tconst defenseStat: StatNameExceptHP = defensiveCategory === 'Physical' ? 'def' : 'spd';\r\n\t\tif (move.useSourceDefensiveAsOffensive) {\r\n\t\t\tattackStat = defenseStat;\r\n\t\t\t// Body press really wants to use the def stat,\r\n\t\t\t// so it switches stats to compensate for Wonder Room.\r\n\t\t\t// Of course, the game thus miscalculates the boosts...\r\n\t\t\tif ('wonderroom' in this.field.pseudoWeather) {\r\n\t\t\t\tif (attackStat === 'def') {\r\n\t\t\t\t\tattackStat = 'spd';\r\n\t\t\t\t} else if (attackStat === 'spd') {\r\n\t\t\t\t\tattackStat = 'def';\r\n\t\t\t\t}\r\n\t\t\t\tif (attacker.boosts['def'] || attacker.boosts['spd']) {\r\n\t\t\t\t\tthis.hint(\"Body Press uses Sp. Def boosts when Wonder Room is active.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (move.useSourceAlternateDefensiveAsOffensive) {\r\n\t\t\tattackStat = defenseStat;\r\n\t\t\t// Swaps which defensive stat is used\r\n\t\t\t// Good for special moves whose secondary is that they rely on Def, not SpD\r\n\t\t\tif (attackStat === 'def') {\r\n\t\t\t\tattackStat === 'spd';\r\n\t\t\t} else {\r\n\t\t\t\tattackStat === 'def';\r\n\t\t\t}\r\n\t\t\t// Body press really wants to use the def stat,\r\n\t\t\t// so it switches stats to compensate for Wonder Room.\r\n\t\t\t// Of course, the game thus miscalculates the boosts...\r\n\t\t\tif ('wonderroom' in this.field.pseudoWeather) {\r\n\t\t\t\tif (attackStat === 'def') {\r\n\t\t\t\t\tattackStat = 'spd';\r\n\t\t\t\t} else if (attackStat === 'spd') {\r\n\t\t\t\t\tattackStat = 'def';\r\n\t\t\t\t}\r\n\t\t\t\tif (attacker.boosts['def'] || attacker.boosts['spd']) {\r\n\t\t\t\t\tthis.hint(\"Great Fire uses Sp. Def boosts when Wonder Room is active.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.useSourceSpeedAsOffensive) attackStat = speedStat;\r\n\r\n\t\tconst statTable = {atk: 'Atk', def: 'Def', spa: 'SpA', spd: 'SpD', spe: 'Spe'};\r\n\t\tlet attack;\r\n\t\tlet defense;\r\n\r\n\t\tlet atkBoosts = move.useTargetOffensive ? defender.boosts[attackStat] : attacker.boosts[attackStat];\r\n\t\tlet defBoosts = defender.boosts[defenseStat];\r\n\r\n\t\tlet ignoreNegativeOffensive = !!move.ignoreNegativeOffensive;\r\n\t\tlet ignorePositiveDefensive = !!move.ignorePositiveDefensive;\r\n\r\n\t\tif (moveHit.crit) {\r\n\t\t\tignoreNegativeOffensive = true;\r\n\t\t\tignorePositiveDefensive = true;\r\n\t\t}\r\n\t\tconst ignoreOffensive = !!(move.ignoreOffensive || (ignoreNegativeOffensive && atkBoosts < 0));\r\n\t\tconst ignoreDefensive = !!(move.ignoreDefensive || (ignorePositiveDefensive && defBoosts > 0));\r\n\r\n\t\tif (ignoreOffensive) {\r\n\t\t\tthis.debug('Negating (sp)atk boost/penalty.');\r\n\t\t\tatkBoosts = 0;\r\n\t\t}\r\n\t\tif (ignoreDefensive) {\r\n\t\t\tthis.debug('Negating (sp)def boost/penalty.');\r\n\t\t\tdefBoosts = 0;\r\n\t\t}\r\n\r\n\t\tif (move.useTargetOffensive) {\r\n\t\t\tattack = defender.calculateStat(attackStat, atkBoosts);\r\n\t\t} else {\r\n\t\t\tattack = attacker.calculateStat(attackStat, atkBoosts);\r\n\t\t}\r\n\r\n\t\tattackStat = (category === 'Physical' ? 'atk' : 'spa');\r\n\t\tdefense = defender.calculateStat(defenseStat, defBoosts);\r\n\r\n\t\t// Apply Stat Modifiers\r\n\t\tattack = this.runEvent('Modify' + statTable[attackStat], attacker, defender, move, attack);\r\n\t\tdefense = this.runEvent('Modify' + statTable[defenseStat], defender, attacker, move, defense);\r\n\r\n\t\tif (this.gen <= 4 && ['explosion', 'selfdestruct'].includes(move.id) && defenseStat === 'def') {\r\n\t\t\tdefense = this.clampIntRange(Math.floor(defense / 2), 1);\r\n\t\t}\r\n\r\n\t\tconst tr = this.trunc;\r\n\r\n\t\t// int(int(int(2 * L / 5 + 2) * A * P / D) / 50);\r\n\t\tconst baseDamage = tr(tr(tr(tr(2 * level / 5 + 2) * basePower * attack) / defense) / 50);\r\n\r\n\t\t// Calculate damage modifiers separately (order differs between generations)\r\n\t\treturn this.modifyDamage(baseDamage, pokemon, target, move, suppressMessages);\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["basePower"]
}
