{
  "version": 3,
  "sources": ["../../../../data/mods/gen9crossoverchaos/abilities.ts"],
  "sourcesContent": ["/*\r\nRatings and how they work:\r\n-1: Detrimental\r\n\t  An ability that severely harms the user.\r\n\tex. Defeatist, Slow Start\r\n 0: Useless\r\n\t  An ability with no overall benefit in a singles battle.\r\n\tex. Color Change, Plus\r\n 1: Ineffective\r\n\t  An ability that has minimal effect or is only useful in niche situations.\r\n\tex. Light Metal, Suction Cups\r\n 2: Useful\r\n\t  An ability that can be generally useful.\r\n\tex. Flame Body, Overcoat\r\n 3: Effective\r\n\t  An ability with a strong effect on the user or foe.\r\n\tex. Chlorophyll, Sturdy\r\n 4: Very useful\r\n\t  One of the more popular abilities. It requires minimal support to be effective.\r\n\tex. Adaptability, Magic Bounce\r\n 5: Essential\r\n\t  The sort of ability that defines metagames.\r\n\tex. Imposter, Shadow Tag\r\n*/\r\n\r\nexport const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tadeptprowess: {\r\n\t\tshortDesc: \"Gains secondary type based on held berry. Psy Blast doesn't consume berry.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.ignoringItem()) return;\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (!item.naturalGift) return;\r\n\t\t\tlet type: string;\r\n\t\t\ttype = item.naturalGift.type;\r\n\r\n\t\t\tif (!pokemon.hasType(type) && pokemon.addType(type)) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typeadd', type, '[from] ability: Adept Prowess');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif ((pokemon.ignoringItem() || !pokemon.item) && Object.keys(pokemon.getTypes()).length === 2) {\r\n\t\t\t\tpokemon.setType(\"Ground\");\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Grass', '[from] ability: Adept Prowess');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Adept Prowess\",\r\n\t\trating: 3.5,\r\n\t\tnum: -1,\r\n\t},\r\n\tpuyomastery: {\r\n\t\tshortDesc: \"This Pokemon's Water moves have 1.5x power.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Puyo Mastery boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Puyo Mastery boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Puyo Mastery\",\r\n\t\trating: 3.5,\r\n\t\tnum: -2,\r\n\t},\r\n\tfunkymode: {\r\n\t\tshortDesc: \"This Pokemon does not take damage from hazards.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && (effect.id === 'stealthrock' || effect.id === 'spikes')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Funky Mode\",\r\n\t\trating: 4,\r\n\t\tnum: -3,\r\n\t},\r\n\trunelord: {\r\n\t\tshortDesc: \"The Pok\u00E9mon's special become physical, slicing, and contact.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category === 'Special') {\r\n\t\t\t\tif (!move.flags['contact']) move.flags.contact = 1;\r\n\t\t\t\tif (!move.flags['slicing']) move.flags.slicing = 1;\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Runelord\",\r\n\t\trating: 3,\r\n\t\tnum: -4,\r\n\t},\r\n\ttorchofmadness: {\r\n\t\tshortDesc: \"This Pokemon's moves have 1.3x power against burned targets.\",\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender && ['brn'].includes(defender.status)) return this.chainModify(1.3);\r\n\t\t},\r\n\t\tname: \"Torch of Madness\",\r\n\t\trating: 4,\r\n\t\tnum: -5,\r\n\t},\r\n\tcrystallize: {\r\n\t\tshortDesc: \"This Pokemon's Normal-type moves become Rock-type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tname: \"Crystallize\",\r\n\t\trating: 4,\r\n\t\tnum: -6,\r\n\t},\r\n\tspectralleech: {\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by a foe with stat boosts. Eliminates the target's boosts after receiving damage.\",\r\n\t\tonFoePrepareHit(target, source, move) {\r\n\t\t\tlet activate = false;\r\n\t\t\tif (target.positiveBoosts() > 0) {\r\n\t\t\t\tsource.addVolatile('spectralleech');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\t\tlet activate = false;\r\n\t\t\t\tlet statName: BoostID;\r\n\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\tfor (statName in source.boosts) {\r\n\t\t\t\t\tconst stage = source.boosts[statName];\r\n\t\t\t\t\tif (stage > 0) {\r\n\t\t\t\t\t\tboosts[statName] = stage;\r\n\t\t\t\t\t\tactivate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (activate) {\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\tthis.add('-clearpositiveboost', source, target, 'ability: Spectral Leech');\r\n\r\n\t\t\t\t\tlet statName2: BoostID;\r\n\t\t\t\t\tfor (statName2 in boosts) {\r\n\t\t\t\t\t\tboosts[statName2] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsource.setBoost(boosts);\r\n\t\t\t\t\tthis.heal(target.maxhp / 4);\r\n\t\t\t\t}\r\n\t\t\t\ttarget.removeVolatile('spectralleech');\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Spectral Leech\",\r\n\t\trating: 4,\r\n\t\tnum: -7,\r\n\t},\r\n\trelentless: {\r\n\t\tshortDesc: \"Damage of moves used on consecutive turns is increased. Max 2x after 5 turns.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('metronome');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.lastMove = '';\r\n\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t},\r\n\t\t\tonTryMovePriority: -2,\r\n\t\t\tonTryMove(pokemon, target, move) {\r\n\t\t\t\tif (!pokemon.hasItem('metronome')) {\r\n\t\t\t\t\tpokemon.removeVolatile('metronome');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.effectState.lastMove === move.id && pokemon.moveLastTurnResult) {\r\n\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t} else if (pokemon.volatiles['twoturnmove']) {\r\n\t\t\t\t\tif (this.effectState.lastMove !== move.id) {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.lastMove = move.id;\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tconst dmgMod = [4096, 4915, 5734, 6553, 7372, 8192];\r\n\t\t\t\tconst numConsecutive = this.effectState.numConsecutive > 5 ? 5 : this.effectState.numConsecutive;\r\n\t\t\t\tthis.debug(`Current Metronome boost: ${dmgMod[numConsecutive]}/4096`);\r\n\t\t\t\treturn this.chainModify([dmgMod[numConsecutive], 4096]);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Relentless\",\r\n\t\trating: 3.5,\r\n\t\tnum: -8,\r\n\t},\r\n\tmedicinalbackground: {\r\n\t\tname: \"Medicinal Background\",\r\n\t\tshortDesc: \"This Pokemon gains 1.2x HP from draining/Aqua Ring/Ingrain/Leech Seed/Strength Sap; 1.4x at half HP or less.\",\r\n\t\tonTryHealPriority: 1,\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tconst heals = ['drain', 'leechseed', 'ingrain', 'aquaring', 'strengthsap'];\r\n\t\t\tif (heals.includes(effect.id)) {\r\n\t\t\t\tif (target.hp <= target.maxhp / 2) return this.chainModify([5734, 4096]);\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 3.5,\r\n\t\tnum: -9,\r\n\t},\r\n\tchameleon: {\r\n\t\tshortDesc: \"This Pokemon's type changes to match the type of the move it is about to use.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch') return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Chameleon');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Chameleon\",\r\n\t\trating: 4,\r\n\t\tnum: -10,\r\n\t},\r\n\tcallofdarkness: {\r\n\t\tshortDesc: \"At the end of each turn, if this Pok\u00E9mon\u2019s HP is at half or lower, causes all opposing Pokemon to lose 1/8 of their maximum HP, rounded down.\",\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\t\tthis.add('-anim', pokemon, \"Dark Pulse\", target);\r\n\t\t\t\t\tthis.damage(target.baseMaxhp / 8, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Call of Darkness\",\r\n\t\trating: 4,\r\n\t\tnum: -11,\r\n\t},\r\n\tcolorfilter: {\r\n\t\tname: \"Color Filter\",\r\n\t\tshortDesc: \"Limber + Keen Eye\",\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Keen Eye\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'par') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Limber');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'par') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Limber');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\trating: 2.5,\r\n\t\tnum: -12,\r\n\t},\r\n\tblackoutcurtain: {\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.boost({atk: 1});\r\n\t\t},\r\n\t\tname: \"Blackout Curtain\",\r\n\t\tshortDesc: \"When this Pokemon is damaged by an attack, its Atk is raised by 1.\",\r\n\t\trating: 4.5,\r\n\t\tnum: -13,\r\n\t},\r\n\tfrigidbloodline: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ice') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Frigid Bloodline');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Frigid Bloodline\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Ice moves; Ice immunity.\",\r\n\t\trating: 3.5,\r\n\t\tnum: -14,\r\n\t},\r\n\t// Curse Weaver utilizing Ghost-type curse is handled within moves.ts\r\n\tcurseweaver: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Curse Weaver boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Curse Weaver boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Curse Weaver weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Curse Weaver weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Curse Weaver\",\r\n\t\tshortDesc: \"Attacking stat multiplied by 1.5 while using a Ghost-type attack; halves damage received from Ghost attacks. Curse becomes Ghost-type version.\",\r\n\t\trating: 3.5,\r\n\t\tnum: -16,\r\n\t},\r\n\tjellydessertqueen: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\t// this.add('-heal', pokemon, pokemon.getHealth, '[from] ability: Jelly Dessert Queen');\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t},\r\n\t\tname: \"Jelly Dessert Queen\",\r\n\t\tshortDesc: \"This Pokemon recovers 1/16 max HP at the end of each turn.\",\r\n\t\trating: 4,\r\n\t\tnum: -17,\r\n\t},\r\n\tbinarysoul: {\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.species.baseSpecies !== 'Twinrova' || pokemon.terastallized) return;\r\n\t\t\tconst targetForme = pokemon.species.name === 'Twinrova' ? 'Twinrova-Fire' : 'Twinrova';\r\n\t\t\tpokemon.formeChange(targetForme);\r\n\t\t},\r\n\t\t// I have no clue what's going on here, all I know is that this is how Morpeko was coded\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Binary Soul\",\r\n\t\tshortDesc: \"If Twinrova, it changes between Fire and Ice at the end of each turn.\",\r\n\t\trating: 1,\r\n\t\tnum: -18,\r\n\t},\r\n\tperplexinggaze: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Psychic') {\r\n\t\t\t\tthis.debug('Perplexing Gaze boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Psychic') {\r\n\t\t\t\tthis.debug('Perplexing Gaze boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Perplexing Gaze\",\r\n\t\tshortDesc: \"This Pokemon's Psychic moves have 1.5x power.\",\r\n\t\trating: 3.5,\r\n\t\tnum: -19,\r\n\t},\r\n\trainbowpuppeteer: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.forceSTAB = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rainbow Puppeteer\",\r\n\t\tshortDesc: \"This Pokemon's moves have STAB.\",\r\n\t\trating: 4,\r\n\t\tnum: -20,\r\n\t},\r\n\tdevouringjaw: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['bite']) { \r\n\t\t\t\tmove.drain ||= [1, 2];\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Devouring Jaw\",\r\n\t\tshortDesc: \"This Pokemon's biting moves heal it for 50% of the damage dealt.\",\r\n\t\trating: 3,\r\n\t\tnum: -21,\r\n\t},\r\n\tdivearmor: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('DiVE Armor neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect.effectType === \"Move\" &&\r\n\t\t\t\t!effect.multihit &&\r\n\t\t\t\t(!effect.negateSecondary && !(effect.hasSheerForce && source.hasAbility('sheerforce')))\r\n\t\t\t) {\r\n\t\t\t\tthis.effectState.checkedBerserk = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.effectState.checkedBerserk = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItem(item) {\r\n\t\t\tconst healingItems = [\r\n\t\t\t\t'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry', 'berryjuice',\r\n\t\t\t];\r\n\t\t\tif (healingItems.includes(item.id)) {\r\n\t\t\t\treturn this.effectState.checkedBerserk;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tthis.effectState.checkedBerserk = true;\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp < target.maxhp / 4 && target.hp + damage >= target.maxhp / 4) {\r\n\t\t\t\tconst bestStat = target.getBestStat(true, true);\r\n\t\t\t\tthis.boost({[bestStat]: 1}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"DiVE Armor\",\r\n\t\tshortDesc: \"Recieves 3/4 damage from SE attacks; highest stat raised by 1 when hp below 25%.\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\tshadowgift: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Shadowgift boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Shadowgift boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Shadowgift\",\r\n\t\tshortDesc: \"Attacking stat multiplied by 1.5 while using a Ghost-type attack.\",\r\n\t\trating: 3.5,\r\n\t\tnum: -23,\r\n\t},\r\n\tgaleforce: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-anim', source, \"Tailwind\", source);\r\n\t\t\t\tsource.addVolatile('galeforce');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\t\tpokemon.removeVolatile('galeforce')\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Galeforce\",\r\n\t\tshortDesc: \"If this Pokemon attacks and KO's a target, next move used has +1 priority.\",\r\n\t\trating: 3,\r\n\t\tnum: -24,\r\n\t},\r\n\tsmirk: {\r\n\t\t// On protect effect handled in moves.ts\r\n\t\tonFoeDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Smirk trigger');\r\n\t\t\t\tsource.addVolatile('laserfocus');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\tif (pokemon.moveThisTurnResult === false) {\r\n\t\t\t\tthis.debug('Smirk trigger');\r\n\t\t\t\ttarget.addVolatile('laserfocus');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Smirk\",\r\n\t\tshortDesc: \"On Supereffective attack or a failed move against this Pokemon, grants Laser Focus.\",\r\n\t\trating: 3,\r\n\t\tnum: -25,\r\n\t},\r\n\t// This isn't a doubles mod!\r\n\trefresher: {\r\n\t\tname: \"Refresher\",\r\n\t\tshortDesc: \"30% chance to restore ally's health for 1/4 at the end of each turn\",\r\n\t\trating: 1,\r\n\t\tnum: -26,\r\n\t},\r\n\tautobuild: {\r\n\t\tname: \"Autobuild\",\r\n\t\tshortDesc: \"This Pokemon is immune to hazards & terrain.\",\r\n\t\t// Literally every element of this has to be handled via moves.ts\r\n\t\trating: 4,\r\n\t\tnum: -27,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
