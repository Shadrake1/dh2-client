{
  "version": 3,
  "sources": ["../../../../data/mods/dlcmons/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: ModdedMoveData} = {\r\n\tvocalstrain: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Vocal Strain\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, sound: 1},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hyper Voice\", target);\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\tsource.addVolatile('vocalstrain');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (move.flags['sound']) return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t\tshortDesc: \"Hits all adjacent foes. Prevents the user from using sound-based moves for 2 turns.\",\r\n\t},\r\n\tbadapple: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bad Apple\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Grav Apple\", target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Fairy') return 1;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tdesc: \"Has a 20% chance to poison the target. This move's type effectiveness against Fairy is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"20% chance to poison. Super effective on Fairy.\",\r\n\t},\r\n\tkindle: {\r\n\t\tnum: -3,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 55,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Inferno\", target);\r\n\t\t},\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'brn') return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Kindle\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tdesc: \"Power doubles if the target suffers from Burn.\",\r\n\t\tshortDesc: \"Power doubles if the target is burnt.\",\r\n\t},\r\n\tcleansingwave: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Cleansing Wave\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Wave Crash\", target);\r\n\t\t},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tif (target.hp && target.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', target, 'Leech Seed', '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.hp && target.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(condition).name, '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tif (target.hp && target.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', target, 'Leech Seed', '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.hp && target.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(condition).name, '[from] move: Cleansing Wave', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"Removes Leech Seed and entry hazards of both side, and decreases the targets' Speed by 1 stage. Hit all adjacent foes.\",\r\n\t\tshortDesc: \"Removes hazards and Leech Seed from both sides. Decreases the targets' Speed by 1 stage. Hit all adjacent foes.\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
