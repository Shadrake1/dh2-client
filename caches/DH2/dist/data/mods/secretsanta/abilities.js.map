{
  "version": 3,
  "sources": ["../../../../data/mods/secretsanta/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: AbilityData} = {\r\n\tnightmareeater: {\r\n\t\tshortDesc: \"Immune to Dark-type moves, and recovers 25% when hit by one.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Nightmare Eater');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Nightmare Eater\",\r\n\t\trating: 3.5,\r\n\t\tnum: 100001,\r\n\t},\r\n\tpoweroftwo: {\r\n\t\tshortDesc: \"If this Pokemon has two moves or less, its power boosts by 1.3x\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.moveSlots.length < 3) {\r\n\t\t\t\tthis.debug('Power of Two boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.moveSlots.length < 3) {\r\n\t\t\t\tthis.debug('Power of Two boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Power of Two\",\r\n\t\trating: 2,\r\n\t\tnum: 100002,\r\n\t},\r\n\tchemicalburn: {\r\n\t\tshortDesc: \"Contact moves lower foe's SpD.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Poison Touch's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\t\t\tif (this.checkMoveMakesContact(move, target, source)) {\r\n\t\t\t\tthis.boost({spd: -1}, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Chemical Burn\",\r\n\t\trating: 2,\r\n\t\tnum: 100003,\r\n\t},\r\n\tcamoform: {\r\n\t\tname: \"Camoform\",\r\n\t\tshortDesc: \"User's type changes to match it's first two moves.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst types = [...new Set(pokemon.baseMoveSlots.slice(0, 2).map(move => this.dex.moves.get(move.id).type))];\r\n\t\t\tpokemon.setType(types);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[from] ability: Camoform');\r\n\t\t}\r\n\t},\r\n\ttrickster: {\r\n\t\tname: \"Trickster\",\r\n\t\tshortDesc: \"A bunch of random status moves become physical (thanks anaconja)\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tlet trickyMoves = [\"After You\", \"Block\", \"Confide\", \"Defog\", \"Guard Split\", \"Guard Swap\", \"Heart Swap\", \"Instruct\", \"Lock-On\", \"Mean Look\", \"Mimic\", \"Pain Split\", \"Play Nice\", \"Power Split\", \"Power Swap\", \"Psych Up\", \"Reflect Type\", \"Roar\", \"Role Play\", \"Skill Swap\", \"Speed Swap\", \"Spicy Extract\", \"Tearful Look\", \"Transform\", \"Whirlwind\", \"Yawn\"];\r\n\t\t\tif (trickyMoves.includes(move.name));\r\n\t\t\tmove.category = \"Physical\";\r\n\t\t\tmove.basePower = 80;\r\n\t\t},\r\n\t\tnum: 100004,\r\n\t},\r\n\twishingstar: {\r\n\t\tname: \"Wishing Star\",\r\n\t   onSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'wishingstar');\r\n\t   },\r\n\t   condition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\t if (!target.fainted) {\r\n\t\t\t\t\t  const source = this.effectState.source;\r\n\t\t\t\t\t  const damage = this.heal(source.baseMaxhp / 8, target, source);\r\n\t\t\t\t\t  target.side.removeSlotCondition(target, 'wishingstar');\r\n\t\t\t\t }\r\n\t\t\t},\r\n\t   },\r\n\t\trating: 3,\r\n\t\tshortDesc: \"On switch-out, the next Pokemon sent out heals 1/8 of the user's max HP.\",\r\n\t\tnum: 100005,\r\n\t},\r\n\t// slate 2\r\n\tkatabaticwinds: {\r\n\t\tname: \"Katabatic Winds\",\r\n\t\tshortDesc: \"If Gravity is active, Flying attacks deal 50% less to this Pokemon.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (!effect.effectType || effect.effectType !== \"Move\") return damage;\r\n\t\t\tif (effect.type === \"Flying\" && this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\treturn Math.floor(damage * 0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tnum: 100006,\r\n\t},\r\n\tprescription: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst target = pokemon.side.foe.active[pokemon.side.foe.active.length - 1 - pokemon.position];\r\n\t\t\tif (pokemon.hp > target.hp) pokemon.m.prescription = true;\r\n\t\t\telse pokemon.m.prescription = false;\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.m.prescription = false;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst target = pokemon.side.foe.active[pokemon.side.foe.active.length - 1 - pokemon.position];\r\n\t\t\tif (pokemon.hp > target.hp) pokemon.m.prescription = true;\r\n\t\t\telse pokemon.m.prescription = false;\r\n\t\t},\r\n\t\tonChangeBoost(boost, target, source, effect) {\r\n\t\t\tif (!target.m.prescription) return;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHealPriority: 1,\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tconsole.log(source.name)\r\n\t\t\tconsole.log(target.name)\r\n\t\t\tif (source.m.prescription) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Prescription\",\r\n\t\tshortDesc: \"Doubles stat changes and healing if user HP > target HP.\",\r\n\t\trating: 4,\r\n\t\tnum: 100007,\r\n\t},\r\n\treallyfat: {\r\n\t\tshortDesc: \"Electric, Fire, and Ice attacks always deal 12.5%, and secondary effects don't activate.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && ['Electric','Fire','Ice'].includes(move.type)) {\r\n\t\t\t\tif (this.damage(target.baseMaxhp / 8)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Really Fat');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Really Fat\",\r\n\t\trating: 3.5,\r\n\t\tnum: 100008,\r\n\t},\r\n\ttableflip: {\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\ttypeMod *= -1;\r\n\t\t\tif (typeMod === 3) typeMod = 2\r\n\t\t\treturn typeMod;\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (pokemon.lastMove && pokemon.lastMove.id !== 'struggle') pokemon.disableMove(pokemon.lastMove.id);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Table Flip\",\r\n\t\tshortDesc: \"Reverses type matchups, inflicts Torment on user, overrides Mold Breaker.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 100009,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
