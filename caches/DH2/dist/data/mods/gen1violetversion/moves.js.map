{
  "version": 3,
  "sources": ["../../../../data/mods/gen1violetversion/moves.ts"],
  "sourcesContent": ["export const Moves: {[k: string]: ModdedMoveData} = {\r\n\tacid: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Drops defense 1 stage.\",\r\n\t\tshortDesc: \"Drops def -1.\",\r\n\t\tbasePower: 60,\r\n\t\tpp: 15,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\taquaring: {\r\n\t\tnum: 392,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Aqua Ring\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tvolatileStatus: 'aquaring',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Aqua Ring');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 6,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbind: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 40,\r\n\t\taccuracy: 75,\r\n\t\tpp: 5,\r\n\t\ttype: \"Bug\",\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tclamp: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 70,\r\n\t\taccuracy: 75,\r\n\t\tpp: 5,\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tconversion: { //Typing needs to be retained after switch-out\r\n\t\tinherit: true,\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tonHit(target, source, move) {\r\n// bad solution incoming\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), source, source);\r\n\t\t\t\r\n\t\t\tsource.side.removeSideCondition('convertmoltres')\r\n\t\t\tsource.side.removeSideCondition('convertalakazam')\r\n\t\t\tsource.side.removeSideCondition('convertarbok')\r\n\t\t\tsource.side.removeSideCondition('convertarticuno')\r\n\t\t\tsource.side.removeSideCondition('convertbeedrill')\r\n\t\t\tsource.side.removeSideCondition('convertblastoise')\r\n\t\t\tsource.side.removeSideCondition('convertbutterfree')\r\n\t\t\tsource.side.removeSideCondition('convertchansey')\r\n\t\t\tsource.side.removeSideCondition('convertcharizard')\r\n\t\t\tsource.side.removeSideCondition('convertcloyster')\r\n\t\t\tsource.side.removeSideCondition('convertdragonite')\r\n\t\t\tsource.side.removeSideCondition('convertdugtrio')\r\n\t\t\tsource.side.removeSideCondition('convertelectabuzz')\r\n\t\t\tsource.side.removeSideCondition('convertelectrode')\r\n\t\t\tsource.side.removeSideCondition('convertexeggutor')\r\n\t\t\tsource.side.removeSideCondition('convertflareon')\r\n\t\t\tsource.side.removeSideCondition('convertgengar')\r\n\t\t\tsource.side.removeSideCondition('convertgolbat')\r\n\t\t\tsource.side.removeSideCondition('convertgolduck')\r\n\t\t\tsource.side.removeSideCondition('convertgolem')\r\n\t\t\tsource.side.removeSideCondition('convertgyarados')\r\n\t\t\tsource.side.removeSideCondition('convertjynx')\r\n\t\t\tsource.side.removeSideCondition('convertkabutops')\r\n\t\t\tsource.side.removeSideCondition('convertmachamp')\r\n\t\t\tsource.side.removeSideCondition('convertmagmar')\r\n\t\t\tsource.side.removeSideCondition('convertmagneton')\r\n\t\t\tsource.side.removeSideCondition('convertnidoqueen')\r\n\t\t\tsource.side.removeSideCondition('convertninetales')\r\n\t\t\tsource.side.removeSideCondition('convertparasect')\r\n\t\t\tsource.side.removeSideCondition('convertpidgeot')\r\n\t\t\tsource.side.removeSideCondition('convertpinsir')\r\n\t\t\tsource.side.removeSideCondition('convertpoliwrath')\r\n\t\t\tsource.side.removeSideCondition('convertporygon')\r\n\t\t\tsource.side.removeSideCondition('convertslowbro')\r\n\t\t\tsource.side.removeSideCondition('converttangela')\r\n\t\t\tsource.side.removeSideCondition('convertvileplume')\r\n\t\t\tsource.side.removeSideCondition('convertzapdos')\r\n\t\t\t\t\r\n\t\t\t//very bad solution incoming\r\n\t\t\tswitch (target.species.name) {\r\n\t\t\t\tcase 'Moltres':\r\n\t\t\t\t\tsource.side.addSideCondition('convertmoltres')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Aerodactyl':\r\n\t\t\t\t\tsource.side.addSideCondition('convertaerodactyl')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Alakazam':\r\n\t\t\t\tcase 'Hypno':\r\n\t\t\t\tcase 'Mew':\r\n\t\t\t\t\tsource.side.addSideCondition('convertalakazam')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Arbok':\r\n\t\t\t\tcase 'Muk':\r\n\t\t\t\t\tsource.side.addSideCondition('convertarbok')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Articuno':\r\n\t\t\t\t\tsource.side.addSideCondition('convertarticuno')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Beedrill':\r\n\t\t\t\t\tsource.side.addSideCondition('convertbeedrill')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Blastoise':\r\n\t\t\t\t\tsource.side.addSideCondition('convertblastoise')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Butterfree':\r\n\t\t\t\t\tsource.side.addSideCondition('convertbutterfree')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Chansey':\r\n\t\t\t\tcase 'Snorlax':\r\n\t\t\t\tcase 'Tauros':\r\n\t\t\t\t\tsource.side.addSideCondition('convertchansey')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Charizard':\r\n\t\t\t\t\tsource.side.addSideCondition('convertcharizard')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Cloyster':\r\n\t\t\t\t\tsource.side.addSideCondition('convertcloyster')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Dragonite':\r\n\t\t\t\t\tsource.side.addSideCondition('convertdragonite')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Dugtrio':\r\n\t\t\t\t\tsource.side.addSideCondition('convertdugtrio')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Electabuzz':\r\n\t\t\t\t\tsource.side.addSideCondition('convertelectabuzz')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Electrode':\r\n\t\t\t\t\tsource.side.addSideCondition('convertelectrode')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Exeggutor':\r\n\t\t\t\t\tsource.side.addSideCondition('convertexeggutor')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Flareon':\r\n\t\t\t\t\tsource.side.addSideCondition('convertflareon')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Gengar':\r\n\t\t\t\t\tsource.side.addSideCondition('convertgengar')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Golbat':\r\n\t\t\t\t\tsource.side.addSideCondition('convertgolbat')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Golduck':\r\n\t\t\t\t\tsource.side.addSideCondition('convertgolduck')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Golem':\r\n\t\t\t\t\tsource.side.addSideCondition('convertgolem')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Gyarados':\r\n\t\t\t\t\tsource.side.addSideCondition('convertgyarados')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Jynx':\r\n\t\t\t\t\tsource.side.addSideCondition('convertjynx')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Kabutops':\r\n\t\t\t\t\tsource.side.addSideCondition('convertkabutops')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Machamp':\r\n\t\t\t\t\tsource.side.addSideCondition('convertmachamp')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Magmar':\r\n\t\t\t\t\tsource.side.addSideCondition('convertmagmar')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Magneton':\r\n\t\t\t\t\tsource.side.addSideCondition('convertmagneton')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Nidoqueen':\r\n\t\t\t\t\tsource.side.addSideCondition('convertnidoqueen')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Ninetales':\r\n\t\t\t\t\tsource.side.addSideCondition('convertninetales')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Parasect':\r\n\t\t\t\t\tsource.side.addSideCondition('convertparasect')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pidgeot':\r\n\t\t\t\t\tsource.side.addSideCondition('convertpidgeot')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Pinsir':\r\n\t\t\t\t\tsource.side.addSideCondition('convertpinsir')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Poliwrath':\r\n\t\t\t\t\tsource.side.addSideCondition('convertpoliwrath')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Porygon':\r\n\t\t\t\t\tsource.side.addSideCondition('convertporygon')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Slowbro':\r\n\t\t\t\tcase 'Starmie':\r\n\t\t\t\t\tsource.side.addSideCondition('convertslowbro')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Tangela':\r\n\t\t\t\t\tsource.side.addSideCondition('converttangela')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Vileplume':\r\n\t\t\t\t\tsource.side.addSideCondition('convertvileplume')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Zapdos':\r\n\t\t\t\t\tsource.side.addSideCondition('convertzapdos')\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tconvertmoltres: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertmoltres',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Fire') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Fire');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Fire','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertaerodactyl: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertaerodactyl',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Rock') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Rock');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Rock','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertalakazam: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertalakazam',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Psychic')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Psychic');\r\n\t\t\t\t\tpokemon.setType('Psychic');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertarbok: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertarbok',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Poison')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Rock');\r\n\t\t\t\t\tpokemon.setType('Poison');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertarticuno: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertarticuno',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Ice') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Ice');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Ice','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertbeedrill: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertbeedrill',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Bug') && pokemon.hasType('Poison'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Bug');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Poison');\r\n\t\t\t\t\tpokemon.setType(['Bug','Poison']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertblastoise: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertblastoise',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Water') && pokemon.hasType('Ground'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Water');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Ground');\r\n\t\t\t\t\tpokemon.setType(['Water','Ground']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertbutterfree: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertbutterfree',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Bug') && pokemon.hasType('Psychic'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Bug');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Psychic');\r\n\t\t\t\t\tpokemon.setType(['Bug','Psychic']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertchansey: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertchansey',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Normal')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Normal');\r\n\t\t\t\t\tpokemon.setType('Normal');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertcharizard: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertcharizard',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Fire') && pokemon.hasType('Dragon'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Fire');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Dragon');\r\n\t\t\t\t\tpokemon.setType(['Fire','Dragon']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertcloyster: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertcloyster',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Water') && pokemon.hasType('Ice'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Water');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Ice');\r\n\t\t\t\t\tpokemon.setType(['Water','Ice']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertdragonite: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertdragonite',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Dragon') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Dragon');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Dragon','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertdugtrio: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertdugtrio',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Ground')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Ground');\r\n\t\t\t\t\tpokemon.setType('Ground');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertelectabuzz: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertelectabuzz',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Electric') && pokemon.hasType('Fighting'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Electric');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Fighting');\r\n\t\t\t\t\tpokemon.setType(['Electric','Fighting']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertelectrode: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertelectrode',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Electric')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Electric');\r\n\t\t\t\t\tpokemon.setType('Electric');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertexeggutor: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertexeggutor',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Grass') && pokemon.hasType('Psychic'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Grass');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Psychic');\r\n\t\t\t\t\tpokemon.setType(['Grass','Psychic']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertflareon: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertaerodactyl',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Fire')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Fire');\r\n\t\t\t\t\tpokemon.setType('Fire');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertgengar: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertgengar',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Ghost') && pokemon.hasType('Poison'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Ghost');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Poison');\r\n\t\t\t\t\tpokemon.setType(['Ghost','Poison']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertgolbat: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertgolbat',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Poison') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Poison');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Poison','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertgolduck: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertgolduck',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Water') && pokemon.hasType('Ghost'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Water');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Ghost');\r\n\t\t\t\t\tpokemon.setType(['Water','Ghost']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertgolem: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertgolem',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Rock') && pokemon.hasType('Ground'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Rock');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Ground');\r\n\t\t\t\t\tpokemon.setType(['Rock','Ground']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertgyarados: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertgyarados',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Water') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Water');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Water','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertjynx: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertjynx',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Ice') && pokemon.hasType('Psychic'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Ice');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Psychic');\r\n\t\t\t\t\tpokemon.setType(['Ice','Psychic']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertkabutops: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertkabutops',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Rock') && pokemon.hasType('Water'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Rock');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Water');\r\n\t\t\t\t\tpokemon.setType(['Rock','Water']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertmachamp: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertmachamp',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Machamp')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Fighting');\r\n\t\t\t\t\tpokemon.setType('Fighting');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertmagmar: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertmagmar',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Fire') && pokemon.hasType('Fighting'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Fire');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Fighting');\r\n\t\t\t\t\tpokemon.setType(['Fire','Fighting']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertmagneton: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertmagneton',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Electric') && pokemon.hasType('Rock'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Electric');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Rock');\r\n\t\t\t\t\tpokemon.setType(['Electric','Rock']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertnidoqueen: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertnidoqueen',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Ground') && pokemon.hasType('Poison'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Ground');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Poison');\r\n\t\t\t\t\tpokemon.setType(['Ground','Poison']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertninetales: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertninetales',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Fire') && pokemon.hasType('Psychic'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Fire');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Psychic');\r\n\t\t\t\t\tpokemon.setType(['Fire','Psychic']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertparasect: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertparasect',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Bug') && pokemon.hasType('Grass'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Bug');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Grass');\r\n\t\t\t\t\tpokemon.setType(['Bug','Grass']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertpidgeot: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertpidgeot',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Normal') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Normal');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Normal','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertpinsir: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertpinsir',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Bug')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Bug');\r\n\t\t\t\t\tpokemon.setType('Bug');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertpoliwrath: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertpoliwrath',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Water') && pokemon.hasType('Fighting'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Water');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Fighting');\r\n\t\t\t\t\tpokemon.setType(['Water','Fighting']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertporygon: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertporygon',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Ghost')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Ghost');\r\n\t\t\t\t\tpokemon.setType('Ghost');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertslowbro: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertslowbro',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Water') && pokemon.hasType('Psychic'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Water');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Psychic');\r\n\t\t\t\t\tpokemon.setType(['Water','Psychic']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconverttangela: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'converttangela',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.getTypes().join() === 'Grass')) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Grass');\r\n\t\t\t\t\tpokemon.setType('Grass');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertvileplume: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertvileplume',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Grass') && pokemon.hasType('Poison'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Grass');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Poison');\r\n\t\t\t\t\tpokemon.setType(['Grass','Poison']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconvertzapdos: {\r\n\t\ttarget: \"normal\",\r\n\t\tpp: 20,\r\n\t\taccuracy: true,\r\n\t\tcategory: \"Status\",\r\n\t\tsideCondition: 'convertzapdos',\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (!(pokemon.hasType('Electric') && pokemon.hasType('Flying'))) {\r\n\t\t\t\t\tif (pokemon.species.baseSpecies === 'Porygon') {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Electric');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Flying');\r\n\t\t\t\t\tpokemon.setType(['Electric','Flying']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdisable: {\r\n\t\taccuracy: 100,\r\n\t\tcategory: \"Status\",\r\n\t\tid: \"disable\",\r\n\t\tisViable: true,\r\n\t\tname: \"Disable\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tsideCondition: 'disable',\r\n\t\ttarget: \"normal\",\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, authentic: 1},\r\n\t/**\tonTryHit(pokemon) {\r\n\t\t\tlet sideCondition = pokemon.side.sideConditions['disable'];\r\n\t\t\tif (sideCondition) {\r\n\t\t\t\tpokemon.side.removeSideCondition('disable');\r\n\t\t\t}\r\n\t\t},**/\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonHit (target, source, move) {\r\n\t\t\t\tif (move.id === 'disable') {\r\n\t\t\t\t\tconst moveSlot = this.sample(target.moveSlots.filter(ms => ms.pp > 0));\r\n\t\t\t\t\tthis.effectState.move = moveSlot.id; \r\n\t\t\t\t\tfor (const pokemon of target.side.pokemon) {\t\r\n\t\t\t\t\t\tpokemon.timesAttacked = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttarget.timesAttacked = 500\r\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\tthis.add('-start', target, 'Disable', moveSlot.move)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 7,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (this.effectState.source !== attacker) return;\r\n\t\t\t\tif (move.id === this.effectState.move) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tif (pokemon.timesAttacked >= 500) {\r\n\t\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdreameater: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tbasePower: 200,\r\n\t\tdrain: [1, 1],\r\n\t\tonTryImmunity(target) {\r\n\t\t\treturn target.status === 'slp' || target.status === 'psn' || target.status === 'tox' || target.hasAbility('comatose');\r\n\t\t},\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\tfirespin: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 30,\r\n\t\taccuracy: 70,\r\n\t\tpp: 5,\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tglare: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t},\r\n\tgust: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Always drops attack 1 stage.\",\r\n\t\tshortDesc: \"Atk drops -1.\",\r\n\t\tbasePower: 80,\r\n\t\tpp: 15,\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttype: \"Flying\",\r\n    },\r\n\thaze: {\r\n\t\tdesc: \"Eliminates any stat stage changes and status from all active Pokemon. Heal both Pokemon by 33%.\",\r\n\t\tshortDesc: \"Remove stat changes, own status, both heal 33%\",\r\n\t\taccuracy: true,\r\n\t\tpp: 15,\r\n\t\tonHit(target, source) {\r\n\t\t\tthis.add('-clearallboost');\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tpokemon.clearBoosts();\r\n\t\t\t\tthis.heal(Math.floor(pokemon.maxhp * 0.33), pokemon, pokemon);\r\n\r\n\t\t\t\tif (pokemon === source) {\r\n\t\t\t\t\t// Clears the status from the user\r\n\t\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t},\r\n\tkaratechop: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tleechlife: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 60,\r\n\t\tdrain: [1, 1],\r\n\t},\r\n\tleechseed: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Leech Seed');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 8,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tconst target = this.getAtSlot(pokemon.volatiles['leechseed'].sourceSlot);\r\n\t\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\t\tthis.debug('Nothing to leech into');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst damage = this.damage(pokemon.baseMaxhp / 8, pokemon, target);\r\n\t\t\t\tif (damage) {\r\n\t\t\t\t\tthis.heal(damage, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonTryImmunity(target) {\r\n\t\t\treturn !target.hasType('Grass');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n  \tmeditate: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Meditate\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tvolatileStatus: 'aquaring',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Meditate');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 6,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tmegadrain: {\r\n\t\tinherit: true,\r\n\t\tdrain: [1, 1],\r\n\t},\r\n\tmimic: { \r\n\t\tinherit: true,\r\n\t\tdesc: \"Permanently learns a random move from the foe's moveset.\",\r\n\t\tshortDesc: \"Keeps a random move from foe.\",\r\n\t\tonHit(target, source) {\r\n\t\t\tlet moveslot = source.moves.indexOf('mimic');\r\n\t\t\tif (moveslot < 0) return false;\r\n\t\t\tlet noMimic = source.moves;\r\n\t\t\t\r\n\t\t\tlet moves = [];\r\n\t\t\t\r\n\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\tlet moveid = moveSlot.id;\r\n\t\t\t\tif (noMimic.includes(moveid)) continue;\r\n\t\t\t\tmoves.push(moveid);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet moveid = this.sample(moves);\r\n\t\t\tif (!moveid) return false;\r\n\t\t\tlet move = this.dex.moves.get(moveid);\r\n\t\t\tlet mimicMove = {\r\n\t\t\t\tmove: move.name,\r\n\t\t\t\tid: move.id,\r\n\t\t\t\tpp: source.moveSlots[moveslot].pp,\r\n\t\t\t\tmaxpp: move.pp * 8 / 5,\r\n\t\t\t\ttarget: move.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tsource.moveSlots[moveslot] = mimicMove;\r\n\t\t\tsource.baseMoveSlots[moveslot] = mimicMove;\r\n\t\t\tthis.add('-start', source, 'Mimic', move.name);\r\n\t\t},\r\n\t},\r\n\tmirrormove: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user uses the last move used by the target. Fails if the target has not made a move, or if the last move used was Mirror Move.\",\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet foe = pokemon.side.foe.active[0];\r\n\t\t\tif (foe.side.lastMove.id === 'mirrormove') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.actions.useMove(foe.side.lastMove.id, pokemon);\r\n\t\t},\r\n\t},\r\n\tpoisonsting: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 95,\r\n\t\tpp: 15,\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n  },\r\n\trecover: {\r\n\t\tnum: 105,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Recover\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\theal: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\trockslide: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 85,\r\n\t},\r\n\tskyattack: {\r\n\t\tinherit: true,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile('twoturnmove')) {\r\n\t\t\t\tattacker.removeVolatile('invulnerability');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\tthis.boost({def:1}, attacker, attacker, move);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tsoftboiled: {\r\n\t\tnum: 105,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Soft-Boiled\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\theal: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tsolarbeam: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 100,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile('twoturnmove')) {\r\n\t\t\t\tattacker.removeVolatile('invulnerability');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\tthis.boost({spa:1}, attacker, attacker, move);\r\n\t\t\tthis.boost({spd:1}, attacker, attacker, move);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tsubmission: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 100,\r\n\t\taccuracy: 100,\r\n  },\r\n\tthrash: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\tbasePower: 60,\r\n\t\ttype: \"Dragon\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t}\r\n\t},\r\n\ttoxic: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n  },\r\n\ttransform: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user transforms into the target. The target's current stats, stat stages, types, moves, DVs, species, and sprite are copied. The user's level and HP remain the same and each copied move receives only 5 PP. This move can hit a target using Dig or Fly.\",\r\n\t},\r\n\ttriattack: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\ttype: \"Ghost\",\r\n\t\tonHit() {},\r\n\t\tsecondary: null,\r\n  },\r\n\ttwineedle: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 40,\r\n\t\tmultihit: 2,\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'psn',\r\n\t\t}\r\n\t},\r\n\tvisegrip: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t\ttype: \"Bug\",\r\n\t},\r\n\twrap: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 40,\r\n\t\taccuracy: 85,\r\n\t\tpp: 5,\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["moveid"]
}
