{
  "version": 3,
  "sources": ["../../../../data/mods/gen8feuuafd/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\t// Set 1\r\n\tporous: {// Feel like this might be wrong\r\n\t\tid: \"porous\",\r\n\t\tname: \"Porous\",\r\n\t\tshortDesc: \"Ignores foe's stat stages; restores 1/4 max HP if hit by Water; Water immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Water')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Porous');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdespicable: {\r\n\t\tid: \"despicable\",\r\n\t\tname: \"Despicable\",\r\n\t\tshortDesc: \"This Pokemon's attacks are critical hits if the target is burned or poisoned.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\r\n\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\tignore = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tif (target && ['psn', 'tox', 'brn'].includes(target.status)) return 5;\r\n\t\t},\r\n\t},\r\n\tkingsguard: {\r\n\t\tid: \"kingsguard\",\r\n\t\tname: \"King's Guard\",\r\n\t\tshortDesc: \"Protected from enemy priority moves and Attack reduction.\",\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.atk && boost.atk < 0) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Attack\", \"[from] ability: King's Guard\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', dazzlingHolder, \"ability: King's Guard\", move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tgrowthveil: { // Too long\r\n\t\tid: \"growthveil\",\r\n\t\tname: \"Growth Veil\",\r\n\t\tshortDesc: \"Restores 1/3 max HP on switch-out; ally Grass-types safe from enemy stat drops & status.\",\r\n\t\tdesc: \"Restores 1/3 max HP on switch-out; ally Grass-types can't have stats lowered or status inflicted.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonAllyBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source) || !target.hasType('Grass')) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (target.hasType('Grass') && source && target !== source && effect && effect.id !== 'yawn') {\r\n\t\t\t\tthis.debug('interrupting setStatus with Growth Veil');\r\n\t\t\t\tif (effect.id === 'synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (target.hasType('Grass') && status.id === 'yawn') {\r\n\t\t\t\tthis.debug('Growth Veil blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsurgeoneye: {\r\n\t\tid: \"surgeoneye\",\r\n\t\tname: \"Surgeon Eye\",\r\n\t\tshortDesc: \"Restores 1/3 max HP on switch-out. Attack power 1.3x if it moves last in a turn.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue; // PLACEHOLDER\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Surgeon Eye boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Set 2\r\n\troughresult: { // Too long\r\n\t\tid: \"roughresult\",\r\n\t\tname: \"Rough Result\",\r\n\t\tshortDesc: \"Foes making contact lose 1/8 max HP; if KOed by contact, attacker loses 1/4 max HP.\",\r\n\t\tdsc: \"Pokemon making contact lose 1/8 max HP; if KOed by a contact move, attacker loses 1/4 max HP.\",\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t\tif (move.flags['contact'] && !target.hp) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\teyeforaneye: {\r\n\t\tid: \"eyeforaneye\",\r\n\t\tname: \"Eye for an Eye\",\r\n\t\tshortDesc: \"This Pokemon blocks Dark-type moves and bounces them back to the user.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || move.type !== 'Dark') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || move.type !== 'Dark') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t},\r\n\tnaturalheal: {\r\n\t\tid: \"naturalheal\",\r\n\t\tname: \"Natural Heal\",\r\n\t\tshortDesc: \"Restores 1/3 max HP and cures non-volatile status on switch-out.\",\r\n\t\tonCheckShow(pokemon) {\r\n\t\t\t// This is complicated\r\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\r\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\r\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\r\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\r\n\t\t\tif (pokemon.side.active.length === 1) return;\r\n\t\t\tif (pokemon.showCure === true || pokemon.showCure === false) return;\r\n\r\n\t\t\tconst cureList = [];\r\n\t\t\tlet noCureCount = 0;\r\n\t\t\tfor (const curPoke of pokemon.side.active) {\r\n\t\t\t\t// pokemon not statused\r\n\t\t\t\tif (!curPoke || !curPoke.status) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (curPoke.showCure) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Cure already known\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst species = curPoke.species;\r\n\t\t\t\t// pokemon can't get Natural Cure\r\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') && !Object.values(species.abilities).includes('Natural Heal')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Cure\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon's ability is known to be Natural Cure\r\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// pokemon isn't switching this turn\r\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (curPoke.hasAbility('naturalcure') || curPoke.hasAbility('naturalheal')) {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (and is)\");\r\n\t\t\t\t\tcureList.push(curPoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (but isn't)\");\r\n\t\t\t\t\tnoCureCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!cureList.length || !noCureCount) {\r\n\t\t\t\t// It's possible to know what pokemon were cured\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// It's not possible to know what pokemon were cured\r\n\r\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\r\n\t\t\t\tthis.add('-message', \"(\" + cureList.length + \" of \" + pokemon.side.name + \"'s pokemon \" + (cureList.length === 1 ? \"was\" : \"were\") + \" cured by Natural Heal.)\");\r\n\r\n\t\t\t\tfor (const pkmn of cureList) {\r\n\t\t\t\t\tpkmn.showCure = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\tif (!pokemon.status) return;\r\n\r\n\t\t\t// if pokemon.showCure is undefined, it was skipped because its ability\r\n\t\t\t// is known\r\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\r\n\r\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Natural Heal');\r\n\t\t\tpokemon.setStatus('');\r\n\r\n\t\t\t// only reset .showCure if it's false\r\n\t\t\t// (once you know a Pokemon has Natural Cure, its cures are always known)\r\n\t\t\tif (!pokemon.showCure) pokemon.showCure = undefined;\r\n\t\t},\r\n\t},\r\n\toverseeingmonarch: {\r\n\t\tname: \"Overseeing Monarch\",\r\n\t\tdesc: \"On switch-in, identifies foes' items; on switch-out, restores 1/3 max HP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (target.item) {\r\n\t\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Overseeing Monarch', '[of] ' + pokemon, '[identify]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t},\r\n\tporousfat: {\r\n\t\tid: \"porousfat\",\r\n\t\tname: \"Porous Fat\",\r\n\t\tshortDesc: \"Fire/Ice/Water moves against this Pokemon deal damage with a halved attacking stat.\",\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire' || move.type === 'Water') {\r\n\t\t\t\tthis.debug('Porous Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire' || move.type === 'Water') {\r\n\t\t\t\tthis.debug('Porous Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// set 3\r\n\tnullsystem: {\r\n\t\tid: \"nullsystem\",\r\n\t\tname: \"Null System\",\r\n\t\tshortDesc: \"This Pokemon can be any type (selected in teambuilder).\",\r\n\t},\r\n\tinthicktrator: {\r\n\t\tid: \"inthicktrator\",\r\n\t\tname: \"Inthicktrator\",\r\n\t\tshortDesc: \"This Pokemon's moves ignore Screens/Substitutes/Abilities.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\tconsole.log(\"Target has Sturdy Mold\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else { console.log(\"Target does not have Sturdy Mold\"); }\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tmove.infiltrates = true;\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t},\r\n\tmagicsurge: {\r\n\t\tid: \"magicsurge\",\r\n\t\tname: \"Magic Surge\",\r\n\t\tshortDesc: \"Summons Magic Room for 5 turns when switching in.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-activate', source, 'ability: Magic Surge');\r\n\t\t\tthis.field.addPseudoWeather('magicroom');\r\n\t\t},\r\n\t},\r\n\tmultiantlers: {\r\n\t\tid: \"multiantlers\",\r\n\t\tname: \"Multi Antlers\",\r\n\t\tshortDesc: \"User takes half damage when switching in or at full HP.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (!target.activeTurns) {\r\n\t\t\t\tthis.debug('Multi Antlers weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t} else if (target.hp >= target.maxhp) {\r\n\t\t\t\tthis.debug('Multi Antlers weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tconcussion: {// test\r\n\t\tid: \"concussion\",\r\n\t\tname: \"Concussion\",\r\n\t\tshortDesc: \"While this Pokemon is active, the opponents' held items have no effect.\",\r\n\t\tonStart(source) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of source.side.foe.active) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', source, 'Concussion');\r\n\t\t\t\t}\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tif (!pokemon.volatiles['embargo']) {\r\n\t\t\t\t\tpokemon.addVolatile('embargo');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tif (pokemon === source) return;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tif (!target.volatiles['embargo']) {\r\n\t\t\t\t\ttarget.addVolatile('embargo');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\ttarget.removeVolatile('embargo');\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 4,\r\n\t\tnum: 109,\r\n\t},\r\n\tnotfunny: {\r\n\t\tid: \"notfunny\",\r\n\t\tname: \"Not Funny\",\r\n\t\tshortDesc: \"No Guard + Prankster.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tif (target && target !== pokemon && target.hasAbility('sturdymold')) return;\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t},\r\n\tfowlbehavior: {\r\n\t\tid: \"fowlbehavior\",\r\n\t\tname: \"Fowl Behavior\",\r\n\t\tshortDesc: \"This Pokemon's Sp. Atk is 1.5x, but it can only select the first move it executes.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tif (pokemon.abilityData.choiceLock && pokemon.abilityData.choiceLock !== move.id) {\r\n\t\t\t\t// Fails unless ability is being ignored (these events will not run), no PP lost.\r\n\t\t\t\tthis.addMove('move', pokemon, move.name);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.debug(\"Disabled by Fowl Behavior\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.abilityData.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\r\n\t\t\tpokemon.abilityData.choiceLock = move.id;\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, pokemon, move) {\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\t// PLACEHOLDER\r\n\t\t\tthis.debug('Fowl Behavior Sp. Atk Boost');\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tif (!pokemon.abilityData.choiceLock) return;\r\n\t\t\tif (pokemon.volatiles['dynamax']) return;\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tif (moveSlot.id !== pokemon.abilityData.choiceLock) {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.abilityData.choiceLock = \"\";\r\n\t\t},\r\n\t},\r\n\tpillage: {\r\n\t\tid: \"pillage\",\r\n\t\tname: \"Pillage\",\r\n\t\tshortDesc: \"On switch-in, swaps ability with the opponent.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif ((pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) ||\r\n\t\t\tpokemon.species.id !== 'yaciancrowned' && pokemon.species.id !== 'porygrigus' && pokemon.species.id !== 'porymask' && pokemon.species.id !== 'hatterune' && pokemon.species.id !== 'hatamaskgalar') {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tif (!this.effectState.switchingIn) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion', 'pillage',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'ecopy', 'lemegeton', 'modeshift', 'rebootsystem', 'concussion',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.setAbility('pillage', pokemon);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Pillage');\r\n\t\t\t\tthis.add('-activate', pokemon, 'Skill Swap', '', '', '[of] ' + target);\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + ability.name);\r\n\t\t\t\tthis.add('-activate', target, 'ability: Pillage');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t/*\r\n\tmagneticwaves: {\r\n\t\tid: \"magneticwaves\",\r\n\t\tname: \"Magnetic Waves\",\r\n\t\tshortDesc: \"Normal moves: Electric type, 1.2x power. Immune to Ground moves.\",\r\n\t\t// airborneness implemented in sim/pokemon.js:Pokemon#isGrounded (via scripts.ts in this case)\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\t///////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t///////////END PLACEHOLDER\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.galvanizeBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.galvanizeBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown'] ) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Magnetic Waves');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n*/\r\n\tdoggysmaw: {\r\n\t\tid: \"doggysmaw\",\r\n\t\tname: \"Doggy's Maw\",\r\n\t\tshortDesc: \"This Pokemon's Normal, Fighting and Dragon moves ignore type-based immunities and this Pokemon's Normal-type moves deal 1.5x damage.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Normal') {\r\n\t\t\t\tthis.debug('Doggy\\'s Maw boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Normal') {\r\n\t\t\t\tthis.debug('Doggy\\'s Maw boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Dragon'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'ragingrapids') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Doggy\\'s Maw');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Doggy\\'s Maw');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Doggy\\'s Maw');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Doggy\\'s Maw');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// slate 5\r\n\tsturdymold: {// this one's gonna be a fucking adventure\r\n\t\tid: \"sturdymold\",\r\n\t\tname: \"Sturdy Mold\",\r\n\t\tshortDesc: \"Sturdy + Mold Breaker.\",\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Sturdy Mold');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Sturdy Mold');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Sturdy Mold');\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\t// I'm gonna figure out how to code this legit at some point, I swear,\r\n\t\t// but for now, since we have so few abilities,\r\n\t\t// I'm just gonna hard-code it into everything.\r\n\t},\r\n\ttherapeutic: {\r\n\t\tid: \"therapeutic\",\r\n\t\tname: \"Therapeutic\",\r\n\t\tshortDesc: \"Poison Heal effects. Upon losing its item, this Pokemon poisons itself.\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon !== this.effectState.target) return;\r\n\t\t\tpokemon.trySetStatus('psn', pokemon);\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tpokemon.trySetStatus('psn', pokemon);\r\n\t\t},\r\n\t},\r\n\tsolarpanel: {\r\n\t\tid: \"solarpanel\",\r\n\t\tname: \"Solar Panel\",\r\n\t\tshortDesc: \"If hit by Grass, Electric or Fire: +1 SpA. Grass/Electric/Fire immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Electric' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Solar Panel');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// For purposes of cancelling this ability out for Sturdy Mold:\r\n\ttoughclaws: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact'] && !defender.hasAbility('sturdymold')) {\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tough Claws\",\r\n\t\trating: 3.5,\r\n\t\tnum: 181,\r\n\t},\r\n\thustle: {\r\n\t\t// This should be applied directly to the stat as opposed to chaining with the others\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon, move) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number' && !target.hasAbility('sturdymold')) {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hustle\",\r\n\t\trating: 3.5,\r\n\t\tnum: 55,\r\n\t},\r\n\tscrappy: {\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, \"[from] ability: Scrappy\");\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, \"[from] ability: Scrappy\");\r\n\t\t\t} else if (effect.id === 'sinkorswim') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, \"[from] ability: Scrappy\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Scrappy\",\r\n\t\trating: 3,\r\n\t\tnum: 113,\r\n\t},\r\n\tsandforce: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\tif (defender && defender.hasAbility('sturdymold')) return;\r\n\t\t\t\tif (move.type === 'Rock' || move.type === 'Ground' || move.type === 'Steel') {\r\n\t\t\t\t\tthis.debug('Sand Force boost');\r\n\t\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tname: \"Sand Force\",\r\n\t\trating: 2,\r\n\t\tnum: 159,\r\n\t},\r\n\t// next\r\n\tnoguard: {// Edited for Sturdy Mold\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target) && !target.hasAbility('sturdymold')) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target) && !target.hasAbility('sturdymold')) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tname: \"No Guard\",\r\n\t\trating: 4,\r\n\t\tnum: 99,\r\n\t},\r\n\tbigpressure: {\r\n\t\tname: \"Big Pressure\",\r\n\t\tshortDesc: \"Moves targeting this Pokemon lose 1 additional PP; Foes cannot lower its Defense.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Big Pressure');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Big Pecks\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfriendshield: {\r\n\t\tname: \"Friend Shield\",\r\n\t\tshortDesc: \"Gets +1 Def and SpD on switch-in. Allies recieve 3/4 damage from foes' attacks.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.boost({def: 1, spd: 1}, pokemon);\r\n\t\t},\r\n\t\tonAnyModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target !== this.effectState.target && target.side === this.effectState.target.side) {\r\n\t\t\t\tthis.debug('Friend Shield weaken');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdebilitate: {\r\n\t\tname: \"Debilitate\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Special Attack of adjacent opponents by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Debilitate', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tleafyarmor: {// unsure\r\n\t\tname: \"Leafy Armor\",\r\n\t\tshortDesc: \"If a status condition is inflicted on this Pokemon: Cure status, -1 Defense, +2 Speed.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status && !pokemon.m.orbItemStatus) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Leafy Armor');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\tthis.boost({def: -1, spe: 2}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsurroundsound: {// unsure\r\n\t\tname: \"Surround Sound\",\r\n\t\tshortDesc: \"This Pokemon recieves 1/2 damage from multitarget moves. Its own have 1.3x power.\",\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (['allAdjacent', 'allAdjacentFoes', 'all'].includes(move.target)) {\r\n\t\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\t\tthis.debug('Surround Sound boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (['allAdjacent', 'allAdjacentFoes', 'all'].includes(move.target)) {\r\n\t\t\t\tthis.debug('Surround Sound weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tspikyhold: {\r\n\t\tname: \"Spiky Hold\",\r\n\t\tshortDesc: \"Cannot lose held item due to others' attacks; others making contact lose 1/8 max HP.\",\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Spiky Hold');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// slate 7\r\n\tsinkorswim: {\r\n\t\tname: \"Sink or Swim\",\r\n\t\tshortDesc: \"On switch-in, lowers adjacent opponents' Speed by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Sink or Swim', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdownpour: {\r\n\t\tname: \"Downpour\",\r\n\t\tshortDesc: \"If targeted by a foe's move: move loses 1 extra PP, this Pokemon restores 1/16 max HP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Downpour');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\trating: 2.5,\r\n\t\tnum: 46,\r\n\t},\r\n\t/* //No longer in use\r\n\toverclock: {\r\n\t\tname: \"Overclock\",\r\n\t\tshortDesc: \"If stats are lowered by foe or if hit by Electric move: Atk +2.\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Defiant only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Overclock');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tthis.boost({atk: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t*/\r\n\tmagicmissile: {\r\n\t\t/*\r\n\t\tNeed to test:\r\n\t\t- any Berry\r\n\t\t- Toxic Orb, Flame Orb or Light Ball (just one they're the same code)\r\n\t\t- White Herb\r\n\t\t- Mental Herb\r\n\t\t- um, I guess making sure Razor Claw or Razor Fang (just one they're the same code) doesn't immediately crash,\r\n\t\tbut it would be basically impossible for them to cause a flinch in a singles context\r\n\t\t(how does this behave with Instruct? maybe you could test with that if you're doing the doubles format Aquatic mentioned)\r\n\t\t*/\r\n\t\tname: \"Magic Missile\",\r\n\t\tshortDesc: \"If hit by a contact move while holding an item: lose item, apply item Fling effects, attacker loses 1/4 max HP. If hitting a foe with a contact move while not holding an item: steals the foe's item.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Magic Missile', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.isSemiInvulnerable()) return;\r\n\t\t\tif (target.ignoringItem()) return false;\r\n\t\t\tconst item = target.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, target.itemData, target, target, move, item)) return false;\r\n\t\t\tif (item.id && !item.megaStone) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\ttarget.addVolatile('fling');\r\n\t\t\t\tif (item.isBerry) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, source, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', source, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') source.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) source.ateBerry = true;\r\n\t\t\t\t} else if (item.id === 'mentalherb') {\r\n\t\t\t\t\tconst conditions = ['attract', 'taunt', 'encore', 'torment', 'disable', 'healblock'];\r\n\t\t\t\t\tfor (const firstCondition of conditions) {\r\n\t\t\t\t\t\tif (source.volatiles[firstCondition]) {\r\n\t\t\t\t\t\t\tfor (const secondCondition of conditions) {\r\n\t\t\t\t\t\t\t\tsource.removeVolatile(secondCondition);\r\n\t\t\t\t\t\t\t\tif (firstCondition === 'attract' && secondCondition === 'attract') {\r\n\t\t\t\t\t\t\t\t\tthis.add('-end', source, 'move: Attract', '[from] item: Mental Herb');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (item.id === 'whiteherb') {\r\n\t\t\t\t\tlet activate = false;\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tlet i: BoostName;\r\n\t\t\t\t\tfor (i in source.boosts) {\r\n\t\t\t\t\t\tif (source.boosts[i] < 0) {\r\n\t\t\t\t\t\t\tactivate = true;\r\n\t\t\t\t\t\t\tboosts[i] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (activate) {\r\n\t\t\t\t\t\tsource.setBoost(boosts);\r\n\t\t\t\t\t\tthis.add('-clearnegativeboost', source, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (item.fling && item.fling.status) {\r\n\t\t\t\t\t\tsource.trySetStatus(item.fling.status, target);\r\n\t\t\t\t\t} else if (item.fling && item.fling.volatileStatus) {\r\n\t\t\t\t\t\tsource.addVolatile(item.fling.volatileStatus, target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// slate 8\r\n\tfatproof: {\r\n\t\tname: \"Fat Proof\",\r\n\t\tshortDesc: \"Ice, Fire attacks against this Pokemon use a halved attack stat; Fire moves 1/2 BP.\",\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Fat Proof weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Fat Proof weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tleviflame: {\r\n\t\tname: \"Leviflame\",\r\n\t\tshortDesc: \"30% chance a Pokemon making contact with this Pokemon will be burned. Immune to Ground.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leviflame');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tprophylaxis: {\r\n\t\tname: \"Prophylaxis\",\r\n\t\tshortDesc: \"Regenerator + Anticipation.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Prophylaxis');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t},\r\n\tfeelnopain: {\r\n\t\tname: \"Feel No Pain\",\r\n\t\tshortDesc: \"Poison Heal + Levitate\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Feel No Pain');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\terosion: {\r\n\t\tname: \"Erosion\",\r\n\t\tshortDesc: \"Draws Electric moves to itself to raise SpA by 1; Electric immunity; summons Sandstorm on entry.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Erosion');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Electric' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Erosion');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tstatusabsorbtion: {\r\n\t\tname: \"Status Absorbtion\",\r\n\t\tshortDesc: \"This Pokemon is immune to being Poisoned or Burned.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox' || pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Status Absorbtion');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox' && status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Status Absorbtion');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tlevitability: {\r\n\t\tname: \"Levitability\",\r\n\t\tshortDesc: \"STAB moves are boosted an additional 1.5x; immune to Ground.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tmove.stab = 2;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Levitability');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\toblivious: {\r\n\t\tinherit: true,\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Oblivious');\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Oblivious');\r\n\t\t\t} else if (effect.id === 'sinkorswim') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Oblivious');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\towntempo: {\r\n\t\tinherit: true,\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Own Tempo');\r\n\t\t\t} else if (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Own Tempo');\r\n\t\t\t} else if (effect.id === 'sinkorswim') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Own Tempo');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trattled: {\r\n\t\tinherit: true,\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && ['intimidate', 'debilitate', 'sinkorswim', 'scarilyadorable', 'peckingorder'].includes(effect.id)) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// new slate\r\n\tchivalry: {\r\n\t\tshortDesc: \"For each stat lowered by a foe: +2 Atk, +1 Spe.\",\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Defiant only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (boost[i] < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Chivalry');\r\n\t\t\t\tthis.boost({atk: 2, spe: 1}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Chivalry\",\r\n\t},\r\n\thauntedtech: {\r\n\t\tshortDesc: \"Moves 60 power or less: 1.5x power. If hit by an attack, 30% chance to disable that move.\",\r\n\t\tname: \"Haunted Tech\",\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isFutureMove) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tstickyfloat: {\r\n\t\t// Groundedness implemented in scripts.ts\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Sticky Float');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Sticky Float');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sticky Float\",\r\n\t\tshortDesc: \"Effects of Sticky Hold + Levitate\",\r\n\t},\r\n\tterrorizer: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isFutureMove) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Terrorizer\",\r\n\t\tshortDesc: \"Sheer Force + Cursed Body\",\r\n\t},\r\n\tdarkhumour: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif ((source && target === source) || move.category !== 'Status') return;\r\n\t\t\tthis.add('-ability', target, 'Dark Humour');\r\n\t\t\tthis.boost({atk: 1}, target, target, null, true);\r\n\t\t},\r\n\t\tname: \"Dark Humour\",\r\n\t\tshortDesc: \"Status moves +1 priority. If targeted by a status move, +1 Atk.\",\r\n\t},\r\n\tspeedy: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({spe: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Speedy\",\r\n\t\tshortDesc: \"Speed raises by 1 stage if it attacks and KO's another Pokemon.\",\r\n\t},\r\n\tultrahealth: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-activate', source, 'ability: Ultra Health');\r\n\t\t\t\tthis.heal(source.baseMaxhp / 3, source, source, effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tname: \"Ultra Health\",\r\n\t\tshortDesc: \"On switching out or landing a KO, heal for 1/3 max HP.\",\r\n\t},\r\n\tdustdevil: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (!target.addVolatile('dustdevil')) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Dust Devil');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('dustdevil');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Dust Devil');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('dustdevil')) {\r\n\t\t\t\t\tthis.debug('Dust Devil boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility('dustdevil')) {\r\n\t\t\t\t\tthis.debug('Dust Devil boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Dust Devil', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tname: \"Dust Devil\",\r\n\t\tshortDesc: \"Effects of Sand Rush and Flash Fire.\",\r\n\t},\r\n\tsolidskill: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif ((target.getMoveHitData(move).typeMod > 0) || move.multihit) {\r\n\t\t\t\tthis.debug('Solid Skill neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Solid Skill\",\r\n\t\tshortDesc: \"3/4 damage from super-effective and multihit moves.\",\r\n\t},\r\n\tmodeshift: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Sableior' || pokemon.transformed) return;\r\n\t\t\tif (pokemon.species.forme !== 'Meteor') {\r\n\t\t\t\tpokemon.formeChange('Sableior-Meteor');\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.forme === 'Meteor') {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.set.species);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Sableior' || attacker.transformed) return;\r\n\t\t\tconst targetForme = (move.category === 'Status' ? 'Sableior-Meteor' : 'Sableior');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\tif (attacker.canMegaEvo) {\r\n\t\t\t\tattacker.canMegaEvo = (targetForme === 'Sableior-Meteor' ? 'sableiormeteormega' : 'sableiormega');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Mode Shift\",\r\n\t\tshortDesc: \"Status moves +1 priority. Changes to Meteor Form before using a status move.\",\r\n\t},\r\n\tlemegeton: {\r\n\t\t// Ability suppression implemented in sim/pokemon.ts:Pokemon#ignoringAbility\r\n\t\t// TODO Will abilities that already started start again? (Intimidate seems like a good test case)\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Lemegeton');\r\n\t\t\tpokemon.abilityData.ending = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.illusion) {\r\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityData, target, pokemon, 'lemegeton');\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['slowstart']) {\r\n\t\t\t\t\tdelete target.volatiles['slowstart'];\r\n\t\t\t\t\tthis.add('-end', target, 'Slow Start', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(source) {\r\n\t\t\t// FIXME this happens before the pokemon switches out, should be the opposite order.\r\n\t\t\t// Not an easy fix since we cant use a supported event. Would need some kind of special event that\r\n\t\t\t// gathers events to run after the switch and then runs them when the ability is no longer accessible.\r\n\t\t\t// (If your tackling this, do note extreme weathers have the same issue)\r\n\r\n\t\t\t// Mark this pokemon's ability as ending so Pokemon#ignoringAbility skips it\r\n\t\t\tsource.abilityData.ending = true;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon !== source) {\r\n\t\t\t\t\t// Will be suppressed by Pokemon#ignoringAbility if needed\r\n\t\t\t\t\tthis.singleEvent('Start', pokemon.getAbility(), pokemon.abilityData, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lemegeton\",\r\n\t\tshortDesc: \"Beast Boost + Neutralizing Gas\",\r\n\t},\r\n\t// a\r\n\tmagicbeast: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Magic Beast\",\r\n\t\tshortDesc: \"Magic Bounce + Beast Boost.\",\r\n\t},\r\n\tsoundneigh: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({atk: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.target !== 'self' && move.flags['sound']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Sound Neigh');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.add('-immune', this.effectState.target, '[from] ability: Sound Neigh');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sound Neigh\",\r\n\t\tshortDesc: \"Chilling Neigh + Soundproof.\",\r\n\t},\r\n\tecopy: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\r\n\t\t\tif (pokemon.side.foe.active.some(\r\n\t\t\t\tfoeActive => foeActive && pokemon.isAdjacent(foeActive) && foeActive.ability === 'noability'\r\n\t\t\t)) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\t\t\tconst possibleTargets = pokemon.side.foe.active.filter(foeActive => foeActive && pokemon.isAdjacent(foeActive));\r\n\t\t\twhile (possibleTargets.length) {\r\n\t\t\t\tlet rand = 0;\r\n\t\t\t\tif (possibleTargets.length > 1) rand = this.random(possibleTargets.length);\r\n\t\t\t\tconst target = possibleTargets[rand];\r\n\t\t\t\tconst ability = target.getAbility();\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t// Zen Mode included here for compatability with Gen 5-6\r\n\t\t\t\t\t'noability', 'flowergift', 'forecast', 'hungerswitch', 'illusion',\r\n\t\t\t\t\t'imposter', 'neutralizinggas', 'powerofalchemy', 'receiver', 'trace', 'zenmode',\r\n\t\t\t\t\t'magicmissile', 'pillage', 'ecopy', 'lemegeton', 'modeshift',\r\n\t\t\t\t];\r\n\t\t\t\tif (target.getAbility().isPermanent || additionalBannedAbilities.includes(target.ability)) {\r\n\t\t\t\t\tpossibleTargets.splice(rand, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-ability', pokemon, ability, '[from] ability: E-Copy', '[of] ' + target);\r\n\t\t\t\tpokemon.setAbility(ability);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"E-Copy\",\r\n\t\tshortDesc: \"Sets Electric Terrain, and then copies the foe's Ability.\",\r\n\t},\r\n\twetbugs: {\r\n\t\tonStart(source) {\r\n\t\t\tfor (const action of this.queue) {\r\n\t\t\t\tif (action.choice === 'runPrimal' && action.pokemon === source && source.species.id === 'kyottler') return;\r\n\t\t\t\tif (action.choice !== 'runSwitch' && action.choice !== 'runPrimal') break;\r\n\t\t\t}\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wet Bugs\",\r\n\t\tshortDesc: \"Drizzle + Swarm.\",\r\n\t},\r\n\thydrauliccannon: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tif (move.flags['pulse']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hydraulic Cannon\",\r\n\t\tshortDesc: \"Mega Launcher + Swift Swim.\",\r\n\t},\r\n\t// more fix\r\n\tsolarpower: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon, move) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Solar Power\",\r\n\t\trating: 2,\r\n\t\tnum: 94,\r\n\t},\r\n\tskilllink: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\t// /////////PLACEHOLDER FOR STURDY MOLD\r\n\t\t\tlet ignore = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.hasAbility('sturdymold')) {\r\n\t\t\t\t\tignore = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((move.target === 'allAdjacentFoes' || move.target === 'allAdjacent') && ignore) return;\r\n\t\t\t// /////////END PLACEHOLDER\r\n\t\t\tif (move.multihit && Array.isArray(move.multihit) && move.multihit.length) {\r\n\t\t\t\tmove.multihit = move.multihit[1];\r\n\t\t\t}\r\n\t\t\tif (move.multiaccuracy) {\r\n\t\t\t\tdelete move.multiaccuracy;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Skill Link\",\r\n\t\trating: 3,\r\n\t\tnum: 92,\r\n\t},\r\n\ttechnician: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Technician\",\r\n\t\trating: 3.5,\r\n\t\tnum: 101,\r\n\t},\r\n\tbattletheme: {\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Meloslash' || attacker.transformed) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;\r\n\t\t\tconst targetForme = ((move.secondaries || move.id === 'kingsshield') ? 'Meloslash' : 'Meloslash-Melee');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\tif (move.id === 'relicsong') {\r\n\t\t\t\tmove.willChangeForme = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.willChangeForme) {\r\n\t\t\t\tpokemon.formeChange('Meloslash-Melee');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Battle Theme\",\r\n\t\tshortDesc: \"If Meloslash: change forme to Range before using move with secondary, change form to Melee otherwise. Secondary effect chances are doubled.\",\r\n\t},\r\n\tflashyjokes: {\r\n\t\tshortDesc: \"Flash Fire + Prankster.\",\r\n\t\tname: \"Flashy Jokes\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tif (!target.addVolatile('flashfire')) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flashy Jokes');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('flashfire');\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tteachingtech: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hasAbility('sturdymold')) return;\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.category === 'Status') return;\r\n\t\t\tconsole.log('Teaching Tech: Move BP = ' + move.basePower);\r\n\t\t\tconst targetAbility = target.getAbility();\r\n\t\t\tif (targetAbility.isPermanent || targetAbility.id === 'teachingtech') return;\r\n\t\t\tif (move.basePower <= 60) {\r\n\t\t\t\tconst oldAbility = target.setAbility('teachingtech', source);\r\n\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Teaching Tech');\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Teaching Tech');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Teaching Tech\",\r\n\t\tshortDesc: \"Moves <=60 BP: 1.5x power. If hitting something with such a move: changes their ability to Teaching Tech.\",\r\n\t},\r\n\tscrappyarmor: {\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'ragingrapids') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Scrappy Armor');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Scrappy Armor');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Scrappy Armor');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Scrappy Armor');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === 'Physical') {\r\n\t\t\t\tthis.boost({def: -1, spe: 2}, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Scrappy Armor\",\r\n\t\tshortDesc: \"Scrappy + Weak Armor\",\r\n\t},\r\n\tolfactoryarmor: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Steel') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Steel')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Prism Armor neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAtkPriority: 5,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Olfactory Armor\",\r\n\t\tshortDesc: \"This Pokemon prevents adjacent Steel-type foes from choosing to switch and takes 3/4 damage from Super Effective and Steel-type attacks.\",\r\n\t},\r\n\tgutsyjaw: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Gutsy Jaw\",\r\n\t\tshortDesc: \"Guts + Strong Jaw\",\r\n\t},\r\n\tfinalargument: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tonSwitchOut(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tname: \"Final Argument\",\r\n\t\tshortDesc: \"Summons Psychic Terrain when switched in or out.\",\r\n\t},\r\n\tmosscoat: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\tthis.debug('Moss Coat boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\tthis.debug('Moss Coat boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.id === 'earthquake' || move.id === 'magnitude' || move.id === 'bulldoze') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) return;\r\n\t\t\tthis.heal(pokemon.maxhp / 16);\r\n\t\t},\r\n\t\tonTerrain(pokemon) {\r\n\t\t\tif (!this.field.isTerrain('grassyterrain')) return;\r\n\t\t\tthis.heal(pokemon.maxhp / 16);\r\n\t\t},\r\n\t\tname: \"Moss Coat\",\r\n\t\tshortDesc: \"This Pokemon is considered to be under the effects of Grassy Terrain.\",\r\n\t},\r\n\ttoxicplay: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Toxic Play');\r\n\t\t\tthis.add('-message', `Hawlazzle breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tname: \"Toxic Play\",\r\n\t\tshortDesc: \"Mold Breaker + Corrosion.\",\r\n\t},\r\n\tcovertops: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Covert Ops only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Covert Ops');\r\n\t\t\t\tthis.boost({spa: 2}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tname: \"Covert Ops\",\r\n\t\tshortDesc: \"Infiltrator + Competitive.\",\r\n\t},\r\n\tdeluge: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Deluge');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Deluge\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Water moves; Water immunity. This Pokemon's Water moves have 1.3x power.\",\r\n\t},\r\n\tcontraryboost: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet success = false;\r\n\t\t\t\tlet i: BoostName;\r\n\t\t\t\tfor (i in source.boosts) {\r\n\t\t\t\t\tif (source.boosts[i] === 0) continue;\r\n\t\t\t\t\tsource.boosts[i] = -source.boosts[i];\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (!success) return false;\r\n\t\t\t\tthis.add('-invertboost', source, '[from] ability: Contrary Boost');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Contrary Boost\",\r\n\t\tshortDesc: \"Reverses stat changes after attacking and KOing a Pokemon.\",\r\n\t},\r\n\titemboost: {\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon !== this.effectState.target) return;\r\n\t\t\tpokemon.addVolatile('itemboost');\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tpokemon.addVolatile('itemboost');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('itemboost');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (!pokemon.item) {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Item Boost\",\r\n\t\tshortDesc: \"Unburden + Beast Boost.\",\r\n\t},\r\n\tultrascout: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (!activated) this.add('-ability', pokemon, 'Ultra Scout');\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in target.storedStats) {\r\n\t\t\t\t\tif (target.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = target.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (statName === 'atk') this.add('-message', `${(target.illusion ? target.illusion.name : target.name)} is most proficient in Attack!`);\r\n\t\t\t\tif (statName === 'def') this.add('-message', `${(target.illusion ? target.illusion.name : target.name)} is most proficient in Defense!`);\r\n\t\t\t\tif (statName === 'spa') this.add('-message', `${(target.illusion ? target.illusion.name : target.name)} is most proficient in Special Attack!`);\r\n\t\t\t\tif (statName === 'spd') this.add('-message', `${(target.illusion ? target.illusion.name : target.name)} is most proficient in Special Defense!`);\r\n\t\t\t\tif (statName === 'spe') this.add('-message', `${(target.illusion ? target.illusion.name : target.name)} is most proficient in Speed!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ultra Scout\",\r\n\t\trating: 1.5,\r\n\t\t  shortDesc: \"On switch-in, this Pokemon identifies the foe's highest non-HP stat\",\r\n\t},\r\n\tscarilyadorable: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Scarily Adorable', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1, spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Scarily Adorable\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Attack and Speed of adjacent opponents by 1 stage.\",\r\n\t},\r\n\tsolarboiler: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Water' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Solar Boiler');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Solar Boiler\",\r\n\t\tshortDesc: \"immune to Water and Fire-type attacks, heals 25% when hit by one; Heals 12.5% per turn in Rain; Has 4x Spe in Sun.\",\r\n\t},\r\n\tvoltophyll: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Electric' || move.type === 'Fire')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Voltophyll');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Voltophyll\",\r\n\t\tshortDesc: \"2x Speed in Sun; Heals 25% when hit by a Fire or Electric move; Fire/Electric immunity\",\r\n\t},\r\n\tweatherpower: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland', 'raindance', 'primordialsea', 'hail', 'sandstorm', 'deltastream'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'sunnyday' || effect.id === 'desolateland' || effect.id === 'raindance' || effect.id === 'primordialsea' || effect.id === 'hail' || effect.id === 'sandstorm' || effect.id === 'deltastream') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Weather Power\",\r\n\t\tshortDesc: \"1.5x SpA while under any weather. User loses 12.5% of its HP in any weather.\",\r\n\t},\r\n\tplotarmor: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\t\tthis.debug('Plot Armor boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp && effect && (effect.id === 'recoil' || ((effect.id === 'jumpkick' || effect.id === 'highjumpkick') && source === target))) {\r\n\t\t\t\tthis.add('-ability', target, 'Plot Armor');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Plot Armor\",\r\n\t\tshortDesc: \"Reckless + If this Pokemon would faint due to recoil or crash damage, it will instead survive with 1 HP.\",\r\n\t},\r\n\treversegear: {\r\n\t\tname: \"Reverse Gear\",\r\n\t\tonBoost(boost) {\r\n      \t\t boost.spe *= -1;\r\n\t\t},\r\n\t\tshortDesc: \"Stat boosts to the Speed stat are inversed.\",\r\n\t},\r\n\tinnerfocus: {\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') return null;\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'ragingrapids') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Focus');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Focus');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Focus');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inner Focus');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Inner Focus\",\r\n\t\trating: 1.5,\r\n\t\tnum: 39,\r\n\t},\r\n\tfairygust: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.pixilateBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.pixilateBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.type === 'Flying' && pokemon.hp === pokemon.maxhp) return priority + 1;\r\n\t\t},\r\n\t\tname: \"Fairy Gust\",\r\n\t\tshortDesc: \"Pixilate + Gale Wings.\",\r\n\t},\r\n\tleafstream: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tfor (const action of this.queue) {\r\n\t\t\t\tif (action.choice === 'runPrimal' && action.pokemon === source && source.species.id === 'groudon') return;\r\n\t\t\t\tif (action.choice !== 'runSwitch' && action.choice !== 'runPrimal') break;\r\n\t\t\t}\r\n\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tname: \"Leaf Stream\",\r\n\t\tshortDesc: \"Leaf Guard + Summons Sunny Day on switch-in.\",\r\n\t},\r\n\tjawofthelaw: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Jaw of the Law boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender) {\r\n\t\t\tif (!defender.activeTurns) {\r\n\t\t\t\tthis.debug('Jaw of the Law boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Jaw of the Law\",\r\n\t\tshortDesc: \"Strong Jaw + Stakeout.\",\r\n\t},\r\n\tmystic: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('mistyterrain');\r\n\t\t},\r\n\t\t// The rest is implemented in moves.ts\r\n\t\tname: \"Mystic\",\r\n\t\tshortDesc: \"Misty Surge + This Pokemon's moves ignore the effects of Misty Terrain.\",\r\n\t},\r\n\tpeckingorder: {\r\n\t\tname: \"Pecking Order\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Defense of adjacent opponents by 1 stage.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Pecking Order', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({def: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmarblegarden: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source)) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Marble Garden', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (source && target !== source && effect && effect.id !== 'yawn') {\r\n\t\t\t\tthis.debug('interrupting setStatus with Marble Garden');\r\n\t\t\t\tif (effect.id === 'synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Marble Garden', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\tthis.debug('Marble Garden blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Marble Garden', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Marble Garden\",\r\n\t\tshortDesc: \"Protects the user from Recoil, and status infliction and stat reduction from other Pok\u00E9mon.\",\r\n\t},\r\n\tdevilsadvocate: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Devil\\'s Advocate', pokemon.side.foe);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeTryEatItem: false,\r\n\t\tname: \"Devil's Advocate\",\r\n\t\tshortDesc: \"Unnerve + Contrary\",\r\n\t},\r\n\tsnowglobe: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('hail');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isWeather('hail')) {\r\n\t\t\t\tif (move.type === 'Rock' || move.type === 'Ground' || move.type === 'Steel') {\r\n\t\t\t\t\tthis.debug('Snow Globe boost');\r\n\t\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'hail') return false;\r\n\t\t},\r\n\t\tname: \"Snow Globe\",\r\n\t\tshortDesc: \"Summons Hail on switch-in. Steel, Ground, and Rock moves deal 1.3x damage in Hail; Hail immunity.\",\r\n\t},\r\n\tbugscicle: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Bug' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tmove.refrigerateBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.refrigerateBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Bugscicle\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Bug-Type moves become Ice-Type and deal 1.2x damage.\",\r\n\t},\r\n\tmagicfist: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (!attacker.item) {\r\n\t\t\t\tthis.debug('Magic Fist boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Magic Fist\",\r\n\t\tshortDesc: \"If this Pokemon has no item, its attacks have 1.2x power.\",\r\n\t},\r\n\tsandbubbler: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Sand Bubbler boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sand Bubbler\",\r\n\t\tshortDesc: \"Sand Stream + Iron Fist.\",\r\n\t},\r\n\tbombardier: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bombardier\",\r\n\t\tshortDesc: \"Bullet and Bomb moves have 1.5x power.\",\r\n\t},\r\n\tasonekecleon: {\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'As One');\r\n\t\t\tthis.add('-ability', pokemon, 'Unnerve', pokemon.side.foe);\r\n\t\t},\r\n\t\tonFoeTryEatItem: false,\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({spa: length}, source, source, this.dex.abilities.get('grimneigh'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!target.hp) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (\r\n\t\t\t\ttarget.isActive && move.effectType === 'Move' && move.category !== 'Status' &&\r\n\t\t\t\ttype !== '???' && !target.hasType(type)\r\n\t\t\t) {\r\n\t\t\t\tif (!target.setType(type)) return false;\r\n\t\t\t\tthis.add('-start', target, 'typechange', type, '[from] ability: Color Change');\r\n\r\n\t\t\t\tif (target.side.active.length === 2 && target.position === 1) {\r\n\t\t\t\t\t// Curse Glitch\r\n\t\t\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\t\t\tif (action && action.move.id === 'curse') {\r\n\t\t\t\t\t\taction.targetLoc = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"As One (Kecleon)\",\r\n\t\tshortDesc: \"As One (Spectrier) + Color Change.\",\r\n\t},\r\n\theavyarmor: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Heavy Armor\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit: false,\r\n\t\tname: \"Heavy Armor\",\r\n\t\tshortDesc: \"Prevents other Pokemon from lowering this Pokemon's stat stages. This Pokemon cannot be struck by a critical hit.\",\r\n\t},\r\n\tmagicwand: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['contact'];\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Magic Wand\",\r\n\t\tshortDesc: \"Long Reach + Magic Guard\",\r\n\t},\r\n\tsportsshowtime: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Sports Showtime');\r\n\t\t\t\tthis.heal(source.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sports Showtime\",\r\n\t\tshortDesc: \"Changes to the type of its used move and heals 1/16 of its max HP before dealing damage\",\r\n\t},\r\n\tfirestarter: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !move.flags['contact'] || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'brn',\r\n\t\t\t\tability: this.dex.abilities.get('firestarter'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tname: \"Fire Starter\",\r\n\t\tshortDesc: \"30% chance to burn opponent when using a contact move or when the opponent makes contact with this Pokemon\",\r\n\t},\r\n\t\"parasomnia\": {\r\n\t\tshortDesc: \"Upon a KO or falling asleep, highest non-HP stat is raised by 1 stage.\",\r\n\t\tid: \"parasomnia\",\r\n\t\tname: \"Parasomnia\",\r\n\t\tonSourceFaint(target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\t\tlet s;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (status.id === 'slp') {\r\n\t\t\t\tthis.boost({[statName]: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\twillfulcharge: {\r\n\t\t onTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Willful Charge');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.type === 'Electric') {\r\n\t\t\t\tmove.ignoreDefensive = true;\r\n\t\t\t\tmove.ignoreEvasion = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Willful Charge\",\r\n\t\tshortDesc: \"Ignores opponent\u2019s stat changes when doing damage with Electric-type moves and recovers 1/4 max HP when hit by an electric type move; Electric immunity.\",\r\n\t},\r\n\tsheerheart: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.category === 'Special') return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (boost.spa && boost.spa < 0 || boost.spa > 0) {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Special Attack\", \"[from] ability: Sheer Heart\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sheer Heart\",\r\n\t\tshortDesc: \"Special attacks have 1.3x power; stat changes to the Special Attack stat have no effect.\",\r\n\t},\r\n\tberrynice: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isWeather(['sunnyday', 'desolateland']) || this.randomChance(1, 2)) {\r\n\t\t\t\tif (pokemon.hp && !pokemon.item && this.dex.items.get(pokemon.lastItem).isBerry) {\r\n\t\t\t\t\tpokemon.setItem(pokemon.lastItem);\r\n\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Berry Nice');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tif (!effect) return;\r\n\t\t\tif (effect.id === 'berryjuice' || effect.id === 'leftovers') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Ripen');\r\n\t\t\t}\r\n\t\t\tif ((effect as Item).isBerry) return this.chainModify(2);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && (effect as Item).isBerry) {\r\n\t\t\t\tlet b: BoostName;\r\n\t\t\t\tfor (b in boost) {\r\n\t\t\t\t\tboost[b]! *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamagePriority: -1,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.abilityData.berryWeaken) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItemPriority: -1,\r\n\t\tonTryEatItem(item, pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Berry Nice');\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tconst weakenBerries = [\r\n\t\t\t\t'Babiri Berry', 'Charti Berry', 'Chilan Berry', 'Chople Berry', 'Coba Berry', 'Colbur Berry', 'Haban Berry', 'Kasib Berry', 'Kebia Berry', 'Occa Berry', 'Passho Berry', 'Payapa Berry', 'Rindo Berry', 'Roseli Berry', 'Shuca Berry', 'Tanga Berry', 'Wacan Berry', 'Yache Berry',\r\n\t\t\t];\r\n\t\t\t// Record if the pokemon ate a berry to resist the attack\r\n\t\t\tpokemon.abilityData.berryWeaken = weakenBerries.includes(item.name);\r\n\t\t},\r\n\t\tname: \"Berry Nice\",\r\n\t\tshortDesc: \"Chlorophyll + Harvest + Berries eaten by this Pokemon have their effect doubled.\",\r\n\t},\r\n\tswiftretreat: {\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: Swift Retreat');\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Swift Retreat\",\r\n\t\tshortDesc: \"Emergency Exit + Swift Swim.\",\r\n\t},\r\n\tmagneticwaves: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tmove.galvanizeBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.galvanizeBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Magnetic Waves');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Magnetic Waves\",\r\n\t\tshortDesc: \"Galvanize + Levitate.\",\r\n\t},\r\n\tfridge: {\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tif (!effect) return;\r\n\t\t\tif (effect.id === 'berryjuice' || effect.id === 'leftovers') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Fridge');\r\n\t\t\t}\r\n\t\t\tif ((effect as Item).isBerry) return this.chainModify(2);\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && (effect as Item).isBerry) {\r\n\t\t\t\tlet b: BoostName;\r\n\t\t\t\tfor (b in boost) {\r\n\t\t\t\t\tboost[b]! *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamagePriority: -1,\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.abilityData.berryWeaken) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryEatItemPriority: -1,\r\n\t\tonTryEatItem(item, pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Fridge');\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tconst weakenBerries = [\r\n\t\t\t\t'Babiri Berry', 'Charti Berry', 'Chilan Berry', 'Chople Berry', 'Coba Berry', 'Colbur Berry', 'Haban Berry', 'Kasib Berry', 'Kebia Berry', 'Occa Berry', 'Passho Berry', 'Payapa Berry', 'Rindo Berry', 'Roseli Berry', 'Shuca Berry', 'Tanga Berry', 'Wacan Berry', 'Yache Berry',\r\n\t\t\t];\r\n\t\t\t// Record if the pokemon ate a berry to resist the attack\r\n\t\t\tpokemon.abilityData.berryWeaken = weakenBerries.includes(item.name);\r\n\t\t},\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fridge\",\r\n\t\tshortDesc: \"Ripen + Heatproof.\",\r\n\t},\r\n\tmonarchyenforcement: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\tif ((source.side === dazzlingHolder.side || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', dazzlingHolder, 'ability: Monarchy Enforcement', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Monarchy Enforcement\",\r\n\t\tshortDesc: \"Sheer Force + Queenly Majesty.\",\r\n\t},\r\n\tyakultian: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({atk: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('hail');\r\n\t\t},\r\n\t\tname: \"Yakultian\",\r\n\t\tshortDesc: \"Chilling Neigh + Snow Warning.\",\r\n\t},\r\n\tacceleration: {\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.activeTurns) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Acceleration only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Acceleration');\r\n\t\t\t\tthis.boost({spe: 2}, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Acceleration\",\r\n\t\tshortDesc: \"This Pokemon's Speed goes up by 1 stage at the end of every turn. +2 Speed when a stat is lowered.\",\r\n\t},\r\n\textremophile: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland', 'hail'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Extremophile\",\r\n\t\tshortDesc: \"Slush Rush + Chlorophyll.\",\r\n\t},\r\n\thivemind: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Hivemind\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Bug') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Hivemind');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hivemind\",\r\n\t\tshortDesc: \"This Pokemon is immune to having its stats lowered and Bug-type moves.\",\r\n\t},\r\n\tanatidaephobia: {\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t\tif (!move || !move.type === 'Normal' && !move.type === 'Fighting' || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 100,\r\n\t\t\t\tvolatileStatus: 'perishsong',\r\n\t\t\t\tability: this.dex.abilities.get('anatidaephobia'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'ragingrapids') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Anatidaephobia');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Anatidaephobia');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Anatidaephobia');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Anatidaephobia');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Anatidaephobia\",\r\n\t\tshortDesc: \"This Pokemon's Normal and Fighting-type moves can hit Ghost-types and inflict the target with the Perish Song effect.\",\r\n\t},\r\n\tpermafrost: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Permafrost neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\ttarget.heal(target.baseMaxhp / 16);\r\n\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] ability: Permafrost');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Permafrost\",\r\n\t\tshortDesc: \"When hit by a super effective move, that move deals 3/4 damage and this Pokemon gets healed by 1/16 of its max HP.\",\r\n\t},\r\n\tgrassystream: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tname: \"Grassy Stream\",\r\n\t\tshortDesc: \"Sets Grassy Terrain upon switch-in. 1.5x Def under Sandstorm.\",\r\n\t},\r\n\t/*\r\n\telectrolytes: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon, length) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\tthis.debug('electrolytes');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Electrolytes');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in pokemon.storedStats) {\r\n\t\t\t\t\tif (pokemon.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = pokemon.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Electrolytes\",\r\n\t\tshortDesc: \"When this Pokemon is statused by an opponent, the status is cured at the end of the turn and this Pokemon gains +1 to their highest non-HP stat.\",\r\n\t},\r\n*/\r\n\telectrolytes: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp && pokemon.status) {\r\n\t\t\t\tif (!pokemon.statusData.source || !pokemon.statusData.source.side || pokemon.statusData.source.side === pokemon.side) return;\r\n\t\t\t\tthis.debug('Electrolytes');\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in pokemon.storedStats) {\r\n\t\t\t\t\tif (pokemon.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = pokemon.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: 1}, pokemon);\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\t  onSourceAfterFaint(length, target, source, effect) {\r\n\t\t\t  if (effect && effect.effectType === 'Move') {\r\n\t\t\t\t  let statName = 'atk';\r\n\t\t\t\t  let bestStat = 0;\r\n\t\t\t\t  let s: StatNameExceptHP;\r\n\t\t\t\t  for (s in source.storedStats) {\r\n\t\t\t\t\t  if (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\t  statName = s;\r\n\t\t\t\t\t\t  bestStat = source.storedStats[s];\r\n\t\t\t\t\t  }\r\n\t\t\t\t  }\r\n\t\t\t\t  this.boost({[statName]: length}, source);\r\n\t\t\t  }\r\n\t\t  },\r\n\t\tname: \"Electrolytes\",\r\n\t\trating: 4,\r\n\t\t  shortDesc: \"When this Pokemon is statused by or KOes an opponent, the status is cured at the end of the turn and this Pokemon gains +1 to their highest non-HP stat.\",\r\n\t},\r\n\tworkability: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.stab = 2;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\tthis.debug('Workability boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Steel') {\r\n\t\t\t\tthis.debug('Workability boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Workability\",\r\n\t\tshortDesc: \"This Pokemon's STAB boost is 2x instead of 1.5x. Steel-type moves are considered STAB for this Pokemon\",\r\n\t},\r\n\tdeusexmachina: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Wishirupti' || pokemon.level < 20 || pokemon.transformed) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'wishirupti') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti-School');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'wishiruptischool') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti');\r\n\t\t\t\t\tpokemon.setBoost({atk: 6});\r\n\t\t\t\t\tthis.add('-setboost', pokemon, 'atk', 12, '[from] ability: Deus Ex Machina');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\tpokemon.baseSpecies.baseSpecies !== 'Wishirupti' || pokemon.level < 20 ||\r\n\t\t\t\tpokemon.transformed || !pokemon.hp\r\n\t\t\t) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'wishirupti') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti-School');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'wishiruptischool') {\r\n\t\t\t\t\tpokemon.formeChange('Wishirupti');\r\n\t\t\t\t\tpokemon.setBoost({atk: 6});\r\n\t\t\t\t\tthis.add('-setboost', pokemon, 'atk', 12, '[from] ability: Deus Ex Machina');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Deus Ex Machina\",\r\n\t\tshortDesc: \"Schooling effects. When this Pokemon enters Solo form, it gains +12 Attack.\",\r\n\t},\r\n\tneutralizinggas: {\r\n\t\t// Ability suppression implemented in sim/pokemon.ts:Pokemon#ignoringAbility\r\n\t\t// TODO Will abilities that already started start again? (Intimidate seems like a good test case)\r\n\t\tonPreStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Neutralizing Gas');\r\n\t\t\tpokemon.abilityData.ending = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.illusion) {\r\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityData, target, pokemon, 'neutralizinggas');\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['slowstart']) {\r\n\t\t\t\t\tdelete target.volatiles['slowstart'];\r\n\t\t\t\t\tthis.add('-end', target, 'Slow Start', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (source.species.baseSpecies !== 'Weezlord-Galar') return;\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(source) {\r\n\t\t\t// FIXME this happens before the pokemon switches out, should be the opposite order.\r\n\t\t\t// Not an easy fix since we cant use a supported event. Would need some kind of special event that\r\n\t\t\t// gathers events to run after the switch and then runs them when the ability is no longer accessible.\r\n\t\t\t// (If your tackling this, do note extreme weathers have the same issue)\r\n\r\n\t\t\t// Mark this pokemon's ability as ending so Pokemon#ignoringAbility skips it\r\n\t\t\tsource.abilityData.ending = true;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon !== source) {\r\n\t\t\t\t\t// Will be suppressed by Pokemon#ignoringAbility if needed\r\n\t\t\t\t\tthis.singleEvent('Start', pokemon.getAbility(), pokemon.abilityData, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Neutralizing Gas\",\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tshortDesc: \"While this Pokemon is active, Abilities have no effect. Weezlord: +1 to highest stat upon KO\",\r\n\t\trating: 5,\r\n\t\tnum: 256,\r\n\t},\r\n\tundercut: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tthis.chainModify(0.75);\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.875);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Undercut\",\r\n\t\tshortDesc: \"This Pokemon's moves of 80 power or less have 1.40625x power, but its moves higher than 80 power have 0.75x power.\",\r\n\t},\r\n\theatgenerator: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Heat Generator');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Heat Generator');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tname: \"Heat Generator\",\r\n\t\tshortDesc: \"Regenerator + Blaze\",\r\n\t},\r\n\tflamingskin: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flaming Skin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeBasePowerPriority: 17,\r\n\t\tonFoeBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.target !== defender) return;\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flaming Skin\",\r\n\t\tshortDesc: \"Dry Skin + Flame Body\",\r\n\t},\r\n\tetativel: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Etativel');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Etativel\",\r\n\t\tshortDesc: \"Contrary + Levitate\",\r\n\t},\r\n\tclutchfactor: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.category === 'Special' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Clutch Factor boost boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Clutch Factor\",\r\n\t\tshortDesc: \"Special Attacks are boosted by 1.5x at 1/3 HP or less.\",\r\n\t},\r\n\tstickysurge: {\r\n\t\tonTakeItem(item, pokemon, source) {\r\n\t\t\tif (this.suppressingAttackEvents(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\r\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Sticky Surge');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\t\t},\r\n\t\tname: \"Sticky Surge\",\r\n\t\tshortDesc: \"Sticky Hold + Electric Surge.\",\r\n\t},\r\n\tselfsacrifice: {\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.side.addSlotCondition(pokemon, 'selfsacrifice');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.effectState.hp = source.maxhp / 4;\r\n\t\t\t},\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\tconst damage = this.heal(this.effectState.hp, target, target);\r\n\t\t\t\t\tif (damage) this.add('-heal', target, target.getHealth, '[from] ability: Self Sacrifice', '[of] ' + this.effectState.source);\r\n\t\t\t\t\ttarget.side.removeSlotCondition(target, 'selfsacrifice');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Self Sacrifice\",\r\n\t\tshortDesc: \"When this Pokemon faints, the replacement is healed by 1/4 of this Pokemon's max HP\",\r\n\t},\r\n\tlighthearted: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Lighthearted');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lighthearted\",\r\n\t\tshortDesc: \"Prankster + Levitate\",\r\n\t},\r\n\ttigerpit: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (!pokemon.isAdjacent(this.effectState.target)) return;\r\n\t\t\tif (pokemon.isGrounded() || !pokemon.hasAbility('feelnopain') || !pokemon.hasAbility('magneticwaves') ||\r\n            !pokemon.hasAbility('stickyfloat') || !pokemon.hasAbility('etativel') || !pokemon.hasAbility('lighthearted') ||\r\n            !pokemon.hasAbility('leviflame') || !pokemon.hasAbility('levitability') || !pokemon.hasAbility('feelsomepain') || !pokemon.hasAbility('aerialbreak') || !pokemon.hasAbility('floatguise') || !pokemon.hasAbility('clearlyfloating') || !pokemon.hasAbility('hoverboard') || !pokemon.hasAbility('levimetal') || !pokemon.hasAbility('levistatic')) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (pokemon.isGrounded(!pokemon.knownType) || !pokemon.hasAbility('feelnopain') || !pokemon.hasAbility('magneticwaves') ||\r\n            !pokemon.hasAbility('stickyfloat') || !pokemon.hasAbility('etativel') || !pokemon.hasAbility('lighthearted') ||\r\n            !pokemon.hasAbility('leviflame') || !pokemon.hasAbility('levitability') || !pokemon.hasAbility('feelsomepain') || !pokemon.hasAbility('aerialbreak') || !pokemon.hasAbility('floatguise') || !pokemon.hasAbility('clearlyfloating') || !pokemon.hasAbility('hoverboard') || !pokemon.hasAbility('levimetal') || !pokemon.hasAbility('levistatic')) { // Negate immunity if the type is unknown\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (!target.isGrounded() || target.hasAbility('feelnopain') || target.hasAbility('magneticwaves') ||\r\n            target.hasAbility('stickyfloat') || target.hasAbility('etativel') || target.hasAbility('lighthearted') ||\r\n            target.hasAbility('leviflame') || target.hasAbility('levitability') || target.hasAbility('feelsomepain') || target.hasAbility('aerialbreak') || target.hasAbility('floatguise') || target.hasAbility('clearlyfloating') || target.hasAbility('hoverboard') || target.hasAbility('levimetal') || target.hasAbility('levistatic')) {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tiger Pit\",\r\n\t\tshortDesc: \"(Bugged) Prevents grounded foes from switching. 0.8x Accuracy against airborne foes.\",\r\n\t},\r\n\tvengefulshift: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon, source) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\tif (!source || source === pokemon) return;\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vengeful Shift');\r\n           \tthis.useMove(\"Psycho Shift\", pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Vengeful Shift\",\r\n\t\tshortDesc: \"(Not coded) If statused by a foe, this Pokemon attempts to transfer its status to a foe at the end of each turn.\",\r\n\t},\r\n\ttoughskin: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\treturn this.chainModify(1.2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tough Skin\",\r\n\t\tshortDesc: \"Foes making contact with this Pokemon lose 1/8 of their max HP. This Pokemon's contact moves have 1.2x power.\",\r\n\t},\r\n\thydraulicpress: {\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Hydraulic Press\",\r\n\t\tshortDesc: \"Sheer Force + Light Metal.\",\r\n\t},\r\n\tparroting: {\r\n\t\t// implemented in runMove in scripts.js\r\n\t\tname: \"Parroting\",\r\n\t\tshortDesc: \"After another Pokemon uses a status move, this Pokemon uses the same move.\",\r\n\t},\r\n\t/*\r\n\tlifedrain: {\r\n\t\tonPrepareHit(source, target, move, basePower) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.heal(source.baseMaxhp / 8);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Life Drain boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Life Drain\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power and heal this Pokemon by 12.5%; Immune to poison damage.\",\r\n\t},\r\n*/\r\n\tlifedrain: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Life Drain boost');\r\n\t\t\t\tmove.lifeDrain = true;\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'psn' || effect.id === 'tox') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.lifeDrain) this.heal(target.baseMaxhp / 8);\r\n\t\t},\r\n\t\tname: \"Life Drain\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power and heal this Pokemon by 12.5%; Immune to poison damage.\",\r\n\t},\r\n\tmetalhead: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Metalhead', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t\tname: \"Metalhead\",\r\n\t\tshortDesc: \"Intimidate + Heavy Metal\",\r\n\t},\r\n\tabsorbant: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && (move.type === 'Water' || move.type === 'Ground')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Absorbant');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Absorbant\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Water or Ground moves; Water & Ground immunity.\",\r\n\t},\r\n\twaterpressure: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Water Pressure');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.boost({def: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Water Pressure\",\r\n\t\tshortDesc: \"Pressure + Water Compaction\",\r\n\t},\r\n\tmusclemass: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\treturn this.chainModify(0.67);\r\n\t\t},\r\n\t\tname: \"Muscle Mass\",\r\n\t\tshortDesc: \"This Pokemon has 1.5x Attack and 0.67x Speed\",\r\n\t},\r\n\tidiotsavant: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totaldef = 0;\r\n\t\t\tlet totalspd = 0;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\ttotaldef += target.getStat('def', false, true);\r\n\t\t\t\ttotalspd += target.getStat('spd', false, true);\r\n\t\t\t}\r\n\t\t\tif (totaldef && totaldef >= totalspd) {\r\n\t\t\t\tthis.boost({spa: 1});\r\n\t\t\t} else if (totalspd) {\r\n\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Idiot Savant');\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'confusion') return null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move?.volatileStatus === 'confusion') {\r\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Idiot Savant');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy' || effect.id === 'ragingrapids') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Idiot Savant');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Idiot Savant');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Idiot Savant');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Idiot Savant');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Idiot Savant\",\r\n\t\tshortDesc: \"Own Tempo + Download\",\r\n\t},\r\n\trebootsystem: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Reboot System\",\r\n\t\tshortDesc: \"RKS System + Regenerator\",\r\n\t},\r\n\tgracefulhealing: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.secondaries) this.heal(target.baseMaxhp / 8);\r\n\t\t},\r\n\t\tname: \"Graceful Healing\",\r\n\t\tshortDesc: \"Restores 12.5% max HP when using a move with secondary effects.\",\r\n\t},\r\n\therbivore: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Grass') {\r\n\t\t\t\tif (!this.boost({atk: 2})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Herbivore');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\tthis.boost({atk: 2}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Herbivore\",\r\n\t\tshortDesc: \"This Pokemon's Attack is raised 2 stage if hit by a Grass move; Grass immunity.\",\r\n\t},\r\n\tdiamondcore: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Diamond Core');\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Diamond Core');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Diamond Core');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Diamond Core\",\r\n\t\tshortDesc: \"Pressure + Sturdy\",\r\n\t},\r\n\tcombustion: {\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tlet combustion = null;\r\n\t\t\tlet statDrop: BoostName;\r\n\t\t\tfor (statDrop in pokemon.boosts) {\r\n\t\t\t\tif (pokemon.boosts[statDrop] < 0) combustion = true;\r\n\t\t\t}\r\n\t\t\tif (pokemon.activeTurns && !combustion) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Combustion\",\r\n\t\tshortDesc: \"If this Pokemon has no negative stat changes, +1 Speed at the end of the turn.\",\r\n\t},\r\n\tscouttyping: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tif (target.item) {\r\n\t\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Scout Typing', '[of] ' + pokemon, '[identify]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced) return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Scout Typing');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Scout Typing\",\r\n\t\tshortDesc: \"Frisk + Protean\",\r\n\t},\r\n\tgutsguard: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Guts Guard\",\r\n\t\tshortDesc: \"When statused, this Pokemon Attack is boosted 1.5x and it takes 0.75x damage.\",\r\n\t},\r\n\tanesthesia: {\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target, source, effect) {\r\n\t\t\tif (['attract', 'disable', 'encore', 'healblock', 'taunt', 'torment'].includes(status.id)) {\r\n\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Anesthesia', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Anesthesia\",\r\n\t\tshortDesc: \"Aroma Veil + Unaware\",\r\n\t},\r\n\tstabilizer: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Stabilizer boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move, basePower) {\r\n\t\t\tif (move.basePower <= 60) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Stabilizer\",\r\n\t\tshortDesc: \"Moves with \u226460 BP have 1.5x power. +1 Speed when hit by a move with \u226460 BP.\",\r\n\t},\r\n\theadtohead: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.target !== 'self' && (move.recoil || move.hasCrashDamage)) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Head-To-Head');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Head-To-Head\",\r\n\t\tshortDesc: \"This Pokemon is immune to recoil and recoil moves.\",\r\n\t},\r\n\tclearlyfloating: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Clearly Floating');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Clearly Floating\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Clearly Floating\",\r\n\t\tshortDesc: \"Clear Body + Levitate\",\r\n\t},\r\n\tslowmage: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.item) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.item) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Slow Mage\",\r\n\t\tshortDesc: \"If this Pokemon is holding an item, its Attack and Speed are halved.\",\r\n\t},\r\n\tunseenmagic: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) delete move.flags['protect'];\r\n\t\t},\r\n\t\tname: \"Unseen Magic\",\r\n\t\tshortDesc: \"Magic Bounce + Unseen Fist\",\r\n\t},\r\n\tgulprock: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.transformed || target.isSemiInvulnerable()) return;\r\n\t\t\tif (['cramotricitygulping', 'cramotricitygorging'].includes(target.species.id)) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\tif (target.species.id === 'cramotricitygulping') {\r\n\t\t\t\t\tthis.boost({def: -1}, source, target, null, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource.trySetStatus('par', target, move);\r\n\t\t\t\t}\r\n\t\t\t\ttarget.formeChange('cramotricity', move);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// The Dive part of this mechanic is implemented in Dive's `onTryMove` in moves.ts\r\n\t\tonSourceTryPrimaryHit(target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.id === 'surf' && source.hasAbility('gulprock') &&\r\n\t\t\t\tsource.species.name === 'Cramotricity' && !source.transformed\r\n\t\t\t) {\r\n\t\t\t\tconst forme = source.hp <= source.maxhp / 2 ? 'cramotricitygorging' : 'cramotricitygulping';\r\n\t\t\t\tsource.formeChange(forme, effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 8,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.name === 'Surf' || move.name === 'Dive') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.name === 'Surf' || move.name === 'Dive') {\r\n\t\t\t\tthis.debug('Gulp Rock weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Gulp Rock\",\r\n\t\tshortDesc: \"Gulp Missile + Surf & Dive deal 1.3x and this Pokemon takes 50% damage from Surf and Dive.\",\r\n\t},\r\n\tflyingraijin: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Flying Raijin');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Electric' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Flying Raijin');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flying Raijin\",\r\n\t\tshortDesc: \"Infiltrator + Lightning Rod\",\r\n\t},\r\n\tzenmode: {\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Darmanitan-Prime' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Darmanitan-Zen\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (pokemon.species.baseSpecies === 'Darmanitan-Prime' && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitanprimezen') pokemon.formeChange('Darmanitan-Prime-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\texoskeleton: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Exoskeleton');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Exoskeleton');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Exoskeleton');\r\n\t\t\tthis.add('-message', `Pingar breaks the mold!`);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tname: \"Exoskeleton\",\r\n\t\tshortDesc: \"Mold Breaker + Immunity\",\r\n\t},\r\n\tbulletpecks: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet'] || move.name === 'Crunch' || move.name === 'Crush Claw' || move.name === 'Fire Lash' || move.name === 'Grav Apple' || move.name === 'Iron Tail' || move.name === 'Leer' || move.name === 'Liquidation' || move.name === 'Octolock' || move.name === 'Razor Shell' || move.name === 'Rock Smash' || move.name === 'Screech' || move.name === 'Secret Power' || move.name === 'Shadow Bone' || move.name === 'Tail Whip' || move.name === 'Thunderous Kick' || move.name === 'Tickle') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Bulletpecks');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Bulletpecks\",\r\n\t\tshortDesc: \"This Pokemon is immune to ballistic moves and moves that lower Defense.\",\r\n\t},\r\n\tfloatguise: {\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.effectType === 'Move' &&\r\n\t\t\t\t['mimikyu', 'mimikyutotem', 'rotokyu'].includes(target.species.id) && !target.transformed\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Float Guise');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, source, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (!['mimikyu', 'rotokyu'].includes(target.species.id) || target.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['authentic'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (!['mimikyu', 'rotokyu'].includes(target.species.id) || target.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['authentic'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (['mimikyu', 'rotokyu'].includes(pokemon.species.id) && this.effectState.busted) {\r\n\t\t\t\tconst speciesid = pokemon.species.id === 'rotokyu' ? 'Rotokyu-Busted' : 'Mimikyu-Busted';\r\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get(speciesid));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Float Guise');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Float Guise\",\r\n\t\tshortDesc: \"Disguise + Levitate\",\r\n\t},\r\n\tragingrapids: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Raging Rapids', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 3 && target.hp + damage > target.maxhp / 3) {\r\n\t\t\t\tthis.boost({atk: -1}, source, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Raging Rapids\",\r\n\t\tshortDesc: \"Lowers the foe's Attack by 1 on switch-in and when this Pokemon falls under 1/3 max HP.\",\r\n\t},\r\n\tultrapresto: {\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Ultra Presto', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Ultra Presto\",\r\n\t\tshortDesc: \"Magician + Beast Boost\",\r\n\t},\r\n\tundying: {\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.boost({spa: 1});\r\n\t\t\t\tthis.heal(target.baseMaxhp / 3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Undying\",\r\n\t\tshortDesc: \"When this Pokemon falls below 50% HP from an attack, it gains +1 SpA and heals 33% of its maximum HP.\",\r\n\t},\r\n\taerialbreak: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Aerial Break');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Aerial Break');\r\n\t\t\tthis.add('-message', `Vikadrill controls the skies!`);\r\n\t\t},\r\n\t\tname: \"Aerial Break\",\r\n\t\tshortDesc: \"This Pokemon is immune to Ground-type moves and ignores ability-based Ground immunities\",\r\n\t},\r\n\tcharybdis: {\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa) {\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tname: \"Charybdis\",\r\n\t\tshortDesc: \"This Pokemon's Special Attack is 1.5x.\",\r\n\t},\r\n\tfrozendish: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (source.hasType(move.type)) {\r\n\t\t\t\tthis.heal(source.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.stab = 2;\r\n\t\t},\r\n\t\tname: \"Frozen Dish\",\r\n\t\tshortDesc: \"This Pokemon's STAB bonus is 2x instead of 1.5x. Heals 1/16 of its max HP when using a STAB move.\",\r\n\t},\r\n\tspeedbreak: {\r\n\t\tname: \"Speed Break\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Speed Break');\r\n\t\t\tthis.add('-message', `Changes to the Speed stat are inverted!`);\r\n\t\t},\r\n\t\tonAnyBoost(boost, target, source, effect) {\r\n\t\t\tif (boost.spe) {\r\n      \t\t boost.spe *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"While this Pokemon is active, Speed is lowered when boosted and vice versa for all Pokemon.\",\r\n\t},\r\n\tcreepy: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (!move || !source) return;\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tlet activated = false;\r\n\t\t\t\tfor (const target of this.effectState.target.side.foe.active) {\r\n\t\t\t\t\tif (!target || !target.isAdjacent(this.effectState.target)) continue;\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.target, 'Creepy', 'boost');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((target.volatiles['substitute'] || target.hasType('Dark'))) {\r\n\t\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.boost({atk: -1}, target, this.effectState.target, null, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Creepy\",\r\n\t\tshortDesc: \"This Pokemon's Status moves have priority raised by 1 and lower the foe's Attack by 1, but Dark types are immune.\",\r\n\t},\r\n\ttoxiclook: {\r\n\t\tname: \"Toxic Look\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.debug('Toxic Look boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Tinted Lens + Poison Point\",\r\n\t},\r\n\tultraimpulse: {\r\n\t\tshortDesc: \"If this Pokemon is statused, its highest stat is 1.5x; ignores burn halving physical damage.\",\r\n\t\tname: \"Ultra Impulse\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'atk') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'def') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spa') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spd') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\t/** @type {StatNameExceptHP} */\r\n\t\t\tlet s;\r\n\t\t\tfor (s in this.effectState.target.storedStats) {\r\n\t\t\t\tif (this.effectState.target.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = this.effectState.target.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pokemon.status && statName === 'spe') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdemagnetize: {\r\n\t\tname: \"Demagnetize\",\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (defender.hasType('Steel')) {\r\n\t\t\t\tdefender.addVolatile('demagnetize');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('demagnetize');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('demagnetize');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tlet types = pokemon.baseSpecies.types;\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t\tif (pokemon.getTypes().join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"This Pokemon ignores the opponent's Steel-typing, Substitute, and screens when attacking\",\r\n\t},\r\n\teverywitchway: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Every Witch Way\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tname: \"Every Witch Way\",\r\n\t\tshortDesc: \"Magic Guard + Keen Eye\",\r\n\t},\r\n\tsheerluck: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t\tif (move.critRatio > 1) {\r\n\t\t\t\tmove.willCrit = false;\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Sheer Luck\",\r\n\t\tshortDesc: \"Sheer Force + Moves with an increased critical hit ratio deal 1.3x damage but can't critically hit.\",\r\n\t},\r\n\tbigpower: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.chainModify(1.5);\r\n\t\t},\r\n\t\tname: \"Big Power\",\r\n\t\tshortDesc: \"This Pokemon's Attack is boosted 1.5x.\",\r\n\t},\r\n\tlevimetal: {\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Levimetal');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Levimetal\",\r\n\t\tshortDesc: \"Light Metal + Levitate\",\r\n\t},\r\n\twaterbender: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Waterbender boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.debug('Waterbender boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Waterbender\",\r\n\t\tshortDesc: \"This Pokemon's Water-type moves deal 1.5x damage.\",\r\n\t},\r\n\thoverboard: {\r\n\t\tonModifySpe(spe) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Hoverboard');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hoverboard\",\r\n\t\tshortDesc: \"Levitate + Surge Surfer\",\r\n\t},\r\n\tfeverbreaker: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Fever Breaker');\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Fever Breaker');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'brn') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Fever Breaker');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Fever Breaker\",\r\n\t\tshortDesc: \"Mold Breaker + Water Veil\",\r\n\t},\r\n\tspitefulwishcraft: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Spiteful Wishcraft only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Spiteful Wishcraft');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Spiteful Wishcraft\",\r\n\t\tshortDesc: \"If this Pokemon has a stat lowered, it gains +2 Attack and disables the foe's last move\",\r\n\t},\r\n\tgnawrly: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Technician boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Gnawrly\",\r\n\t\tshortDesc: \"Technician + Strong Jaw, in that order.\",\r\n\t},\r\n\r\n\r\n\t// LC Only Abilities\r\n\t\"aurevoir\": { // this one looks like EXACTLY the character limit\r\n\t\tshortDesc: \"Switches out when it reaches 1/2 or less of its max HP and restores 1/3 of its max HP.\",\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.effectState.exiting = true;\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: Au Revoir');\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (this.effectState.exiting === true) {\r\n\t\t\t\tthis.effectState.exiting = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"aurevoir\",\r\n\t\tname: \"Au Revoir\",\r\n\t},\r\n  \t\"clearcleaner\": { // Functional!\r\n\t\tshortDesc: \"On switch-in, Screens end for both sides. Other Pokemon cannot lower its stat stages.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['reflect', 'lightscreen', 'auroraveil']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Clear Cleaner');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Clear Cleaner');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.foe.removeSideCondition(sideCondition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (boost[i] < 0) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(/** @type {ActiveMove} */(effect)).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Clear Cleaner\", \"[of] \" + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tid: \"clearcleaner\",\r\n\t\tname: \"Clear Cleaner\",\r\n\t},\r\n\t\"unamused\": { // Functional!\r\n\t\tshortDesc: \"Ignores stat changes. Summons Sandstorm when taking or dealing damage.\",\r\n\t\tid: \"unamused\",\r\n\t\tname: \"Unamused\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.field.getWeather().id !== 'sandstorm') {\r\n\t\t\t\tthis.field.setWeather('sandstorm', this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (this.field.getWeather().id !== 'sandstorm') {\r\n\t\t\t\t\tthis.field.setWeather('sandstorm', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\"unbullet\": { // Functional!\r\n\t\tshortDesc: \"Speed doubles if it uses an item; immunity to ballistic moves.\",\r\n\t\tid: \"unbullet\",\r\n\t\tname: \"Unbullet\",\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon !== this.effectState.target) return;\r\n\t\t\tpokemon.addVolatile('unburden');\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tpokemon.addVolatile('unburden');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('unburden');\r\n\t\t},\r\n\t\teffect: {\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (!pokemon.item) {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Unbullet');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\"nocturnalflash\": {\r\n\t\tshortDesc: \"Attacks have 1.3x power and a 30% chance to Poison if it moves last.\",\r\n\t\tid: \"nocturnalflash\",\r\n\t\tname: \"Nocturnal Flash\",\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boosted) {\r\n\t\t\t\tthis.debug('Nocturnal Flash boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tlet boosted = true;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\t\tboosted = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!move || move.target === 'self') return;\r\n\t\t\tif (!boosted) return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'psn',\r\n\t\t\t\tability: this.dex.abilities.get('nocturnalflash'),\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t\"fatalend\": {\r\n\t\tshortDesc: \"Punching moves 1.5x.\",\r\n\t\tid: \"fatalend\",\r\n\t\tname: \"Fatal End\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Fatal End boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\"faustianpact\": {\r\n\t\tshortDesc: \"Swaps abilities with target before landing a contact move.\",\r\n\t\tid: \"faustianpact\",\r\n\t\tname: \"Faustian Pact\",\r\n\t\t// Effect coded directly in scripts.ts.\r\n\t\t// It's hitchhiking on Spectral Thief's \"hitStepStealBoosts\" effect,\r\n\t\t// since I don't think I can add new scripts *specifically to the battle step order*\r\n\t\t// and Spectral Thief has basically the same place in the hitstep, so it probably is fine there.\r\n\t},\r\n\t\"abysmalsurge\": { // Seems functional\r\n\t\tshortDesc: \"Fire attacks have 45% brn chance; other attacks have 35% brn chance.\",\r\n\t\tid: \"abysmalsurge\",\r\n\t\tname: \"Abysmal Surge\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 45,\r\n\t\t\t\t\tstatus: 'brn',\r\n\t\t\t\t\tability: this.dex.abilities.get('abysmalsurge'),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 35,\r\n\t\t\t\t\tstatus: 'brn',\r\n\t\t\t\t\tability: this.dex.abilities.get('abysmalsurge'),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tunusual: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (source.hasType(move.type)) {\r\n\t\t\t\tthis.debug('Unusual weaken');\r\n\t\t\t\treturn this.chainModify(0.67);\r\n\t\t\t}\r\n\t\t\tif (source.hasType(move.type) && (source.hasAbility('versatility') || source.hasAbility('levitability') || source.hasAbility('workability'))) {\r\n\t\t\t\tthis.debug('Unusual weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t\tif (move.type === 'Steel' && source.hasAbility('workability')) {\r\n\t\t\t\tthis.debug('Unusual weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Unusual\",\r\n\t\tshortDesc: \"The opponent's STAB bonus is ignored when targeting this Pokemon.\",\r\n\t},\r\n\ttoxincoat: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tconst r = this.random(100);\r\n\t\t\t\tif (r < 15) {\r\n\t\t\t\t\tsource.setStatus('par', target);\r\n\t\t\t\t} else if (r < 30) {\r\n\t\t\t\t\tsource.setStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Toxin Coat\",\r\n\t\tshortDesc: \"30% chance of poison or paralysis on others making contact with this Pokemon.\",\r\n\t},\r\n\twetfilling: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status || ['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Wet Filling\",\r\n\t\tshortDesc: \"1.5x when statused or in the rain; Ignores burn Attack drop.\",\r\n\t},\r\n\tnoproprioception: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: No Proprioception');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: No Proprioception');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: No Proprioception');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: No Proprioception');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: No Proprioception');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: No Proprioception');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: No Proprioception');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.id === 'attract' || move.id === 'captivate' || move.id === 'taunt') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: No Proprioception');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"No Proprioception\",\r\n\t\tshortDesc: \"Sheer Force + Oblivious\",\r\n\t},\r\n\troughtime: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['confusion']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Rough Time');\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'confusion') return null;\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (move?.volatileStatus === 'confusion') {\r\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rough Time');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rough Time\",\r\n\t\tshortDesc: \"Tough Claws + Own Tempo\",\r\n\t},\r\n\tbigeyes: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Big Eyes\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\r\n\t\t\t\tdelete boost.accuracy;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Big Eyes\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreEvasion = true;\r\n\t\t},\r\n\t\tname: \"Big Eyes\",\r\n\t\tshortDesc: \"Keen Eye + Big Pecks\",\r\n\t},\r\n\tsoundsensitive: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (['allAdjacent', 'allAdjacentFoes', 'all'].includes(move.target)) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && ['intimidate', 'debilitate', 'sinkorswim', 'scarilyadorable', 'peckingorder'].includes(effect.id)) {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sound Sensitive\",\r\n\t\tshortDesc: \"+1 Speed when hit by a spread move or Intimidated\",\r\n\t},\r\n\tfeelsomepain: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Feel Some Pain');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Feel Some Pain');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Feel Some Pain');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Feel Some Pain\",\r\n\t\tshortDesc: \"Immunity + Levitate\",\r\n\t},\r\n\tversatility: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tmove.stab = 2;\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Versatility\",\r\n\t\tshortDesc: \"Sheer Force + Adaptability\",\r\n\t},\r\n\tthickskull: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t\t// Technically not a secondary effect, but it is negated\r\n\t\t\t\tdelete move.self;\r\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\r\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\r\n\t\t\t\tmove.hasSheerForce = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.hasSheerForce) return this.chainModify([0x14CD, 0x1000]);\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Thick Skull\",\r\n\t\tshortDesc: \"Sheer Force + Rock Head\",\r\n\t},\r\n\tfreehealthcare: {\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 4,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\tthis.debug('freehealthcare');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Free Healthcare');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Free Healthcare\",\r\n\t\tshortDesc: \"This Pokemon's status is cured at the end of every turn.\",\r\n\t},\r\n\tairheaded: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Airheaded');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.type === 'Flying' && pokemon.hp === pokemon.maxhp) return priority + 1;\r\n\t\t},\r\n\t\tname: \"Airheaded\",\r\n\t\tshortDesc: \"Anticipation + Gale Wings\",\r\n\t},\r\n\tinsidejob: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Inside Job');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Inside Job');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Inside Job');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.id === 'attract' || move.id === 'captivate' || move.id === 'taunt') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Inside Job');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.infiltrates = true;\r\n\t\t},\r\n\t\tname: \"Inside Job\",\r\n\t\tshortDesc: \"Oblivious + Infiltrator\",\r\n\t},\r\n\tsandcastles: {\r\n\t\tonStart(pokemon, source) {\r\n\t\t\tthis.field.setWeather('sandstorm');\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Sandcastles');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Sandcastles\",\r\n\t\tshortDesc: \"Summons sand on switch-in and when shuddering.\",\r\n\t},\r\n\tresilientfat: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Resilient Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Resilient Fat weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Resilient Fat');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Resilient Fat');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Resilient Fat\",\r\n\t\tshortDesc: \"Thick Fat + Sturdy\",\r\n\t},\r\n\tnumskull: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Numskull\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Numskull\",\r\n\t\tshortDesc: \"Big Pecks + Rock Head\",\r\n\t},\r\n\tboulderfists: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Boulder Fists boost');\r\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.boost({def: -1, spe: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Boulder Fists\",\r\n\t\tshortDesc: \"This Pokemon's punching moves have 1.2x and give it -1 Def & +2 Spe.\",\r\n\t},\r\n\tcherrybomb: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.flags['bullet']) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Cherry Bomb');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Cherry Bomb');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Cherry Bomb');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cherry Bomb\",\r\n\t\tshortDesc: \"Bulletproof + Leaf Guard\",\r\n\t},\r\n\trumenramming: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 5,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rumen Ramming\",\r\n\t\tshortDesc: \"1.5x Attack and Defense when statused; Ignores Attack burn drop\",\r\n\t},\r\n\tplaincool: {\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\tthis.add('-heal', target, target.getHealth, '[from] ability: Plain Cool');\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Plain Cool\",\r\n\t\tshortDesc: \"This Pokemon's stat changes are doubled. Heals 1/16 of its HP when a stat is changed.\",\r\n\t},\r\n\tcursedduck: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isFutureMove) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.id === 'intimidate' || effect.id === 'scarilyadorable' || effect.id === 'metalhead' || effect.id === 'creepy') {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Cursed Duck');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'peckingorder') {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Cursed Duck');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'debilitate') {\r\n\t\t\t\tdelete boost.spa;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Cursed Duck');\r\n\t\t\t}\r\n\t\t\tif (effect.id === 'sinkorswim' || effect.id === 'scarilyadorable') {\r\n\t\t\t\tdelete boost.spe;\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Cursed Duck');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cursed Duck\",\r\n\t\tshortDesc: \"Scrappy + Cursed Body.\",\r\n\t},\r\n\tswiftmetal: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t\tname: \"Swift Metal\",\r\n\t\tshortDesc: \"Swift Swim + Heavy Metal\",\r\n\t},\r\n\tpoisoncontrol: {\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Poison Control boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Poison Control');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'psn' && status.id !== 'tox') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Poison Control');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tname: \"Poison Control\",\r\n\t\tshortDesc: \"Technician + Immunity\",\r\n\t},\r\n\talluminiumbody: {\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn this.trunc(weighthg / 2);\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Alluminium Body\",\r\n\t\tshortDesc: \"Light Metal + Hustle\",\r\n\t},\r\n\tswarmrush: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm') return false;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 3) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Swarm Rush\",\r\n\t\tshortDesc: \"Swarm + Sand Rush\",\r\n\t},\r\n\tcourageous: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.def && boost.def < 0) {\r\n\t\t\t\tdelete boost.def;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Defense\", \"[from] ability: Courageous\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Courageous\",\r\n\t\tshortDesc: \"Big Pecks + Guts\",\r\n\t},\r\n\tsuperhustle: {\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t\tname: \"Super Hustle\",\r\n\t\tshortDesc: \"Hustle + Super Luck\",\r\n\t},\r\n\tlevistatic: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground' && !source.hasAbility('aerialbreak') && !target.volatiles['smackdown']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Levistatic');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Levistatic\",\r\n\t\tshortDesc: \"Levitate + Static\",\r\n\t},\r\n\tpolarattraction: {\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.status === 'par' && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.status === 'par') {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Polar Attraction\",\r\n\t\tshortDesc: \"Traps paralyzed opponents.\",\r\n\t},\r\n\tflawedjaw: {\r\n\t\tonTryMove(pokemon, target, move) {\r\n\t\t\tif (move.flags['bite']) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Flawed Jaw\",\r\n\t\tshortDesc: \"This pok\u00E9mon cannot use Biting moves.\",\r\n\t},\r\n\tsubvergent: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.side === source.side) {\r\n\t\t\t\tif (effect.id === 'stickyweb') {\r\n\t\t\t\t\tthis.hint(\"Court Change Sticky Web counts as lowering your own Speed, and Subvergent only affects stats lowered by foes.\", true, source.side);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered) {\r\n\t\t\t\tthis.add('-ability', target, 'Subvergent');\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, true);\r\n\t\t\t\tconst stats: BoostName[] = [];\r\n\t\t\t\tconst boost: SparseBoostsTable = {};\r\n\t\t\t\tlet statPlus: BoostName;\r\n\t\t\t\tfor (statPlus in target.boosts) {\r\n\t\t\t\t\tif (statPlus === 'accuracy' || statPlus === 'evasion') continue;\r\n\t\t\t\t\tif (target.boosts[statPlus] < 6) {\r\n\t\t\t\t\t\tstats.push(statPlus);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst randomStat: BoostName | undefined = stats.length ? this.sample(stats) : undefined;\r\n\t\t\t\tif (randomStat) boost[randomStat] = 2;\r\n\t\t\t\tthis.boost(boost);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Subvergent\",\r\n\t\tshortDesc: \"Raises Atk and a random (non Acc/Eva) stat by 2 when its stats are lowered by an opponent.\",\r\n\t},\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": ["target", "boost"]
}
