{
  "version": 3,
  "sources": ["../../../../data/mods/gen1kantoification/moves.ts"],
  "sourcesContent": ["/**\r\n * A lot of Gen 1 moves have to be updated due to different mechanics.\r\n * Some moves have had major changes, such as Bite's typing.\r\n */\r\n\r\nexport const Moves: {[k: string]: ModdedMoveData} = {\r\n\tabsorb: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user recovers 1/2 the HP lost by the target, rounded down. If this move breaks the target's substitute, the user does not recover any HP.\",\r\n\t},\r\n\tacid: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 33% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"33% chance to lower the target's Defense by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tamnesia: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Raises the user's Special by 2 stages.\",\r\n\t\tshortDesc: \"Raises the user's Special by 2.\",\r\n\t\tboosts: {\r\n\t\t\tspd: 2,\r\n\t\t\tspa: 2,\r\n\t\t},\r\n\t},\r\n\taurorabeam: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 33% chance to lower the target's Attack by 1 stage.\",\r\n\t\tshortDesc: \"33% chance to lower the target's Attack by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbarrage: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tbide: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user spends two or three turns locked into this move and then, on the second or third turn after using this move, the user attacks the opponent, inflicting double the damage in HP it lost during those turns. This move ignores type immunity and cannot be avoided even if the target is using Dig or Fly. The user can choose to switch out during the effect. If the user switches out or is prevented from moving during this move's use, the effect ends. During the effect, if the opposing Pokemon switches out or uses Confuse Ray, Conversion, Focus Energy, Glare, Haze, Leech Seed, Light Screen, Mimic, Mist, Poison Gas, Poison Powder, Recover, Reflect, Rest, Soft-Boiled, Splash, Stun Spore, Substitute, Supersonic, Teleport, Thunder Wave, Toxic, or Transform, the previous damage dealt to the user will be added to the total.\",\r\n\t\tpriority: 0,\r\n\t\taccuracy: true,\r\n\t\tignoreEvasion: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\treturn this.random(3, 4);\r\n\t\t\t},\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.totalDamage = 0;\r\n\t\t\t\tthis.effectState.lastDamage = 0;\r\n\t\t\t\tthis.add('-start', pokemon, 'Bide');\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (source && source !== target && move.category !== 'Physical' && move.category !== 'Special') {\r\n\t\t\t\t\tconst damage = this.effectState.totalDamage;\r\n\t\t\t\t\tthis.effectState.totalDamage += damage;\r\n\t\t\t\t\tthis.effectState.lastDamage = damage;\r\n\t\t\t\t\tthis.effectState.sourcePosition = source.position;\r\n\t\t\t\t\tthis.effectState.sourceSide = source.side;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, move) {\r\n\t\t\t\tif (!source || source.side === target.side) return;\r\n\t\t\t\tif (!move || move.effectType !== 'Move') return;\r\n\t\t\t\tif (!damage && this.effectState.lastDamage > 0) {\r\n\t\t\t\t\tdamage = this.effectState.totalDamage;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.totalDamage += damage;\r\n\t\t\t\tthis.effectState.lastDamage = damage;\r\n\t\t\t\tthis.effectState.sourcePosition = source.position;\r\n\t\t\t\tthis.effectState.sourceSide = source.side;\r\n\t\t\t},\r\n\t\t\tonAfterSetStatus(status, pokemon) {\r\n\t\t\t\t// Sleep, freeze, and partial trap will just pause duration.\r\n\t\t\t\tif (pokemon.volatiles['flinch']) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t} else if (pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswitch (status.id) {\r\n\t\t\t\t\tcase 'slp':\r\n\t\t\t\t\tcase 'frz':\r\n\t\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMove(pokemon, t, move) {\r\n\t\t\t\tif (this.effectState.duration === 1) {\r\n\t\t\t\t\tif (!this.effectState.totalDamage) {\r\n\t\t\t\t\t\tthis.debug(\"Bide failed due to 0 damage taken\");\r\n\t\t\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Bide');\r\n\t\t\t\t\tconst target = this.effectState.sourceSide.active[this.effectState.sourcePosition];\r\n\t\t\t\t\tthis.moveHit(target, pokemon, move, {damage: this.effectState.totalDamage * 2} as ActiveMove);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-activate', pokemon, 'Bide');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tif (!pokemon.hasMove('bide')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id !== 'bide') {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttype: \"???\", // Will look as Normal but it's STAB-less\r\n\t},\r\n\tbind: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user spends two to five turns using this move. Has a 3/8 chance to last two or three turns, and a 1/8 chance to last four or five turns. The damage calculated for the first turn is used for every other turn. The user cannot select a move and the target cannot execute a move during the effect, but both may switch out. If the user switches out, the target remains unable to execute a move during that turn. If the target switches out, the user uses this move again automatically, and if it had 0 PP at the time, it becomes 63. If the user or the target switch out, or the user is prevented from moving, the effect ends. This move can prevent the target from moving even if it has type immunity, but will not deal damage.\",\r\n\t\tshortDesc: \"Prevents the target from moving for 2-5 turns.\",\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbite: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 10% chance to flinch the target.\",\r\n\t\tshortDesc: \"10% chance to flinch the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tblizzard: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbonemerang: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits twice. If the first hit breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tbubble: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 33% chance to lower the target's Speed by 1 stage.\",\r\n\t\tshortDesc: \"33% chance to lower the target's Speed by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbubblebeam: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 33% chance to lower the target's Speed by 1 stage.\",\r\n\t\tshortDesc: \"33% chance to lower the target's Speed by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tclamp: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user spends two to five turns using this move. Has a 3/8 chance to last two or three turns, and a 1/8 chance to last four or five turns. The damage calculated for the first turn is used for every other turn. The user cannot select a move and the target cannot execute a move during the effect, but both may switch out. If the user switches out, the target remains unable to execute a move during that turn. If the target switches out, the user uses this move again automatically, and if it had 0 PP at the time, it becomes 63. If the user or the target switch out, or the user is prevented from moving, the effect ends. This move can prevent the target from moving even if it has type immunity, but will not deal damage.\",\r\n\t\tshortDesc: \"Prevents the target from moving for 2-5 turns.\",\r\n\t\taccuracy: 75,\r\n\t\tpp: 10,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcometpunch: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tconstrict: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 33% chance to lower the target's Speed by 1 stage.\",\r\n\t\tshortDesc: \"33% chance to lower the target's Speed by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconversion: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Causes the user's types to become the same as the current types of the target.\",\r\n\t\tshortDesc: \"User becomes the same type as the target.\",\r\n\t\tvolatileStatus: 'conversion',\r\n\t\taccuracy: true,\r\n\t\ttarget: \"normal\",\r\n\t\tonHit(target, source) {\r\n\t\t\tsource.types = target.types;\r\n\t\t\tthis.add('-start', source, 'typechange', source.types.join(', '), '[from] move: Conversion', '[of] ' + source);\r\n\t\t},\r\n\t},\r\n\tcounter: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals damage to the opposing Pokemon equal to twice the damage dealt by the last move used in the battle. This move ignores type immunity. Fails if the user moves first, or if the opposing side's last move was Counter, had 0 power, or was not Normal or Fighting type. Fails if the last move used by either side did 0 damage and was not Confuse Ray, Conversion, Focus Energy, Glare, Haze, Leech Seed, Light Screen, Mimic, Mist, Poison Gas, Poison Powder, Recover, Reflect, Rest, Soft-Boiled, Splash, Stun Spore, Substitute, Supersonic, Teleport, Thunder Wave, Toxic, or Transform.\",\r\n\t\tignoreImmunity: true,\r\n\t\twillCrit: false,\r\n\t\tdamageCallback(pokemon, target) {\r\n\t\t\t// Counter mechanics in gen 1:\r\n\t\t\t// - a move is Counterable if it is Normal or Fighting type, has nonzero Base Power, and is not Counter\r\n\t\t\t// - if Counter is used by the player, it will succeed if the opponent's last used move is Counterable\r\n\t\t\t// - if Counter is used by the opponent, it will succeed if the player's last selected move is Counterable\r\n\t\t\t// - (Counter will thus desync if the target's last used move is not as counterable as the target's last selected move)\r\n\t\t\t// - if Counter succeeds it will deal twice the last move damage dealt in battle (even if it's from a different pokemon because of a switch)\r\n\t\t\tconst lastMove = target.side.lastMove && this.dex.moves.get(target.side.lastMove.id);\r\n\t\t\tconst lastMoveIsCounterable = lastMove && lastMove.basePower > 0 &&\r\n\t\t\t\t['Normal', 'Fighting'].includes(lastMove.type) && lastMove.id !== 'counter';\r\n\r\n\t\t\tconst lastSelectedMove = target.side.lastSelectedMove && this.dex.moves.get(target.side.lastSelectedMove);\r\n\t\t\tconst lastSelectedMoveIsCounterable = lastSelectedMove && lastSelectedMove.basePower > 0 &&\r\n\t\t\t\t['Normal', 'Fighting'].includes(lastSelectedMove.type) && lastSelectedMove.id !== 'counter';\r\n\r\n\t\t\tif (!lastMoveIsCounterable && !lastSelectedMoveIsCounterable) {\r\n\t\t\t\tthis.debug(\"Gen 1 Counter: last move was not Counterable\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.lastDamage <= 0) {\r\n\t\t\t\tthis.debug(\"Gen 1 Counter: no previous damage exists\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!lastMoveIsCounterable || !lastSelectedMoveIsCounterable) {\r\n\t\t\t\tthis.hint(\"Desync Clause Mod activated!\");\r\n\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn 2 * this.lastDamage;\r\n\t\t},\r\n\t},\r\n\tcrabhammer: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t},\r\n\tdefensecurl: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Raises the user's Defense by 1 stage.\",\r\n\t},\r\n\tdig: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Bide, Swift, and Transform. If the user is fully paralyzed on the second turn, it continues avoiding attacks until it switches out or successfully executes the second turn of this move or Fly.\",\r\n\t\tbasePower: 100,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonLockMove: 'dig',\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (move.id === 'swift') return true;\r\n\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit underground!');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, move) {\r\n\t\t\t\tif (!move || move.effectType !== 'Move') return;\r\n\t\t\t\tif (!source) return;\r\n\t\t\t\tif (move.id === 'earthquake') {\r\n\t\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit underground!');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdisable: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"For 0 to 7 turns, one of the target's known moves that has at least 1 PP remaining becomes disabled, at random. Fails if one of the target's moves is already disabled, or if none of the target's moves have PP remaining. If any Pokemon uses Haze, this effect ends. Whether or not this move was successful, it counts as a hit for the purposes of the opponent's use of Rage.\",\r\n\t\tshortDesc: \"For 0-7 turns, disables one of the target's moves.\",\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tconst duration = this.random(1, 7);\r\n\t\t\t\treturn duration;\r\n\t\t\t},\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!this.queue.willMove(pokemon)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t\tconst moves = pokemon.moves;\r\n\t\t\t\tconst move = this.dex.moves.get(this.sample(moves));\r\n\t\t\t\tthis.add('-start', pokemon, 'Disable', move.name);\r\n\t\t\t\tthis.effectState.move = move.id;\r\n\t\t\t\treturn;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 14,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Disable');\r\n\t\t\t},\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (move.id === this.effectState.move) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdizzypunch: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tsecondary: null,\r\n\t},\r\n\tdoubleedge: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded down, but not less than 1 HP. If this move breaks the target's substitute, the user does not take any recoil damage.\",\r\n\t\tbasePower: 100,\r\n\t},\r\n\tdoublekick: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits twice. Damage is calculated once for the first hit and used for both hits. If the first hit breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tdoubleslap: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tdragonrage: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tdreameater: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The target is unaffected by this move unless it is asleep. The user recovers 1/2 the HP lost by the target, rounded down, but not less than 1 HP. If this move breaks the target's substitute, the user does not recover any HP.\",\r\n\t},\r\n\tearthquake: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t},\r\n\texplosion: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user faints after using this move, unless this move broke the target's substitute. The target's Defense is halved during damage calculation.\",\r\n\t\tbasePower: 170,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfireblast: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 30% chance to burn the target.\",\r\n\t\tshortDesc: \"30% chance to burn the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t},\r\n\tfirespin: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user spends two to five turns using this move. Has a 3/8 chance to last two or three turns, and a 1/8 chance to last four or five turns. The damage calculated for the first turn is used for every other turn. The user cannot select a move and the target cannot execute a move during the effect, but both may switch out. If the user switches out, the target remains unable to execute a move during that turn. If the target switches out, the user uses this move again automatically, and if it had 0 PP at the time, it becomes 63. If the user or the target switch out, or the user is prevented from moving, the effect ends. This move can prevent the target from moving even if it has type immunity, but will not deal damage.\",\r\n\t\tshortDesc: \"Prevents the target from moving for 2-5 turns.\",\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 15,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfissure: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals 65535 damage to the target. Fails if the target's Speed is greater than the user's.\",\r\n\t\tshortDesc: \"Deals 65535 damage. Fails if target is faster.\",\r\n\t},\r\n\tfly: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Bide, Swift, and Transform. If the user is fully paralyzed on the second turn, it continues avoiding attacks until it switches out or successfully executes the second turn of this move or Dig.\",\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonLockMove: 'fly',\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (move.id === 'swift') return true;\r\n\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit while flying!');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, move) {\r\n\t\t\t\tif (!move || move.effectType !== 'Move') return;\r\n\t\t\t\tif (!source || source.side === target.side) return;\r\n\t\t\t\tif (move.id === 'gust' || move.id === 'thunder') {\r\n\t\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit while flying!');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tfocusenergy: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"While the user remains active, its chance for a critical hit is quartered. Fails if the user already has the effect. If any Pokemon uses Haze, this effect ends.\",\r\n\t\tshortDesc: \"Quarters the user's chance for a critical hit.\",\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'move: Focus Energy');\r\n\t\t\t},\r\n\t\t\t// This does nothing as it's dealt with on critical hit calculation.\r\n\t\t\tonModifyMove() {},\r\n\t\t},\r\n\t},\r\n\tfuryattack: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tfuryswipes: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tglare: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Paralyzes the target.\",\r\n\t\tignoreImmunity: true,\r\n\t},\r\n\tgrowth: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Raises the user's Special by 1 stage.\",\r\n\t\tshortDesc: \"Raises the user's Special by 1.\",\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t\tspd: 1,\r\n\t\t},\r\n\t},\r\n\tguillotine: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals 65535 damage to the target. Fails if the target's Speed is greater than the user's.\",\r\n\t\tshortDesc: \"Deals 65535 damage. Fails if target is faster.\",\r\n\t},\r\n\tgust: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\thaze: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Resets the stat stages of both Pokemon to 0 and removes stat reductions due to burn and paralysis. Resets Toxic counters to 0 and removes the effect of confusion, Disable, Focus Energy, Leech Seed, Light Screen, Mist, and Reflect from both Pokemon. Removes the opponent's major status condition.\",\r\n\t\tshortDesc: \"Resets all stat changes. Removes foe's status.\",\r\n\t\tonHit(target, source) {\r\n\t\t\tthis.add('-clearallboost');\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tpokemon.clearBoosts();\r\n\r\n\t\t\t\tif (pokemon !== source) {\r\n\t\t\t\t\t// Clears the status from the opponent\r\n\t\t\t\t\tpokemon.setStatus('');\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.status === 'tox') {\r\n\t\t\t\t\tpokemon.setStatus('psn');\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id of Object.keys(pokemon.volatiles)) {\r\n\t\t\t\t\tif (id === 'residualdmg') {\r\n\t\t\t\t\t\tpokemon.volatiles[id].counter = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpokemon.removeVolatile(id);\r\n\t\t\t\t\t\tthis.add('-end', pokemon, id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t},\r\n\thighjumpkick: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If this attack misses the target, the user takes 1 HP of crash damage. If the user has a substitute, the crash damage is dealt to the target's substitute if it has one, otherwise no crash damage is dealt.\",\r\n\t\tshortDesc: \"User takes 1 HP of damage if it misses.\",\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tif (!target.types.includes('Ghost')) {\r\n\t\t\t\tthis.directDamage(1, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\thorndrill: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals 65535 damage to the target. Fails if the target's Speed is greater than the user's.\",\r\n\t\tshortDesc: \"Deals 65535 damage. Fails if target is faster.\",\r\n\t},\r\n\thyperbeam: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If this move is successful, the user must recharge on the following turn and cannot select a move, unless the target or its substitute was knocked out by this move.\",\r\n\t\tshortDesc: \"Can't move next turn if target or sub is not KOed.\",\r\n\t},\r\n\tjumpkick: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If this attack misses the target, the user takes 1 HP of crash damage. If the user has a substitute, the crash damage is dealt to the target's substitute if it has one, otherwise no crash damage is dealt.\",\r\n\t\tshortDesc: \"User takes 1 HP of damage if it misses.\",\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tif (!target.types.includes('Ghost')) {\r\n\t\t\t\tthis.directDamage(1, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tkaratechop: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tleechseed: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"At the end of each of the target's turns, The Pokemon at the user's position steals 1/16 of the target's maximum HP, rounded down and multiplied by the target's current Toxic counter if it has one, even if the target currently has less than that amount of HP remaining. If the target switches out or any Pokemon uses Haze, this effect ends. Grass-type Pokemon are immune to this move.\",\r\n\t\tonHit() {},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Leech Seed');\r\n\t\t\t},\r\n\t\t\tonAfterMoveSelfPriority: 1,\r\n\t\t\tonAfterMoveSelf(pokemon) {\r\n\t\t\t\tconst leecher = pokemon.side.foe.active[pokemon.volatiles['leechseed'].sourcePosition];\r\n\t\t\t\tif (!leecher || leecher.fainted || leecher.hp <= 0) {\r\n\t\t\t\t\tthis.debug('Nothing to leech into');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// We check if leeched Pok\u00E9mon has Toxic to increase leeched damage.\r\n\t\t\t\tlet toxicCounter = 1;\r\n\t\t\t\tconst residualdmg = pokemon.volatiles['residualdmg'];\r\n\t\t\t\tif (residualdmg) {\r\n\t\t\t\t\tresidualdmg.counter++;\r\n\t\t\t\t\ttoxicCounter = residualdmg.counter;\r\n\t\t\t\t}\r\n\t\t\t\tconst toLeech = this.clampIntRange(Math.floor(pokemon.baseMaxhp / 16), 1) * toxicCounter;\r\n\t\t\t\tconst damage = this.damage(toLeech, pokemon, leecher);\r\n\t\t\t\tif (residualdmg) this.hint(\"In Gen 1, Leech Seed's damage is affected by Toxic's counter.\", true);\r\n\t\t\t\tif (!damage || toLeech > damage) {\r\n\t\t\t\t\tthis.hint(\"In Gen 1, Leech Seed recovery is not limited by the remaining HP of the seeded Pokemon.\", true);\r\n\t\t\t\t}\r\n\t\t\t\tthis.heal(toLeech, leecher, pokemon);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tlightscreen: {\r\n\t\tnum: 113,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"While the user remains active, its Special is doubled when taking damage. Critical hits ignore this effect. If any Pokemon uses Haze, this effect ends.\",\r\n\t\tshortDesc: \"While active, user's Special is 2x when damaged.\",\r\n\t\tname: \"Light Screen\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tvolatileStatus: 'lightscreen',\r\n\t\tonTryHit(pokemon) {\r\n\t\t\tif (pokemon.volatiles['lightscreen']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Light Screen');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tmetronome: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"A random move is selected for use, other than Metronome or Struggle.\",\r\n\t\tnoMetronome: [\"Metronome\", \"Struggle\"],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tmimic: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"While the user remains active, this move is replaced by a random move known by the target, even if the user already knows that move. The copied move keeps the remaining PP for this move, regardless of the copied move's maximum PP. Whenever one PP is used for a copied move, one PP is used for this move.\",\r\n\t\tshortDesc: \"Random move known by the target replaces this.\",\r\n\t\tonHit(target, source) {\r\n\t\t\tconst moveslot = source.moves.indexOf('mimic');\r\n\t\t\tif (moveslot < 0) return false;\r\n\t\t\tconst moves = target.moves;\r\n\t\t\tconst moveid = this.sample(moves);\r\n\t\t\tif (!moveid) return false;\r\n\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\tsource.moveSlots[moveslot] = {\r\n\t\t\t\tmove: move.name,\r\n\t\t\t\tid: move.id,\r\n\t\t\t\tpp: source.moveSlots[moveslot].pp,\r\n\t\t\t\tmaxpp: move.pp * 8 / 5,\r\n\t\t\t\ttarget: move.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tthis.add('-start', source, 'Mimic', move.name);\r\n\t\t},\r\n\t},\r\n\tminimize: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Raises the user's evasiveness by 1 stage.\",\r\n\t},\r\n\tmirrormove: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user uses the last move used by the target. Fails if the target has not made a move, or if the last move used was Mirror Move.\",\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst foe = pokemon.side.foe.active[0];\r\n\t\t\tif (!foe || !foe.lastMove || foe.lastMove.id === 'mirrormove') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.useMove(foe.lastMove.id, pokemon);\r\n\t\t},\r\n\t},\r\n\tmist: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"While the user remains active, it is protected from having its stat stages lowered by other Pokemon, unless caused by the secondary effect of a move. Fails if the user already has the effect. If any Pokemon uses Haze, this effect ends.\",\r\n\t},\r\n\tnightshade: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals damage to the target equal to the user's level. This move ignores type immunity.\",\r\n\t\tshortDesc: \"Damage = user's level. Can hit Normal types.\",\r\n\t\tignoreImmunity: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tpetaldance: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Whether or not this move is successful, the user spends three or four turns locked into this move and becomes confused immediately after its move on the last turn of the effect, even if it is already confused. If the user is prevented from moving, the effect ends without causing confusion. During the effect, this move's accuracy is overwritten every turn with the current calculated accuracy including stat stage changes, but not to less than 1/256 or more than 255/256.\",\r\n\t\tshortDesc: \"Lasts 3-4 turns. Confuses the user afterwards.\",\r\n\t},\r\n\tpinmissile: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tpoisonsting: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 20% chance to poison the target.\",\r\n\t\tshortDesc: \"20% chance to poison the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t},\r\n\tpsychic: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 33% chance to lower the target's Special by 1 stage.\",\r\n\t\tshortDesc: \"33% chance to lower the target's Special by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tpsywave: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\trage: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Once this move is successfully used, the user automatically uses this move every turn and can no longer switch out. During the effect, the user's Attack is raised by 1 stage every time it is hit by the opposing Pokemon, and this move's accuracy is overwritten every turn with the current calculated accuracy including stat stage changes, but not to less than 1/256 or more than 255/256.\",\r\n\t\tshortDesc: \"Lasts forever. Raises user's Attack by 1 when hit.\",\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'rage',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\t// Rage lock\r\n\t\t\tduration: 255,\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tthis.effectState.move = 'rage';\r\n\t\t\t},\r\n\t\t\tonLockMove: 'rage',\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (target.boosts.atk < 6 && move.id === 'disable') {\r\n\t\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.boosts.atk < 6 && move.category !== 'Status') {\r\n\t\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trazorleaf: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\trazorwind: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second.\",\r\n\t\tshortDesc: \"Charges turn 1. Hits turn 2.\",\r\n\t\tcritRatio: 1,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\trecover: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user restores 1/2 of its maximum HP, rounded down. Fails if (user's maximum HP - user's current HP + 1) is divisible by 256.\",\r\n\t\theal: null,\r\n\t\tonHit(target) {\r\n\t\t\t// Fail when health is 255 or 511 less than max\r\n\t\t\tif (target.hp === (target.maxhp - 255) || target.hp === (target.maxhp - 511) || target.hp === target.maxhp) {\r\n\t\t\t\tthis.hint(\"In Gen 1, recovery moves fail if (user's maximum HP - user's current HP + 1) is divisible by 256.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), target, target);\r\n\t\t},\r\n\t},\r\n\treflect: {\r\n\t\tnum: 115,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"While the user remains active, its Defense is doubled when taking damage. Critical hits ignore this protection. This effect can be removed by Haze.\",\r\n\t\tshortDesc: \"While active, the user's Defense is doubled.\",\r\n\t\tname: \"Reflect\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tvolatileStatus: 'reflect',\r\n\t\tonTryHit(pokemon) {\r\n\t\t\tif (pokemon.volatiles['reflect']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Reflect');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\trest: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user falls asleep for the next two turns and restores all of its HP, curing itself of any major status condition in the process. This does not remove the user's stat penalty for burn or paralysis. Fails if the user has full HP.\",\r\n\t\tonTryMove() {},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (target.hp === target.maxhp) return false;\r\n\t\t\t// Fail when health is 255 or 511 less than max\r\n\t\t\tif (target.hp === (target.maxhp - 255) || target.hp === (target.maxhp - 511)) {\r\n\t\t\t\tthis.hint(\"In Gen 1, recovery moves fail if (user's maximum HP - user's current HP + 1) is divisible by 256.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!target.setStatus('slp', source, move)) return false;\r\n\t\t\ttarget.statusData.time = 2;\r\n\t\t\ttarget.statusData.startTime = 2;\r\n\t\t\tthis.heal(target.maxhp); // Aesthetic only as the healing happens after you fall asleep in-game\r\n\t\t},\r\n\t},\r\n\troar: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"No competitive use.\",\r\n\t\tshortDesc: \"No competitive use.\",\r\n\t\tforceSwitch: false,\r\n\t\tonTryHit() {},\r\n\t\tpriority: 0,\r\n\t},\r\n\trockslide: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\trockthrow: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 65,\r\n\t},\r\n\tsandattack: {\r\n\t\tinherit: true,\r\n\t\tignoreImmunity: true,\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tseismictoss: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals damage to the target equal to the user's level. This move ignores type immunity.\",\r\n\t\tshortDesc: \"Damage = user's level. Can hit Ghost types.\",\r\n\t\tignoreImmunity: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tselfdestruct: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user faints after using this move, unless the target's substitute was broken by the damage. The target's Defense is halved during damage calculation.\",\r\n\t\tbasePower: 130,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tskullbash: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second.\",\r\n\t\tshortDesc: \"Charges turn 1. Hits turn 2.\",\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name, defender);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tslash: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t},\r\n\tsludge: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 40% chance to poison the target.\",\r\n\t\tshortDesc: \"40% chance to poison the target.\",\r\n\t},\r\n\tsoftboiled: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user restores 1/2 of its maximum HP, rounded down. Fails if (user's maximum HP - user's current HP + 1) is divisible by 256.\",\r\n\t\theal: null,\r\n\t\tonHit(target) {\r\n\t\t\t// Fail when health is 255 or 511 less than max\r\n\t\t\tif (target.hp === (target.maxhp - 255) || target.hp === (target.maxhp - 511) || target.hp === target.maxhp) {\r\n\t\t\t\tthis.hint(\"In Gen 1, recovery moves fail if (user's maximum HP - user's current HP + 1) is divisible by 256.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), target, target);\r\n\t\t},\r\n\t},\r\n\tsolarbeam: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second.\",\r\n\t\tshortDesc: \"Charges turn 1. Hits turn 2.\",\r\n\t},\r\n\tsonicboom: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals 20 HP of damage to the target. This move ignores type immunity.\",\r\n\t},\r\n\tspikecannon: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. Damage is calculated once for the first hit and used for every hit. If one of the hits breaks the target's substitute, the move ends.\",\r\n\t},\r\n\tstomp: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 30% chance to flinch the target.\",\r\n\t},\r\n\tstruggle: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals Normal-type damage. If this move was successful, the user takes damage equal to 1/2 the HP lost by the target, rounded down, but not less than 1 HP. This move is automatically used if none of the user's known moves can be selected.\",\r\n\t\tshortDesc: \"User loses 1/2 the HP lost by the target.\",\r\n\t\tpp: 10,\r\n\t\trecoil: [1, 2],\r\n\t\tonModifyMove() {},\r\n\t},\r\n\tstunspore: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Paralyzes the target.\",\r\n\t},\r\n\tsubmission: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded down, but not less than 1 HP. If this move breaks the target's substitute, the user does not take any recoil damage.\",\r\n\t},\r\n\tsubstitute: {\r\n\t\tnum: 164,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user takes 1/4 of its maximum HP, rounded down, and puts it into a substitute to take its place in battle. The substitute has 1 HP plus the HP used to create it, and is removed once enough damage is inflicted on it or 255 damage is inflicted at once, or if the user switches out or faints. Until the substitute is broken, it receives damage from all attacks made by the opposing Pokemon and shields the user from status effects and stat stage changes caused by the opponent, unless the effect is Disable, Leech Seed, sleep, primary paralysis, or secondary confusion and the user's substitute did not break. The user still takes normal damage from status effects while behind its substitute, unless the effect is confusion damage, which is applied to the opposing Pokemon's substitute instead. If the substitute breaks during a multi-hit attack, the attack ends. Fails if the user does not have enough HP remaining to create a substitute, or if it already has a substitute. The user will create a substitute and then faint if its current HP is exactly 1/4 of its maximum HP.\",\r\n\t\tshortDesc: \"User takes 1/4 its max HP to put in a Substitute.\",\r\n\t\tname: \"Substitute\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tvolatileStatus: 'substitute',\r\n\t\tonTryHit(target) {\r\n\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\tthis.add('-fail', target, 'move: Substitute');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// We only prevent when hp is less than one quarter.\r\n\t\t\t// If you use substitute at exactly one quarter, you faint.\r\n\t\t\tif (target.hp === target.maxhp / 4) target.faint();\r\n\t\t\tif (target.hp < target.maxhp / 4) {\r\n\t\t\t\tthis.add('-fail', target, 'move: Substitute', '[weak]');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\t// If max HP is 3 or less substitute makes no damage\r\n\t\t\tif (target.maxhp > 3) {\r\n\t\t\t\tthis.directDamage(target.maxhp / 4, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'Substitute');\r\n\t\t\t\tthis.effectState.hp = Math.floor(target.maxhp / 4) + 1;\r\n\t\t\t\tdelete target.volatiles['partiallytrapped'];\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: -1,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\t// In gen 1 it only blocks:\r\n\t\t\t\t\t// poison, confusion, secondary effect confusion, stat reducing moves and Leech Seed.\r\n\t\t\t\t\tconst SubBlocked = ['lockon', 'meanlook', 'mindreader', 'nightmare'];\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmove.status === 'psn' || move.status === 'tox' || (move.boosts && target !== source) ||\r\n\t\t\t\t\t\tmove.volatileStatus === 'confusion' || SubBlocked.includes(move.id)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.volatileStatus && target === source) return;\r\n\t\t\t\t// NOTE: In future generations the damage is capped to the remaining HP of the\r\n\t\t\t\t// Substitute, here we deliberately use the uncapped damage when tracking lastDamage etc.\r\n\t\t\t\t// Also, multi-hit moves must always deal the same damage as the first hit for any subsequent hits\r\n\t\t\t\tlet uncappedDamage = move.hit > 1 ? source.lastDamage : this.getDamage(source, target, move);\r\n\t\t\t\tif (!uncappedDamage) return null;\r\n\t\t\t\tuncappedDamage = this.runEvent('SubDamage', target, source, move, uncappedDamage);\r\n\t\t\t\tif (!uncappedDamage) return uncappedDamage;\r\n\t\t\t\tsource.lastDamage = uncappedDamage;\r\n\t\t\t\ttarget.volatiles['substitute'].hp -= uncappedDamage > target.volatiles['substitute'].hp ?\r\n\t\t\t\t\ttarget.volatiles['substitute'].hp : uncappedDamage;\r\n\t\t\t\tif (target.volatiles['substitute'].hp <= 0) {\r\n\t\t\t\t\ttarget.removeVolatile('substitute');\r\n\t\t\t\t\ttarget.subFainted = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'Substitute', '[damage]');\r\n\t\t\t\t}\r\n\t\t\t\t// Drain/recoil does not happen if the substitute breaks\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tif (move.recoil) {\r\n\t\t\t\t\t\tthis.damage(Math.round(uncappedDamage * move.recoil[0] / move.recoil[1]), source, target, 'recoil');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.drain) {\r\n\t\t\t\t\t\tthis.heal(Math.ceil(uncappedDamage * move.drain[0] / move.drain[1]), source, target, 'drain');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('AfterSubDamage', target, source, move, uncappedDamage);\r\n\t\t\t\t// Add here counter damage\r\n\t\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\t\tif (!lastAttackedBy) {\r\n\t\t\t\t\ttarget.attackedBy.push({source: source, move: move.id, damage: uncappedDamage, thisTurn: true});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlastAttackedBy.move = move.id;\r\n\t\t\t\t\tlastAttackedBy.damage = uncappedDamage;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Substitute');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tflags: {},\r\n\t},\r\n\tsuperfang: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals damage to the target equal to half of its current HP, rounded down, but not less than 1 HP. This move ignores type immunity.\",\r\n\t\tshortDesc: \"Damage = 1/2 target's current HP. Hits Ghosts.\",\r\n\t\tignoreImmunity: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tswift: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This move does not check accuracy and hits even if the target is using Dig or Fly.\",\r\n\t\tshortDesc: \"Never misses, even against Dig and Fly.\",\r\n\t},\r\n\ttakedown: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded down, but not less than 1 HP. If this move breaks the target's substitute, the user does not take any recoil damage.\",\r\n\t},\r\n\tthrash: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Whether or not this move is successful, the user spends three or four turns locked into this move and becomes confused immediately after its move on the last turn of the effect, even if it is already confused. If the user is prevented from moving, the effect ends without causing confusion. During the effect, this move's accuracy is overwritten every turn with the current calculated accuracy including stat stage changes, but not to less than 1/256 or more than 255/256.\",\r\n\t\tshortDesc: \"Lasts 3-4 turns. Confuses the user afterwards.\",\r\n\t},\r\n\tthunder: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Has a 10% chance to paralyze the target.\",\r\n\t\tshortDesc: \"10% chance to paralyze the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t},\r\n\tthunderwave: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tonTryHit(target) {\r\n\t\t\tif (target.hasType('Ground')) {\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttransform: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user transforms into the target. The target's current stats, stat stages, types, moves, DVs, species, and sprite are copied. The user's level and HP remain the same and each copied move receives only 5 PP. This move can hit a target using Dig or Fly.\",\r\n\t},\r\n\ttriattack: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tonHit() {},\r\n\t\tsecondary: null,\r\n\t},\r\n\ttwineedle: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Hits twice, with the second hit having a 20% chance to poison the target. If the first hit breaks the target's substitute, the move ends.\",\r\n\t},\r\n\twhirlwind: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tdesc: \"No competitive use.\",\r\n\t\tshortDesc: \"No competitive use.\",\r\n\t\tforceSwitch: false,\r\n\t\tonTryHit() {},\r\n\t\tpriority: 0,\r\n\t},\r\n\twingattack: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 35,\r\n\t},\r\n\twrap: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user spends two to five turns using this move. Has a 3/8 chance to last two or three turns, and a 1/8 chance to last four or five turns. The damage calculated for the first turn is used for every other turn. The user cannot select a move and the target cannot execute a move during the effect, but both may switch out. If the user switches out, the target remains unable to execute a move during that turn. If the target switches out, the user uses this move again automatically, and if it had 0 PP at the time, it becomes 63. If the user or the target switch out, or the user is prevented from moving, the effect ends. This move can prevent the target from moving even if it has type immunity, but will not deal damage.\",\r\n\t\tshortDesc: \"Prevents the target from moving for 2-5 turns.\",\r\n\t\taccuracy: 85,\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tearthpower: {\r\n\t\tnum: 414,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Earth Power',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1},\r\n\t\tsecondary: {chance: 10, boosts: {spd: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Ground',\r\n\t\tdesc: \"Has a 10% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Sp. Def by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tscorchingsands: {\r\n\t\tnum: 815,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Scorching Sands',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, defrost: 1},\r\n\t\tthawsTarget: true,\r\n\t\tsecondary: {chance: 30, status: 'brn'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Ground',\r\n\t\tdesc: 'Has a 30% chance to burn the target. The target thaws out if it is frozen.',\r\n\t\tshortDesc: '30% chance to burn the target. Thaws target.',\r\n\t\tgen: 1,\r\n\t},\r\n\tpowergem: {\r\n\t\tnum: 408,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Power Gem',\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Rock',\r\n\t\tshortDesc: 'No additional effect.',\r\n\t\tgen: 1,\r\n\t},\r\n\trockpolish: {\r\n\t\tnum: 397,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: 'Status',\r\n\t\tname: 'Rock Polish',\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tboosts: {spe: 2},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'self',\r\n\t\ttype: 'Rock',\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tdesc: \"Raises the user's Speed by 2 stages.\",\r\n\t\tshortDesc: \"Raises the user's Speed by 2.\",\r\n\t\tgen: 1,\r\n\t},\r\n\ticiclecrash: {\r\n\t\tnum: 556,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 85,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Icicle Crash',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 30, volatileStatus: 'flinch'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Ice',\r\n\t\tdesc: 'Has a 30% chance to make the target flinch.',\r\n\t\tshortDesc: '30% chance to make the target flinch.',\r\n\t\tgen: 1,\r\n\t},\r\n\twildcharge: {\r\n\t\tnum: 528,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Wild Charge',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\trecoil: [1, 4],\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Electric',\r\n\t\tdesc: 'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.',\r\n\t\tshortDesc: 'Has 1/4 recoil.',\r\n\t\tgen: 1,\r\n\t},\r\n\tscald: {\r\n\t\tnum: 503,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Scald',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, defrost: 1},\r\n\t\tthawsTarget: true,\r\n\t\tsecondary: {chance: 30, status: 'brn'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Water',\r\n\t\tdesc: 'Has a 30% chance to burn the target. The target thaws out if it is frozen.',\r\n\t\tshortDesc: '30% chance to burn the target. Thaws target.',\r\n\t\tgen: 1,\r\n\t},\r\n\tflareblitz: {\r\n\t\tnum: 394,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Flare Blitz',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, defrost: 1},\r\n\t\trecoil: [33, 100],\r\n\t\tsecondary: {chance: 10, status: 'brn'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Fire',\r\n\t\tdesc: 'Has a 10% chance to burn the target. If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',\r\n\t\tshortDesc: 'Has 33% recoil. 10% chance to burn. Thaws user.',\r\n\t\tgen: 1,\r\n\t},\r\n\theatwave: {\r\n\t\tnum: 257,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 95,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Heat Wave',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1},\r\n\t\tsecondary: {chance: 10, status: 'brn'},\r\n\t\ttarget: 'allAdjacentFoes',\r\n\t\ttype: 'Fire',\r\n\t\tdesc: 'Has a 10% chance to burn the target.',\r\n\t\tshortDesc: '10% chance to burn the foe(s).',\r\n\t\tgen: 1,\r\n\t},\r\n\tpsychocut: {\r\n\t\tnum: 427,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Psycho Cut',\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, slicing: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Psychic',\r\n\t\tdesc: 'Has a higher chance for a critical hit.',\r\n\t\tshortDesc: 'High critical hit ratio.',\r\n\t\tgen: 1,\r\n\t},\r\n\tzenheadbutt: {\r\n\t\tnum: 428,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Zen Headbutt',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 20, volatileStatus: 'flinch'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Psychic',\r\n\t\tdesc: 'Has a 20% chance to make the target flinch.',\r\n\t\tshortDesc: '20% chance to make the target flinch.',\r\n\t\tgen: 1,\r\n\t},\r\n\thypervoice: {\r\n\t\tnum: 304,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Hyper Voice',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'allAdjacentFoes',\r\n\t\ttype: 'Normal',\r\n\t\tdesc: 'No additional effect.',\r\n\t\tshortDesc: 'No additional effect. Hits adjacent foes.',\r\n\t\tgen: 1,\r\n\t},\r\n\tgigaimpact: {\r\n\t\tnum: 416,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 150,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Giga Impact',\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, recharge: 1, protect: 1, mirror: 1},\r\n\t\tself: {volatileStatus: 'mustrecharge'},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Normal',\r\n\t\tdesc: 'If this move is successful, the user must recharge on the following turn and cannot select a move.',\r\n\t\tshortDesc: 'User cannot move next turn.',\r\n\t\tgen: 1,\r\n\t},\r\n\tcrunch: {\r\n\t\tnum: 242,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Crunch',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bite: 1, contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 20, boosts: {def: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Dark',\r\n\t\tdesc: \"Has a 20% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"20% chance to lower the target's Defense by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tdarkpulse: {\r\n\t\tnum: 399,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Dark Pulse',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, pulse: 1, mirror: 1, distance: 1},\r\n\t\tsecondary: {chance: 20, volatileStatus: 'flinch'},\r\n\t\ttarget: 'any',\r\n\t\ttype: 'Dark',\r\n\t\tdesc: 'Has a 20% chance to make the target flinch.',\r\n\t\tshortDesc: '20% chance to make the target flinch.',\r\n\t\tgen: 1,\r\n\t},\r\n\tthroatchop: {\r\n\t\tnum: 675,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Throat Chop',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tcondition: {duration: 2, onBeforeMovePriority: 6, onResidualOrder: 22},\r\n\t\tsecondary: {chance: 100},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Dark',\r\n\t\tdesc: 'For 2 turns, the target cannot use sound-based moves.',\r\n\t\tshortDesc: 'For 2 turns, the target cannot use sound moves.',\r\n\t\tgen: 1,\r\n\t},\r\n\thoneclaws: {\r\n\t\tnum: 468,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: 'Status',\r\n\t\tname: 'Hone Claws',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tboosts: {atk: 1, accuracy: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'self',\r\n\t\ttype: 'Dark',\r\n\t\tzMove: {boost: {atk: 1}},\r\n\t\tdesc: \"Raises the user's Attack and accuracy by 1 stage.\",\r\n\t\tshortDesc: \"Raises the user's Attack and accuracy by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tnightslash: {\r\n\t\tnum: 400,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Night Slash',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, slicing: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Dark',\r\n\t\tdesc: 'Has a higher chance for a critical hit.',\r\n\t\tshortDesc: 'High critical hit ratio.',\r\n\t\tgen: 1,\r\n\t},\r\n\tautotomize: {\r\n\t\tnum: 475,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: 'Status',\r\n\t\tisNonstandard: 'Past',\r\n\t\tname: 'Autotomize',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tboosts: {spe: 2},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'self',\r\n\t\ttype: 'Steel',\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tdesc: \"Raises the user's Speed by 2 stages. If the user's Speed was changed, the user's weight is reduced by 100 kg as long as it remains active. This effect is stackable but cannot reduce the user's weight to less than 0.1 kg.\",\r\n\t\tshortDesc: \"Raises the user's Speed by 2; user loses 100 kg.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tflashcannon: {\r\n\t\tnum: 430,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Flash Cannon',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, boosts: {spd: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Steel',\r\n\t\tdesc: \"Has a 10% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Sp. Def by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tironhead: {\r\n\t\tnum: 442,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Iron Head',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 30, volatileStatus: 'flinch'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Steel',\r\n\t\tdesc: 'Has a 30% chance to make the target flinch.',\r\n\t\tshortDesc: '30% chance to make the target flinch.',\r\n\t\tgen: 1,\r\n\t},\r\n\tsmartstrike: {\r\n\t\tnum: 684,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 70,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Smart Strike',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Steel',\r\n\t\tshortDesc: 'This move does not check accuracy.',\r\n\t\tgen: 1,\r\n\t},\r\n\tsteelwing: {\r\n\t\tnum: 211,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 70,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Steel Wing',\r\n\t\tpp: 25,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, self: {boosts: {def: 1}}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Steel',\r\n\t\tdesc: \"Has a 10% chance to raise the user's Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to raise the user's Defense by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tdazzlinggleam: {\r\n\t\tnum: 605,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Dazzling Gleam',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'allAdjacentFoes',\r\n\t\ttype: 'Fairy',\r\n\t\tdesc: 'No additional effect.',\r\n\t\tshortDesc: 'No additional effect. Hits adjacent foes.',\r\n\t\tgen: 1,\r\n\t},\r\n\tmoonblast: {\r\n\t\tnum: 585,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Moonblast',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 30, boosts: {spa: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Fairy',\r\n\t\tdesc: \"Has a 30% chance to lower the target's Special Attack by 1 stage.\",\r\n\t\tshortDesc: \"30% chance to lower the target's Sp. Atk by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tplayrough: {\r\n\t\tnum: 583,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Play Rough',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, boosts: {atk: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Fairy',\r\n\t\tdesc: \"Has a 10% chance to lower the target's Attack by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Attack by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\taurasphere: {\r\n\t\tnum: 396,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Aura Sphere',\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, pulse: 1, mirror: 1, distance: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'any',\r\n\t\ttype: 'Fighting',\r\n\t\tshortDesc: 'This move does not check accuracy.',\r\n\t\tgen: 1,\r\n\t},\r\n\tbrickbreak: {\r\n\t\tnum: 280,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Brick Break',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Fighting',\r\n\t\tdesc: \"If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target's side of the field before damage is calculated.\",\r\n\t\tshortDesc: 'Destroys screens, unless the target is immune.',\r\n\t\tgen: 1,\r\n\t},\r\n\tcrosschop: {\r\n\t\tnum: 238,\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 100,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Cross Chop',\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Fighting',\r\n\t\tdesc: 'Has a higher chance for a critical hit.',\r\n\t\tshortDesc: 'High critical hit ratio.',\r\n\t\tgen: 1,\r\n\t},\r\n\tfocusblast: {\r\n\t\tnum: 411,\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 120,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Focus Blast',\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, boosts: {spd: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Fighting',\r\n\t\tdesc: \"Has a 10% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Sp. Def by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tairslash: {\r\n\t\tnum: 403,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 75,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Air Slash',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, distance: 1, slicing: 1},\r\n\t\tsecondary: {chance: 30, volatileStatus: 'flinch'},\r\n\t\ttarget: 'any',\r\n\t\ttype: 'Flying',\r\n\t\tdesc: 'Has a 30% chance to make the target flinch.',\r\n\t\tshortDesc: '30% chance to make the target flinch.',\r\n\t\tgen: 1,\r\n\t},\r\n\tbravebird: {\r\n\t\tnum: 413,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Brave Bird',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, distance: 1},\r\n\t\trecoil: [33, 100],\r\n\t\tsecondary: null,\r\n\t\ttarget: 'any',\r\n\t\ttype: 'Flying',\r\n\t\tdesc: 'If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',\r\n\t\tshortDesc: 'Has 33% recoil.',\r\n\t\tgen: 1,\r\n\t},\r\n\thurricane: {\r\n\t\tnum: 542,\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 110,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Hurricane',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, distance: 1, wind: 1},\r\n\t\tsecondary: {chance: 30, volatileStatus: 'confusion'},\r\n\t\ttarget: 'any',\r\n\t\ttype: 'Flying',\r\n\t\tdesc: \"Has a 30% chance to confuse the target. This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If the weather is Primordial Sea or Rain Dance, this move does not check accuracy. If the weather is Desolate Land or Sunny Day, this move's accuracy is 50%. If this move is used against a Pokemon holding Utility Umbrella, this move's accuracy remains at 70%.\",\r\n\t\tshortDesc: \"30% chance to confuse target. Can't miss in rain.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tdualwingbeat: {\r\n\t\tnum: 814,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 40,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Dual Wingbeat',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tmultihit: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Flying',\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tdesc: \"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.\",\r\n\t\tshortDesc: 'Hits 2 times in one turn.',\r\n\t\tgen: 1,\r\n\t},\r\n\tenergyball: {\r\n\t\tnum: 412,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Energy Ball',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, boosts: {spd: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Grass',\r\n\t\tdesc: \"Has a 10% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Sp. Def by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tgigadrain: {\r\n\t\tnum: 202,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Giga Drain',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, heal: 1},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Grass',\r\n\t\tdesc: 'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',\r\n\t\tshortDesc: 'User recovers 50% of the damage dealt.',\r\n\t\tgen: 1,\r\n\t},\r\n\tleafblade: {\r\n\t\tnum: 348,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Leaf Blade',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, slicing: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Grass',\r\n\t\tdesc: 'Has a higher chance for a critical hit.',\r\n\t\tshortDesc: 'High critical hit ratio.',\r\n\t\tgen: 1,\r\n\t},\r\n\tpowerwhip: {\r\n\t\tnum: 438,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 120,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Power Whip',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Grass',\r\n\t\tshortDesc: 'No additional effect.',\r\n\t\tgen: 1,\r\n\t},\r\n\tseedbomb: {\r\n\t\tnum: 402,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Seed Bomb',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Grass',\r\n\t\tshortDesc: 'No additional effect.',\r\n\t\tgen: 1,\r\n\t},\r\n\tsynthesis: {\r\n\t\tnum: 235,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: 'Status',\r\n\t\tname: 'Synthesis',\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'self',\r\n\t\ttype: 'Grass',\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tdesc: 'The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Primordial Sea, Rain Dance, Sandstorm, or Snow, all rounded half down.',\r\n\t\tshortDesc: 'Heals the user by a weather-dependent amount.',\r\n\t\tgen: 1,\r\n\t},\r\n\twoodhammer: {\r\n\t\tnum: 452,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Wood Hammer',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\trecoil: [33, 100],\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Grass',\r\n\t\tdesc: 'If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',\r\n\t\tshortDesc: 'Has 33% recoil.',\r\n\t\tgen: 1,\r\n\t},\r\n\tgunkshot: {\r\n\t\tnum: 441,\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 120,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Gunk Shot',\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 30, status: 'psn'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Poison',\r\n\t\tdesc: 'Has a 30% chance to poison the target.',\r\n\t\tshortDesc: '30% chance to poison the target.',\r\n\t\tgen: 1,\r\n\t},\r\n\tpoisonjab: {\r\n\t\tnum: 398,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Poison Jab',\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 30, status: 'psn'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Poison',\r\n\t\tdesc: 'Has a 30% chance to poison the target.',\r\n\t\tshortDesc: '30% chance to poison the target.',\r\n\t\tgen: 1,\r\n\t},\r\n\tsludgebomb: {\r\n\t\tnum: 188,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Sludge Bomb',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 30, status: 'psn'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Poison',\r\n\t\tdesc: 'Has a 30% chance to poison the target.',\r\n\t\tshortDesc: '30% chance to poison the target.',\r\n\t\tgen: 1,\r\n\t},\r\n\tsludgewave: {\r\n\t\tnum: 482,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Sludge Wave',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, status: 'psn'},\r\n\t\ttarget: 'allAdjacent',\r\n\t\ttype: 'Poison',\r\n\t\tdesc: 'Has a 10% chance to poison the target.',\r\n\t\tshortDesc: '10% chance to poison adjacent Pokemon.',\r\n\t\tgen: 1,\r\n\t},\r\n\tshadowball: {\r\n\t\tnum: 247,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Shadow Ball',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 20, boosts: {spd: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Ghost',\r\n\t\tdesc: \"Has a 20% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"20% chance to lower the target's Sp. Def by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tshadowclaw: {\r\n\t\tnum: 421,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Shadow Claw',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Ghost',\r\n\t\tdesc: 'Has a higher chance for a critical hit.',\r\n\t\tshortDesc: 'High critical hit ratio.',\r\n\t\tgen: 1,\r\n\t},\r\n\tbugbuzz: {\r\n\t\tnum: 405,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Bug Buzz',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1},\r\n\t\tsecondary: {chance: 10, boosts: {spd: -1}},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Bug',\r\n\t\tdesc: \"Has a 10% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Sp. Def by 1.\",\r\n\t\tgen: 1,\r\n\t},\r\n\tsignalbeam: {\r\n\t\tnum: 324,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: 'Special',\r\n\t\tisNonstandard: 'Past',\r\n\t\tname: 'Signal Beam',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: {chance: 10, volatileStatus: 'confusion'},\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Bug',\r\n\t\tdesc: 'Has a 10% chance to confuse the target.',\r\n\t\tshortDesc: '10% chance to confuse the target.',\r\n\t\tgen: 1,\r\n\t},\r\n\txscissor: {\r\n\t\tnum: 404,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'X-Scissor',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, slicing: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Bug',\r\n\t\tshortDesc: 'No additional effect.',\r\n\t\tgen: 1,\r\n\t},\r\n\tpollenpuff: {\r\n\t\tnum: 676,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Pollen Puff',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1, allyanim: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Bug',\r\n\t\tdesc: 'If the target is an ally, this move restores 1/2 of its maximum HP, rounded down, instead of dealing damage.',\r\n\t\tshortDesc: 'If the target is an ally, heals 50% of its max HP.',\r\n\t\tgen: 1,\r\n\t},\r\n\tdragonclaw: {\r\n\t\tnum: 337,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: 'Physical',\r\n\t\tname: 'Dragon Claw',\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'normal',\r\n\t\ttype: 'Dragon',\r\n\t\tshortDesc: 'No additional effect.',\r\n\t\tgen: 1,\r\n\t},\r\n\tdragonpulse: {\r\n\t\tnum: 406,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: 'Special',\r\n\t\tname: 'Dragon Pulse',\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, pulse: 1, mirror: 1, distance: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: 'any',\r\n\t\ttype: 'Dragon',\r\n\t\tshortDesc: 'No additional effect.',\r\n\t\tgen: 1,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
