{
  "version": 3,
  "sources": ["../../../../data/mods/tpdp/scripts.ts"],
  "sourcesContent": ["function mergeCallback(\r\n\tc1?: (this: Battle, ...args: any[]) => any,\r\n\tc2?: (this: Battle, ...args: any[]) => any,\r\n): ((this: Battle, ...args: any[]) => any) | undefined {\r\n\tif (!c1) return c2;\r\n\tif (!c2) return c1;\r\n\treturn (function (...a) {\r\n\t\tconst ret1 = c1.call(this, ...a);\r\n\t\tconst ret2 = c2.call(this, ...a);\r\n\t\treturn this.actions.combineResults(ret1, ret2);\r\n\t});\r\n}\r\n\r\nexport const Scripts: ModdedBattleScriptsData = {\r\n\tgen: 6,\r\n\tinherit: 'gen6',\r\n\tteambuilderConfig: {\r\n\t\t// for micrometas to only show custom tiers\r\n\t\texcludeStandardTiers: true,\r\n\t\t// only to specify the order of custom tiers\r\n\t\tcustomTiers: ['TPDP OU', 'TPDP LC'],\r\n\t\t\r\n\t\t//viability\r\n\t\tmoveIsNotUseless(id: ID, species: Species, moves: string[], set: PokemonSet, dex: ModdedDex): boolean {\r\n\t\t\t//const dex = this.dex;\r\n\r\n\t\t\tlet abilityid: ID = set ? toID(set.ability) : '' as ID;\r\n\t\t\tconst itemid: ID = set ? toID(set.item) : '' as ID;\r\n\t\t\t\r\n\t\t\tconst GOOD_WEAK_MOVES = [\r\n\t\t\t'plasmaball', 'smashspin', 'infinitescales', 'raid', 'tigerrush', 'icegatling', 'aquacutter', 'aquasonic', 'overtakestrike', 'springfirst', 'overray', 'shadowbomb', 'toxicspiral', 'strikeshot', 'trickster', 'cruciform', 'heavenlyinfluence', 'heavenlyblessing', 'earthlyinfluence', 'earthlyblessing', 'stonethrow', 'airstamp', 'twingears', 'darkarrow', 'twinthrust', 'pursuit', 'unfetteredsoul', 'geyser', 'firesign', 'watersign', 'naturesign', 'electricsign', 'earthsign', 'steelsign', 'soundsign', 'depressingrain', 'negativemist', 'mirrorworld', 'firewall', 'paniccall', 'stelmosfire', 'loveorpain', 'blowfromcalamity', 'killingbite', 'lightningspeed', 'changeling',\r\n\t\t\t] as ID[] as readonly ID[];\r\n\t\t\tconst BAD_STRONG_MOVES = [\r\n\t\t\t'deflagration', 'aquarake', 'pulselaser', 'vacuumrupture', 'meteorimpact', 'gensokyotyphoon', 'firmspirit', 'gravityblast', 'blazeoftenmei', 'divinethunder', 'explodingfist', 'glamorpandemic', 'conflagration',\r\n\t\t\t] as ID[] as readonly ID[];\r\n\t\t\tconst GOOD_STATUS_MOVES = [\r\n\t\t\t'supernaturalborder', 'magicbarrier', 'firstaid', 'powerspot', 'unconsciousmind', 'innerpower', 'camouflage', 'imposingair', 'battlepreparation', 'offensivetrance', 'backupplan', 'focusedmovement', 'eternalrecord', 'willowisp', 'thermit', 'cloudburst', 'drought', 'foresttherapy', 'thornedivy', 'drainseed', 'graceofmana', 'whitelilydance', 'fairydance', 'whitemist', 'bewitchingpollen', 'minetrap', 'racingearth', 'focusedstance', 'strenuousstance', 'madrushstance', 'stealthtrap', 'windgodsgrace', 'squall', 'perch', 'skanda', 'sharpwind', 'thunderveil', 'fieldbarrier', 'fieldprotect', 'moonsprotection', 'solareclipse', 'sharktrade', 'puppetsgrudge', 'darkpower', 'creepingdarkness', 'callofthedead', 'cursereversal', 'eyeofcalamity', 'poisontrap', 'miasma', 'acidtears', 'continue', 'amnesia', 'honestmanslie', 'projection', 'gorgonseye', 'boutdrunkard', 'wordbreak', 'encourage', 'upbeat', 'atempo', 'booing', 'ruinousvoice', 'bravesong', 'decrescendo', 'phaseinversion', 'forceshield', 'soulcorruption',\r\n\t\t\t] as ID[] as readonly ID[];\r\n\t\t\t\r\n\t\t\tswitch (id) {\r\n\t\t\t\t//1 ability\r\n\t\t\t\tcase 'falsecourage':\r\n\t\t\t\t\treturn abilityid === 'ontheedge';\r\n\t\t\t\tcase 'venomstrike':\r\n\t\t\t\t\treturn abilityid === 'nimble';\r\n\t\t\t\t//speed\r\n\t\t\t\tcase 'jinx':\r\n\t\t\t\t\treturn species.baseStats.spe >= 70;\r\n\t\t\t\tcase 'impactrebellion':\r\n\t\t\t\t\treturn species.baseStats.spe <= 60;\r\n\t\t\t\t//multiple abilities\r\n\t\t\t\tcase 'terrainsuzaku':\r\n\t\t\t\t\treturn ['suteisfire', 'southernexpanse'].includes(abilityid);\r\n\t\t\t\tcase 'terraingenbu':\r\n\t\t\t\t\treturn species.baseStats.spe <= 60 || ['genteiswater', 'northernexpanse'].includes(abilityid);\r\n\t\t\t\tcase 'terrainseiryu':\r\n\t\t\t\t\treturn ['seiteiswood', 'easternexpanse'].includes(abilityid);\r\n\t\t\t\tcase 'terrainbyakko':\r\n\t\t\t\t\treturn ['byakuteismetal', 'westernexpanse'].includes(abilityid);\r\n\t\t\t\tcase 'terrainkohyru':\r\n\t\t\t\t\treturn ['kouteisearth', 'centralexpanse'].includes(abilityid);\r\n\t\t\t\tcase 'crosschange':\r\n\t\t\t\t\treturn ['wasteful', 'drunkard'].includes(abilityid);\r\n\t\t\t\tcase 'mindcontrol':\r\n\t\t\t\t\treturn ['wasteful', 'drunkard'].includes(abilityid);\r\n\t\t\t\tcase 'randomshots':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'hornetsflit':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'godstonefrenzy':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'twister':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'darkinnocence':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'shootingarts':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'rushattack':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'rapidthrow':\r\n\t\t\t\t\treturn ['salvo', 'strategist'].includes(abilityid);\r\n\t\t\t\tcase 'rainbowflowers':\r\n\t\t\t\t\treturn ['sanguine', 'flash'].includes(abilityid);\r\n\t\t\t\tcase 'densefogbloom':\r\n\t\t\t\t\treturn ['melancholic', 'fogtraveler'].includes(abilityid);\r\n\t\t\t\tcase 'deathmatch':\r\n\t\t\t\t\treturn ['indomitable', 'stubborn', 'ontheedge'].includes(abilityid);\r\n\t\t\t\tcase 'direstate':\r\n\t\t\t\t\treturn ['indomitable', 'stubborn', 'ontheedge'].includes(abilityid);\r\n\t\t\t\tcase 'passingbreeze':\r\n\t\t\t\t\treturn ['sanguine', 'melancholic', 'choleric', 'phlegmatic', 'supine'].includes(abilityid);\r\n\t\t\t\t//not ability\r\n\t\t\t\tcase 'raid':\r\n\t\t\t\t\treturn abilityid !== 'charge';\r\n\t\t\t\tcase 'risingsun':\r\n\t\t\t\t\treturn abilityid !== 'charge';\r\n\t\t\t\tcase 'plasmaball':\r\n\t\t\t\t\treturn abilityid !== 'charge';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet moveData = dex.moves.get(id);\r\n\t\t\tif (moveData.flags.charge) return abilityid === 'fasttalker';\r\n\t\t\tif (moveData.category === 'Status') {\r\n\t\t\t\treturn GOOD_STATUS_MOVES.includes(id);\r\n\t\t\t}\r\n\t\t\tif (moveData.basePower < 75 && !(abilityid === 'technician' && moveData.basePower <= 60 && moveData.basePower >= 50)) {\r\n\t\t\t\treturn GOOD_WEAK_MOVES.includes(id);\r\n\t\t\t}\r\n\t\t\treturn !BAD_STRONG_MOVES.includes(id);\r\n\t\t}\r\n\t},\r\n\t\r\n\tbattle: {\r\n        spreadModify(baseStats: StatsTable, set: PokemonSet): StatsTable {\r\n            const modStats: SparseStatsTable = {atk: 10, def: 10, spa: 10, spd: 10, spe: 10};\r\n            const tr = this.trunc;\r\n            let statName: keyof StatsTable;\r\n            for (statName in modStats) {\r\n                const stat = baseStats[statName];\r\n                modStats[statName] = tr(((2 * (stat + set.ivs[statName]) + set.evs[statName]) / 100) * set.level + 5);\r\n            }\r\n            if ('hp' in baseStats) {\r\n                const stat = baseStats['hp'];\r\n                modStats['hp'] = ((2 * (stat + set.ivs['hp']) + set.evs['hp']) / 100 + 1) * set.level + 10;\r\n            }\r\n            return this.natureModify(modStats as StatsTable, set);\r\n        }\r\n    },\r\n\tpokemon: {\r\n\t\ttrySetStatus(status: string | Condition, source: Pokemon | null = null, sourceEffect: Effect | null = null) {\r\n\t\t\tconst setStatus = this.battle.dex.conditions.get(status);\r\n\t\t\tif (setStatus.statusSlots > 1 && !['hvybrn', 'tox', 'shk', 'weakheavy', 'stp'].includes(status)) {\r\n\t\t\t\tconst statusOne = status.substring(0, 3);\r\n\t\t\t\tconst statusTwo = status.substring(3);\r\n\t\t\t\treturn this.setStatus(statusOne, source, sourceEffect) &&\r\n\t\t\t\t\t   this.setStatus(statusTwo, source, sourceEffect);\r\n\t\t\t}\r\n\t\t\telse return this.setStatus(status, source, sourceEffect);\r\n\t\t},\r\n\t\tsetStatus(\r\n\t\t\tstatus: string | Condition,\r\n\t\t\tsource: Pokemon | null = null,\r\n\t\t\tsourceEffect: Effect | null = null,\r\n\t\t\tignoreImmunities = false\r\n\t\t) {\r\n\t\t\tif (!this.hp) return false;\r\n\t\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\t\tif (this.battle.event) {\r\n\t\t\t\tif (!source) source = this.battle.event.source;\r\n\t\t\t\tif (!sourceEffect) sourceEffect = this.battle.effect;\r\n\t\t\t}\r\n\t\t\tif (!source) source = this;\r\n\t\t\t\r\n\t\t\tif (this.status && this.status.length !== 0) {\r\n\t\t\t\tif(status.id.length !== 0) return this.setStatusTwo(this.status, source, sourceEffect, false, status);\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.status = status.id;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!ignoreImmunities && status.id &&\r\n\t\t\t\t!(source?.hasAbility('corrosion') && ['tox', 'psn'].includes(status.id))) {\r\n\t\t\t\t// the game currently never ignores immunities\r\n\t\t\t\tif (!this.runStatusImmunity(status.id === 'tox' ? 'psn' : status.id)) {\r\n\t\t\t\t\tthis.battle.debug('immune to status');\r\n\t\t\t\t\tif ((sourceEffect as Move)?.status) {\r\n\t\t\t\t\t\tthis.battle.add('-immune', this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst prevStatus = this.status;\r\n\t\t\tconst prevStatusState = this.statusState;\r\n\t\t\tthis.battle.add('-end', this, this.status, '[silent]');\r\n\t\t\tif (status.id) {\r\n\t\t\t\tconst result: boolean = this.battle.runEvent('SetStatus', this, source, sourceEffect, status);\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\tthis.battle.debug('set status [' + status.id + '] interrupted');\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.status = status.id;\r\n\t\t\tthis.statusState = {id: status.id, target: this};\r\n\t\t\tif (source) this.statusState.source = source;\r\n\t\t\tif (status.duration) this.statusState.duration = status.duration;\r\n\t\t\tif (status.durationCallback) {\r\n\t\t\t\tthis.statusState.duration = status.durationCallback.call(this.battle, this, source, sourceEffect);\r\n\t\t\t}\r\n\r\n\t\t\tif (status.id && !this.battle.singleEvent('Start', status, this.statusState, this, source, sourceEffect)) {\r\n\t\t\t\tthis.battle.debug('status start [' + status.id + '] interrupted');\r\n\t\t\t\t// cancel the setstatus\r\n\t\t\t\tthis.status = prevStatus;\r\n\t\t\t\tthis.statusState = prevStatusState;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (status.id && !this.battle.runEvent('AfterSetStatus', this, source, sourceEffect, status)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.battle.add('-start', this, this.status, '[silent]');\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tsetStatusTwo(\r\n\t\t\tcurrentStatus: string | Condition,\r\n\t\t\tsource: Pokemon | null = null,\r\n\t\t\tsourceEffect: Effect | null = null,\r\n\t\t\tignoreImmunities = false,\r\n\t\t\tnewStatus: string | string[] | Condition | Condition[],\r\n\t\t) {\r\n\t\t\tif (!this.hp) return false;\r\n\t\t\tcurrentStatus = this.battle.dex.conditions.get(currentStatus);\r\n\t\t\tnewStatus = this.battle.dex.conditions.get(newStatus);\r\n\t\t\t//console.log('currentstatus: ' + currentStatus.id + '\\nnewStatus: ' + newStatus.id + '\\nthis.status: ' + this.status);\r\n\t\t\tif (this.battle.event) {\r\n\t\t\t\tif (!source) source = this.battle.event.source;\r\n\t\t\t\tif (!sourceEffect) sourceEffect = this.battle.effect;\r\n\t\t\t}\r\n\t\t\tif (!source) source = this;\r\n\r\n\t\t\tif (currentStatus.id === newStatus.id) {\r\n\t\t\t\tif (currentStatus.statusSlots === 1 && newStatus.statusSlots === 1) {\r\n\t\t\t\t\tnewStatus = this.battle.dex.conditions.get(newStatus.stackCondition);\r\n\t\t\t\t\tthis.battle.add('-end', this, this.status, '[silent]');\r\n\t\t\t\t\tdelete this.status;\r\n\t\t\t\t} else if ((sourceEffect as Move)?.status) {\r\n\t\t\t\t\tthis.battle.add('-fail', source);\r\n\t\t\t\t\tthis.battle.attrLastMove('[still]');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.status) {\r\n\t\t\t\tif (currentStatus.statusSlots === 1 && \r\n\t\t\t\t   newStatus.statusSlots === 1) {\r\n\t\t\t\t\tnewStatus = this.battle.dex.conditions.get(this.status + newStatus.id);\r\n\t\t\t\t\tthis.battle.add('-end', this, this.status, '[silent]');\r\n\t\t\t\t\tdelete this.status;\r\n\t\t\t\t} else if ((sourceEffect as Move)?.status) {\r\n\t\t\t\t\tthis.battle.add('-fail', source);\r\n\t\t\t\t\tthis.battle.attrLastMove('[still]');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!ignoreImmunities && newStatus.id &&\r\n\t\t\t\t\t!(source?.hasAbility('corrosion') && ['tox', 'psn'].includes(newStatus.id))) {\r\n\t\t\t\t// the game currently never ignores immunities\r\n\t\t\t\tif (!this.runStatusImmunity(newStatus.id === 'tox' ? 'psn' : newStatus.id)) {\r\n\t\t\t\t\tthis.battle.debug('immune to status');\r\n\t\t\t\t\tif ((sourceEffect as Move)?.newStatus) {\r\n\t\t\t\t\t\tthis.battle.add('-immune', this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst prevStatus = this.status;\r\n\t\t\tconst prevStatusState = this.statusState;\r\n\t\t\tthis.battle.add('-end', this, this.status, '[silent]');\r\n\t\t\tif (newStatus.id) {\r\n\t\t\t\tconst result: boolean = this.battle.runEvent('SetStatus', this, source, sourceEffect, newStatus);\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\tconsole.log('set status [' + newStatus.id + '] interrupted');\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.status = newStatus.id;\r\n\t\t\tthis.statusState = {id: newStatus.id, target: this};\r\n\t\t\tif (source) this.statusState.source = source;\r\n\t\t\tif (newStatus.duration) this.statusState.duration = newStatus.duration;\r\n\t\t\tif (newStatus.durationCallback) {\r\n\t\t\t\tthis.statusState.duration = newStatus.durationCallback.call(this.battle, this, source, sourceEffect);\r\n\t\t\t}\r\n\r\n\t\t\tif (newStatus.id && !this.battle.singleEvent('Start', newStatus, this.statusState, this, source, sourceEffect)) {\r\n\t\t\t\tthis.battle.debug('status start [' + newStatus.id + '] interrupted');\r\n\t\t\t\t// cancel the setstatus\r\n\t\t\t\tthis.status = prevStatus;\r\n\t\t\t\tthis.statusState = prevStatusState;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (newStatus.id && !this.battle.runEvent('AfterSetStatus', this, source, sourceEffect, newStatus)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.battle.add('-start', this, this.status, '[silent]');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tcureStatus(silent = false) {\r\n\t\t\tif (!this.hp || !this.status) return false;\r\n\t\t\tthis.battle.add('-curestatus', this, this.status, silent ? '[silent]' : '[msg]');\r\n\t\t\tif (this.status === 'stp' && this.removeVolatile('nightmare')) {\r\n\t\t\t\tthis.battle.add('-end', this, 'Nightmare', '[silent]');\r\n\t\t\t}\r\n\t\t\tthis.battle.add('-end', this, this.status, '[silent]');\r\n\t\t\tthis.setStatus('');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\trunImmunity(type: string, message?: string | boolean) {\r\n\t\t\tif (!type || type === '???') return true;\r\n\t\t\t// Nihilslave: i think tpdp types can be recognized by this?\r\n\t\t\tif (!this.battle.dex.types.isName(type)) {\r\n\t\t\t\tthrow new Error(\"Use runStatusImmunity for \" + type);\r\n\t\t\t}\r\n\t\t\tif (this.fainted) return false;\r\n\r\n\t\t\tconst negateImmunity = !this.battle.runEvent('NegateImmunity', this, type);\r\n\t\t\tconst notImmune = type === 'Earth' ?\r\n\t\t\t\tthis.isGrounded(negateImmunity) :\r\n\t\t\t\tnegateImmunity || this.battle.dex.getImmunity(type, this);\r\n\t\t\tif (notImmune) return true;\r\n\t\t\tif (!message) return false;\r\n\t\t\tif (notImmune === null) {\r\n\t\t\t\t// Nihilslave: here\r\n\t\t\t\tthis.battle.add('-immune', this, '[from] ability: Air Cushion');\r\n\t\t\t} else {\r\n\t\t\t\tthis.battle.add('-immune', this);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tgetActionSpeed() {\r\n\t\t\tlet speed = this.getStat('spe', false, false);\r\n\t\t\tif (this.battle.field.getPseudoWeather('trickroom') || this.battle.field.isTerrain('genbu')) {\r\n\t\t\t\tspeed = 10000 - speed;\r\n\t\t\t}\r\n\t\t\treturn this.battle.trunc(speed, 13);\r\n\t\t},\r\n\t\t// todo: for kohryu\r\n\t\tignoringAbility() {\r\n\t\t\tif (this.battle.gen >= 5 && !this.isActive) return true;\r\n\t\t\tif (this.getAbility().isPermanent) return false;\r\n\t\t\tif (this.volatiles['gastroacid']) return true;\r\n\t\r\n\t\t\t// Check if any active pokemon have the ability Neutralizing Gas\r\n\t\t\tif (this.hasItem('Ability Shield') || this.ability === ('neutralizinggas' as ID)) return false;\r\n\t\t\tfor (const pokemon of this.battle.getAllActive()) {\r\n\t\t\t\t// can't use hasAbility because it would lead to infinite recursion\r\n\t\t\t\tif (pokemon.ability === ('neutralizinggas' as ID) && !pokemon.volatiles['gastroacid'] &&\r\n\t\t\t\t\t!pokemon.transformed && !pokemon.abilityState.ending) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tignoringItem() {\r\n\t\t\treturn !!((this.battle.gen >= 5 && !this.isActive) ||\r\n\t\t\t(!this.getItem().ignoreKlutz && this.hasAbility(['klutz', 'wasteful'])) ||\r\n\t\t\t(this.battle.field.isTerrain('kohryu') && !this.hasAbility('centralexpanse')));\r\n\t\t},\r\n\t\tisGrounded(negateImmunity = false) {\r\n\t\t\tif ('perch' in this.volatiles) return true;\r\n\t\t\tif ('gravity' in this.battle.field.pseudoWeather) return true;\r\n\t\t\tif ('ingrain' in this.volatiles && this.battle.gen >= 4) return true;\r\n\t\t\tif ('smackdown' in this.volatiles) return true;\r\n\t\t\tconst item = (this.ignoringItem() ? '' : this.item);\r\n\t\t\tif (item === 'ironball') return true;\r\n\t\t\t// If a Fire/Flying type uses Burn Up and Roost, it becomes ???/Flying-type, but it's still grounded.\r\n\t\t\tif (!negateImmunity && this.hasType('Wind') && !(this.hasType('???') && 'perch' in this.volatiles)) return false;\r\n\t\t\tif (this.hasAbility('aircushion') && !this.battle.field.isWeather(\"duststorm\")) return false;\r\n\t\t\tif ('magnetrise' in this.volatiles) return false;\r\n\t\t\tif ('telekinesis' in this.volatiles) return false;\r\n\t\t\treturn item !== 'airballoon' && item !== 'floatingstone';\r\n\t\t},\t\t\r\n\t\t/*\r\n\t\tcalculateStat(statName: StatNameExceptHP, boost: number, modifier?: number) {\r\n\t\t\tstatName = toID(statName) as StatNameExceptHP;\r\n\t\t\t// @ts-ignore - type checking prevents 'hp' from being passed, but we're paranoid\r\n\t\t\tif (statName === 'hp') throw new Error(\"Please read `maxhp` directly\");\r\n\r\n\t\t\t// base stat\r\n\t\t\tlet stat = this.storedStats[statName];\r\n\r\n\t\t\t// Wonder Room swaps defenses before calculating anything else\r\n\t\t\tif (this.battle.field.isWeather('sunshower')) {\r\n\t\t\t\tif (statName === 'def') {\r\n\t\t\t\t\tstat = this.storedStats['spd'];\r\n\t\t\t\t} else if (statName === 'spd') {\r\n\t\t\t\t\tstat = this.storedStats['def'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// stat boosts\r\n\t\t\tlet boosts: SparseBoostsTable = {};\r\n\t\t\tconst boostName = statName as BoostName;\r\n\t\t\tboosts[boostName] = boost;\r\n\t\t\tboosts = this.battle.runEvent('ModifyBoost', this, null, null, boosts);\r\n\t\t\tboost = boosts[boostName]!;\r\n\t\t\tconst boostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\r\n\t\t\tif (boost > 6) boost = 6;\r\n\t\t\tif (boost < -6) boost = -6;\r\n\t\t\tif (boost >= 0) {\r\n\t\t\t\tstat = Math.floor(stat * boostTable[boost]);\r\n\t\t\t} else {\r\n\t\t\t\tstat = Math.floor(stat / boostTable[-boost]);\r\n\t\t\t}\r\n\r\n\t\t\t// stat modifier\r\n\t\t\treturn this.battle.modify(stat, (modifier || 1));\r\n\t\t},\r\n\t\tgetStat(statName: StatNameExceptHP, unboosted?: boolean, unmodified?: boolean) {\r\n\t\t\tstatName = toID(statName) as StatNameExceptHP;\r\n\t\t\t// @ts-ignore - type checking prevents 'hp' from being passed, but we're paranoid\r\n\t\t\tif (statName === 'hp') throw new Error(\"Please read `maxhp` directly\");\r\n\r\n\t\t\t// base stat\r\n\t\t\tlet stat = this.storedStats[statName];\r\n\r\n\t\t\t// Download ignores Wonder Room's effect, but this results in\r\n\t\t\t// stat stages being calculated on the opposite defensive stat\r\n\t\t\tif (this.battle.field.isWeather('sunshower')) {\r\n\t\t\t\tif (statName === 'def') {\r\n\t\t\t\t\tstatName = 'spd';\r\n\t\t\t\t} else if (statName === 'spd') {\r\n\t\t\t\t\tstatName = 'def';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// stat boosts\r\n\t\t\tif (!unboosted) {\r\n\t\t\t\tconst boosts = this.battle.runEvent('ModifyBoost', this, null, null, {...this.boosts});\r\n\t\t\t\tlet boost = boosts[statName];\r\n\t\t\t\tconst boostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\r\n\t\t\t\tif (boost > 6) boost = 6;\r\n\t\t\t\tif (boost < -6) boost = -6;\r\n\t\t\t\tif (boost >= 0) {\r\n\t\t\t\t\tstat = Math.floor(stat * boostTable[boost]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstat = Math.floor(stat / boostTable[-boost]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// stat modifier effects\r\n\t\t\tif (!unmodified) {\r\n\t\t\t\tconst statTable: {[s in StatNameExceptHP]?: string} = {atk: 'Atk', def: 'Def', spa: 'SpA', spd: 'SpD', spe: 'Spe'};\r\n\t\t\t\tstat = this.battle.runEvent('Modify' + statTable[statName], this, null, null, stat);\r\n\t\t\t}\r\n\r\n\t\t\tif (statName === 'spe' && stat > 10000) stat = 10000;\r\n\t\t\treturn stat;\r\n\t\t},*/\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
