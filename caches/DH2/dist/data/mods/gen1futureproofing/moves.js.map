{
  "version": 3,
  "sources": ["../../../../data/mods/gen1futureproofing/moves.ts"],
  "sourcesContent": ["/**\r\n * A lot of Gen 1 moves have to be updated due to different mechanics.\r\n * Some moves have had major changes, such as Bite's typing.\r\n */\r\n\r\nexport const Moves: {[k: string]: ModdedMoveData} = {\r\n\tsnarl: {\r\n\t\tnum: 555,\r\n\t\tshortDesc: \"100% chance to lower the target's Special by 1.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Snarl\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Rock\",\r\n\t\tgen: 1,\r\n\t},\r\n\tsteelwing: {\r\n\t\tnum: 211,\r\n\t\tshortDesc: \"20% chance to lower the target's Defense by 1 stage.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Steel Wing\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tgen: 1,\r\n\t},\r\n\tstrangesteam: {\r\n\t\tnum: 790,\r\n\t\tshortDesc: \"Deals damage using the user's Special stat.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tdefensiveCategory: \"Physical\",\r\n\t\tname: \"Strange Steam\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tgen: 1,\r\n\t},\r\n\tfaketears: {\r\n\t\tnum: 313,\r\n\t\tshortDesc: \"Lowers the target's Special by 2 stages.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fake Tears\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1},\r\n\t\tboosts: {\r\n\t\t\tspa: -2,\r\n\t\t\tspd: -2,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cute\",\r\n\t\tgen: 1,\r\n\t},\r\n\tgearup: {\r\n\t\tnum: 674,\r\n\t\tshortDesc: \"Boosts the user's Attack and Special by 1 stage.\",\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Gear Up\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tspa: 1,\r\n\t\t\tspd: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tgen: 1,\r\n\t},\r\n\tnaturesmadness: {\r\n\t\tnum: 717,\r\n\t\tshortDesc: \"Damage = 1/2 target's current HP.\",\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 1,\r\n\t\tdamageCallback(pokemon, target) {\r\n\t\t\treturn this.clampIntRange(Math.floor(target.getUndynamaxedHP() / 2), 1);\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Nature's Madness\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tgen: 1,\r\n\t},\r\n\ttaunt: {\r\n\t\tnum: 269,\r\n\t\tshortDesc: \"Target can't use status moves its next 3 turns.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Taunt\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1},\r\n\t\tvolatileStatus: 'taunt',\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (target.activeTurns && !this.queue.willMove(target)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 12,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\tif (move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 5,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && !move.isMax && move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\tthis.add('cant', attacker, 'move: Taunt', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tgen: 1,\r\n\t},\r\n\theavyslam: {\r\n\t\tnum: 484,\r\n\t\tshortDesc: \"Uses user's Def stat as Atk in damage calculation.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Heavy Slam\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tuseSourceDefensiveAsOffensive: true,\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tgen: 1,\r\n\t},\r\n\tfleurcannon: {\r\n\t\tnum: 705,\r\n\t\tshortDesc: \"Lowers the user's Special by 2 stages after use.\",\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Fleur Cannon\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -2,\r\n\t\t\t\tspd: -2,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tgen: 1,\r\n\t},\r\n\tlashout: {\r\n\t\tnum: 808,\r\n\t\tshortDesc: \"10% chance to lower the foe's Speed by 1 stage.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Lash Out\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tgen: 1,\r\n\t},\r\n\tsunsteelstrike: {\r\n\t\tnum: 713,\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sunsteel Strike\",\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tflags: {},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tgen: 1,\r\n\t},\r\n\tcraftyshield: {\r\n\t\tnum: 578,\r\n\t\tshortDesc: \"Bounces back certain non-damaging moves.\",\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Crafty Shield\",\r\n\t\tpp: 15,\r\n\t\tpriority: 1,\r\n\t\tflags: {},\r\n\t\tvolatileStatus: 'craftyshield',\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tthis.add('-singleturn', target, 'move: Crafty Shield');\r\n\t\t\t\tif (effect?.effectType === 'Move') {\r\n\t\t\t\t\tthis.effectState.pranksterBoosted = effect.pranksterBoosted;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 2,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\t\tnewMove.hasBounced = true;\r\n\t\t\t\tnewMove.pranksterBoosted = this.effectState.pranksterBoosted;\r\n\t\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\t\tif (target.side === source.side || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\t\tnewMove.hasBounced = true;\r\n\t\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tgen: 1,\r\n\t},\r\n\tfierywrath: {\r\n\t\tnum: 822,\r\n\t\tshortDesc: \"Burns the foe.\",\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fiery Wrath\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tstatus: 'brn',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tgen: 1,\r\n\t},\r\n\tsmartstrike: {\r\n\t\tnum: 684,\r\n\t\tshortDesc: \"High critical hit ratio.\",\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Smart Strike\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tgen: 1,\r\n\t},\r\n\tfairylock: {\r\n\t\tnum: 587,\r\n\t\tshortDesc: \"Prevents the target from moving for 2-5 turns.\",\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 15,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Fairy Lock\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t// Removes must recharge volatile even if it misses\r\n\t\t\ttarget.removeVolatile('mustrecharge');\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tgen: 1,\r\n\t},\r\n\r\n\t// don't touch\r\n\tacid: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tamnesia: {\r\n\t\tinherit: true,\r\n\t\tboosts: {\r\n\t\t\tspd: 2,\r\n\t\t\tspa: 2,\r\n\t\t},\r\n\t},\r\n\taurorabeam: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbide: {\r\n\t\tinherit: true,\r\n\t\tpriority: 0,\r\n\t\taccuracy: true,\r\n\t\tignoreEvasion: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\treturn this.random(3, 4);\r\n\t\t\t},\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.totalDamage = 0;\r\n\t\t\t\tthis.effectState.lastDamage = 0;\r\n\t\t\t\tthis.add('-start', pokemon, 'Bide');\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (source && source !== target && move.category !== 'Physical' && move.category !== 'Special') {\r\n\t\t\t\t\tconst damage = this.effectState.totalDamage;\r\n\t\t\t\t\tthis.effectState.totalDamage += damage;\r\n\t\t\t\t\tthis.effectState.lastDamage = damage;\r\n\t\t\t\t\tthis.effectState.sourcePosition = source.position;\r\n\t\t\t\t\tthis.effectState.sourceSide = source.side;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, move) {\r\n\t\t\t\tif (!source || source.side === target.side) return;\r\n\t\t\t\tif (!move || move.effectType !== 'Move') return;\r\n\t\t\t\tif (!damage && this.effectState.lastDamage > 0) {\r\n\t\t\t\t\tdamage = this.effectState.totalDamage;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.totalDamage += damage;\r\n\t\t\t\tthis.effectState.lastDamage = damage;\r\n\t\t\t\tthis.effectState.sourcePosition = source.position;\r\n\t\t\t\tthis.effectState.sourceSide = source.side;\r\n\t\t\t},\r\n\t\t\tonAfterSetStatus(status, pokemon) {\r\n\t\t\t\t// Sleep, freeze, and partial trap will just pause duration.\r\n\t\t\t\tif (pokemon.volatiles['flinch']) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t} else if (pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswitch (status.id) {\r\n\t\t\t\t\tcase 'slp':\r\n\t\t\t\t\tcase 'frz':\r\n\t\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMove(pokemon) {\r\n\t\t\t\tif (this.effectState.duration === 1) {\r\n\t\t\t\t\tif (!this.effectState.totalDamage) {\r\n\t\t\t\t\t\tthis.add('-fail', pokemon);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Bide');\r\n\t\t\t\t\tconst target = this.effectState.sourceSide.active[this.effectState.sourcePosition];\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tthis.moveHit(target, pokemon, 'bide', {damage: this.effectState.totalDamage * 2});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-activate', pokemon, 'Bide');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tif (!pokemon.hasMove('bide')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id !== 'bide') {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttype: \"???\", // Will look as Normal but it's STAB-less\r\n\t},\r\n\tbind: {\r\n\t\tinherit: true,\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbite: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tblizzard: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbubble: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tbubblebeam: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tclamp: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\taccuracy: 75,\r\n\t\tpp: 10,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tconstrict: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tconversion: {\r\n\t\tinherit: true,\r\n\t\ttarget: \"normal\",\r\n\t\tonHit(target, source) {\r\n\t\t\tsource.setType(target.getTypes(true));\r\n\t\t\tthis.add('-start', source, 'typechange', source.types.join('/'), '[from] move: Conversion', '[of] ' + target);\r\n\t\t},\r\n\t},\r\n\tcounter: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Deals damage to the opposing Pokemon equal to twice the damage dealt by the last move used in the battle. This move ignores type immunity. Fails if the user moves first, or if the opposing side's last move was Counter, had 0 power, or was not Normal or Fighting type. Fails if the last move used by either side did 0 damage and was not Confuse Ray, Conversion, Focus Energy, Glare, Haze, Leech Seed, Light Screen, Mimic, Mist, Poison Gas, Poison Powder, Recover, Reflect, Rest, Soft-Boiled, Splash, Stun Spore, Substitute, Supersonic, Teleport, Thunder Wave, Toxic, or Transform.\",\r\n\t\tignoreImmunity: true,\r\n\t\twillCrit: false,\r\n\t\tdamageCallback(pokemon, target) {\r\n\t\t\t// Counter mechanics on gen 1 might be hard to understand.\r\n\t\t\t// It will fail if the last move selected by the opponent has base power 0 or is not Normal or Fighting Type.\r\n\t\t\t// If both are true, counter will deal twice the last damage dealt in battle, no matter what was the move.\r\n\t\t\t// That means that, if opponent switches, counter will use last counter damage * 2.\r\n\t\t\tconst lastUsedMove = target.side.lastMove && this.dex.moves.get(target.side.lastMove.id);\r\n\t\t\tif (\r\n\t\t\t\tlastUsedMove && lastUsedMove.basePower > 0 && ['Normal', 'Fighting'].includes(lastUsedMove.type) &&\r\n\t\t\t\tthis.lastDamage > 0 && !this.queue.willMove(target)\r\n\t\t\t) {\r\n\t\t\t\treturn 2 * this.lastDamage;\r\n\t\t\t}\r\n\t\t\tthis.debug(\"Gen 1 Counter failed due to conditions not met\");\r\n\t\t\tthis.add('-fail', pokemon);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tcrabhammer: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\tcritRatio: 2,\r\n\t},\r\n\tdig: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 100,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonLockMove: 'dig',\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (move.id === 'swift') return true;\r\n\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit underground!');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, move) {\r\n\t\t\t\tif (!move || move.effectType !== 'Move') return;\r\n\t\t\t\tif (!source) return;\r\n\t\t\t\tif (move.id === 'earthquake') {\r\n\t\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit underground!');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdisable: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"For 0 to 7 turns, one of the target's known moves that has at least 1 PP remaining becomes disabled, at random. Fails if one of the target's moves is already disabled, or if none of the target's moves have PP remaining. If any Pokemon uses Haze, this effect ends. Whether or not this move was successful, it counts as a hit for the purposes of the opponent's use of Rage.\",\r\n\t\tshortDesc: \"For 0-7 turns, disables one of the target's moves.\",\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tconst duration = this.random(1, 7);\r\n\t\t\t\treturn duration;\r\n\t\t\t},\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!this.queue.willMove(pokemon)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t\tconst moves = pokemon.moves;\r\n\t\t\t\tconst move = this.dex.moves.get(this.sample(moves));\r\n\t\t\t\tthis.add('-start', pokemon, 'Disable', move.name);\r\n\t\t\t\tthis.effectState.move = move.id;\r\n\t\t\t\treturn;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 14,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Disable');\r\n\t\t\t},\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (move.id === this.effectState.move) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdizzypunch: {\r\n\t\tinherit: true,\r\n\t\tsecondary: null,\r\n\t},\r\n\tdoubleedge: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 100,\r\n\t},\r\n\tdragonrage: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\texplosion: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 170,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tfireblast: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t},\r\n\tfirespin: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 15,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\t// FIXME: onBeforeMove(pokemon, target) {target.removeVolatile('mustrecharge')}\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfly: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonLockMove: 'fly',\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (move.id === 'swift') return true;\r\n\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit while flying!');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonDamage(damage, target, source, move) {\r\n\t\t\t\tif (!move || move.effectType !== 'Move') return;\r\n\t\t\t\tif (!source || source.isAlly(target)) return;\r\n\t\t\t\tif (move.id === 'gust' || move.id === 'thunder') {\r\n\t\t\t\t\tthis.add('-message', 'The foe ' + target.name + ' can\\'t be hit while flying!');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tfocusenergy: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'move: Focus Energy');\r\n\t\t\t},\r\n\t\t\t// This does nothing as it's dealt with on critical hit calculation.\r\n\t\t\tonModifyMove() {},\r\n\t\t},\r\n\t},\r\n\tglare: {\r\n\t\tinherit: true,\r\n\t\tignoreImmunity: true,\r\n\t},\r\n\tgrowth: {\r\n\t\tinherit: true,\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t\tspd: 1,\r\n\t\t},\r\n\t},\r\n\tgust: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\thaze: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source) {\r\n\t\t\tthis.add('-activate', target, 'move: Haze');\r\n\t\t\tthis.add('-clearallboost', '[silent]');\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tpokemon.clearBoosts();\r\n\r\n\t\t\t\tif (pokemon !== source) {\r\n\t\t\t\t\tpokemon.cureStatus(true);\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.status === 'tox') {\r\n\t\t\t\t\tpokemon.setStatus('psn');\r\n\t\t\t\t}\r\n\t\t\t\tfor (const id of Object.keys(pokemon.volatiles)) {\r\n\t\t\t\t\tif (id === 'residualdmg') {\r\n\t\t\t\t\t\tpokemon.volatiles[id].counter = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpokemon.removeVolatile(id);\r\n\t\t\t\t\t\tthis.add('-end', pokemon, id, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t},\r\n\thighjumpkick: {\r\n\t\tinherit: true,\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tif (!target.types.includes('Ghost')) {\r\n\t\t\t\tthis.directDamage(1, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\thyperbeam: {\r\n\t\tnum: 63,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 150,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Hyper Beam\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {recharge: 1, protect: 1, mirror: 1},\r\n\t\tself: null,\r\n\t\tonHit(target, source) {\r\n\t\t\tif (target.hp) {\r\n\t\t\t\tsource.addVolatile('mustrecharge');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tjumpkick: {\r\n\t\tinherit: true,\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tif (!target.types.includes('Ghost')) {\r\n\t\t\t\tthis.directDamage(1, source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tkaratechop: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tleechseed: {\r\n\t\tinherit: true,\r\n\t\tonHit() {},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'move: Leech Seed');\r\n\t\t\t},\r\n\t\t\tonAfterMoveSelfPriority: 1,\r\n\t\t\tonAfterMoveSelf(pokemon) {\r\n\t\t\t\tconst leecher = this.getAtSlot(pokemon.volatiles['leechseed'].sourceSlot);\r\n\t\t\t\tif (!leecher || leecher.fainted || leecher.hp <= 0) {\r\n\t\t\t\t\tthis.debug('Nothing to leech into');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// We check if leeched Pok\u00E9mon has Toxic to increase leeched damage.\r\n\t\t\t\tlet toxicCounter = 1;\r\n\t\t\t\tconst residualdmg = pokemon.volatiles['residualdmg'];\r\n\t\t\t\tif (residualdmg) {\r\n\t\t\t\t\tresidualdmg.counter++;\r\n\t\t\t\t\ttoxicCounter = residualdmg.counter;\r\n\t\t\t\t}\r\n\t\t\t\tconst toLeech = this.clampIntRange(Math.floor(pokemon.baseMaxhp / 16), 1) * toxicCounter;\r\n\t\t\t\tconst damage = this.damage(toLeech, pokemon, leecher);\r\n\t\t\t\tif (residualdmg) this.hint(\"In Gen 1, Leech Seed's damage is affected by Toxic's counter.\", true);\r\n\t\t\t\tif (!damage || toLeech > damage) {\r\n\t\t\t\t\tthis.hint(\"In Gen 1, Leech Seed recovery is not limited by the remaining HP of the seeded Pokemon.\", true);\r\n\t\t\t\t}\r\n\t\t\t\tthis.heal(toLeech, leecher, pokemon);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tlightscreen: {\r\n\t\tnum: 113,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Light Screen\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tvolatileStatus: 'lightscreen',\r\n\t\tonTryHit(pokemon) {\r\n\t\t\tif (pokemon.volatiles['lightscreen']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Light Screen');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tmetronome: {\r\n\t\tinherit: true,\r\n\t\tnoMetronome: [\"Metronome\", \"Struggle\"],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tmimic: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"While the user remains active, this move is replaced by a random move known by the target, even if the user already knows that move. The copied move keeps the remaining PP for this move, regardless of the copied move's maximum PP. Whenever one PP is used for a copied move, one PP is used for this move.\",\r\n\t\tshortDesc: \"Random move known by the target replaces this.\",\r\n\t\tonHit(target, source) {\r\n\t\t\tconst moveslot = source.moves.indexOf('mimic');\r\n\t\t\tif (moveslot < 0) return false;\r\n\t\t\tconst moves = target.moves;\r\n\t\t\tconst moveid = this.sample(moves);\r\n\t\t\tif (!moveid) return false;\r\n\t\t\tconst move = this.dex.moves.get(moveid);\r\n\t\t\tsource.moveSlots[moveslot] = {\r\n\t\t\t\tmove: move.name,\r\n\t\t\t\tid: move.id,\r\n\t\t\t\tpp: source.moveSlots[moveslot].pp,\r\n\t\t\t\tmaxpp: move.pp * 8 / 5,\r\n\t\t\t\ttarget: move.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tthis.add('-start', source, 'Mimic', move.name);\r\n\t\t},\r\n\t},\r\n\tmirrormove: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The user uses the last move used by the target. Fails if the target has not made a move, or if the last move used was Mirror Move.\",\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst foe = pokemon.side.foe.active[0];\r\n\t\t\tif (!foe || !foe.lastMove || foe.lastMove.id === 'mirrormove') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.useMove(foe.lastMove.id, pokemon);\r\n\t\t},\r\n\t},\r\n\tmist: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Mist');\r\n\t\t\t},\r\n\t\t\tonBoost(boost, target, source, effect) {\r\n\t\t\t\tif (effect.effectType === 'Move' && effect.category !== 'Status') return;\r\n\t\t\t\tif (source && target !== source) {\r\n\t\t\t\t\tlet showMsg = false;\r\n\t\t\t\t\tlet i: BoostID;\r\n\t\t\t\t\tfor (i in boost) {\r\n\t\t\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (showMsg) this.add('-activate', target, 'move: Mist');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tnightshade: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tignoreImmunity: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tpoisonsting: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t},\r\n\tpsychic: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 33,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tpsywave: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 1,\r\n\t\tdamageCallback(pokemon) {\r\n\t\t\tconst psywaveDamage = (this.random(0, this.trunc(1.5 * pokemon.level)));\r\n\t\t\tif (psywaveDamage <= 0) {\r\n\t\t\t\tthis.hint(\"Desync Clause Mod activated!\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn psywaveDamage;\r\n\t\t},\r\n\t},\r\n\trage: {\r\n\t\tinherit: true,\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'rage',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\t// Rage lock\r\n\t\t\tduration: 255,\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tthis.effectState.move = 'rage';\r\n\t\t\t},\r\n\t\t\tonLockMove: 'rage',\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (target.boosts.atk < 6 && move.id === 'disable') {\r\n\t\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.boosts.atk < 6 && move.category !== 'Status') {\r\n\t\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trazorleaf: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\tcritRatio: 2,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\trazorwind: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tcritRatio: 1,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\trecover: {\r\n\t\tinherit: true,\r\n\t\theal: null,\r\n\t\tonHit(target) {\r\n\t\t\tif (target.hp === target.maxhp) return false;\r\n\t\t\t// Fail when health is 255 or 511 less than max\r\n\t\t\tif (target.hp === (target.maxhp - 255) || target.hp === (target.maxhp - 511) || target.hp === target.maxhp) {\r\n\t\t\t\tthis.hint(\"In Gen 1, recovery moves fail if (user's maximum HP - user's current HP + 1) is divisible by 256.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), target, target);\r\n\t\t},\r\n\t},\r\n\treflect: {\r\n\t\tnum: 115,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Reflect\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tvolatileStatus: 'reflect',\r\n\t\tonTryHit(pokemon) {\r\n\t\t\tif (pokemon.volatiles['reflect']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Reflect');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\trest: {\r\n\t\tinherit: true,\r\n\t\tonHit(target) {\r\n\t\t\t// Fails if the difference between\r\n\t\t\t// max HP and current HP is 0\r\n\t\t\tif (target.hp >= target.maxhp) return false;\r\n\t\t\tif (!target.setStatus('slp')) return false;\r\n\t\t\ttarget.statusData.time = 2;\r\n\t\t\ttarget.statusData.startTime = 2;\r\n\t\t\tthis.heal(target.maxhp); // Aeshetic only as the healing happens after you fall asleep in-game\r\n\t\t\tthis.add('-status', target, 'slp', '[from] move: Rest');\r\n\t\t},\r\n\t},\r\n\troar: {\r\n\t\tinherit: true,\r\n\t\tforceSwitch: false,\r\n\t\tonTryHit() {},\r\n\t\tpriority: 0,\r\n\t},\r\n\trockslide: {\r\n\t\tinherit: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\trockthrow: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 65,\r\n\t},\r\n\tsandattack: {\r\n\t\tinherit: true,\r\n\t\tignoreImmunity: true,\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tseismictoss: {\r\n\t\tinherit: true,\r\n\t\tignoreImmunity: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tselfdestruct: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 130,\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tskullbash: {\r\n\t\tinherit: true,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tslash: {\r\n\t\tinherit: true,\r\n\t\tcritRatio: 2,\r\n\t},\r\n\tsludge: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 40,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t},\r\n\tsoftboiled: {\r\n\t\tinherit: true,\r\n\t\theal: null,\r\n\t\tonHit(target) {\r\n\t\t\tif (target.hp === target.maxhp) return false;\r\n\t\t\t// Fail when health is 255 or 511 less than max\r\n\t\t\tif (target.hp === (target.maxhp - 255) || target.hp === (target.maxhp - 511) || target.hp === target.maxhp) {\r\n\t\t\t\tthis.hint(\"In Gen 1, recovery moves fail if (user's maximum HP - user's current HP + 1) is divisible by 256.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.heal(Math.floor(target.maxhp / 2), target, target);\r\n\t\t},\r\n\t},\r\n\tstruggle: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t\trecoil: [1, 2],\r\n\t\tonModifyMove() {},\r\n\t},\r\n\tsubstitute: {\r\n\t\tnum: 164,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user takes 1/4 of its maximum HP, rounded down, and puts it into a substitute to take its place in battle. The substitute is removed once enough damage is inflicted on it, or if the user switches out or faints. Until the substitute is broken, it receives damage from all attacks made by other Pokemon and shields the user from poison status and some stat stage changes caused by other Pokemon. The user still takes normal damage from status effects while behind its substitute. If the substitute breaks during a multi-hit attack, the user will take damage from any remaining hits. This move fails if the user already has a substitute.\",\r\n\t\tshortDesc: \"User takes 1/4 its max HP to put in a Substitute.\",\r\n\t\tid: \"substitute\",\r\n\t\tisViable: true,\r\n\t\tname: \"Substitute\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tvolatileStatus: 'Substitute',\r\n\t\tonTryHit(target) {\r\n\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\tthis.add('-fail', target, 'move: Substitute');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// We only prevent when hp is less than one quarter.\r\n\t\t\t// If you use substitute at exactly one quarter, you faint.\r\n\t\t\tif (target.hp === target.maxhp / 4) target.faint();\r\n\t\t\tif (target.hp < target.maxhp / 4) {\r\n\t\t\t\tthis.add('-fail', target, 'move: Substitute', '[weak]');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\t// If max HP is 3 or less substitute makes no damage\r\n\t\t\tif (target.maxhp > 3) {\r\n\t\t\t\tthis.directDamage(target.maxhp / 4, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'Substitute');\r\n\t\t\t\tthis.effectState.hp = Math.floor(target.maxhp / 4) + 1;\r\n\t\t\t\tdelete target.volatiles['partiallytrapped'];\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: -1,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (move.category === 'Status') {\r\n\t\t\t\t\t// In gen 1 it only blocks:\r\n\t\t\t\t\t// poison, confusion, secondary effect confusion, stat reducing moves and Leech Seed.\r\n\t\t\t\t\tconst SubBlocked = ['lockon', 'meanlook', 'mindreader', 'nightmare'];\r\n\t\t\t\t\tif (move.status === 'psn' || move.status === 'tox' || (move.boosts && target !== source) || move.volatileStatus === 'confusion' || SubBlocked.includes(move.id)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.volatileStatus && target === source) return;\r\n\t\t\t\tlet damage = this.getDamage(source, target, move);\r\n\t\t\t\tif (!damage) return null;\r\n\t\t\t\tdamage = this.runEvent('SubDamage', target, source, move, damage);\r\n\t\t\t\tif (!damage) return damage;\r\n\t\t\t\ttarget.volatiles['substitute'].hp -= damage;\r\n\t\t\t\tsource.lastDamage = damage;\r\n\t\t\t\tif (target.volatiles['substitute'].hp <= 0) {\r\n\t\t\t\t\ttarget.removeVolatile('substitute');\r\n\t\t\t\t\ttarget.subFainted = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'Substitute', '[damage]');\r\n\t\t\t\t}\r\n\t\t\t\t// Drain/recoil does not happen if the substitute breaks\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tif (move.recoil) {\r\n\t\t\t\t\t\tthis.damage(Math.round(damage * move.recoil[0] / move.recoil[1]), source, target, 'recoil');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.drain) {\r\n\t\t\t\t\t\tthis.heal(Math.ceil(damage * move.drain[0] / move.drain[1]), source, target, 'drain');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.runEvent('AfterSubDamage', target, source, move, damage);\r\n\t\t\t\t// Add here counter damage\r\n\t\t\t\tif (!target.lastAttackedBy) target.lastAttackedBy = {pokemon: source, thisTurn: true};\r\n\t\t\t\ttarget.lastAttackedBy.move = move.id;\r\n\t\t\t\ttarget.lastAttackedBy.damage = damage;\r\n\t\t\t\treturn 0;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Substitute');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: false,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tsuperfang: {\r\n\t\tinherit: true,\r\n\t\tignoreImmunity: true,\r\n\t\tbasePower: 1,\r\n\t},\r\n\tthunder: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t},\r\n\tthunderwave: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tonTryHit(target) {\r\n\t\t\tif (target.hasType('Ground')) {\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttriattack: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tonHit() {},\r\n\t\tsecondary: null,\r\n\t},\r\n\twhirlwind: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tforceSwitch: false,\r\n\t\tonTryHit() {},\r\n\t\tpriority: 0,\r\n\t},\r\n\twingattack: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 35,\r\n\t},\r\n\twrap: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tignoreImmunity: true,\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'partialtrappinglock',\r\n\t\t},\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t// Removes must recharge volatile even if it misses\r\n\t\t\ttarget.removeVolatile('mustrecharge');\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\t/**\r\n\t\t\t * The duration of the partially trapped must be always renewed to 2\r\n\t\t\t * so target doesn't move on trapper switch out as happens in gen 1.\r\n\t\t\t * However, this won't happen if there's no switch and the trapper is\r\n\t\t\t * about to end its partial trapping.\r\n\t\t\t **/\r\n\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\tif (source.volatiles['partialtrappinglock'] && source.volatiles['partialtrappinglock'].duration > 1) {\r\n\t\t\t\t\ttarget.volatiles['partiallytrapped'].duration = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
