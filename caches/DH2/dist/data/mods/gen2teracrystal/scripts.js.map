{
  "version": 3,
  "sources": ["../../../../data/mods/gen2teracrystal/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\r\n\tinherit: 'gen2',\r\n\tgen: 2,\r\n\tinit() {\r\n\t\tthis.modData('Learnsets', 'abra').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'aerodactyl').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'alakazam').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'arbok').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'arcanine').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'articuno').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'beedrill').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'bellsprout').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'blastoise').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'bulbasaur').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'butterfree').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'chansey').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'charizard').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'charmander').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'charmeleon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'clefable').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'clefairy').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'cloyster').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'cubone').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dewgong').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'diglett').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dodrio').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'doduo').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dragonair').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dragonite').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dratini').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'drowzee').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dugtrio').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'eevee').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ekans').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'electabuzz').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'electrode').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'exeggcute').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'exeggutor').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'farfetchd').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'fearow').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'flareon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'gastly').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'gengar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'geodude').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'gloom').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'golbat').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'goldeen').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'golduck').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'golem').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'graveler').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'grimer').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'growlithe').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'gyarados').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'haunter').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hitmonchan').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hitmonlee').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'horsea').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hypno').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ivysaur').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'jigglypuff').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'jolteon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'jynx').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'kabuto').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'kabutops').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'kadabra').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'kangaskhan').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'kingler').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'koffing').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'krabby').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'lapras').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'lickitung').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'machamp').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'machoke').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'machop').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'magmar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'magnemite').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'magneton').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'mankey').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'marowak').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'meowth').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'mew').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'mewtwo').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'moltres').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'mrmime').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'muk').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'nidoking').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'nidoqueen').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'nidoranf').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'nidoranm').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'nidorina').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'nidorino').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ninetales').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'oddish').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'omanyte').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'omastar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'onix').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'paras').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'parasect').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'persian').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pidgeot').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pidgeotto').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pidgey').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pikachu').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pinsir').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'poliwag').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'poliwhirl').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'poliwrath').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ponyta').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'porygon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'primeape').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'psyduck').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'raichu').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'rapidash').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'raticate').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'rattata').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'rhydon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'rhyhorn').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sandshrew').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sandslash').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'scyther').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'seadra').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'seaking').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'seel').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'shellder').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'slowbro').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'slowpoke').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'snorlax').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'spearow').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'squirtle').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'starmie').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'staryu').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'tangela').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'tauros').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'tentacool').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'tentacruel').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'vaporeon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'venomoth').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'venonat').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'venusaur').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'victreebel').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'vileplume').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'voltorb').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'vulpix').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'wartortle').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'weepinbell').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'weezing').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'wigglytuff').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'zapdos').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'zubat').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'aipom').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ampharos').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ariados').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'azumarill').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'bayleef').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'bellossom').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'blissey').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'celebi').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'chikorita').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'chinchou').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'cleffa').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'corsola').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'crobat').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'croconaw').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'cyndaquil').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'delibird').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'donphan').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'dunsparce').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'elekid').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'entei').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'espeon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'feraligatr').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'flaaffy').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'forretress').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'furret').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'girafarig').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'gligar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'granbull').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'heracross').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hitmontop').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hooh').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hoothoot').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'hoppip').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'houndoom').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'houndour').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'igglybuff').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'jumpluff').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'kingdra').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'lanturn').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'larvitar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ledian').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ledyba').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'lugia').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'magby').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'magcargo').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'mantine').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'mareep').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'marill').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'meganium').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'miltank').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'misdreavus').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'murkrow').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'natu').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'noctowl').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'octillery').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'phanpy').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pichu').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'piloswine').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pineco').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'politoed').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'porygon2').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'pupitar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'quagsire').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'quilava').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'qwilfish').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'raikou').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'remoraid').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'scizor').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sentret').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'shuckle').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'skarmory').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'skiploom').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'slowking').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'slugma').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'smeargle').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'smoochum').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sneasel').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'snubbull').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'spinarak').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'stantler').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'steelix').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sudowoodo').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'suicune').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sunflora').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'sunkern').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'swinub').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'teddiursa').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'togepi').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'togetic').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'totodile').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'typhlosion').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'tyranitar').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'tyrogue').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'umbreon').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'ursaring').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'wobbuffet').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'wooper').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'xatu').learnset.terablast = [\"2M\"];\r\n\t\tthis.modData('Learnsets', 'yanma').learnset.terablast = [\"2M\"];\r\n\t},\r\n\tside: {\r\n\t\tinherit: true,\r\n\t\tchooseMove(\r\n\t\t\tmoveText?: string | number,\r\n\t\t\ttargetLoc = 0,\r\n\t\t\tevent: 'mega' | 'zmove' | 'ultra' | 'dynamax' | 'terastallize' | '' = ''\r\n\t\t) {\r\n\t\t\tif (this.requestState !== 'move') {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You need a ${this.requestState} response`);\r\n\t\t\t}\r\n\t\t\tconst index = this.getChoiceIndex();\r\n\t\t\tif (index >= this.active.length) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You sent more choices than unfainted Pok\u00E9mon.`);\r\n\t\t\t}\r\n\t\t\tconst autoChoose = !moveText;\r\n\t\t\tconst pokemon: Pokemon = this.active[index];\r\n\t\r\n\t\t\t// Parse moveText (name or index)\r\n\t\t\t// If the move is not found, the action is invalid without requiring further inspection.\r\n\t\r\n\t\t\tconst request = pokemon.getMoveRequestData();\r\n\t\t\tlet moveid = '';\r\n\t\t\tlet targetType = '';\r\n\t\t\tif (autoChoose) moveText = 1;\r\n\t\t\tif (typeof moveText === 'number' || (moveText && /^[0-9]+$/.test(moveText))) {\r\n\t\t\t\t// Parse a one-based move index.\r\n\t\t\t\tconst moveIndex = Number(moveText) - 1;\r\n\t\t\t\tif (moveIndex < 0 || moveIndex >= request.moves.length || !request.moves[moveIndex]) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: Your ${pokemon.name} doesn't have a move ${moveIndex + 1}`);\r\n\t\t\t\t}\r\n\t\t\t\tmoveid = request.moves[moveIndex].id;\r\n\t\t\t\ttargetType = request.moves[moveIndex].target!;\r\n\t\t\t} else {\r\n\t\t\t\t// Parse a move ID.\r\n\t\t\t\t// Move names are also allowed, but may cause ambiguity (see client issue #167).\r\n\t\t\t\tmoveid = toID(moveText);\r\n\t\t\t\tif (moveid.startsWith('hiddenpower')) {\r\n\t\t\t\t\tmoveid = 'hiddenpower';\r\n\t\t\t\t}\r\n\t\t\t\tfor (const move of request.moves) {\r\n\t\t\t\t\tif (move.id !== moveid) continue;\r\n\t\t\t\t\ttargetType = move.target || 'normal';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (!targetType && ['', 'dynamax'].includes(event) && request.maxMoves) {\r\n\t\t\t\t\tfor (const [i, moveRequest] of request.maxMoves.maxMoves.entries()) {\r\n\t\t\t\t\t\tif (moveid === moveRequest.move) {\r\n\t\t\t\t\t\t\tmoveid = request.moves[i].id;\r\n\t\t\t\t\t\t\ttargetType = moveRequest.target;\r\n\t\t\t\t\t\t\tevent = 'dynamax';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!targetType && ['', 'zmove'].includes(event) && request.canZMove) {\r\n\t\t\t\t\tfor (const [i, moveRequest] of request.canZMove.entries()) {\r\n\t\t\t\t\t\tif (!moveRequest) continue;\r\n\t\t\t\t\t\tif (moveid === toID(moveRequest.move)) {\r\n\t\t\t\t\t\t\tmoveid = request.moves[i].id;\r\n\t\t\t\t\t\t\ttargetType = moveRequest.target;\r\n\t\t\t\t\t\t\tevent = 'zmove';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!targetType) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: Your ${pokemon.name} doesn't have a move matching ${moveid}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tconst moves = pokemon.getMoves();\r\n\t\t\tif (autoChoose) {\r\n\t\t\t\tfor (const [i, move] of request.moves.entries()) {\r\n\t\t\t\t\tif (move.disabled) continue;\r\n\t\t\t\t\tif (i < moves.length && move.id === moves[i].id && moves[i].disabled) continue;\r\n\t\t\t\t\tmoveid = move.id;\r\n\t\t\t\t\ttargetType = move.target!;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst move = this.battle.dex.moves.get(moveid);\r\n\t\r\n\t\t\t// Z-move\r\n\t\r\n\t\t\tconst zMove = event === 'zmove' ? this.battle.actions.getZMove(move, pokemon) : undefined;\r\n\t\t\tif (event === 'zmove' && !zMove) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name} can't use ${move.name} as a Z-move`);\r\n\t\t\t}\r\n\t\t\tif (zMove && this.choice.zMove) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You can't Z-move more than once per battle`);\r\n\t\t\t}\r\n\t\r\n\t\t\tif (zMove) targetType = this.battle.dex.moves.get(zMove).target;\r\n\t\r\n\t\t\t// Dynamax\r\n\t\t\t// Is dynamaxed or will dynamax this turn.\r\n\t\t\tconst maxMove = (event === 'dynamax' || pokemon.volatiles['dynamax']) ?\r\n\t\t\t\tthis.battle.actions.getMaxMove(move, pokemon) : undefined;\r\n\t\t\tif (event === 'dynamax' && !maxMove) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name} can't use ${move.name} as a Max Move`);\r\n\t\t\t}\r\n\t\r\n\t\t\tif (maxMove) targetType = this.battle.dex.moves.get(maxMove).target;\r\n\t\r\n\t\t\t// Validate targetting\r\n\t\r\n\t\t\tif (autoChoose) {\r\n\t\t\t\ttargetLoc = 0;\r\n\t\t\t} else if (this.battle.actions.targetTypeChoices(targetType)) {\r\n\t\t\t\tif (!targetLoc && this.active.length >= 2) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: ${move.name} needs a target`);\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.battle.validTargetLoc(targetLoc, pokemon, targetType)) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: Invalid target for ${move.name}`);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (targetLoc) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: You can't choose a target for ${move.name}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tconst lockedMove = pokemon.getLockedMove();\r\n\t\t\tif (lockedMove) {\r\n\t\t\t\tlet lockedMoveTargetLoc = pokemon.lastMoveTargetLoc || 0;\r\n\t\t\t\tconst lockedMoveID = toID(lockedMove);\r\n\t\t\t\tif (pokemon.volatiles[lockedMoveID] && pokemon.volatiles[lockedMoveID].targetLoc) {\r\n\t\t\t\t\tlockedMoveTargetLoc = pokemon.volatiles[lockedMoveID].targetLoc;\r\n\t\t\t\t}\r\n\t\t\t\tthis.choice.actions.push({\r\n\t\t\t\t\tchoice: 'move',\r\n\t\t\t\t\tpokemon,\r\n\t\t\t\t\ttargetLoc: lockedMoveTargetLoc,\r\n\t\t\t\t\tmoveid: lockedMoveID,\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (!moves.length && !zMove) {\r\n\t\t\t\t// Override action and use Struggle if there are no enabled moves with PP\r\n\t\t\t\t// Gen 4 and earlier announce a Pokemon has no moves left before the turn begins, and only to that player's side.\r\n\t\t\t\tif (this.battle.gen <= 4) this.send('-activate', pokemon, 'move: Struggle');\r\n\t\t\t\tmoveid = 'struggle';\r\n\t\t\t} else if (maxMove) {\r\n\t\t\t\t// Dynamaxed; only Taunt and Assault Vest disable Max Guard, but the base move must have PP remaining\r\n\t\t\t\tif (pokemon.maxMoveDisabled(move)) {\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name}'s ${maxMove.name} is disabled`);\r\n\t\t\t\t}\r\n\t\t\t} else if (!zMove) {\r\n\t\t\t\t// Check for disabled moves\r\n\t\t\t\tlet isEnabled = false;\r\n\t\t\t\tlet disabledSource = '';\r\n\t\t\t\tfor (const m of moves) {\r\n\t\t\t\t\tif (m.id !== moveid) continue;\r\n\t\t\t\t\tif (!m.disabled) {\r\n\t\t\t\t\t\tisEnabled = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if (m.disabledSource) {\r\n\t\t\t\t\t\tdisabledSource = m.disabledSource;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!isEnabled) {\r\n\t\t\t\t\t// Request a different choice\r\n\t\t\t\t\tif (autoChoose) throw new Error(`autoChoose chose a disabled move`);\r\n\t\t\t\t\tconst includeRequest = this.updateRequestForPokemon(pokemon, req => {\r\n\t\t\t\t\t\tlet updated = false;\r\n\t\t\t\t\t\tfor (const m of req.moves) {\r\n\t\t\t\t\t\t\tif (m.id === moveid) {\r\n\t\t\t\t\t\t\t\tif (!m.disabled) {\r\n\t\t\t\t\t\t\t\t\tm.disabled = true;\r\n\t\t\t\t\t\t\t\t\tupdated = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (m.disabledSource !== disabledSource) {\r\n\t\t\t\t\t\t\t\t\tm.disabledSource = disabledSource;\r\n\t\t\t\t\t\t\t\t\tupdated = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn updated;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst status = this.emitChoiceError(`Can't move: ${pokemon.name}'s ${move.name} is disabled`, includeRequest);\r\n\t\t\t\t\tif (includeRequest) this.emitRequest(this.activeRequest!);\r\n\t\t\t\t\treturn status;\r\n\t\t\t\t}\r\n\t\t\t\t// The chosen move is valid yay\r\n\t\t\t}\r\n\t\r\n\t\t\t// Mega evolution\r\n\t\r\n\t\t\tconst mega = (event === 'mega');\r\n\t\t\tif (mega && !pokemon.canMegaEvo) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name} can't mega evolve`);\r\n\t\t\t}\r\n\t\t\tif (mega && this.choice.mega) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You can only mega-evolve once per battle`);\r\n\t\t\t}\r\n\t\t\tconst ultra = (event === 'ultra');\r\n\t\t\tif (ultra && !pokemon.canUltraBurst) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name} can't ultra burst`);\r\n\t\t\t}\r\n\t\t\tif (ultra && this.choice.ultra) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You can only ultra burst once per battle`);\r\n\t\t\t}\r\n\t\t\tlet dynamax = (event === 'dynamax');\r\n\t\t\tconst canDynamax = this.activeRequest?.active[this.active.indexOf(pokemon)].canDynamax;\r\n\t\t\tif (dynamax && (this.choice.dynamax || !canDynamax)) {\r\n\t\t\t\tif (pokemon.volatiles['dynamax']) {\r\n\t\t\t\t\tdynamax = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.battle.gen !== 8) {\r\n\t\t\t\t\t\treturn this.emitChoiceError(`Can't move: Dynamaxing doesn't outside of Gen 8.`);\r\n\t\t\t\t\t} else if (pokemon.side.canDynamaxNow()) {\r\n\t\t\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name} can't Dynamax now.`);\r\n\t\t\t\t\t} else if (pokemon.side.allySide?.canDynamaxNow()) {\r\n\t\t\t\t\t\treturn this.emitChoiceError(`Can't move: It's your partner's turn to Dynamax.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.emitChoiceError(`Can't move: You can only Dynamax once per battle.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst terastallize = (event === 'terastallize');\r\n\t\t\tif (terastallize && !pokemon.canTerastallize) {\r\n\t\t\t\t// Make this work properly\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: ${pokemon.name} can't Terastallize.`);\r\n\t\t\t}\r\n\t\t\tif (terastallize && this.choice.terastallize) {\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You can only Terastallize once per battle.`);\r\n\t\t\t}\r\n\t\t\tif (terastallize && this.battle.gen !== 2) {\r\n\t\t\t\t// Make this work properly\r\n\t\t\t\treturn this.emitChoiceError(`Can't move: You can only Terastallize in Gen 2.`);\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.choice.actions.push({\r\n\t\t\t\tchoice: 'move',\r\n\t\t\t\tpokemon,\r\n\t\t\t\ttargetLoc,\r\n\t\t\t\tmoveid,\r\n\t\t\t\tmega: mega || ultra,\r\n\t\t\t\tzmove: zMove,\r\n\t\t\t\tmaxMove: maxMove ? maxMove.id : undefined,\r\n\t\t\t\tterastallize: terastallize ? pokemon.teraType : undefined,\r\n\t\t\t});\r\n\t\r\n\t\t\tif (pokemon.maybeDisabled) {\r\n\t\t\t\tthis.choice.cantUndo = this.choice.cantUndo || pokemon.isLastActive();\r\n\t\t\t}\r\n\t\r\n\t\t\tif (mega) this.choice.mega = true;\r\n\t\t\tif (ultra) this.choice.ultra = true;\r\n\t\t\tif (zMove) this.choice.zMove = true;\r\n\t\t\tif (dynamax) this.choice.dynamax = true;\r\n\t\t\tif (terastallize) this.choice.terastallize = true;\r\n\t\r\n\t\t\treturn true;\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tinherit: true,\r\n\t\tgetDamage(source, target, move, suppressMessages) {\r\n\t\t\t// First of all, we get the move.\r\n\t\t\tif (typeof move === 'string') {\r\n\t\t\t\tmove = this.dex.getActiveMove(move);\r\n\t\t\t} else if (typeof move === 'number') {\r\n\t\t\t\tmove = {\r\n\t\t\t\t\tbasePower: move,\r\n\t\t\t\t\ttype: '???',\r\n\t\t\t\t\tcategory: 'Physical',\r\n\t\t\t\t\twillCrit: false,\r\n\t\t\t\t\tflags: {},\r\n\t\t\t\t} as unknown as ActiveMove;\r\n\t\t\t}\r\n\r\n\t\t\t// Let's test for immunities.\r\n\t\t\tif (!move.ignoreImmunity || (move.ignoreImmunity !== true && !move.ignoreImmunity[move.type])) {\r\n\t\t\t\tif (!target.runImmunity(move.type, true)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Is it an OHKO move?\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\treturn target.maxhp;\r\n\t\t\t}\r\n\r\n\t\t\t// We edit the damage through move's damage callback\r\n\t\t\tif (move.damageCallback) {\r\n\t\t\t\treturn move.damageCallback.call(this.battle, source, target);\r\n\t\t\t}\r\n\r\n\t\t\t// We take damage from damage=level moves\r\n\t\t\tif (move.damage === 'level') {\r\n\t\t\t\treturn source.level;\r\n\t\t\t}\r\n\r\n\t\t\t// If there's a fix move damage, we run it\r\n\t\t\tif (move.damage) {\r\n\t\t\t\treturn move.damage;\r\n\t\t\t}\r\n\r\n\t\t\t// We check the category and typing to calculate later on the damage\r\n\t\t\tmove.category = this.battle.getCategory(move);\r\n\t\t\t// '???' is typeless damage: used for Struggle and Confusion etc\r\n\t\t\tif (!move.type) move.type = '???';\r\n\t\t\tconst type = move.type;\r\n\r\n\t\t\t// We get the base power and apply basePowerCallback if necessary\r\n\t\t\tlet basePower: number | false | null | undefined = move.basePower;\r\n\t\t\tif (move.basePowerCallback) {\r\n\t\t\t\tbasePower = move.basePowerCallback.call(this.battle, source, target, move);\r\n\t\t\t}\r\n\r\n\t\t\t// We check for Base Power\r\n\t\t\tif (!basePower) {\r\n\t\t\t\tif (basePower === 0) return; // Returning undefined means not dealing damage\r\n\t\t\t\treturn basePower;\r\n\t\t\t}\r\n\t\t\tbasePower = this.battle.clampIntRange(basePower, 1);\r\n\r\n\t\t\t// Checking for the move's Critical Hit ratio\r\n\t\t\tlet critRatio = this.battle.runEvent('ModifyCritRatio', source, target, move, move.critRatio || 0);\r\n\t\t\tcritRatio = this.battle.clampIntRange(critRatio, 0, 5);\r\n\t\t\tconst critMult = [0, 17, 32, 64, 85, 128];\r\n\t\t\tlet isCrit = move.willCrit || false;\r\n\t\t\tif (typeof move.willCrit === 'undefined') {\r\n\t\t\t\tif (critRatio) {\r\n\t\t\t\t\tisCrit = this.battle.random(256) < critMult[critRatio];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isCrit && this.battle.runEvent('CriticalHit', target, null, move)) {\r\n\t\t\t\ttarget.getMoveHitData(move).crit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Happens after crit calculation\r\n\t\t\tif (basePower) {\r\n\t\t\t\t// confusion damage\r\n\t\t\t\tif (move.isConfusionSelfHit) {\r\n\t\t\t\t\tmove.type = move.baseMoveType!;\r\n\t\t\t\t\tbasePower = this.battle.runEvent('BasePower', source, target, move, basePower, true);\r\n\t\t\t\t\tmove.type = '???';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbasePower = this.battle.runEvent('BasePower', source, target, move, basePower, true);\r\n\t\t\t\t}\r\n\t\t\t\tif (basePower && move.basePowerModifier) {\r\n\t\t\t\t\tbasePower *= move.basePowerModifier;\r\n\t\t\t\t}\r\n    \t\tif (basePower < 60 && source.getTypes(true).includes(move.type) && source.terastallized && move.priority <= 0 &&\r\n  \t\t\t    !move.multihit && !((move.basePower === 0 || move.basePower === 150) && move.basePowerCallback)) {\r\n  \t\t\t  basePower = 60;\r\n  \t\t  }\r\n\t\t\t}\r\n\t\t\tif (!basePower) return 0;\r\n\t\t\tbasePower = this.battle.clampIntRange(basePower, 1);\r\n\r\n\t\t\t// We now check for attacker and defender\r\n\t\t\tlet level = source.level;\r\n\r\n\t\t\t// Using Beat Up\r\n\t\t\tif (move.allies) {\r\n\t\t\t\tthis.battle.add('-activate', source, 'move: Beat Up', '[of] ' + move.allies[0].name);\r\n\t\t\t\tlevel = move.allies[0].level;\r\n\t\t\t}\r\n\r\n\t\t\tconst attacker = move.overrideOffensivePokemon === 'target' ? target : source;\r\n\t\t\tconst defender = move.overrideDefensivePokemon === 'source' ? source : target;\r\n\r\n\t\t\tconst isPhysical = move.category === 'Physical';\r\n\t\t\tconst atkType: StatIDExceptHP = move.overrideOffensiveStat || (isPhysical ? 'atk' : 'spa');\r\n\t\t\tconst defType: StatIDExceptHP = move.overrideDefensiveStat || (isPhysical ? 'def' : 'spd');\r\n\r\n\t\t\tlet unboosted = false;\r\n\t\t\tlet noburndrop = false;\r\n\r\n\t\t\tif (isCrit) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-crit', target);\r\n\t\t\t\t// Stat level modifications are ignored if they are neutral to or favour the defender.\r\n\t\t\t\t// Reflect and Light Screen defensive boosts are only ignored if stat level modifications were also ignored as a result of that.\r\n\t\t\t\tif (attacker.boosts[atkType] <= defender.boosts[defType]) {\r\n\t\t\t\t\tunboosted = true;\r\n\t\t\t\t\tnoburndrop = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet attack = attacker.getStat(atkType, unboosted, noburndrop);\r\n\t\t\tlet defense = defender.getStat(defType, unboosted);\r\n\r\n\t\t\t// Using Beat Up\r\n\t\t\tif (move.allies) {\r\n\t\t\t\tattack = move.allies[0].species.baseStats.atk;\r\n\t\t\t\tmove.allies.shift();\r\n\t\t\t\tdefense = defender.species.baseStats.def;\r\n\t\t\t}\r\n\r\n\t\t\t// Moves that ignore offense and defense respectively.\r\n\t\t\tif (move.ignoreOffensive) {\r\n\t\t\t\tthis.battle.debug('Negating (sp)atk boost/penalty.');\r\n\t\t\t\t// The attack drop from the burn is only applied when attacker's attack level is higher than defender's defense level.\r\n\t\t\t\tattack = attacker.getStat(atkType, true, true);\r\n\t\t\t}\r\n\r\n\t\t\tif (move.ignoreDefensive) {\r\n\t\t\t\tthis.battle.debug('Negating (sp)def boost/penalty.');\r\n\t\t\t\tdefense = target.getStat(defType, true, true);\r\n\t\t\t}\r\n\r\n\t\t\tif (move.id === 'present') {\r\n\t\t\t\tconst typeIndexes: {[k: string]: number} = {\r\n\t\t\t\t\tNormal: 0, Fighting: 1, Flying: 2, Poison: 3, Ground: 4, Rock: 5, Bug: 7, Ghost: 8, Steel: 9,\r\n\t\t\t\t\tFire: 20, Water: 21, Grass: 22, Electric: 23, Psychic: 24, Ice: 25, Dragon: 26, Dark: 27,\r\n\t\t\t\t};\r\n\t\t\t\tattack = 10;\r\n\r\n\t\t\t\tconst attackerLastType = attacker.getTypes().slice(-1)[0];\r\n\t\t\t\tconst defenderLastType = defender.getTypes().slice(-1)[0];\r\n\r\n\t\t\t\tdefense = typeIndexes[attackerLastType] || 1;\r\n\t\t\t\tlevel = typeIndexes[defenderLastType] || 1;\r\n\t\t\t\tthis.battle.hint(\"Gen 2 Present has a glitched damage calculation using the secondary types of the Pokemon for the Attacker's Level and Defender's Defense.\", true);\r\n\t\t\t}\r\n\r\n\t\t\t// When either attack or defense are higher than 256, they are both divided by 4 and modded by 256.\r\n\t\t\t// This is what causes the rollover bugs.\r\n\t\t\tif (attack >= 256 || defense >= 256) {\r\n\t\t\t\tif (attack >= 1024 || defense >= 1024) {\r\n\t\t\t\t\tthis.battle.hint(\"In Gen 2, a stat will roll over to a small number if it is larger than 1024.\");\r\n\t\t\t\t}\r\n\t\t\t\tattack = this.battle.clampIntRange(Math.floor(attack / 4) % 256, 1);\r\n\t\t\t\tdefense = this.battle.clampIntRange(Math.floor(defense / 4) % 256, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Self destruct moves halve defense at this point.\r\n\t\t\tif (move.selfdestruct && defType === 'def') {\r\n\t\t\t\tdefense = this.battle.clampIntRange(Math.floor(defense / 2), 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Let's go with the calculation now that we have what we need.\r\n\t\t\t// We do it step by step just like the game does.\r\n\t\t\tlet damage = level * 2;\r\n\t\t\tdamage = Math.floor(damage / 5);\r\n\t\t\tdamage += 2;\r\n\t\t\tdamage *= basePower;\r\n\t\t\tdamage *= attack;\r\n\t\t\tdamage = Math.floor(damage / defense);\r\n\t\t\tdamage = Math.floor(damage / 50);\r\n\t\t\tif (isCrit) damage *= 2;\r\n\t\t\tdamage = Math.floor(this.battle.runEvent('ModifyDamage', attacker, defender, move, damage));\r\n\t\t\tdamage = this.battle.clampIntRange(damage, 1, 997);\r\n\t\t\tdamage += 2;\r\n\r\n\t\t\t// Weather modifiers\r\n\t\t\tif (\r\n\t\t\t\t(type === 'Water' && this.battle.field.isWeather('raindance')) ||\r\n\t\t\t\t(type === 'Fire' && this.battle.field.isWeather('sunnyday'))\r\n\t\t\t) {\r\n\t\t\t\tdamage = Math.floor(damage * 1.5);\r\n\t\t\t} else if (\r\n\t\t\t\t((type === 'Fire' || move.id === 'solarbeam') && this.battle.field.isWeather('raindance')) ||\r\n\t\t\t\t(type === 'Water' && this.battle.field.isWeather('sunnyday'))\r\n\t\t\t) {\r\n\t\t\t\tdamage = Math.floor(damage / 2);\r\n\t\t\t}\r\n\r\n\t\t\t// STAB damage bonus, the \"???\" type never gets STAB\r\n\t\t\tif (type !== '???' && (source.getTypes(false, true).includes(type) || source.hasType(type))) {\r\n\t\t\t\tdamage += Math.floor(damage / 2);\r\n\t\t\t}\r\n      \r\n\t\t\t// Tera\r\n\t\t\tif (source.terastallized === 'Stellar') {\r\n        if (!source.stellarBoostedTypes.includes(type)) {\r\n\t\t\t    if (type !== '???' && source.hasType(type)) {\r\n\t\t\t\t\t  damage *= 1.333;\r\n          } else {\r\n  \t\t\t\t\tdamage *= 1.2;\r\n          }\r\n\t\t\t\t\tsource.stellarBoostedTypes.push(type);\r\n\t\t\t  }\r\n      } else {\r\n\t\t\t\tif (source.terastallized === type && source.getTypes(false, true).includes(type)) {\r\n\t\t\t\t\tdamage *= 1.333;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Type effectiveness\r\n\t\t\tconst totalTypeMod = target.runEffectiveness(move);\r\n\t\t\t// Super effective attack\r\n\t\t\tif (totalTypeMod > 0) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-supereffective', target);\r\n\t\t\t\tdamage *= 2;\r\n\t\t\t\tif (totalTypeMod >= 2) {\r\n\t\t\t\t\tdamage *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Resisted attack\r\n\t\t\tif (totalTypeMod < 0) {\r\n\t\t\t\tif (!suppressMessages) this.battle.add('-resisted', target);\r\n\t\t\t\tdamage = Math.floor(damage / 2);\r\n\t\t\t\tif (totalTypeMod <= -2) {\r\n\t\t\t\t\tdamage = Math.floor(damage / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Apply random factor if damage is greater than 1, except for Flail and Reversal\r\n\t\t\tif (!move.noDamageVariance && damage > 1) {\r\n\t\t\t\tdamage *= this.battle.random(217, 256);\r\n\t\t\t\tdamage = Math.floor(damage / 255);\r\n\t\t\t}\r\n\r\n\t\t\t// If damage is less than 1, we return 1\r\n\t\t\tif (basePower && !Math.floor(damage)) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// We are done, this is the final damage\r\n\t\t\treturn damage;\r\n\t\t},\r\n  \tcanTerastallize(pokemon: Pokemon) {\r\n  \t\tif (pokemon.getItem().zMove || pokemon.canMegaEvo || this.dex.gen !== 2) {\r\n  \t\t\treturn null;\r\n  \t\t}\r\n  \t\treturn pokemon.teraType;\r\n  \t},\r\n  \tterastallize(pokemon: Pokemon) {\r\n  \t\tif (pokemon.illusion && ['Ogerpon', 'Terapagos'].includes(pokemon.illusion.species.baseSpecies)) {\r\n  \t\t\tthis.battle.singleEvent('End', this.dex.abilities.get('Illusion'), pokemon.abilityState, pokemon);\r\n  \t\t}\r\n  \t\tconst type = pokemon.teraType;\r\n  \t\tthis.battle.add('-terastallize', pokemon, type);\r\n  \t\tpokemon.terastallized = type;\r\n  \t\tfor (const ally of pokemon.side.pokemon) {\r\n  \t\t\tally.canTerastallize = null;\r\n  \t\t}\r\n  \t\tpokemon.addedType = '';\r\n  \t\tpokemon.knownType = true;\r\n  \t\tpokemon.apparentType = type;\r\n  \t\tif (pokemon.species.baseSpecies === 'Ogerpon') {\r\n  \t\t\tconst tera = pokemon.species.id === 'ogerpon' ? 'tealtera' : 'tera';\r\n  \t\t\tpokemon.formeChange(pokemon.species.id + tera, null, true);\r\n  \t\t}\r\n  \t\tif (pokemon.species.name === 'Terapagos-Terastal' && type === 'Stellar') {\r\n  \t\t\tpokemon.formeChange('Terapagos-Stellar', null, true);\r\n  \t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\r\n  \t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\r\n  \t\t\t) * pokemon.level / 100 + 10);\r\n  \t\t\tconst newMaxHP = pokemon.baseMaxhp;\r\n  \t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\r\n  \t\t\tpokemon.maxhp = newMaxHP;\r\n  \t\t\tthis.battle.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n  \t\t}\r\n  \t\tthis.battle.runEvent('AfterTerastallization', pokemon);\r\n  \t},\r\n  },\r\n};\r\n"],
  "mappings": "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",
  "names": ["move"]
}
