{
  "version": 3,
  "sources": ["../../../../data/mods/ironfistslate8/abilities.ts"],
  "sourcesContent": ["import {FS} from '../../../lib';\r\nimport {toID} from '../../../sim/dex-data';\r\nimport {Pokemon} from \"../../../sim/pokemon\";\r\n\r\n// Similar to User.usergroups. Cannot import here due to users.ts requiring Chat\r\n// This also acts as a cache, meaning ranks will only update when a hotpatch/restart occurs\r\nconst usergroups: {[userid: string]: string} = {};\r\nconst usergroupData = FS('config/usergroups.csv').readIfExistsSync().split('\\n');\r\nfor (const row of usergroupData) {\r\n\tif (!toID(row)) continue;\r\n\r\n\tconst cells = row.split(',');\r\n\tif (cells.length > 3) throw new Error(`Invalid entry when parsing usergroups.csv`);\r\n\tusergroups[toID(cells[0])] = cells[1].trim() || ' ';\r\n}\r\n\r\nexport function getName(name: string): string {\r\n\tconst userid = toID(name);\r\n\tif (!userid) throw new Error('No/Invalid name passed to getSymbol');\r\n\r\n\tconst group = usergroups[userid] || ' ';\r\n\treturn group + name;\r\n}\r\n\r\nexport const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\t/*\r\n\tplaceholder: {\r\n\t\t\r\n\t\tflags: {},\r\n\t\tname: \"\",\r\n\t\tshortDesc: \"\",\r\n\t},\r\n\t*/\r\n  \t//slate 1\r\n\tultraluck: {\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 3;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Ultra Luck\",\r\n\t\tshortDesc: \"This Pokemon's moves have +3 crit ratio.\",\r\n\t},\r\n    degenerator: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tthis.damage(target.baseMaxhp * 0.24, target, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Degenerator\",\r\n\t\tshortDesc: \"When the user switches out, damage active opponents by 24% of their max HP.\",\r\n\t},\r\n\tdtairslash: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.type === 'Flying' && move.name != 'Air Slash') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: !dt air slash');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"!dt air slash\",\r\n\t\tshortDesc: \"This Pokemon is immune to most Flying-type moves.\",\r\n\t},\r\n  \talphasigmarizz: {\r\n\t\tonAllyTryAddVolatile(status, target, source, effect) {\r\n\t\t\tif (['attract', 'healblock', 'taunt'].includes(status.id)) {\r\n\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Alpha Sigma Rizz', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Alpha Sigma Rizz');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Alpha Sigma Rizz\",\r\n\t\trating: 2,\r\n\t\tnum: 165,\r\n\t\tshortDesc: \"This pokemon can't get infatuated, taunted, heal blocked, or statused.\",\r\n\t},\r\n\tperfectionist: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(move.basePower, this.event.modifier);\r\n\t\t\tthis.debug('Base Power: ' + basePowerAfterMultiplier);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Perfectionist boost');\r\n\t\t\t\tmove.basePower *= 1.5;\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Perfectionist\",\r\n\t\tshortDesc: \"This Pokemon's moves of 60 power or less have 1.5x power and can't miss.\",\r\n\t},\r\n    justalittleguy: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.getWeight() > defender.getWeight()) {\r\n\t\t\t\tthis.debug('JALG weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (attacker.getWeight() > defender.getWeight()) {\r\n\t\t\t\tthis.debug('JALG weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tname: \"Just a Little Guy\",\r\n\t\tshortDesc: \"This Pokemon takes halved damage from heavier attackers.\",\r\n\t},\r\n  \tchainedwrath: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet ownspe = 0;\r\n\t\t\tlet foespe = 0;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\townspe += pokemon.getStat('spe', false, true);\r\n\t\t\t\tfoespe += target.getStat('spe', false, true);\r\n\t\t\t}\r\n\t\t\tif (foespe > ownspe) {\r\n\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t} \r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chained Wrath\",\r\n\t\tshortDesc: \"When the opponent's speed is higher than this Pokemon's, its Attack is raised by 1 stage.\",\r\n\t\trating: 3.5,\r\n\t\tnum: 88,\r\n\t},\r\n\tidentitycrisis: {\r\n        onResidualOrder: 28,\r\n        onResidualSubOrder: 2,\r\n        onResidual(pokemon) {\r\n            if (!pokemon.hp) return;\r\n            const names = ['anaconja', 'earl', 'Orangesodapop', 'Jumpheart', 'zxgzxg', 'TTTech_', 'gekokeso', 'MemesBita', 'regiboat', 'Tanny89k', 'Fragmented', 'Gaboswampert', 'DenebStargazer', 'Beebos', 'PalpitoadChamp', 'Soul Dew Latias', 'woo', 'AquaticPanic', 'Yoshiblaze'];\r\n            const avatars = ['shelly', 'janitor', 'crasherwake', 'bianca', 'miku-water', 'burglar', 'swimmer-gen4dp', 'wattson', 'blue-gen1', 'anabel', 'klara', 'psychic-lgpe', 'maid', 'pokemonbreederf', 'brycenman', 'lyra', 'lana-masters', 'hilda', 'schoolkid-gen4'];\r\n            const pokemons = this.dex.species.all();\r\n            pokemon.formeChange(this.sample(pokemons));\r\n            const randomNumber = this.random(names.length);\r\n            pokemon.side.name = names[randomNumber];\r\n            pokemon.side.avatar = avatars[randomNumber];\r\n        },\r\n        flags: {},\r\n        name: \"Identity Crisis\",\r\n        shortDesc: \"End of turn: change this Pokemon and its side's name and avatar to a random one.\",\r\n    },\r\n\tauctorwile: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif(move.flags['punch']) this.damage(source.baseMaxhp / 4, source, target);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Auctor Wile\",\r\n\t\tshortDesc: \"If this Pokemon is damaged by a punching move, the attacker loses 25% max HP.\",\r\n\t},\r\n\t\r\n\t//slate 2\r\n\tironnose: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Steel') {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Iron Nose');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Steel' || move.flags['pledgecombo']) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Iron Nose');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Iron Nose\",\r\n\t\tshortDesc: \"This Pokemon draws Steel moves to itself to raise Atk by 1; Steel immunity.\"\r\n\t},\r\n\tprotostasis: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\t// Protostasis is not affected by Utility Umbrella\r\n\t\t\tif (this.field.isWeather('snow')) {\r\n\t\t\t\tpokemon.addVolatile('protostasis');\r\n\t\t\t} else if (!pokemon.volatiles['protostasis']?.fromBooster) {\r\n\t\t\t\tpokemon.removeVolatile('protostasis');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['protostasis'];\r\n\t\t\tthis.add('-end', pokemon, 'Protostasis', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect?.id === 'boosterenergy') {\r\n\t\t\t\t\tthis.effectState.fromBooster = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Protostasis', '[fromitem]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Protostasis');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'protostasis' + this.effectState.bestStat);\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, source, target, move) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'atk') return;\r\n\t\t\t\tthis.debug('Protostasis atk boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, target, source, move) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'def') return;\r\n\t\t\t\tthis.debug('Protostasis def boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(relayVar, source, target, move) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spa') return;\r\n\t\t\t\tthis.debug('Protostasis spa boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(relayVar, target, source, move) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spd') return;\r\n\t\t\t\tthis.debug('Protostasis spd boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (this.effectState.bestStat !== 'spe') return;\r\n\t\t\t\tthis.debug('Protostasis spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Protostasis');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1},\r\n\t\tname: \"Protostasis\",\r\n\t\trating: 3,\r\n\t\tshortDesc: \"Snow active or Booster Energy used: highest stat is 1.3x, or 1.5x if Speed.\",\r\n\t},\r\n\tilluminate: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Illuminate', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({evasion: -2}, target, pokemon, null, true);\r\n\t\t\t\t\tthis.boost({accuracy: 1}, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Illuminate\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon's accuracy +1 and foe(s)' evasion -2.\",\r\n\t},\r\n\tflyeater: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Bug') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Fly Eater');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Fly Eater\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Bug moves; Bug immunity.\",\r\n\t},\r\n\tgrowthveil: { // Too long\r\n\t\tid: \"growthveil\",\r\n\t\tname: \"Growth Veil\",\r\n\t\tshortDesc: \"Regenerator + Flower Veil\",\r\n\t\tdesc: \"Restores 1/3 max HP on switch-out; ally Grass-types can't have stats lowered or status inflicted.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonAllyBoost(boost, target, source, effect) {\r\n\t\t\tif ((source && target === source) || !target.hasType('Grass')) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllySetStatus(status, target, source, effect) {\r\n\t\t\tif (target.hasType('Grass') && source && target !== source && effect && effect.id !== 'yawn') {\r\n\t\t\t\tthis.debug('interrupting setStatus with Growth Veil');\r\n\t\t\t\tif (effect.id === 'synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryAddVolatile(status, target) {\r\n\t\t\tif (target.hasType('Grass') && status.id === 'yawn') {\r\n\t\t\t\tthis.debug('Growth Veil blocking yawn');\r\n\t\t\t\tconst effectHolder = this.effectState.target;\r\n\t\t\t\tthis.add('-block', target, 'ability: Growth Veil', '[of] ' + effectHolder);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbravery: {\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Bravery');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -30,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Bravery');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\r\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.name === 'Intimidate' && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Bravery', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bravery\",\r\n\t\tshortDesc: \"Sturdy + Scrappy\",\r\n\t},\r\n\tprismwings: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('prismwings');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst allTypes = this.dex.deepClone(this.dex.types.all());\r\n\t\t\t\tpokemon.setType(allTypes);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', allTypes.join('/'), '[from] ability: Prism Wings');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Prism Wings\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon is all types for one turn.\",\r\n\t},\r\n\tsteeldrummer: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || move.type !== 'Steel') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.actions.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.isAlly(source) || move.hasBounced || move.type !== 'Steel') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.actions.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Steel Drummer\",\r\n\t\tshortDesc: \"This Pokemon blocks Steel-type moves and bounces them back to the user.\",\r\n\t},\r\n\ttimebomb: {\r\n\t\tonModifyMove(move) {\r\n\t\t\tif(move.category !== 'Status') move.selfdestruct = \"always\";\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Time Bomb\",\r\n\t\tshortDesc: \"This Pokemon's attacks cause it to faint.\",\r\n\t},\r\n\timpalpable: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (source.hasType(move.type) && target !== source) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Impalpable');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Impalpable\",\r\n\t\tshortDesc: \"This Pokemon is non-grounded, and is immune to its own and the opponent's STABs.\",\r\n\t},\r\n\tgetsilly: {\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).crit) {\r\n\t\t\t\tthis.boost({def: -1}, target, source, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -30,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Get Silly');\r\n\t\t\t\tsource.addVolatile('clownnose');\r\n\t\t\t\treturn target.hp - 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Get Silly\",\r\n\t\tshortDesc: \"Super Luck + Sturdy + crits lower Def by 1 + attacker grows a clown nose at 2 HP.\",\r\n\t},\r\n\tchampion: {\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"champion\",\r\n\t\tshortDesc: \"Swift Swim + Rain Dish\",\r\n\t},\r\n\r\n\t//slate 3\r\n\tmilf: {\r\n\t\tflags: {},\r\n\t\tname: \"MILF\",\r\n\t\tshortDesc: \"At the start of the battle, add 2 Fishing Tokens to the user's side.\",\r\n\t},\r\n\tbenevolentblessing: {\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif(this.randomChance(1, 20)) pokemon.setStatus('slp');\r\n\t\t\tif(this.randomChance(1, 100)) {\r\n\t\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\t\tthis.actions.useMove('finalgambit', pokemon, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t//mogoff effect in its entry\r\n\t\tflags: {},\r\n\t\tname: \"Benevolent Blessing\",\r\n\t\tshortDesc: \"Serene Grace + 5% slp, 1% Final Gambit; Mog Off: 50% Swagger, 50% Self-Destruct.\",\r\n\t},\r\n\tfishercat: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif(move.flags['fishing']) {\r\n\t\t\t\tthis.heal(source.baseMaxhp / 4, source, source);\r\n\t\t\t\tsource.side.addFishingTokens(1);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fishercat\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP and adds 1 Fishing Token after using a fishing move.\",\r\n\t},\r\n\trkssystem: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"RKS System + Magic Guard\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tfrozenlandscape: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('frigidterrain');\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\r\n\t\t\t\tthis.add('-start', source, 'typechange', 'Ice');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Frozen Landscape\",\r\n\t\tshortDesc: \"On contact, attacker becomes Ice-type. Sets Frigid Terrain on switchin.\",\r\n\t},\r\n\tthediamondhand: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst diamondHand = pokemon.side.pokemon.filter(p => p != pokemon && !p.fainted && p.baseSpecies.diamondHand);\r\n\t\t\tif (diamondHand.length > 0) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: The Diamond Hand');\r\n\t\t\t\tthis.add('-start', pokemon, `diamondHand${diamondHand.length}`, '[silent]');\r\n\t\t\t\tthis.effectState.diamondHand = diamondHand.length;\r\n\t\t\t\tthis.boost({atk: -1 * diamondHand.length, spa: -1 * diamondHand.length}, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `diamondHand${this.effectState.diamondHand}`, '[silent]');\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + this.effectState.diamondHand;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"The Diamond Hand\",\r\n\t\tshortDesc: \"This Pokemon's Atk/SpA -1, but crit rate +1 for each other unfainted Diamond Hand ally.\",\r\n\t},\r\n\tilovefishing: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['fishing']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\t//tera effect in scripts.ts\r\n\t\tflags: {},\r\n\t\tname: \"I Love Fishing\",\r\n\t\tshortDesc: \"This Pokemon's fishing moves have 1.5x power; Big Button Teras Water.\",\r\n\t},\r\n\ttoxicmasculinity: {\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif (boost.atk && boost.atk < 0) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\ttarget.side.addSideCondition('toxicspikes', pokemon);\r\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Attack\", \"[from] ability: toxic masculinity\", \"[of] \" + target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"toxic masculinity\",\r\n\t\tshortDesc: \"This Pokemon's Attack cannot be lowered. If it would, set Toxic Spikes on the opponent's side.\",\r\n\t},\r\n\tmagneticstorm: {\r\n\t\tshortDesc: \"Magnet Pull + Storm Drain\",\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Steel') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!(source ||= this.effectState.target) || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Steel')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Magnetic Storm');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Water' || move.flags['pledgecombo']) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Magnetic Storm');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magnetic Storm\",\r\n\t},\r\n\triverthief: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (source.baseSpecies.fish || source.hasType('Water')) {\r\n\t\t\t\tthis.debug('River Thief neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move && source.baseSpecies.fish || source.hasType('Water')) {\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"River Thief\",\r\n\t\tshortDesc: \"Takes 0.75x damage from Fish/Water Pokemon and deals 1.25x damage to them.\",\r\n\t},\r\n\tfishysurge: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('fishingterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fishy Surge\",\r\n\t\tshortDesc: \"On switchin, set Fishing Terrain.\",\r\n\t},\r\n\tbiglady: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.bigLadyBoosted && pokemon.volatiles['bigbutton']) {\r\n\t\t\t\tpokemon.bigLadyBoosted = true;\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Big Lady');\r\n\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.bigLadyBoosted = false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Big Lady\",\r\n\t\tshortDesc: \"When this Pokemon uses Big Button, its stats are raised by 1 stage.\",\r\n\t},\r\n\tpvzfishing: {\r\n\t\tonDragOutPriority: 1,\r\n\t\tonDragOut(pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: PVZ Fishing');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif(move.type === 'Grass') return 1;\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.type === 'Grass') return this.chainModify(2);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.flags['contact'];\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"PVZ Fishing\",\r\n\t\tshortDesc: \"Suction Cups + Long Reach; this Pokemon is 4x weak to Grass moves.\",\r\n\t},\r\n\tkaijukiller: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!pokemon.kaijuKillerBoosted && target.volatiles['bigbutton']) {\r\n\t\t\t\t\tpokemon.kaijuKillerBoosted = true;\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Kaiju Killer');\r\n\t\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.kaijuKillerBoosted = false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Kaiju Killer\",\r\n\t\tshortDesc: \"When another Pokemon uses Big Button, this Pokemon's stats are raised by 1 stage.\",\r\n\t},\r\n\tironlady: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.totalFainted) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Iron Lady');\r\n\t\t\t\tconst fallen = Math.min(pokemon.side.totalFainted, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\tconst powMod = [4096, 4506, 4915, 5325, 5734, 6144];\r\n\t\t\t\tthis.debug(`Iron Lady boost: ${powMod[this.effectState.fallen]}/4096`);\r\n\t\t\t\treturn this.chainModify([powMod[this.effectState.fallen], 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.forceSTAB = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Iron Lady\",\r\n\t\tshortDesc: \"Supreme Overlord + This Pokemon's moves have STAB.\",\r\n\t},\r\n\tskillissue: {\r\n\t\tonFlinch(pokemon) {\r\n\t\t\tthis.boost({spe: 1});\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\t// n.b. only affects Hackmons\r\n\t\t\t// interaction with No Ability is complicated: https://www.smogon.com/forums/threads/pokemon-sun-moon-battle-mechanics-research.3586701/page-76#post-7790209\r\n\t\t\tif (pokemon.adjacentFoes().some(foeActive => foeActive.ability === 'noability')) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t\t// interaction with Ability Shield is similar to No Ability\r\n\t\t\tif (pokemon.hasItem('Ability Shield')) {\r\n\t\t\t\tthis.add('-block', pokemon, 'item: Ability Shield');\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\r\n\t\t\tconst possibleTargets = pokemon.adjacentFoes().filter(\r\n\t\t\t\ttarget => !target.getAbility().flags['notrace'] && target.ability !== 'noability'\r\n\t\t\t);\r\n\t\t\tif (!possibleTargets.length) return;\r\n\r\n\t\t\tconst target = this.sample(possibleTargets);\r\n\t\t\tconst oldAbility = target.setAbility(pokemon.ability);\r\n\t\t\tif (oldAbility) {\r\n\t\t\t\tthis.add('-ability', target, target.getAbility().name, '[from] ability: Skill Issue');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"Skill Issue\",\r\n\t\tshortDesc: \"Steadfast + On switchin, this Pokemon changes the ability of the opponent to this one.\",\r\n\t},\r\n\tmysticslicer: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tlet mod = 1;\r\n\t\t\tif (move.typeChangerBoosted === this.effect) mod *= 1.2;\r\n\t\t\tif (move.flags['slicing']) mod *= 1.5;\r\n\t\t\treturn this.chainModify(mod);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mystic Slicer\",\r\n\t\tshortDesc: \"Sharpness + Pixilate\",\r\n\t},\r\n\tpartinggift: {\r\n\t\tonFaint(pokemon) {\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (pokemon.item) this.actions.useMove('fling', pokemon, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Parting Gift\",\r\n\t\tshortDesc: \"When this Pokemon's HP drops to 0, it uses Fling before fainting.\",\r\n\t},\r\n\tabomacare: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon);\r\n\t\t\tpokemon.side.addSideCondition('abomacarespikes');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Aboma Care\",\r\n\t\tshortDesc: \"Upon switching out, this Pokemon loses 12% HP but the incoming Pokemon heals 25% HP.\",\r\n\t},\r\n\tbramblinmentality: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('ability:comatose');\r\n\t\t\tif (pokemon.side.faintedThisTurn && ['bramblin', 'abomasnow'].includes(pokemon.side.faintedThisTurn.baseSpecies.id)) this.boost({atk: 1, spe: 1}, pokemon);\r\n\t\t},\r\n\t\t// Permanent sleep \"status\" implemented in the relevant sleep-checking effects\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Bramblin Mentality\",\r\n\t\tshortDesc: \"Comatose; +1 Atk/Spe when replacing a fainted Bramblin/Abomasnow.\",\r\n\t},\r\n\r\n\t//slate 4\r\n\treaganomics: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.reagan) return;\r\n\t\t\tpokemon.reagan = true;\r\n\t\t\tif(pokemon.side.fishingTokens > 0) pokemon.side.addFishingTokens(pokemon.side.fishingTokens);\r\n\t\t\tif(this.randomChance(1, 8192)) pokemon.side.foe.addFishingTokens(1);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Reaganomics\",\r\n\t\tshortDesc: \"On switchin, side's Fishing tokens x2. 1/8192 chance for +1 token for the foe. Once per battle.\",\r\n\t},\r\n\tgexserver: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Gex Server');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|https://twitter.com/Duo__M2`);\r\n\t\t\t\t\ttarget.addVolatile('ability:hacked');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gex Server\",\r\n\t\tshortDesc: \"On switchin, adjacent opponents may send a link to DuoM2's Twitter.\",\r\n\t},\r\n\tlemonsqueezy: {\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.add('-activate', target, 'ability: Lemon Squeezy');\r\n\t\t\tthis.add('-activate', target, 'move: Aromatherapy');\r\n\t\t\tfor (const ally of target.side.pokemon) {\r\n\t\t\t\tif (ally !== target && (ally.volatiles['substitute'] && !move.infiltrates)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tally.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Lemon Squeezy\",\r\n\t\tshortDesc: \"This Pokemon cures its party of status conditions after it is damaged by a move.\",\r\n\t},\r\n\tclownery: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (['Normal', 'Fighting'].includes(move.type) && target !== source) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Clownery');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\treturn -0.1;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Clownery\",\r\n\t\tshortDesc: \"This Pokemon moves last in its priority bracket, but is immune to Normal/Fighting.\",\r\n\t},\r\n\tzesty: {\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Lemon' || move.type === 'Silly') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Zesty\",\r\n\t\tshortDesc: \"This Pokemon's Lemon/Silly-type moves have 1.3x power.\",\r\n\t},\r\n\tlemonade: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.add('-start', source, 'typechange', 'Lemon');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Lemonade\",\r\n\t\tshortDesc: \"If this Pok\u00E9mon is damaged by an attack, the attacker becomes a Lemon-type.\",\r\n\t},\r\n\twreckingball: {\r\n\t\tonTryHit(pokemon) {\r\n\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wrecking Ball\",\r\n\t\tshortDesc: \"This Pokemon's moves destroy screens.\",\r\n\r\n\t},\r\n\r\n\t//slate 5\r\n\tcrossover: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tconst nonVanilla = [\"Anarlvet\",  \"Kingler-Mega\",  \"microwave\",  \"Lytlegai\",  \"Ohmyrod\",  \"Big Crammer\",  \"Samurott-Sinnoh\",  \"Goomba\",  \"Fridgile\",  \"Melmetal 2\",  \"Pidown\",  \"Kurayami\",  \"Zelda\",  \"Drigike\",  \"Phish\",  \"Smelmetal\",  \"Bondra\",  \"Tangette-Eternal\",  \"Donmigo\",  \"Dragoone\",  \"Collachet\",  \"Guiltrism\",  \"Swooliobat\",  \"Electrode-Mega\",  \"Mario Kart Wii\",  \"Impalpitoad\",  \"Scrubby\",  \"Ogerpon-Cornerstone\",  \"palpitoad is so cool\",  \"Moltres-Mega\",  \"Jirachitwo\",  \"Shinx-Fishing\",  \"Conquescape\",  \"Daiyafia\",  \"Pokestar Fisherman\",  \"Magnegiri\",  \"mario\",  \"Contamicow\",  \"Whonhef\",  \"Fish Factory\",  \"cowboy_bandido\",  \"Pokestar Giant\",  \"Richard Petty\",  \"Impidimp-Mega\",  \"Lemon\",  \"Fishing Zombie\",  \"Pokestar MT\",  \"Margaret Thatcher\",  \"Flesh Valiant\",  \"Flesh Valiant-Mega\",  \"Ronald Reagan\",  \"Lime Lips\",  \"Lemotic\",  \"Zestii\",  \"Rawring Moon\",  \"Boogerpon-CLOWNerstone\",  \"Keisberg-IF\",  \"Apple's Newest Emoji\",  \"Lemon Fish\",  \"Goddease\",  \"Jableye\",  \"Kyrum\",  \"Raccoon\",  \"Lucario-Calm\",  \"Nedontrol\",  \"Princirang\",  \"Iron Clown\",  \"The Pearl Hand\",  \"McFish\",  \"Applwirm\",  \"minun and plusle :D\", \"Traike\", \"Dr. Liberty\", \"Sunflora-Grave\", \"Hydralemon\", \"Hiveweb\", \"Syndican\\'t\", \"Fish Marketing 3\", \"Lemonganium\", \"Carnivine-IF\", \"Grumpig\", \"Impromancer\", \"Pander Dragoon\", \"Soruarc\", \"Skibidragon\", \"Hitmontop-Mega\", \"Porygon-Z-Mega\", \"Furumo\", \"mega man\", \"Fudgesaur\", \"Fudgesaur-Mega\", \"darkpoison\"];\r\n\t\t\tif (!target || target === pokemon) {\r\n\t\t\t\tif (!pokemon.adjacentFoes().length) return;\r\n\t\t\t\ttarget = this.sample(pokemon.adjacentFoes());\r\n\t\t\t}\r\n\t\t\tif (nonVanilla.includes(target.baseSpecies.name)) return priority + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Crossover\",\r\n\t\tshortDesc: \"This Pokemon's moves have +1 priority against Fakemon.\",\r\n\t},\r\n\twhatthesigma: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Silly') {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: What the Sigma');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"What the Sigma\",\r\n\t\tshortDesc: \"This Pokemon's Attack is raised 1 stage if hit by a Silly move; Silly immunity.\",\r\n\t},\r\n\tsteadfast: {\r\n\t\tinherit: true,\r\n\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\tif (status.id === 'flinch') {\r\n\t\t\t\tthis.boost({spe: 1});\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If this Pokemon were to flinch, its Speed is raised by 1 instead.\",\r\n\t},\r\n\tjustified: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Justified');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Justified\",\r\n\t\tshortDesc: \"This Pokemon's Attack is raised 1 stage if hit by a Dark move; Dark immunity.\",\r\n\t},\r\n\tbonappetit: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp < pokemon.baseMaxhp && pokemon.side.fishingTokens > 0) {\r\n\t\t\t\tpokemon.side.removeFishingTokens(1);\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 10);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bon Appetit\",\r\n\t\tshortDesc: \"At the end of each turn, consume 1 Fishing Token to heal 1/10 max HP.\",\r\n\t},\r\n\tthepearlhand: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst diamondHand = pokemon.side.foe.pokemon.filter(p => p.baseSpecies.diamondHand);\r\n\t\t\tif (diamondHand.length === 0) return;\r\n\t\t\tconst diamondHandFainted = pokemon.side.foe.pokemon.filter(p => p.fainted && p.baseSpecies.diamondHand);\r\n\t\t\tif (diamondHandFainted.length) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: The Pearl Hand');\r\n\t\t\t\tconst fallen = Math.min(diamondHandFainted.length, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t\tthis.boost({atk: fallen, spa: fallen});\r\n\t\t\t} else this.boost({spe: -2}, pokemon);\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"The Pearl Hand\",\r\n\t\tshortDesc: \"+1 Atk/SpA per fainted Diamond Hand on foe side (max 5). Else -2 Spe.\",\r\n\t},\r\n\ttheevergrowinghungerofcapitalism: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif(target.side.fishingTokens > 0) {\r\n\t\t\t\ttarget.side.removeFishingTokens(1);\r\n\t\t\t\tsource.side.addFishingTokens(1);\r\n\t\t\t} else this.boost({spe: 1}, source, source);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"The Ever-Growing Hunger of Capitalism\u2122\",\r\n\t\tshortDesc: \"This Pokemon's attacks steal one token. If there are none, +1 Spe instead.\",\r\n\t},\r\n\tkatabaticwinds: {\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (this.field.getPseudoWeather('gravity') && move.type === 'Flying' && target !== source) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Katabatic Winds');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Katabatic Winds\",\r\n\t\tshortDesc: \"This Pokemon is immune to Flying-type moves in Gravity.\",\r\n\t},\r\n\tbestfriends: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.category === 'Status' || move.multihit || move.flags['noparentalbond'] || move.flags['charge'] ||\r\n\t\t\tmove.flags['futuremove'] || move.isZ || move.isMax) return;\r\n\t\t\tmove.multihit = 2;\r\n\t\t\tmove.multihitType = 'bestfriends';\r\n\t\t},\r\n\t\t// Damage modifier implemented in BattleActions#modifyDamage()\r\n\t\tonSourceModifySecondaries(secondaries, target, source, move) {\r\n\t\t\tif (move.multihitType === 'bestfriends' && move.id === 'secretpower' && move.hit < 2) {\r\n\t\t\t\t// hack to prevent accidentally suppressing King's Rock/Razor Fang\r\n\t\t\t\treturn secondaries.filter(effect => effect.volatileStatus === 'flinch');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"best friends\",\r\n\t\tshortDesc: \"This Pokemon's moves hit twice at 0.49x power.\",\r\n\t},\r\n\thonorstudent: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tconst diamondHand = pokemon.side.pokemon.filter(p => p !== pokemon && !p.fainted && p.baseSpecies.diamondHand);\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (diamondHand.length > 0) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Honor Student');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t\tthis.damage(0.02 * diamondHand.length * target.baseMaxhp, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Honor Student\",\r\n\t\tshortDesc: \"On switchin, foes lose 2% max HP for each other allied Diamond Hand member.\",\r\n\t},\r\n\tjankster: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.add('-ability', target, 'Jankster');\r\n\t\t\tconst newatk = Math.floor((target.storedStats.atk + source.storedStats.atk) / 2);\r\n\t\t\ttarget.storedStats.atk = newatk;\r\n\t\t\tsource.storedStats.atk = newatk;\r\n\t\t\tconst newspa = Math.floor((target.storedStats.spa + source.storedStats.spa) / 2);\r\n\t\t\ttarget.storedStats.spa = newspa;\r\n\t\t\tsource.storedStats.spa = newspa;\r\n\t\t\tthis.add('-activate', source, 'move: Power Split', '[of] ' + target);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Jankster\",\r\n\t\tshortDesc: \"When this Pokemon is hit, it splits its corresponding attack stat with the attacker.\",\r\n\t},\r\n\t\r\n\t//slate 6\r\n\thoneyedweb: {\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.heal(target.baseMaxhp / 8, target, target);\r\n\t\t\tfor (const allyActive of target.adjacentAllies()) {\r\n                this.heal(allyActive.baseMaxhp / 8, allyActive);\r\n            }\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Honeyed Web\",\r\n\t\tshortDesc: \"This Pokemon and its allies heal 1/8 max HP on hit.\",\r\n\t},\r\n\tacidicdrizzle: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('acidrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Acidic Drizzle\",\r\n\t\tshortDesc: \"On switchin, this Pokemon sets Acid Rain.\",\r\n\t},\r\n\tmadscientist: {\r\n\t\tonStart(source) {\r\n\t\t\tsource.side.addSideCondition('madnesscounter');\r\n\t\t\tconsole.log(source.side.sideConditions);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mad Scientist\",\r\n\t\tshortDesc: \"On switchin, this Pokemon adds a Madness Counter to its side.\",\r\n\t},\r\n\tdivininghorn: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.flags['disaster']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Divining Horn');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHit(target, source, move) {\r\n\t\t\tif (move.flags['disaster']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Divining Horn');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitField(target, source, move) {\r\n\t\t\tif (move.flags['disaster']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Divining Horn');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (move.flags['disaster']) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Divining Horn');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\t//effects of weather in scripts/pokemon\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (['sandstorm', 'hail', 'acidrain', 'graveyard', 'spikes', 'stealthrock'].includes(type)) return false;\r\n\t\t},\r\n\t\tonAllyImmunity(type, pokemon) {\r\n\t\t\tif (['sandstorm', 'hail', 'acidrain', 'graveyard', 'spikes', 'stealthrock'].includes(type)) return false;\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Divining Horn\",\r\n\t\tshortDesc: \"This Pokemon and its allies are immune to disasters and hazards, and ignore weather.\",\r\n\t},\r\n\thoennstan: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet hoenn = pokemon.side.pokemon.filter(p => p !== pokemon && p.fainted && p.baseSpecies.gen === 3).length;\r\n\t\t\tif (hoenn) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Hoenn Stan');\r\n\t\t\t\thoenn = Math.min(hoenn, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `hoenn${hoenn}`, '[silent]');\r\n\t\t\t\tthis.effectState.hoenn = hoenn;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `hoenn${this.effectState.hoenn}`, '[silent]');\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (this.effectState.hoenn) {\r\n\t\t\t\treturn this.chainModify(1 + 0.15 * this.effectState.hoenn);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (this.effectState.hoenn) {\r\n\t\t\t\treturn this.chainModify(1 + 0.15 * this.effectState.hoenn);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hoenn Stan\",\r\n\t\tshortDesc: \"This Pokemon's Atk/SpA gain 15% for each other fainted Gen 3 ally.\",\r\n\t},\r\n\tzombiesonyourlawn: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-message', 'The angry ghost returns to haunt Iron Fist...');\r\n\t\t\tthis.field.setWeather('graveyard');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Zombies on Your Lawn\",\r\n\t\tshortDesc: \"On switchin, this Pokemon sets Graveyard.\",\r\n\t},\r\n\tsupersoursyrup: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Supersour Syrup', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Supersour Syrup\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Speed of opponents by 1 stage.\",\r\n\t},\r\n\t\r\n\t//slate 7\r\n\tinningsout: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp) {\r\n\t\t\t\tsource.trySetStatus('baseball', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Innings Out\",\r\n\t\tshortDesc: \"If this Pokemon is KOed with a move, that move's user gets Baseballed.\",\r\n\t},\r\n\teusociality: {\r\n\t\tonFaint(pokemon) {\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tthis.actions.useMove('pounce', pokemon, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Eusociality\",\r\n\t\tshortDesc: \"When this Pokemon's HP drops to 0, it uses Pounce before fainting.\",\r\n\t},\r\n\tbuyfish: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tsource.side.addFishingTokens(1);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"buy fish\",\r\n\t\tshortDesc: \"This Pokemon's attacks add one token to its side.\",\r\n\t},\r\n\tsourhour: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.type === 'Grass') { // hardcode\r\n\t\t\t\tmove.type = 'Lemon';\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Sour Hour\",\r\n\t\tshortDesc: \"This Pokemon's Grass-type moves are Lemon-type.\",\r\n\t},\r\n\tghoulgobbler: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ghost') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Ghoul Gobbler');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceBasePowerPriority: 17,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\treturn this.chainModify(1.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'graveyard') return false;\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'graveyard') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Ghoul Gobbler\",\r\n\t\tshortDesc: \"This Pokemon is healed 1/4 by Ghost, 1/8 by Graveyard; is hurt 1.25x by Fire, 1/8 by Sun.\",\r\n\t},\r\n\t\r\n\t//slate 8\r\n\tblightofthefallen: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Ghost' && target.hp <= target.maxhp / 4 && this.field.isWeather('graveyard')) target.faint();\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Blight of the Fallen\",\r\n\t\tshortDesc: \"This Pokemon's Ghost-type moves faint targets under 25% HP in Graveyard.\",\r\n\t},\r\n\ttimefrozenbody: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.boost({spe: -1});\r\n\t\t\tif(pokemon.boosts['spe'] === -6 && pokemon.status !== 'frz') {\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\tpokemon.setStatus('frz');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (pokemon.status === 'frz') pokemon.cureStatus();\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Timefrozen Body\",\r\n\t\tshortDesc: \"-1 Spe each turn. -6 Spe: frozen. Thaws upon switching out.\",\r\n\t},\r\n\tbloodlinespellblazeball: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const move of pokemon.moveSlots) {\r\n\t\t\t\tif (move.id === 'blazeball') return;\r\n\t\t\t}\r\n\t\t\tconst blazeball = this.dex.moves.get('blazeball');\r\n\t\t\tconst newMove = {\r\n\t\t\t\tmove: blazeball.name,\r\n\t\t\t\tid: blazeball.id,\r\n\t\t\t\tpp: blazeball.pp * 1.6,\r\n\t\t\t\tmaxpp: blazeball.pp * 1.6,\r\n\t\t\t\ttarget: blazeball.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tpokemon.moveSlots[pokemon.moveSlots.length] = newMove;\r\n\t\t\tpokemon.baseMoveSlots[pokemon.baseMoveSlots.length] = newMove;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bloodline Spell: Blazeball\",\r\n\t\tshortDesc: \"This Pokemon has Blazeball as an additional moveslot.\",\r\n\t},\r\n\tunitedparty: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst copen = pokemon.side.pokemon.filter(p => p != pokemon && !p.fainted && p.baseSpecies.copen);\r\n\t\t\tif (copen.length > 0) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: United Party');\r\n\t\t\t\tthis.add('-start', pokemon, `copen${copen.length}`, '[silent]');\r\n\t\t\t\tpokemon.copen = copen.length;\r\n\t\t\t}\r\n\t\t\t//effects in respective fields (gonna do this later lol...)\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"United Party\",\r\n\t\tshortDesc: \"(Non-functional) Field effects have 1 extra turn per Copen Pokemon.\",\r\n\t},\r\n\tbathroombreak: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water') target.switchFlag = true;\r\n\t\t},\r\n\t\tname: \"Bathroom Break\",\r\n\t\tshortDesc: \"This Pokemon switches out when hit by a Water move.\",\r\n\t},\r\n\tnecrodancer: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.effectiveWeather() === 'graveyard') {\r\n\t\t\t\t\tthis.damage(target.baseMaxhp / 16, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Necrodancer\",\r\n\t\tshortDesc: \"If Graveyard is active, foes lose 1/16 of their max HP at the end of each turn.\",\r\n\t},\r\n\tconversionz: {\r\n\t\tshortDesc: \"If the Pok\u00E9mon changes its type, the result is permanent. Deletes STAB.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.species.id !== 'porygonzmega') return;\r\n\t\t\tconst type = this.dex.species.get(pokemon.species).types[0];\r\n\t\t\tif (pokemon.hasType(type) || !pokemon.setType(type)) return;\r\n\t\t\tthis.add('-start', pokemon, 'typechange', type);\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (source.species.id !== 'porygonzmega') return;\r\n\t\t\tif (move.id === 'conversion' || move.id === 'conversion2') {\r\n\t\t\t\tthis.add('-ability', source, 'Conversion-Z');\r\n\t\t\t\tconst pokemon = this.dex.species.get(source.species);\r\n\t\t\t\tpokemon.types[0] = source.types[0];\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tdelete move.stab;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Conversion-Z\",\r\n\t\trating: 5,\r\n\t\tnum: -5000,\r\n\t},\r\n\tsnakewood: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('ability:bulletproof');\r\n\t\t\tpokemon.addVolatile('ability:gluttony');\r\n\t\t\tpokemon.addVolatile('ability:quickfeet');\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Snakewood\",\r\n\t\tshortDesc: \"Bulletproof + Gluttony + Quick Feet\",\r\n\t},\r\n\tpristinedessert: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (['Bug', 'Grass'].includes(move.type) && target !== source) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Pristine Dessert');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('pristinedessert');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonResidualOrder: 28,\r\n\t\t\tonResidualSubOrder: 2,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Pristine Dessert');\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tif (!pokemon.activeTurns) {\r\n\t\t\t\t\tthis.effectState.duration += 1;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Pristine Dessert');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Pristine Dessert\",\r\n\t\tshortDesc: \"This Pokemon is immune to Bug/Grass, but has halved Spe for 3 turns.\",\r\n\t},\r\n\tdisgustingrepulsivedessert: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('ability:aromaveil');\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Disgusting, Repulsive Dessert\",\r\n\t\tshortDesc: \"Aroma Veil\",\r\n\t},\r\n\t\r\n\t//vanilla\r\n\tmimicry: {\r\n\t\tinherit: true,\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tlet types;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\tcase 'electricterrain':\r\n\t\t\t\ttypes = ['Electric'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grassyterrain':\r\n\t\t\t\ttypes = ['Grass'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mistyterrain':\r\n\t\t\t\ttypes = ['Fairy'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psychicterrain':\r\n\t\t\t\ttypes = ['Psychic'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fishingterrain':\r\n\t\t\t\ttypes = ['Water'];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t}\r\n\t\t\tconst oldTypes = pokemon.getTypes();\r\n\t\t\tif (oldTypes.join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\tif (this.field.terrain || pokemon.transformed) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'), '[from] ability: Mimicry');\r\n\t\t\t\tif (!this.field.terrain) this.hint(\"Transform Mimicry changes you to your original un-transformed types.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Mimicry');\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpoisonpuppeteer: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Thatcher: If this Pokemon poisons a target, the target also becomes confused.\",\r\n\t\tonAnyAfterSetStatus(status, target, source, effect) {\r\n\t\t\tif (source.baseSpecies.name !== \"Margaret Thatcher\") return;\r\n\t\t\tif (source !== this.effectState.target || target === source || effect.effectType !== 'Move') return;\r\n\t\t\tif (status.id === 'psn' || status.id === 'tox') {\r\n\t\t\t\ttarget.addVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t//fake ability\r\n\thacked: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-message', `${pokemon.name} was hacked!`);\r\n\t\t},\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName(pokemon.name)}|https://twitter.com/Duo__M2`);\r\n\t\t\t\tif (target) target.addVolatile('ability:hacked');\r\n\t\t\t\treturn priority - 6.0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hacked\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["pokemon", "move", "target"]
}
