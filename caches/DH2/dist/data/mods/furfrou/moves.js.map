{
  "version": 3,
  "sources": ["../../../../data/mods/furfrou/moves.ts"],
  "sourcesContent": ["export const Moves: { [moveid: string]: ModdedMoveData } = {\r\n\thiddenpower: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerfighting: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerfire: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowergrass: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerwater: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerelectric: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerice: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerpoison: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerground: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerpsychic: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerdark: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerbug: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerghost: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerdragon: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowersteel: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerflying: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerrock: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\twormholedisruption: {\r\n\t\tnum: -1024,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Wormhole Disruption\",\r\n\t\tshortDesc: \"On hit, user lowers its highest stat by 1 stage and increases its lowest by 1 stage.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Dark Void', target);\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\r\n\t\tonHit(source, target, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tconst bestStat = target.getBestStat(true, true);\r\n\t\t\t\tlet statName: StatIDExceptHP = 'atk';\r\n\t\t\t\tlet worstStat = Number.MAX_VALUE;\r\n\t\t\t\tconst stats: StatIDExceptHP[] = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\t\t\t\tfor (const i of stats) {\r\n\t\t\t\t\tif (target.getStat(i, true, true) < worstStat) {\r\n\t\t\t\t\t\tstatName = i;\r\n\t\t\t\t\t\tworstStat = target.getStat(i, true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: 1}, target);\r\n\t\t\t\tthis.boost({[bestStat]: -1}, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tclusterbomb: {\r\n\t\tnum: -1050,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Cluster Bomb\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tshortDesc: \"User sets a hazard that repeats this attack on entry.\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Pyro Ball', target);\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tif (!target.side.addSlotCondition(target, 'clusterbomb')) return false;\r\n\t\t\t\t\tObject.assign(target.side.slotConditions[target.position]['clusterbomb'], {\r\n\t\t\t\t\t\tmove: 'clusterbomb',\r\n\t\t\t\t\t\tsource: source,\r\n\t\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\t\tside: target.side,\r\n\t\t\t\t\t\tmoveData: {\r\n\t\t\t\t\t\t\tid: 'clusterbomb',\r\n\t\t\t\t\t\t\tname: \"Cluster Bomb\",\r\n\t\t\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\t\t\tbasePower: 60,\r\n\t\t\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\t\t\tflags: {},\r\n\t\t\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\t\t\tonTryMove() {\r\n\t\t\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonPrepareHit(target, source) {\r\n\t\t\t\t\t\t\t\tthis.add('-anim', source, 'Earth Power', target);\r\n\t\t\t\t\t\t\t\tthis.add('-message', `The shards detonated!`);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\t\t\ttype: 'Fire',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tthis.add('-message', `Explosive shards from the bomb went everywhere!`);\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tif (!target.side.addSlotCondition(target, 'clusterbomb')) return false;\r\n\t\t\t\t\tObject.assign(target.side.slotConditions[target.position]['clusterbomb'], {\r\n\t\t\t\t\t\tmove: 'Cluster Bomb',\r\n\t\t\t\t\t\tsource: source,\r\n\t\t\t\t\t\tposition: target.position,\r\n\t\t\t\t\t\tside: target.side,\r\n\t\t\t\t\t\tmoveData: {\r\n\t\t\t\t\t\t\tid: 'clusterbomb',\r\n\t\t\t\t\t\t\tname: \"Cluster Bomb\",\r\n\t\t\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\t\t\tbasePower: 60,\r\n\t\t\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\t\t\tflags: {},\r\n\t\t\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\t\t\tonTryMove() {\r\n\t\t\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonPrepareHit(target, source) {\r\n\t\t\t\t\t\t\t\tthis.add('-anim', source, 'Earth Power', target);\r\n\t\t\t\t\t\t\t\tthis.add('-message', `The shards detonated!`);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tOnAfterHit(target, pokemon, move) {\r\n\t\t\t\t\t\t\t\ttarget.side.removeSideCondition('clusterbomb');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\t\t\ttype: 'Fire',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.add('-message', `Explosive shards from the bomb went everywhere!`);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Cluster Bomb');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get('clusterbomb');\r\n\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);\r\n\t\t\t},\r\n\t\t\tonSideEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'Cluster Bomb');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {}, // Sheer Force-boosted\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tlusterthrust: {\r\n\t\tnum: -1051,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 40,\r\n\t\tbasePowerCallback(source, target, move) {\r\n\t\t\tif (source.volatiles['solischarge']) {\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Luster Thrust\",\r\n\t\tpp: 20,\r\n\t\tpriority: 2,\r\n\t\tflags: {metronome: 1, contact: 1, mustpressure: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Geomancy', source);\r\n\t\t\tthis.add('-anim', source, 'Quick Attack', target);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (source.volatiles['solischarge']) {\r\n\t\t\t\tdelete source.volatiles['solischarge'];\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tlightparry: {\r\n\t\tnum: -1054,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Light Parry\",\r\n\t\tshortDesc: \"Incoming damage is quartered. User gains Solis Charge (1.5x damage).\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {bypasssub: 1, noassist: 1, failcopycat: 1},\r\n\t\tvolatileStatus: 'lightparry',\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t\tthis.add('-anim', pokemon, 'Future Sight', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Light Parry');\r\n\t\t\t},\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t},\r\n\t\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\t\ttarget.addVolatile('solischarge');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {effect: 'redirect'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tnecashrapnel: {\r\n\t\tnum: -4000,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Neca Shrapnel\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tshortDesc: \"User hits 2-5 times. Secondary effect and chance depends on terrain.\",\r\n\t\tmultihit: [2, 5],\r\n\t\tsecondary: {}, // sheer force\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Power Gem', target);\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tif (this.randomChance(1, 5)) {\r\n\t\t\t\t\tif (target.getStat('atk', false, true) > target.getStat('spa', false, true)) {\r\n\t\t\t\t\t\tthis.boost({atk: -1}, target);\r\n\t\t\t\t\t} else this.boost({spa: -1}, target);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tif (this.randomChance(1, 5)) {\r\n\t\t\t\t\tthis.boost({spe: -1}, target);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tif (this.randomChance(1, 5)) {\r\n\t\t\t\t\tthis.boost({def: -1}, target);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tif (this.randomChance(1, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.randomChance(1, 10)) {\r\n\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tzMove: {basePower: 140},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\ttriplekick: {\r\n\t\tnum: 167,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Triple Kick\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tmultihit: 3,\r\n\t\tmultiaccuracy: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: {basePower: 120},\r\n\t\tmaxMove: {basePower: 80},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\treconsector: {\r\n\t\tnum: -1060,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Recon Sector\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tignoreImmunity: true,\r\n\t\tsideCondition: \"reconsector\",\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Magnet Rise\", source);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Recon Sector');\r\n\t\t\t\tthis.add('-message', `A healing plasma runs through Ausma's team!`);\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\t\tthis.add('-anim', pokemon, \"Charge\", pokemon);\r\n\t\t\t\t\tthis.heal(pokemon.maxhp / 4);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-anim', pokemon, \"Charge\", pokemon);\r\n\t\t\t\t\tthis.heal(pokemon.maxhp / 8);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Hazard: heals 1/8 HP on entry, 1/4 in Electric Terrain.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tvoltsector: {\r\n\t\tnum: -1061,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Volt Sector\",\r\n\t\tshortDesc: \"Move repeats at the end of the turn for 5 turns.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tignoreImmunity: true,\r\n\t\tisFutureMove: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'voltsector')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['voltsector'], {\r\n\t\t\t\tduration: 5,\r\n\t\t\t\tmove: 'voltsector',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tposition: target.position,\r\n\t\t\t\tside: target.side,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'voltsector',\r\n\t\t\t\t\tname: \"Volt Sector\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 40,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\tonPrepareHit(target, source, move) {\r\n\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\tthis.add('-anim', target, \"Magnet Rise\", target);\r\n\t\t\t\t\t},\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\ttype: 'Electric',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (source.species.baseSpecies === 'Ausma') this.add('-message', `${(source.illusion ? source.illusion.name : source.name)} prepares her plane sectors for attack!`);\r\n\t\t\telse this.add('-message', `${(source.illusion ? source.illusion.name : source.name)} prepares an electrical ambush!`);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\t// this is a slot condition\r\n\t\t\tduration: 5,\r\n\t\t\tonResidualOrder: 3,\r\n\t\t\tonResidual(target) {\r\n\t\t\t\t// unlike a future move, Flurry activates each turn\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get('voltsector');\r\n\t\t\t\tif (data.target.fainted || data.target === data.source) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because the target is ${(data.fainted ? 'fainted' : 'the user')}.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.source.species.baseSpecies === 'Ausma') this.add('-message', `${(data.target.illusion ? data.target.illusion.name : data.target.name)} is being zapped by Ausma's plane sectors!`);\r\n\t\t\t\telse this.add('-message', `${(data.target.illusion ? data.target.illusion.name : data.target.name)} is being zapped!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\tthis.add('-anim', data.source, \"Thunderbolt\", data.target);\r\n\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\t// unlike a future move, Flurry activates each turn\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get('voltsector');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\tthis.add('-anim', data.source, \"Thunderbolt\", data.target);\r\n\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);//??\r\n\t\t\t\tif (data.source.species.baseSpecies === 'Ausma') this.add('-message', `Ausma's plane sectors retracted!`);\r\n\t\t\t\telse this.add('-message', `The electric ambush ceased!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\trapidspin: { //for deterraven and ausma moves//\r\n\t\tnum: 229,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Rapid Spin\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'clustershrapnel', 'reconsector'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'clustershrapnel', 'reconsector'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspe: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tdefog: { //ausma and deterraven moves//\r\n\t\tnum: 432,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Defog\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'clustershrapnel', 'reconsector',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge', 'clustershrapnel', 'reconsector',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: {boost: {accuracy: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tstoneaxe: {\r\n\t\tnum: 830,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Stone Axe\",\r\n\t\tcritRatio: 2,\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {}, // Sheer Force-boosted\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Sets Stealth Rock on hit. High crit ratio.\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tgravity: {\r\n\t\tnum: 356,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Gravity\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tpseudoWeather: 'gravity',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('newtonsapple')) {\r\n\t\t\t\t\t\treturn 8;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonFieldStart(target, source) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Gravity', '[persistent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Gravity');\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tlet applies = false;\r\n\t\t\t\t\tif (pokemon.removeVolatile('bounce') || pokemon.removeVolatile('fly')) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['skydrop']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\r\n\t\t\t\t\t\tif (pokemon.volatiles['skydrop'].source) {\r\n\t\t\t\t\t\t\tthis.add('-end', pokemon.volatiles['twoturnmove'].source, 'Sky Drop', '[interrupt]');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpokemon.removeVolatile('skydrop');\r\n\t\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['magnetrise']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tdelete pokemon.volatiles['magnetrise'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['telekinesis']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tdelete pokemon.volatiles['telekinesis'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (applies) this.add('-activate', pokemon, 'move: Gravity');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyAccuracy(accuracy) {\r\n\t\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\t\treturn this.chainModify([6840, 4096]);\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['gravity']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// groundedness implemented in battle.engine.js:BattlePokemon#isGrounded\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (move.flags['gravity'] && !move.isZ) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Gravity', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (move.flags['gravity'] && !move.isZ) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Gravity', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (move.id === 'gravitonwave') {\r\n\t\t\t\t\tthis.debug('Graviton Wave boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 2,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Gravity');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {boost: {spa: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tplasmarush: {\r\n\t\tnum: 1005,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"If charged: +3 Atk and SpA. Else: +2 Atk and SpA, and user charges.\",\r\n\t\tname: \"Plasma Rush\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, nosketch: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Thunder Cage', target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (target?.volatiles['charge']) {\r\n\t\t\t\tthis.boost({atk: 3, spa: 3}, target);\r\n\t\t\t} else {\r\n\t\t\t\tthis.boost({atk: 2, spa: 2}, target);\r\n\t\t\t\ttarget.addVolatile('charge');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\trelicsong: {\r\n\t\tnum: 547,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Relic Song\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'slp',\r\n\t\t},\r\n\t\tonHit(target, pokemon, move) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies === 'Meloetta' && !pokemon.transformed) {\r\n\t\t\t\tmove.willChangeForme = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (move.willChangeForme) {\r\n\t\t\t\tconst meloettaForme = pokemon.species.id === 'meloettapirouette' ? '' : '-Pirouette';\r\n\t\t\t\tpokemon.formeChange('Meloetta' + meloettaForme, this.effect, true, '[msg]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tsnowscape: {\r\n\t\tnum: 883,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Snowscape\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1},\r\n\t\tweather: 'snow',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tsyrupbomb: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tshortDesc: \"Lowers Speed by 2 stages for 3 turns.\",\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 4,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Syrup Bomb');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 14,\r\n\t\t\tonResidual() {\r\n\t\t\t\tthis.boost({spe: -2});\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Syrup Bomb', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\ttriplearrows: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tshortDesc: \"Lowers target's Defense by 1; user's crit ratio +2.\",\r\n\t\tname: \"Triple Arrows\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tcritRatio: null,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'focusenergy',\r\n\t\t},\r\n\t\tcontestType: \"Cool\", //Necessary\r\n\t\ttype: \"Fighting\",\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\telectroball: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tlet ratio = Math.floor(pokemon.getStat('spe') / target.getStat('spe') * 10) / 10;\r\n\t\t\tif (!isFinite(ratio)) ratio = 0;\r\n\t\t\tlet bp = 40;\r\n\t\t\tif (ratio >= 1) bp = 60;\r\n\t\t\tif (ratio >= 1.5) bp = 80;\r\n\t\t\tif (ratio >= 2) bp = 100;\r\n\t\t\tif (ratio >= 3) bp = 120;\r\n\t\t\tif (ratio >= 4) bp = 150;\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t},\r\n\techoedvoice: {\r\n\t\tnum: 497,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tlet bp = move.basePower;\r\n\t\t\tif (this.field.pseudoWeather.echoedvoice) {\r\n\t\t\t\tbp = move.basePower * this.field.pseudoWeather.echoedvoice.multiplier;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Echoed Voice\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1, metronome: 1},\r\n\t\tonTry() {\r\n\t\t\tthis.field.addPseudoWeather('echoedvoice');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonFieldStart() {\r\n\t\t\t\tthis.effectState.multiplier = 1;\r\n\t\t\t},\r\n\t\t\tonFieldRestart() {\r\n\t\t\t\tif (this.effectState.duration !== 3) {\r\n\t\t\t\t\tthis.effectState.duration = 3;\r\n\t\t\t\t\tif (this.effectState.multiplier < 5) {\r\n\t\t\t\t\t\tthis.effectState.multiplier++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Power increases when used on consecutive turns. Power resets if not used for more than 1 turn.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\ttoxicgreed: {\r\n\t\tnum: 738,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Toxic Greed\",\r\n\t\tshortDesc: \"Sets a volatile that leeches 1/16 HP per turn. Poison-types are immune.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, bypasssub: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bitter Malice\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.hasType('Poison')) return null;\r\n\t\t\t\tthis.add('-start', pokemon, 'Toxic Greed');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 8,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tconst target = this.getAtSlot(pokemon.volatiles['toxicgreed'].sourceSlot);\r\n\t\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\t\tthis.debug('Nothing to leech into');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst damage = this.damage(pokemon.baseMaxhp / 16, pokemon, target);\r\n\t\t\t\tif (damage) {\r\n\t\t\t\t\tthis.heal(damage, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'toxicgreed',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target", "source", "move"]
}
