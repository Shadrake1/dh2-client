{
  "version": 3,
  "sources": ["../../../../data/mods/agoldenexperience/moves.ts"],
  "sourcesContent": ["export const Moves: { [k: string]: ModdedMoveData; } = {\r\n\ttentacatch: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Tentacatch\",\r\n\t\tshortDesc: \"Traps and damages the target for 4-5 turns. Lowers the target's Atk by 1 stage.\",\r\n\t\tdesc: \"Traps and damages the target for 4-5 turns. Lowers the target's Atk by 1 stage.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Toxic Thread\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tschuss: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"User takes 1/3 of damages inflicted.\",\r\n\t\tname: \"Schuss\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, gravity: 1 },\r\n\t\trecoil: [33, 100],\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Icicle Crash\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tgoodfishing: {\r\n\t\tnum: -3,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Good Fishing\",\r\n\t\tshortDesc: \"1.5x if foe holds an item. Removes item and heals 10% of max HP.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tconst item = target.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, target.itemState, target, target, move, item)) return;\r\n\t\t\tif (item.id) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (source.hp) {\r\n\t\t\t\tconst item = target.takeItem();\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tthis.add('-enditem', target, item.name, '[from] move: Good Fishing', '[of] ' + source);\r\n\t\t\t\t\tthis.heal(source.maxhp / 10, source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Brave Bird\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tmagisterialwind: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Ignores the target's ability, cannot be redirected.\",\r\n\t\tname: \"Magisterial Wind\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tignoreAbility: true,\r\n\t\ttracksTarget: true,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Tailwind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tstellarpunch: {\r\n\t\tnum: -5,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Ignores the target's ability.\",\r\n\t\tname: \"Stellar Punch\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { punch: 1, contact: 1, protect: 1, mirror: 1 },\r\n\t\tignoreAbility: true,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dynamic Punch\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\ttoxicthread: {\r\n\t\tinherit: true,\r\n\t\tstatus: 'tox',\r\n\t\tdesc: \"Lowers the target's Speed by 1 stage and badly poisons it.\",\r\n\t\tshortDesc: \"Lowers the target's Speed by 1 and badly poisons it.\",\r\n\t},\r\n\ttoxicsting: {\r\n\t\tshortDesc: \"50% drain; badly poison target.\",\r\n\t\tnum: -6,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Toxic Sting\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, heal: 1 },\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tstatus: 'tox',\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Poison Fang\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\tdetectmagic: {\r\n\t\tnum: -7,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Detect Magic\",\r\n\t\tdesc: \"This move is super effective on Dark type targets.\",\r\n\t\tshortDesc: \"Super effective on Dark targets.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Dark') return 1;\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Psychic'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psychic\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdispelmagic: {\r\n\t\tnum: -8,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dispel Magic\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonHit(target) {\r\n\t\t\ttarget.clearBoosts();\r\n\t\t\tthis.add('-clearboost', target);\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psyshock\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tshortDesc: \"The target is cleared from all its stat changes.\",\r\n\t},\r\n\tphotopower: {\r\n\t\tnum: -9,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Photo-Power\",\r\n\t\tshortDesc: \"Raises user's Sp. Atk by 2 and Speed by 1 in Sun.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1 },\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) move.boosts = { spa: 2, spe: 1 };\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Growth\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: { boost: { spa: 1 } },\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdraconicwrath: {\r\n\t\tnum: -10,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (!target.newlySwitched) {\r\n\t\t\t\tthis.debug('Draconic Wrath damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\tthis.debug('Draconic Wrath NOT boosted');\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Draconic Wrath\",\r\n\t\tshortDesc: \"If a foe isn't switching in, hits it at 2x power.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Outrage\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t},\r\n\tpurifyingstream: {\r\n\t\tnum: -11,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Purifying Stream\",\r\n\t\tshortDesc: \"Resets all of the target's stat stages to 0.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonHit(target) {\r\n\t\t\ttarget.clearBoosts();\r\n\t\t\tthis.add('-clearboost', target);\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Scald\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\trailwaysmash: {\r\n\t\tnum: -12,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Railway Smash\",\r\n\t\tshortDesc: \"Has 33% recoil.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\trecoil: [33, 100],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Iron Head\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tgoldenexperience: {\r\n\t\tnum: -13,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Golden Experience\",\r\n\t\tshortDesc: \"Heal 50% of damages dealt.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, punch: 1, heal: 1 },\r\n\t\tdrain: [1, 2],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Moonblast\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdimensionalbleeding: {\r\n\t\tnum: -14,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dimensional Bleeding\",\r\n\t\tshortDesc: \"Physical if Atk > SpA.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hyperspace Fury\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tfrostbite: {\r\n\t\tnum: -15,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The Pok\u00E9mon at the user's position steals some of the target's maximum HP at the end of each turn. Damage begins at 1/16, rounded down, and increases each turn like Toxic. If Big Root is held by the recipient, the HP recovered is 1.3x normal, rounded half down. If the target uses Baton Pass, the replacement will continue being leeched. If the target switches out, the effect ends.\",\r\n\t\tshortDesc: \"Target's HP is restored to user every turn. Damage increases like Toxic.\",\r\n\t\tname: \"Frostbite\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, reflectable: 1, mirror: 1 },\r\n\t\tvolatileStatus: 'frostbite',\r\n\t\tcondition: {\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.effectState.stage = 0;\r\n\t\t\t\tthis.add('-start', target, 'move: Frostbite');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 8,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tif (this.effectState.stage < 15) {\r\n\t\t\t\t\tthis.effectState.stage++;\r\n\t\t\t\t}\r\n\t\t\t\t// const target = this.effectState.source.side.active[pokemon.volatiles['frostbite'].sourcePosition];\r\n\t\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\t\tif (pokemon.volatiles['frostbite']) {\r\n\t\t\t\t\t\tconst damage = this.damage(this.clampIntRange(pokemon.baseMaxhp / 16, 1) * this.effectState.stage, pokemon, target,); //'[silent]'); //looking at that soon\r\n\t\t\t\t\t\tif (damage) {\r\n\t\t\t\t\t\t\tthis.heal(damage, target, pokemon);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\t\t\tthis.debug('Nothing to leech into');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonTryImmunity(target) {\r\n\t\t\treturn (!target.hasType('Fire') && !target.hasType('Ice'));\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Icy Wind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: { boost: { def: 1 } },\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\taspiravoid: {\r\n\t\tnum: -16,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Aspira Void\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, heal: 1 },\r\n\t\tdrain: [1, 2],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dark Pulse\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Heals 50% of damage dealt.\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tunderdog: {\r\n\t\tnum: -17,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Underdog\",\r\n\t\tshortDesc: \"BP x2 if target's Atk > user's Atk.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tconst targetAtk = target.storedStats.atk;\r\n\t\t\tconst sourceAtk = source.storedStats.atk;\r\n\t\t\tif (targetAtk >= sourceAtk) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Facade\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: { boost: { spe: 1 } },\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tflamingsphere: {\r\n\t\tnum: -18,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t\tname: \"Flaming Sphere\",\r\n\t\tpp: 20,\r\n\t\tpriority: 1,\r\n\t\tflags: { bullet: 1, protect: 1, mirror: 1 },\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Pyro Ball\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tfireball: {\r\n\t\tnum: -19,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Fire Ball\",\r\n\t\tshortDesc: \"Ends all existing terrains.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { bullet: 1, protect: 1, mirror: 1 },\r\n\t\tonHit() {\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Pyro Ball\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tbackfire: {\r\n\t\tnum: -20,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Backfire NOT boosted');\r\n\t\t\t\treturn move.basePower;\r\n\t\t\t}\r\n\t\t\tthis.debug('Backfire damage boost');\r\n\t\t\treturn move.basePower * 2;\r\n\t\t},\r\n\t\tpriority: -1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Backfire\",\r\n\t\tpp: 15,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Overheat\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Usually goes last. Power doubles if the user moves after the target.\",\r\n\t},\r\n\thighwater: {\r\n\t\tnum: -21,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user restores 1/2 of its maximum HP, rounded half up.\",\r\n\t\tshortDesc: \"Heals the user by 50% of its max HP.\",\r\n\t\tname: \"High Water\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, heal: 1 },\r\n\t\theal: [1, 2],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Life Dew\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tseajaws: {\r\n\t\tnum: -22,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sea Jaws\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { bite: 1, contact: 1, protect: 1, mirror: 1 },\r\n\t\tonTryHit(pokemon) {\r\n\t\t\t// will shatter screens through sub, before you hit\r\n\t\t\tif (pokemon.runImmunity('Water')) {\r\n\t\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Fishious Rend\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\tdesc: \"If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target's side of the field before damage is calculated.\",\r\n\t\tshortDesc: \"Destroys screens, unless the target is immune.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tparallelcircuit: {\r\n\t\tnum: -23,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Parallel Circuit\",\r\n\t\tshortDesc: \"Hits 2-5 times in one turn.\",\r\n\t\tdesc: \"Hits 2-5 times in one turn.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tmultihit: [2, 5],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bolt Beak\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: { basePower: 140 },\r\n\t\tmaxMove: { basePower: 130 },\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tcondensate: {\r\n\t\tnum: -24,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Condensate\",\r\n\t\tshortDesc: \"Power x2 if on Misty Terrain.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonBasePower(basePower, source) {\r\n\t\t\tif (this.field.isTerrain('mistyterrain') && source.isGrounded()) {\r\n\t\t\t\tthis.debug('terrain buff');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (this.field.isTerrain('mistyterrain') && source.isGrounded()) {\r\n\t\t\t\tmove.target = 'allAdjacentFoes';\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Icy Wind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tchillblain: {\r\n\t\tnum: -25,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Chillblain\",\r\n\t\tshortDesc: \"Freezes the target.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, reflectable: 1, mirror: 1 },\r\n\t\tstatus: 'frz',\r\n\t\tignoreImmunity: false,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Icy Wind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmonkeypunch: {\r\n\t\tnum: -26,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Monkey Punch\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, punch: 1 },\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Grass' || type === 'Bug') return 1;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Close Combat\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Super effective on Bug and Grass targets.\",\r\n\t},\r\n\tindomitablespirit: {\r\n\t\tnum: -27,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Power doubles if last move failed or was resisted.\",\r\n\t\tname: \"Indomitable Spirit\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon.moveLastTurnResult === false) return move.basePower * 2; // if the last move failed\r\n\t\t\tif (pokemon.volatiles['indomitablespirit'].boost === 'lastMoveResisted') return move.basePower * 2; // if the last move was resisted - problematic line\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Vacuum Wave\", target);\r\n\t\t},\r\n\t\tcondition: { // this is *not* meant to be set as part of the move; partially defined in scripts.ts!\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\t\tthis.effectState.boost = 'thisMoveResisted';\r\n\t\t\t\t\tthis.debug('set Indomitable Spirit boost');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMove(pokemon) {\r\n\t\t\t\tif (this.effectState.boost === 'thisMoveResisted') {\r\n\t\t\t\t\tthis.effectState.boost = 'lastMoveResisted';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.boost = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tcosmicpunch: {\r\n\t\tnum: -28,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tdesc: \"Deals damage to the target based on its Special Defense instead of Defense.\",\r\n\t\tshortDesc: \"Damages target based on Sp. Def, not Defense.\",\r\n\t\tcategory: \"Physical\",\r\n\t\toverrideDefensiveStat: 'spd',\r\n\t\tname: \"Cosmic Punch\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { punch: 1, protect: 1, mirror: 1 },\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dynamic Punch\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tmusclecare: {\r\n\t\tnum: -29,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Muscle Care\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, heal: 1 },\r\n\t\theal: [1, 2],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bulk Up\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tdesc: \"The user restores 1/2 of its maximum HP, rounded half up.\",\r\n\t\tshortDesc: \"Heals the user by 50% of its max HP.\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tdissolution: {\r\n\t\tnum: -30,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dissolution\",\r\n\t\tpp: 15,\r\n\t\tdesc: \"If the user moves after the target, the target's Ability is rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. If the target's Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Tera Shift, Zen Mode, or Zero to Hero, this effect does not happen, and receiving the effect through Baton Pass ends the effect immediately.\",\r\n\t\tshortDesc: \"Nullifies the foe(s) Ability if the foe(s) move first.\",\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonHit(target) {\r\n\t\t\tif (target.getAbility().flags['cantsuppress']) return;\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) return;\r\n\t\t\ttarget.addVolatile('gastroacid');\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target) {\r\n\t\t\tif (target.getAbility().flags['cantsuppress']) return;\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) return;\r\n\t\t\ttarget.addVolatile('gastroacid');\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Acid Spray\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\tlandslide: {\r\n\t\tnum: -31,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Landslide\",\r\n\t\tshortDesc: \"Removes the hazards on the field. Lowers the target's Speed by one stage.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({ spe: -1 });\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Landslide', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Landslide', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Mud Shot\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tepicenter: {\r\n\t\tnum: -32,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Epicenter\",\r\n\t\tdesc: \"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Doom Desire is already in effect for the target's position.\",\r\n\t\tshortDesc: \"Hits two turns after being used.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { futuremove: 1, protect: 1, mirror: 1 },\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'epicenter',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'epicenter',\r\n\t\t\t\t\tname: \"epicenter\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 120,\r\n\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\ttype: 'Ground',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Epicenter');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Mud Shot\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdowndraft: {\r\n\t\tnum: -33,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Downdraft\",\r\n\t\tdesc: \"If the opponent is Flying type or has Levitate, the opponent's Speed is lowered by one stage.\",\r\n\t\tshortDesc: \"-1 Speed if the target has Levitate or is Flying type.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tonAfterHit(this, target, source, move) {\r\n\t\t\tif (!(target.isGrounded())) {\r\n\t\t\t\tthis.boost({ spe: -1 }, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tclearmind: {\r\n\t\tnum: -34,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Clear Mind\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1 },\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t\taccuracy: 1,\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Calm Mind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t\tdesc: \"Raises the user's Special Attack and accuracy by 1 stage.\",\r\n\t\tshortDesc: \"Raises the user's Sp. Attack and accuracy by 1.\",\r\n\t\tzMove: { boost: { spa: 1 } },\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tgolemstrike: {\r\n\t\tnum: -35,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Golem Strike\",\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"10% chance to lower target's Def\",\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Wrecker\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tpunishingblow: {\r\n\t\tnum: -36,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Punishing Blow\",\r\n\t\tshortDesc: \"If the target has boosts, this move always results in a critical hit.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tlet hasBoost = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tif (!target) return;\r\n\t\t\tfor (i in target.boosts) {\r\n\t\t\t\tif (target.boosts[i] !== 0) hasBoost = true;\r\n\t\t\t}\r\n\t\t\tif (hasBoost) move.critRatio = 5;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Wicked Blow\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tdraconiccurse: {\r\n\t\tnum: -37,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Draconic Curse\",\r\n\t\tdesc: \"This move has 10% chance to lower the opponent's SpD.\",\r\n\t\tshortDesc: \"10% chance to lower opponent's SpD.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dragon Pulse\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdraconicfury: {\r\n\t\tnum: -38,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Draconic Fury\",\r\n\t\tshortDesc: \"Has a 10% to lower the target's Def.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Outrage\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tcontrariety: {\r\n\t\tnum: -39,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Contrariety\",\r\n\t\tshortDesc: \"Every Pokemon on the field gets Contrary as an ability.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonHitField() {\r\n\t\t\tlet success = false;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon.ability === 'truant' || pokemon.ability === 'contrary' || pokemon.getAbility().flags['cantsuppress']) continue;\r\n\t\t\t\tconst oldAbility = pokemon.setAbility('contrary');\r\n\t\t\t\tif (oldAbility) this.add('-ability', pokemon, 'Contrary', '[from] move: Contrary');\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit: function (target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Torment\", target, source);\r\n\t\t},\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Dark\",\r\n\t\tzMove: { boost: { def: 1 } },\r\n\t},\r\n\tblackflash: {\r\n\t\tnum: -40,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Black Flash\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Night Daze\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Lowers the user's SpA and SpD by one afterward.\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\thypnotichorror: {\r\n\t\tnum: -41,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hypnotic Horror\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hypnosis\", target);\r\n\t\t\tthis.add('-anim', source, \"Psycho Boost\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Lowers the user's SpA and SpD by one afterward.\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tsneakyassault: {\r\n\t\tnum: -42,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 30,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Hits three times. Each hit has 10% to lower the target's Def.\",\r\n\t\tname: \"Sneaky Assault\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tmultihit: 3,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Lash Out\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmercuryshot: {\r\n\t\tnum: -43,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Mercury Shot\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tthawsTarget: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\tshortDesc: \"30% to poison the target.\",\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Flash Cannon\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tsweetheart: {\r\n\t\tnum: -44,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sweetheart\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tonHit(pokemon, source, move) {\r\n\t\t\t\tthis.add('-activate', source, 'move: Aromatherapy');\r\n\t\t\t\tfor (const ally of source.side.pokemon) {\r\n\t\t\t\t\tif (ally !== source && (ally.volatiles['substitute'] && !move.infiltrates)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tally.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dazzling Gleam\", target);\r\n\t\t},\r\n\t\tshortDesc: \"Heals the user's party's status conditions. Uses SpD instead of SpA.\",\r\n\t\toverrideOffensiveStat: 'spd',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tchakraterrain: {\r\n\t\tnum: -45,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Chakra Terrain\",\r\n\t\tdesc: \"Summons Chakra Terrain for 5 turns. All Fighting moves have full accuracy, and pulse moves have x1.3 power.\",\r\n\t\tshortDesc: \"Summons Chakra Terrain. 100% Acc for Fighting moves; x1.3 BP for pulse moves.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { nonsky: 1 },\r\n\t\tterrain: 'chakraterrain',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.flags['pulse'] && attacker.isGrounded() && !attacker.isSemiInvulnerable()) {\r\n\t\t\t\t\tthis.debug('chakra terrain boost');\r\n\t\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\t\tif (move.type === 'Fighting' && source.isGrounded() && !source.isSemiInvulnerable()) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy;\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Chakra Terrain', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t\tthis.add('-message', \"Fighting-type moves used by grounded Pok\u00E9mon won't miss.\");\r\n\t\t\t\t\tthis.add('-message', \"Pulse moves will be boosted by 30%.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Chakra Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Chakra Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psychic Terrain\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Fighting\",\r\n\t\tzMove: { boost: { spe: 1 } },\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tnaturepower: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tlet move = 'triattack';\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove = 'thunderbolt';\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tmove = 'energyball';\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tmove = 'moonblast';\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove = 'psychic';\r\n\t\t\t} else if (this.field.isTerrain('chakraterrain')) {\r\n\t\t\t\tmove = 'aurasphere';\r\n\t\t\t}\r\n\t\t\tthis.actions.useMove(move, pokemon, target);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tterrainpulse: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\t\tcase 'electricterrain':\r\n\t\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'grassyterrain':\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'mistyterrain':\r\n\t\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychicterrain':\r\n\t\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'chakraterrain':\r\n\t\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.terrain && pokemon.isGrounded()) {\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsecretpower: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.isTerrain('')) return;\r\n\t\t\tmove.secondaries = [];\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'par',\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'slp',\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspa: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('chakraterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tdef: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcamouflage: {\r\n\t\tinherit: true,\r\n\t\tonHit(target) {\r\n\t\t\tlet newType = 'Normal';\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tnewType = 'Electric';\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tnewType = 'Grass';\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tnewType = 'Fairy';\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tnewType = 'Psychic';\r\n\t\t\t} else if (this.field.isTerrain('chakraterrain')) {\r\n\t\t\t\tnewType = 'Fighting';\r\n\t\t\t}\r\n\r\n\t\t\tif (target.hasItem('identitycard')) return false;\r\n\t\t\tif (target.getTypes().join() === newType || !target.setType(newType)) return false;\r\n\t\t\tthis.add('-start', target, 'typechange', newType);\r\n\t\t},\r\n\t},\r\n\tsonicboom: {\r\n\t\tinherit: true,\r\n\t\tdamage: null,\r\n\t\tbasePower: 40,\r\n\t\taccuracy: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Priority +1, Sound move.\",\r\n\t\tshortDesc: \"Usually goes first. Sound Move.\",\r\n\t\tname: \"Sonic Boom\",\r\n\t\tpriority: 1,\r\n\t\tisNonstandard: null,\r\n\t\tflags: { sound: 1, protect: 1, mirror: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\trockwrecker: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Cannot be selected the turn after it's used.\",\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, bullet: 1, cantusetwice: 1 },\r\n\t\tself: null,\r\n\t},\r\n\ttriplekick: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 20,\r\n\t},\r\n\tplayrough: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t},\r\n\tpayback: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Payback NOT boosted');\r\n\t\t\t\treturn move.basePower;\r\n\t\t\t}\r\n\t\t\tthis.debug('Payback damage boost');\r\n\t\t\treturn move.basePower * 2;\r\n\t\t},\r\n\t\tshortDesc: \"Usually goes last. Power doubles if the user moves after the target.\",\r\n\t\tpriority: -1,\r\n\t},\r\n\tavalanche: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Avalanche NOT boosted');\r\n\t\t\t\treturn move.basePower;\r\n\t\t\t}\r\n\t\t\tthis.debug('Avalanche damage boost');\r\n\t\t\treturn move.basePower * 2;\r\n\t\t},\r\n\t\tshortDesc: \"Usually goes last. Power doubles if the user moves after the target.\",\r\n\t\tpriority: -1,\r\n\t},\r\n\tarmthrust: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 25,\r\n\t},\r\n\tcrosschop: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 120,\r\n\t\tpp: 10,\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tdesc: \"No additional effect.\",\r\n\t},\r\n\tsubmission: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tpp: 15,\r\n\t\trecoil: [33, 100],\r\n\t\tdesc: \"If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.\",\r\n\t\tshortDesc: \"Has 33% recoil.\",\r\n\t},\r\n\tpowdersnow: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 20,\r\n\t\tpp: 20,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\tdesc: \"Has a 100% chance to freeze the target.\",\r\n\t\tshortDesc: \"100% chance to freeze the target.\",\r\n\t},\r\n\tnightdaze: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tdesc: \"Has a 20% chance to lower the target's Attack by 1 stage.\",\r\n\t\tshortDesc: \"20% chance to lower the target's Atk by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tbatonpass: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"User switches, passing Substitute and more. No longer passes stats.\",\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tsource.clearBoosts();\r\n\t\t\t\tthis.add('-clearboost', source);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tlowsweep: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 60,\r\n\t},\r\n\tpowergem: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 95,\r\n\t\tdesc: \"Has a 10% chance to raise the user's Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to raise user's Defense by 1.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tdef: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\taeroblast: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tdesc: \"Has a higher chance for a critical hit, and a 20% chance to freeze the target.\",\r\n\t\tshortDesc: \"High critical hit ratio. 20% chance to freeze the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t},\r\n\t// roaroftime: {\r\n\t// \tinherit: true,\r\n\t// \taccuracy: 95,\r\n\t// \tbasePower: 100,\r\n\t// \tonHit() {\r\n\t// \t\tthis.field.clearTerrain();\r\n\t// \t\tthis.field.clearWeather();\r\n\t// \t},\r\n\t// \tonAfterSubDamage() {\r\n\t// \t\tthis.field.clearTerrain();\r\n\t// \t\tthis.field.clearWeather();\r\n\t// \t},\r\n\t// \tself: null,\r\n\t// \tdesc: \"Ends the effects of Electric Terrain, Grassy Terrain, Misty Terrain, Psychic Terrain, Chakra Terrain, Snow, Hail, Sun, Rain, and Sand.\",\r\n\t// \tshortDesc: \"Ends the effects of terrain and weather.\",\r\n\t// \tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t// },\r\n\t// spacialrend: {\r\n\t// \tinherit: true,\r\n\t// \tcritRatio: 1,\r\n\t// \tonAfterHit: function (target, source) {\r\n\t// \t\tthis.field.removePseudoWeather('trickroom');\r\n\t// \t\tthis.field.removePseudoWeather('magicroom');\r\n\t// \t\tthis.field.removePseudoWeather('wonderroom');\r\n\t// \t},\r\n\t// \tdesc: \"Ends the effects of Trick Room, Magic Room, and Wonder Room.\",\r\n\t// \tshortDesc: \"Ends the effects of rooms\",\r\n\t// \tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t// },\r\n\t// freezeshock: {\r\n\t// \tinherit: true,\r\n\t// \tflags: { protect: 1, mirror: 1, cantusetwice: 1 },\r\n\t// \tonTryMove(attacker, defender, move) {\r\n\t// \t\treturn;\r\n\t// \t},\r\n\t// \tshortDesc: \"Cannot be selected the turn after it's used.\",\r\n\t// },\r\n\t// iceburn: {\r\n\t// \tinherit: true,\r\n\t// \tflags: { protect: 1, mirror: 1, cantusetwice: 1 },\r\n\t// \tonTryMove(attacker, defender, move) {\r\n\t// \t\treturn;\r\n\t// \t},\r\n\t// \tshortDesc: \"Cannot be selected the turn after it's used.\",\r\n\t// },\r\n\trelicsong: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 95,\r\n\t\tsecondary: null,\r\n\t\tself: {\r\n\t\t\tsideCondition: 'luckychant',\r\n\t\t},\r\n\t\tdesc: \"This move summons Lucky Chant for 5 turns upon use. If this move is successful on at least one target and the user is a Meloetta, it changes to Pirouette Forme if it is currently in Aria Forme, or changes to Aria Forme if it is currently in Pirouette Forme. This forme change does not happen if the Meloetta has the Sheer Force Ability. The Pirouette Forme reverts to Aria Forme when Meloetta is not active.\",\r\n\t\tshortDesc: \"Summons Lucky Chant. Meloetta transforms.\",\r\n\t},\r\n\tmultiattack: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This move's type depends on the user's primary type. If the user's primary type is typeless, this move's type is the user's secondary type if it has one, otherwise the added type from Forest's Curse or Trick-or-Treat. This move is typeless if the user's type is typeless alone.\",\r\n\t\tshortDesc: \"Type varies based on the user's primary type.\",\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tlet type = pokemon.types[0];\r\n\t\t\tif (type === \"Bird\") type = \"???\";\r\n\t\t\tmove.type = type;\r\n\t\t},\r\n\t},\r\n\tprismaticlaser: {\r\n\t\tinherit: true,\r\n\t\tflags: { charge: 1, protect: 1, mirror: 1, metronome: 1, cantusetwice: 1 },\r\n\t\tself: null,\r\n\t\tshortDesc: \"Cannot be selected the turn after it's used.\",\r\n\t\tdesc: \"Cannot be selected the turn after it's used.\",\r\n\t},\r\n\tbouncybubble: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 90,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tbuzzybuzz: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 120,\r\n\t\tisNonstandard: null,\r\n\t\tshortDesc: \"10% to paralyze target.\",\r\n\t\tpp: 10,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t},\r\n\tsizzlyslide: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 85,\r\n\t\tisNonstandard: null,\r\n\t\tshortDesc: \"30% chance to burn target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t},\r\n\tglitzyglow: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tdesc: \"Lowers the target's Special Attack and Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"Lowers target's Sp. Atk, Sp. Def by 1.\",\r\n\t\tself: null,\r\n\t\tboosts: {\r\n\t\t\tspa: -1,\r\n\t\t\tspd: -1,\r\n\t\t},\r\n\t},\r\n\tbaddybad: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tdesc: \"Lowers the target's Attack and Defense by 1 stage.\",\r\n\t\tshortDesc: \"Lowers target's Atk, Def by 1.\",\r\n\t\tself: null,\r\n\t\tboosts: {\r\n\t\t\tatk: -1,\r\n\t\t\tdef: -1,\r\n\t\t},\r\n\t},\r\n\tsappyseed: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tfreezyfrost: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tsparklyswirl: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tisNonstandard: null,\r\n\t\tself: {\r\n\t\t\tsideCondition: 'luckychant',\r\n\t\t},\r\n\t\tdesc: \"This move summons Lucky Chant for 5 turns upon use.\",\r\n\t\tshortDesc: \"Summons Lucky Chant.\",\r\n\t},\r\n\tveeveevolley: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tpikapapow: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tsplishysplash: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tzippyzap: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tevasion: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"100% chance to lower the target's evasion by 1.\",\r\n\t\tdesc: \"100% chance to lower the target's evasion by 1.\",\r\n\t},\r\n\tragingfury: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 130,\r\n\t\tself: null,\r\n\t\tonAfterMove(pokemon) { },\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tlet bp = move.basePower;\r\n\t\t\tif (pokemon.volatiles['ragingfury'] && pokemon.volatiles['ragingfury'].hitCount) {\r\n\t\t\t\tbp -= 30 * pokemon.volatiles['ragingfury'].hitCount;\r\n\t\t\t}\r\n\t\t\tif (pokemon.status !== 'slp') pokemon.addVolatile('ragingfury');\r\n\t\t\tthis.debug(\"Rollout bp: \" + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart() {\r\n\t\t\t\tthis.effectState.hitCount = 1;\r\n\t\t\t},\r\n\t\t\tonRestart() {\r\n\t\t\t\tthis.effectState.hitCount++;\r\n\t\t\t\tif (this.effectState.hitCount < 5) {\r\n\t\t\t\t\tthis.effectState.duration = 2;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Lowers in BP after each use (5 turns max).\",\r\n\t\tdesc: \"This move lowers in power after each use (5 turns max).\",\r\n\t},\r\n\tbittermalice: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 60,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'frz' || target.hasAbility('comatose')) return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tdesc: \"Has a 30% chance to freeze the target. Power doubles if the target has a non-volatile status condition.\",\r\n\t\tshortDesc: \"30% freeze. 2x power if target is already statused.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t},\r\n\tshelter: {\r\n\t\tinherit: true,\r\n\t\tpriority: 4,\r\n\t\tflags: {},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'shelter',\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', target);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'move: Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect']) {\r\n\t\t\t\t\tif (move.isZ || (move.isMax && !move.breaksProtect)) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (move.flags['contact']) {\r\n\t\t\t\t\tsource.clearBoosts();\r\n\t\t\t\t\tthis.add('-clearboost', source);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && move.flags['contact']) {\r\n\t\t\t\t\tsource.clearBoosts();\r\n\t\t\t\t\tthis.add('-clearboost', source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tboosts: null,\r\n\t\tshortDesc: \"Protects from moves. Contact: resets opponent's stat boosts.\",\r\n\t},\r\n\ttriplearrows: {\r\n\t\tinherit: true,\r\n\t\tvolatileStatus: 'focusenergy',\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 50,\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tdef: -1,\r\n\t\t\t\t},\r\n\t\t\t}, {\r\n\t\t\t\tchance: 100,\r\n\t\t\t\tself: {\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tdesc: \"100% chance to raise the user's Speed by 1 stage. Raise crit ratio by 2 stages. Target: 50% -1 Defense.\",\r\n\t\tshortDesc: \"100% chance to +1 Speed; +2 crit ratio; -1 Def to target.\",\r\n\t},\r\n\tdireclaw: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 90,\r\n\t\tshortDesc: \"50% chance to poison the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t},\r\n\tfissure: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tohko: false,\r\n\t\tdesc: \"10% chance to lower the target's Defense by 1.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Defense by 1.\",\r\n\t\tpp: 10,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsheercold: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 150,\r\n\t\tohko: false,\r\n\t\tdesc: \"Sets Snow. User faints after use.\",\r\n\t\tshortDesc: \"Sets Snow. User faints after use.\",\r\n\t\tweather: 'snow',\r\n\t\tsecondary: null,\r\n\t\tselfdestruct: \"always\",\r\n\t},\r\n\tmistyexplosion: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 150,\r\n\t\tdesc: \"Sets Misty Terrain. User faints after use.\",\r\n\t\tshortDesc: \"Sets Misty Terrain. User faints after use.\",\r\n\t\tterrain: 'mistyterrain',\r\n\t},\r\n\tguillotine: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tohko: false,\r\n\t\tdesc: \"Raises user's Attack by 1 if this KOes the target.\",\r\n\t\tshortDesc: \"Raises user's Attack by 1 if this KOes the target.\",\r\n\t\tpp: 10,\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) this.boost({ atk: 1 }, pokemon, pokemon, move);\r\n\t\t},\r\n\t},\r\n\thorndrill: {\r\n\t\tinherit: true,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 120,\r\n\t\tohko: false,\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect.\",\r\n\t\tpp: 10,\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\thiddenpower: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Varies in type based on the user's IVs. Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerbug: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerdark: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerdragon: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerelectric: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerfighting: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerfire: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerflying: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerghost: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowergrass: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerground: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerice: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerpoison: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerpsychic: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerrock: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowersteel: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\thiddenpowerwater: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tshortDesc: \"Physical if user's Atk > Sp. Atk.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) move.category = 'Physical';\r\n\t\t},\r\n\t},\r\n\tsnipeshot: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 60,\r\n\t\twillCrit: true,\r\n\t\tshortDesc: \"Always results in a critical hit. Cannot be redirected.\",\r\n\t\tdesc: \"Always results in a critical hit. Cannot be redirected.\",\r\n\t},\r\n\tlightningassault: {\r\n\t\tnum: -46,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tlet ratio = Math.floor(pokemon.getStat('spe') / target.getStat('spe'));\r\n\t\t\tif (!isFinite(ratio)) ratio = 0;\r\n\t\t\tconst bp = [40, 60, 80, 120, 150][Math.min(ratio, 4)];\r\n\t\t\tthis.debug(`${bp} bp`);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Lightning Assault\",\r\n\t\tshortDesc: \"More power the faster the user is than the target.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Spark\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: { basePower: 160 },\r\n\t\tmaxMove: { basePower: 130 },\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tconversionz: {\r\n\t\tnum: -47,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Conversion-Z\",\r\n\t\tshortDesc: \"Fails if the user has an item. Raises all stats by 1, and user gets the type of its 3rd move.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, sound: 1, dance: 1 },\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (pokemon.item) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!this.boost(move.boosts as SparseBoostsTable)) return null;\r\n\t\t\tdelete move.boosts;\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\tconst type = this.dex.moves.get(target.moveSlots[2].id).type;\r\n\t\t\tif (target.hasType(type) || !target.setType(type)) return false;\r\n\t\t\tthis.add('-start', target, 'typechange', type);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tdef: 1,\r\n\t\t\tspa: 1,\r\n\t\t\tspd: 1,\r\n\t\t\tspe: 1,\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Conversion\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tzawall: {\r\n\t\tnum: -48,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Za Wall\",\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second. Raises the user's Attack by 1 stage on the first turn. If the user is holding a Power Herb, the move completes in one turn.\",\r\n\t\tshortDesc: \"Raises user's Atk by 1 on turn 1. Hits turn 2.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { charge: 1, protect: 1, mirror: 1 },\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tthis.boost({ atk: 1 }, attacker, attacker, move);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Head Smash\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tawakening: {\r\n\t\tnum: -49,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Awakening\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tdesc: \"Heal this Pokemon for 50% HP, and reveal one of opponent's move.\",\r\n\t\tshortDesc: \"Heal 50% HP; reveals random opponent's move.\",\r\n\t\tflags: { snatch: 1, heal: 1 },\r\n\t\theal: [1, 2],\r\n\t\tonHit(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (target.fainted) return;\r\n\t\t\t\tconst temp = this.sample(target.moveSlots);\r\n\t\t\t\tthis.add('-message', pokemon.name + \"'s Awakening revealed the move \" + temp.move + \"!\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dream Eater\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tfulldevotion: {\r\n\t\tnum: -50,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Full Devotion\",\r\n\t\tshortDesc: \"One adjacent ally's move power is 1.5x this turn. Lowers damages this ally receives of 25%.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, heal: 1 },\r\n\t\tvolatileStatus: 'helpinghand',\r\n\t\tonTryHit(target) {\r\n\t\t\tif (!target.newlySwitched && !this.queue.willMove(target)) return false;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target, source) {\r\n\t\t\t\tthis.effectState.multiplier = 1.5;\r\n\t\t\t\tthis.add('-singleturn', target, 'Full Devotion', '[of] ' + source);\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 10,\r\n\t\t\tonBasePower(basePower) {\r\n\t\t\t\tthis.debug('Boosting from Full Devotion: ' + this.effectState.multiplier);\r\n\t\t\t\treturn this.chainModify(this.effectState.multiplier);\r\n\t\t\t},\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tif (source.side !== target.side) {\r\n\t\t\t\t\treturn damage *= 0.75;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Psystrike\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"adjacentAlly\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tbraveblade: {\r\n\t\tdesc: \"Physical if it would be stronger (Shell Side Arm clone). Hits Dark types for neutral damages.\",\r\n\t\tshortDesc: \"Physical if stronger. Hits Dark types for neutral damages.\",\r\n\t\tnum: -51,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Brave Blade\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, slicing: 1 },\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (!target) return;\r\n\t\t\tconst atk = pokemon.getStat('atk', false, true);\r\n\t\t\tconst spa = pokemon.getStat('spa', false, true);\r\n\t\t\tconst def = target.getStat('def', false, true);\r\n\t\t\tconst spd = target.getStat('spd', false, true);\r\n\t\t\tconst physical = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * atk) / def) / 50);\r\n\t\t\tconst special = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * spa) / spd) / 50);\r\n\t\t\tif (physical > special || (physical === special && this.random(2) === 0)) {\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t\tmove.flags.contact = 1;\r\n\t\t\t}\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Psychic'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tthis.hint(move.category + \" Brave Blade\");\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tthis.hint(move.category + \" Brave Blade\");\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Spacial Rend\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tteramorphosis: {\r\n\t\tnum: -52,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Teramorphosis\",\r\n\t\tshortDesc: \"Has 33% recoil. 50% chance to raise the user's Spe by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\trecoil: [1, 3],\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspe: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Grassy Glide\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\thappydance: {\r\n\t\tnum: -53,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Happy Dance\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, dance: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tweather: 'RainDance',\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rain Dance\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Water\",\r\n\t\tshortDesc: \"Raises the user's SpA by 1. Summons Rain Dance.\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\twindscall: {\r\n\t\tnum: -54,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Sets Tailwind.\",\r\n\t\tname: \"Wind's Call\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, wind: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tsideCondition: 'tailwind',\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Tailwind\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\thoundshowl: {\r\n\t\tnum: -55,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Hound's Howl\",\r\n\t\tshortDesc: \"If a foe is switching out, hits it at 2x power.\",\r\n\t\tdesc: \"If a foe is switching out, hits it at 2x power.\",\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\t// You can't get here unless the pursuit succeeds\r\n\t\t\tif (target.beingCalledBack) {\r\n\t\t\t\tthis.debug('Hound\\'s Howl damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tbeforeTurnCallback(pokemon) {\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tif (side === pokemon.side) continue;\r\n\t\t\t\tside.addSideCondition('houndshowl', pokemon);\r\n\t\t\t\tconst data = side.getSideConditionData('houndshowl');\r\n\t\t\t\tif (!data.sources) {\r\n\t\t\t\t\tdata.sources = [];\r\n\t\t\t\t}\r\n\t\t\t\tdata.sources.push(pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (target?.beingCalledBack) move.accuracy = true;\r\n\t\t},\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\ttarget.side.removeSideCondition('houndshowl');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\t\tthis.debug('Hound\\'s Howl start');\r\n\t\t\t\tlet alreadyAdded = false;\r\n\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t\tfor (const source of this.effectState.sources) {\r\n\t\t\t\t\tif (!source.isAdjacent(pokemon) || !this.queue.cancelMove(source) || !source.hp) continue;\r\n\t\t\t\t\tif (!alreadyAdded) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'move: Hound\\'s Howl');\r\n\t\t\t\t\t\talreadyAdded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Run through each action in queue to check if the Pursuit user is supposed to Mega Evolve this turn.\r\n\t\t\t\t\t// If it is, then Mega Evolve before moving.\r\n\t\t\t\t\tif (source.canMegaEvo || source.canUltraBurst) {\r\n\t\t\t\t\t\tfor (const [actionIndex, action] of this.queue.entries()) {\r\n\t\t\t\t\t\t\tif (action.pokemon === source && action.choice === 'megaEvo') {\r\n\t\t\t\t\t\t\t\tthis.actions.runMegaEvo(source);\r\n\t\t\t\t\t\t\t\tthis.queue.list.splice(actionIndex, 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.runMove('houndshowl', source, source.getLocOf(pokemon));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hyper Voice\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tdantesinferno: {\r\n\t\tnum: -56,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dante's Inferno\",\r\n\t\tshortDesc: \"Starts Sun.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tweather: 'sunnyday',\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Inferno\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tjunglehealing: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, 0.33));\r\n\t\t\treturn pokemon.cureStatus() || success;\r\n\t\t},\r\n\t\tshortDesc: \"User and allies: healed 1/3 max HP, status cured.\",\r\n\t},\r\n\tlifedew: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, 0.33));\r\n\t\t\treturn pokemon.cureStatus() || success;\r\n\t\t},\r\n\t\tshortDesc: \"User and allies: healed 1/3 max HP, status cured.\",\r\n\t},\r\n\tlunarblessing: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, 0.33));\r\n\t\t\treturn pokemon.cureStatus() || success;\r\n\t\t},\r\n\t\tshortDesc: \"User and allies: healed 1/3 max HP, status cured.\",\r\n\t},\r\n\tmonkeybusiness: {\r\n\t\tnum: -57,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Monkey Business\",\r\n\t\tshortDesc: \"Special if user's SpA > Atk. Eats the target's berry and restores it to the user. Type varies with the user's primary type.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('spa', false, true) > pokemon.getStat('atk', false, true)) move.category = 'Special';\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tlet type = pokemon.types[0];\r\n\t\t\tif (type === \"Bird\") type = \"???\";\r\n\t\t\tmove.type = type;\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tif (pokemon.item && pokemon.getItem().isBerry) pokemon.eatItem(true);\r\n\t\t\tif (!pokemon.lastItem) return false;\r\n\t\t\tconst item = pokemon.lastItem;\r\n\t\t\tpokemon.lastItem = '';\r\n\t\t\tthis.add('-item', pokemon, this.dex.items.get(item), '[from] move: Monkey Business');\r\n\t\t\tpokemon.setItem(item);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tswarming: {\r\n\t\tnum: -58,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Swarming\",\r\n\t\tshortDesc: \"Lowers the user's and the target's SpD by one stage.\",\r\n\t\tdesc: \"Lowers the user's and the target's SpD by one stage.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bug Buzz\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Smart\",\r\n\t},\r\n\thardwareheat: {\r\n\t\tnum: -59,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hardware Heat\",\r\n\t\tshortDesc: \"Lowers the user's Speed by one stage.\",\r\n\t\tdesc: \"Lowers the user's Speed by one stage.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Inferno\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tenragedtext: {\r\n\t\tnum: -60,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Enraged Text\",\r\n\t\tshortDesc: \"Raises the user's Atk by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { snatch: 1, sound: 1 },\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tshattering: {\r\n\t\tnum: -61,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Shattering\",\r\n\t\tshortDesc: \"The user throws its held item. Fails if the user has no item.\",\r\n\t\tdesc: \"The user throws its held item. Fails if the user has no item.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, allyanim: 1, noparentalbond: 1 },\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (source.ignoringItem()) return false;\r\n\t\t\tconst item = source.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, source.itemState, source, source, move, item)) return false;\r\n\t\t\tif (!item.fling) return false;\r\n\t\t\tif (item.isBerry) {\r\n\t\t\t\tmove.onHit = function (foe) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, foe, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', foe, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') foe.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) foe.ateBerry = true;\r\n\t\t\t\t};\r\n\t\t\t} else if (item.fling.effect) {\r\n\t\t\t\tmove.onHit = item.fling.effect;\r\n\t\t\t} else {\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\tif (item.fling.status) {\r\n\t\t\t\t\tmove.secondaries.push({ status: item.fling.status });\r\n\t\t\t\t} else if (item.fling.volatileStatus) {\r\n\t\t\t\t\tmove.secondaries.push({ volatileStatus: item.fling.volatileStatus });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsource.addVolatile('fling');\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Fling\", target);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tconst item = pokemon.getItem();\r\n\t\t\t\tpokemon.setItem('');\r\n\t\t\t\tpokemon.lastItem = item.id;\r\n\t\t\t\tpokemon.usedItemThisTurn = true;\r\n\t\t\t\tthis.add('-enditem', pokemon, item.name, '[from] move: Shattering');\r\n\t\t\t\tthis.runEvent('AfterUseItem', pokemon, null, null, item);\r\n\t\t\t\tpokemon.removeVolatile('fling');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdefog: {\r\n\t\tinherit: true,\r\n\t\tflags: { protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, wind: 1 },\r\n\t},\r\n\tgrassyglide: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 70,\r\n\t},\r\n\tmilkdrink: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\trecover: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\trest: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\troost: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tshoreup: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tslackoff: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tsoftboiled: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t},\r\n\tbleakwindstorm: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"20% chance to freeze foe(s).\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t},\r\n\taxekick: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Dark\",\r\n\t\tshortDesc: \"30% confusion. User loses 50% max HP if miss.\",\r\n\t},\r\n\tragingbull: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 120,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Has a 10% chance to lower the target's Def by 1. If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target's side of the field before damage is calculated. If the user's current form is a Paldean Tauros, this move's type changes to match. Fighting type for Combat Breed, Fire type for Blaze Breed, and Water type for Aqua Breed.\",\r\n\t\tshortDesc: \"10% chance to lower target's Def by 1. Destroys screens. Type depends on user's form.\",\r\n\t},\r\n\ttidyup: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"User +1 Atk, Spe, Acc. Clears all substitutes/hazards on user's side.\",\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet success = false;\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tif (active.removeVolatile('substitute')) success = true;\r\n\t\t\t}\r\n\t\t\tconst removeAll = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\tconst sides = [pokemon.side, ...pokemon.side.foeSidesWithConditions()];\r\n\t\t\tfor (const side of sides) {\r\n\t\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\t\tif (side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', side, this.dex.conditions.get(sideCondition).name);\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (success) this.add('-activate', pokemon, 'move: Tidy Up');\r\n\t\t\treturn !!this.boost({ atk: 1, spe: 1, accuracy: 1 }, pokemon, pokemon, null, false, true) || success;\r\n\t\t},\r\n\t},\r\n\thyperdrill: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Bypasses protection without breaking it. 50% chance to lower target's Def by 2 stages.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -2,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tlastrespects: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 50 + 25 * pokemon.side.totalFainted\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.getStat('spa', false, true) > pokemon.getStat('atk', false, true)) move.category = 'Special';\r\n\t\t},\r\n\t\tshortDesc: \"+25 power for each time an ally fainted. Special if user's SpA > Atk.\",\r\n\t},\r\n\tragefist: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon) {\r\n\t\t\treturn Math.min(200, 50 + 25 * pokemon.timesAttacked);\r\n\t\t},\r\n\t\tshortDesc: \"+25 power for each time user was hit. Max 6 hits.\",\r\n\t\tdesc: \"Power increases by 25 for each time the user was hit this turn. Max 6 hits.\",\r\n\t},\r\n\tgigatonhammer: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"Cannot be used twice in a row. Super effective on Steel targets.\",\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Steel') return 1;\r\n\t\t},\r\n\t},\r\n\tblazingtorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tcombattorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tmagicaltorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"20% chance to lower target's Def by 1.\",\r\n\t\tdesc: \"20% chance to lower target's Def by 1.\",\r\n\t},\r\n\tnoxioustorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\twickedtorque: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"20% chance to lower target's Atk by 1.\",\r\n\t\tdesc: \"20% chance to lower target's Atk by 1.\",\r\n\t},\r\n\troguewave: {\r\n\t\tnum: -62,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Rogue Wave\",\r\n\t\tshortDesc: \"Has 33% recoil. Usually goes first.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 1,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1 },\r\n\t\trecoil: [1, 3],\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Wave Crash\", target);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tnatureswrath: {\r\n\t\tnum: -63,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Either Grass or Ground-type, whichever is more effective. Heals user by 12.5% of damage dealt.\",\r\n\t\tname: \"Nature's Wrath\",\r\n\t\tpp: 10,\r\n\t\tflags: { protect: 1, mirror: 1, heal: 1, metronome: 1 },\r\n\t\tdrain: [1, 8],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Leaf Storm\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tconst type1 = 'Grass';\r\n\t\t\t\tconst type2 = 'Ground';\r\n\t\t\t\tif (this.dex.getEffectiveness(type1, target) < this.dex.getEffectiveness(type2, target)) {\r\n\t\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\t} else if (target.hasType('Flying') || target.hasAbility('eartheater') || target.hasAbility('levitate')) {\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t} else if (target.hasAbility('sapsipper')) {\r\n\t\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\t} else if (this.dex.getEffectiveness(type1, target) === this.dex.getEffectiveness(type2, target)) {\r\n\t\t\t\t\tif (pokemon.hasType('Ground') && !pokemon.hasType('Grass')) {\r\n\t\t\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tthis.add('-message', `Nature's Wrath dealt ${move.type}-type damage!`);\r\n\t\t},\r\n\t\tpriority: 0,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: { basePower: 170 },\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tmagicmissile: {\r\n\t\tnum: -64,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Magic Missile\",\r\n\t\tshortDesc: \"Hits 2-5 times in one turn. Does not check accuracy, bypasses immunities, and always hits for at least neutral damages.\",\r\n\t\tdesc: \"Hits two to five times. This move does not check accuracy, bypasses immunities, and always hits for at least neutral damages.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tmultihit: [2, 5],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Swift\", target);\r\n\t\t},\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.debug('Magic Missile damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tlet type = move.type;\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity[type] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: { basePower: 140 },\r\n\t\tmaxMove: { basePower: 130 },\r\n\t\tcontestType: \"Smart\",\r\n\t},\r\n\tchatter: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tisNonstandard: null,\r\n\t\tpp: 10,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspa: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Has a 100% chance to raise the user's Special Attack by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to raise the user's Sp. Atk by 1.\",\r\n\t},\r\n\twaterpulse: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t},\r\n\tshadowpunch: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tvolatileStatus: 'healblock',\r\n\t\t},\r\n\t\tdesc: \"For 2 turns, the target is prevented from restoring any HP as long as it remains active. During the effect, healing and draining moves are unusable, and Abilities and items that grant healing will not heal the user. If an affected Pokemon uses Baton Pass, the replacement will remain unable to restore its HP. Pain Split and the Regenerator Ability are unaffected. Does not check accuracy.\",\r\n\t\tshortDesc: \"For 2 turns, the target is prevented from healing. Does not check accuracy.\",\r\n\t},\r\n\thealblock: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Psychic Noise\" || effect?.name === \"Shadow Punch\") {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-activate', source, 'ability: Persistent', '[move] Heal Block');\r\n\t\t\t\t\treturn 7;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tthis.add('-start', pokemon, 'move: Heal Block');\r\n\t\t\t\tsource.moveThisTurnResult = true;\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['heal']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (move.flags['heal'] && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Heal Block', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (move.flags['heal'] && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Heal Block', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 20,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Heal Block');\r\n\t\t\t},\r\n\t\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\t\tif ((effect?.id === 'zpower') || this.effectState.isZ) return damage;\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonRestart(target, source, effect) {\r\n\t\t\t\tif (effect?.name === 'Psychic Noise') return;\r\n\r\n\t\t\t\tthis.add('-fail', target, 'move: Heal Block'); // Succeeds to supress downstream messages\r\n\t\t\t\tif (!source.moveThisTurnResult) {\r\n\t\t\t\t\tsource.moveThisTurnResult = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmeteorassault: {\r\n\t\tinherit: true,\r\n\t\tflags: {cantusetwice: 1, slicing: 1, protect: 1, mirror: 1, failinstruct: 1},\r\n\t\tself: null,\r\n\t\tshortDesc: \"Cannot be selected the turn after it's used.\",\r\n\t},\r\n\tpsyblade: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, source) {\r\n\t\t\treturn basePower;\r\n\t\t},\r\n\t\tterrain: 'electricterrain',\r\n\t\tshortDesc: \"Sets Electric Terrain upon use.\",\r\n\t\tdesc: \"Sets Electric Terrain upon use.\",\r\n\t},\r\n\trevivalblessing: {\r\n\t\tinherit: true,\r\n\t\tflags: {heal: 1, noassist: 1},\r\n\t},\r\n\tfatbombing: {\r\n\t\tnum: -65,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Fat Bombing\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'fatbombing',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'fatbombing',\r\n\t\t\t\t\tname: \"Fat Bombing\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 100,\r\n\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Rock',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Fat Bombing');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tonBasePower(basePower) {\r\n\t\t\tif (this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Blast\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"This move deals double damage if used under Gravity. Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Doom Desire is already in effect for the target's position.\",\r\n\t\tshortDesc: \"Double damage if used under Gravity. Hits two turns after being used.\",\r\n\t},\r\n\tpoisonivy: {\r\n\t\tnum: -66,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Poison Ivy\",\r\n\t\tshortDesc: \"Hits 2-5 times in one turn.\",\r\n\t\tdesc: \"Hits 2-5 times in one turn.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1 },\r\n\t\tmultihit: [2, 5],\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Power Whip\", target);\r\n\t\t\tthis.add('-anim', source, \"Sludge Wave\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tzMove: { basePower: 140 },\r\n\t\tmaxMove: { basePower: 130 },\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\ttwinbeam: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Lowers the target's Special Attack and Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"Lowers target's Sp. Atk, Sp. Def by 1.\",\r\n\t\tself: null,\r\n\t\tboosts: {\r\n\t\t\tspa: -1,\r\n\t\t\tspd: -1,\r\n\t\t},\r\n\t},\r\n\tclusterexplosion: {\r\n\t\tnum: -67,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 250,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Cluster Explosion\",\r\n\t\tshortDesc: \"Hits adjacent Pokemon. Sets Spikes. User faints.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, noparentalbond: 1},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', pokemon, \"Splintered Stormshards\", pokemon);\r\n\t\t},\r\n\t\tonTryMove(source, target, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('spikes');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselfdestruct: \"always\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tlightofruin: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tfroststorm: {\r\n\t\tnum: -68,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Frost Storm\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, wind: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['hail', 'snow', 'everlastingwinter'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tstatus: 'frz',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t\tthis.add('-anim', source, \"Blizzard\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Ice\",\r\n\t\tshortDesc: \"30% chance of Freeze, 100% in Snow.\",\r\n\t},\r\n\tthunderstorm: {\r\n\t\tnum: -69,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Thunder Storm\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, wind: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['raindance', 'primordialsea'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tstatus: 'par',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t\tthis.add('-anim', source, \"Thunder\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Electric\",\r\n\t\tshortDesc: \"30% chance of Para, 100% in Rain.\",\r\n\t},\r\n\theatstorm: {\r\n\t\tnum: -70,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Heat Storm\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, wind: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tstatus: 'brn',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Hurricane\", target);\r\n\t\t\tthis.add('-anim', source, \"Heat Wave\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Fire\",\r\n\t\tshortDesc: \"30% chance of Burn, 100% in Sun.\",\r\n\t},\r\n\tgenesiswave: {\r\n\t\tnum: -71,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Genesis Wave\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tterrain: 'psychicterrain',\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Genesis Supernova\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t\tshortDesc: \"Raises user's SpA by 1, and sets Psychic Terrain.\",\r\n\t},\r\n\tthunderway: {\r\n\t\tnum: -72,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Thunder Way\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {heal: 1, bypasssub: 1, allyanim: 1},\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, 0.75));\r\n\t\t\tpokemon.addVolatile('taunt');\r\n\t\t\treturn pokemon.cureStatus() || success;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Thunderclap\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Electric\",\r\n\t\tshortDesc: \"Heals 75% of HP and heals status, but the user is Taunted for 2 turns.\",\r\n\t},\r\n\ttaunt: {\r\n\t\tinherit: true,\r\n\t\tvolatileStatus: 'taunt',\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tdurationCallback(target, source, effect) {\r\n\t\t\t\tif (effect?.name === \"Thunder Way\") {\r\n\t\t\t\t\treturn 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn 3;\r\n\t\t\t},\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (target.activeTurns && !this.queue.willMove(target)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 15,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'move: Taunt');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\tif (move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 5,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && !move.isMax && move.category === 'Status' && move.id !== 'mefirst') {\r\n\t\t\t\t\tthis.add('cant', attacker, 'move: Taunt', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tfieryfire: {\r\n\t\tnum: -73,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Fiery Fire\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('flashfire')\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.removeVolatile('flashfire');\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Fiery Dance\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Fire\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t\tshortDesc: \"Raises Atk by 1, and applies the Flash Fire effect.\",\r\n\t},\r\n\tauroraborealis: {\r\n\t\tnum: -74,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Aurora Borealis\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tvolatileStatus: 'aquaring',\r\n\t\tonHit(pokemon) {\r\n\t\t\treturn pokemon.cureStatus();\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Aurora Veil\", source);\r\n\t\t\tthis.add('-anim', source, \"Aqua Ring\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Heals user's status, and gives Aqua Ring.\",\r\n\t},\r\n\tboulderbuilding: {\r\n\t\tnum: -75,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Boulder Building\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({def: 1}, source, source, this.dex.getActiveMove(\"Boulder Building\"));\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Boulder Building', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Boulder Building', '[of] ' + source);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Blast\", source);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tzMove: {boost: {accuracy: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"Raises the user's Defense by 1 stage. If this move is successful and whether or not the target's evasiveness was affected, the effects of Reflect, Light Screen, Aurora Veil, Safeguard, Mist, Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the target's side, and the effects of Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the user's side. Ignores a target's substitute, although a substitute will still block the lowering of evasiveness. If there is a terrain active and this move is successful, the terrain will be cleared.\",\r\n\t\tshortDesc: \"+1 Def; clears terrain and hazards on both sides.\",\r\n\t},\r\n\ticebergpolish: {\r\n\t\tnum: -76,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Iceberg Polish\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tboosts: {\r\n\t\t\tspe: 2,\r\n\t\t\tatk: 1,\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Blast\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Raises the user's Speed by 2 stages and its Sp. Attack by 1 stage.\",\r\n\t\tshortDesc: \"Raises the user's Speed by 2 and Sp. Atk by 1.\",\r\n\t},\r\n\talienmetal: {\r\n\t\tnum: -77,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Alien Metal\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, bypasssub: 1},\r\n\t\theal: [1, 4],\r\n\t\tvolatileStatus: 'alienmetal',\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Alien Metal');\r\n\t\t\t},\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\t\tthis.debug('Alien Metal neutralize');\r\n\t\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Alien Metal', '[silent]');\r\n\t\t\t},\r\n\t\t},\t\t\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Rock Blast\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allies\",\r\n\t\ttype: \"Steel\",\r\n\t\tshortDesc: \"Heals 25% of the user's HP, and gives Filter effect for 3 turns.\",\r\n\t},\r\n\tathosrapier: {\r\n\t\tnum: -78,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Athos Rapier\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {noassist: 1, failcopycat: 1, failinstruct: 1},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'athosrapier',\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Smart Strike\", source);\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({def: 1}, target, target, this.dex.getActiveMove(\"Athos Rapier\"));\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tthis.boost({def: 1}, target, target, this.dex.getActiveMove(\"Athos Rapier\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Steel\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user raise its Defense by 1 stage. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Burning Bulwark, Detect, Endure, King's Shield, Max Guard, Obstruct, Protect, Quick Guard, Silk Trap, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.\",\r\n\t\tshortDesc: \"Protects from damaging attacks. Contact: +1 Def.\",\r\n\t},\r\n\taramisdagger: {\r\n\t\tnum: -79,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Aramis Dagger\",\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Leaf Blade\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t},\r\n\tporthosbroadsword: {\r\n\t\tnum: -80,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Porthos Broadsword\",\r\n\t\tpp: 5,\r\n\t\tpriority: 1,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonTry(source, target) {\r\n\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\tconst move = action?.choice === 'move' ? action.move : null;\r\n\t\t\tif (!move || (move.category === 'Status' && move.id !== 'mefirst') || target.volatiles['mustrecharge']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function (target, source) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Stone Edge\", target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Fails if the target did not select a physical attack, special attack, or Me First for use this turn, or if the target moves before the user.\",\r\n\t\tshortDesc: \"Usually goes first. Fails if target is not attacking.\",\r\n\t},\r\n\t// Everlasting Winter field\r\n\tauroraveil: {\r\n\t\tinherit: true,\r\n\t\tonTry() {\r\n\t\t\treturn this.field.isWeather(['hail', 'snow', 'everlastingwinter']);\r\n\t\t},\r\n\t},\r\n\tblizzard: {\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow', 'everlastingwinter'])) move.accuracy = true;\r\n\t\t},\r\n\t},\r\n\tdig: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonImmunity(type, pokemon) {\r\n\t\t\t\tif (type === 'sandstorm' || type === 'hail' || type === 'everlastingwinter') return false;\r\n\t\t\t},\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (['earthquake', 'magnitude'].includes(move.id)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (move.id === 'earthquake' || move.id === 'magnitude') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdive: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonImmunity(type, pokemon) {\r\n\t\t\t\tif (type === 'sandstorm' || type === 'hail' || type === 'everlastingwinter') return false;\r\n\t\t\t},\r\n\t\t\tonInvulnerability(target, source, move) {\r\n\t\t\t\tif (['surf', 'whirlpool'].includes(move.id)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (move.id === 'surf' || move.id === 'whirlpool') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tmoonlight: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'everlastingwinter':\r\n\t\t\t\tfactor = 0.25;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tmorningsun: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'everlastingwinter':\r\n\t\t\t\tfactor = 0.25;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tsolarbeam: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow', 'everlastingwinter'];\r\n\t\t\tif (weakWeathers.includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('weakened by weather');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsolarblade: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tconst weakWeathers = ['raindance', 'primordialsea', 'sandstorm', 'hail', 'snow', 'everlastingwinter'];\r\n\t\t\tif (weakWeathers.includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('weakened by weather');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsynthesis: {\r\n\t\tinherit: true,\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'everlastingwinter':\r\n\t\t\t\tfactor = 0.25;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tweatherball: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'everlastingwinter':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\tcase 'everlastingwinter':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t},\r\n\t},\r\n\t// Karma field\r\n\twish: {\r\n\t\tinherit: true,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1, futuremove: 1},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(pokemon, source) {\r\n\t\t\t\tif (source.hasAbility('karma')) {\r\n\t\t\t\t\tthis.effectState.hp = 3* source.maxhp / 4;\r\n\t\t\t\t} \r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.effectState.hp = source.maxhp / 2;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 4,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tif (target && !target.fainted) {\r\n\t\t\t\t\tconst damage = this.heal(this.effectState.hp, target, target);\r\n\t\t\t\t\tif (damage) {\r\n\t\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] move: Wish', '[wisher] ' + this.effectState.source.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Endless Dream field\r\n\twakeupslap: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'slp' || target.hasAbility('comatose') || this.field.getPseudoWeather('endlessdream')) return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t},\r\n\tdreameater: {\r\n\t\tinherit: true,\r\n\t\tonTryImmunity(target, source) {\r\n\t\t\treturn target.status === 'slp' || target.hasAbility('comatose') || this.field.getPseudoWeather('endlessdream');\r\n\t\t},\r\n\t},\r\n\tnightmare: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.status !== 'slp' && !pokemon.hasAbility('comatose') && !this.field.getPseudoWeather('endlessdream')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', pokemon, 'Nightmare');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 9,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 4);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsleeptalk: {\r\n\t\tinherit: true,\r\n\t\tonTry(source) {\r\n\t\t\tlet usable = false;\r\n\t\t\tfor (const opponent of source.adjacentFoes()) {\r\n\t\t\t\tif (this.field.getPseudoWeather('endlessdream')) {\r\n\t\t\t\t\tusable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn source.status === 'slp' || source.hasAbility('comatose') || usable;\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["pokemon"]
}
