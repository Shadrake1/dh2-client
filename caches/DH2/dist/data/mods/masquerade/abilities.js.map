{
  "version": 3,
  "sources": ["../../../../data/mods/masquerade/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedAbilityData} = {\r\n\tresiduecleaning: {\r\n    // effect hardcoded into defog (just defog for now)\r\n\t\tflags: {},\r\n\t\tshortDesc: \"Clearing hazards heals 25% max HP per hazard.\",\r\n\t\tname: \"Residue Cleaning\",\r\n\t},\r\n\tmountaineer: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\thotheaded: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tlet mod = 1;\r\n\t\t\tif (move.type === 'Fire') mod *= 2;\r\n\t\t\tif (move.category === 'Physical') mod /= 2;\r\n\t\t\treturn this.chainModify(mod);\r\n\t\t},\r\n\t\tshortDesc: \"This Pokemon takes 1/2 damage from physical moves, 2x damage from Fire moves.\",\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Hot-Headed\",\r\n\t\trating: 4,\r\n\t},\r\n\tcalmdemeanor: {\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tlet mod = 1;\r\n\t\t\tif (move.type === 'Ice') mod *= 2;\r\n\t\t\tif (move.category === 'Special') mod /= 2;\r\n\t\t\treturn this.chainModify(mod);\r\n\t\t},\r\n\t\tshortDesc: \"This Pokemon takes 1/2 damage from special moves, 2x damage from Ice moves.\",\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Calm Demeanor\",\r\n\t\trating: 4,\r\n\t},\r\n\tsystemoverride: {\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (this.effectState.systemOverride) return;\r\n\t\t\tif (move.id === 'conversion') {\r\n\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1}, source, source);\r\n\t\t\t\tthis.effectState.systemOverride = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tshortDesc: \"Before using Conversion, boosts all stats by 1 stage.\",\r\n\t\tname: \"System Override\",\r\n\t\trating: 2,\r\n\t},\r\n\tsnowcap: {\r\n\t\tonModifyDefPriority: 1,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (pokemon.hasType('Ice') && !this.field.isWeather(['hail', 'snow'])) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// other effects coded into moves\r\n\t\tflags: {},\r\n\t\tshortDesc: \"This Pokemon acts as if Snow is active.\",\r\n\t\tname: \"Snowcap\",\r\n\t\trating: 3,\r\n\t},\r\n\tprehistoricmight: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!target.positiveBoosts()) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Prehistoric Might', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -2}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Prehistoric Might\",\r\n\t\trating: 2.5,\r\n\t\tshortDesc: \"On switch-in, the foe's Speed is lowered by 2 stages if it has a positive stat boost.\",\r\n\t},\r\n\tgravitasbody: {\r\n\t\tshortDesc: \"On switch-in, this Pokemon summons Gravity.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-ability', source, 'Gravitas');\r\n\t\t\tthis.field.addPseudoWeather('gravity', source, source.ability);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gravitas Body\",\r\n\t\trating: 4,\r\n\t},\r\n\tlightshield: {\r\n\t\tshortDesc: \"This Pokemon's Special Defense is doubled.\",\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifyDef(spd) {\r\n\t\t\treturn this.chainModify(2);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Light Shield\",\r\n\t\trating: 4,\r\n\t},\r\n\thoneystone: {\r\n\t\tshortDesc: \"Once per battle, heals 50% of this Pokemon HP on switch-in.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.honeyBoost) return;\r\n\t\t\tpokemon.honeyBoost = true;\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 2);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Honeystone\",\r\n\t\trating: 3.5,\r\n\t},\r\n\tnoxiousliquid: {\r\n\t\tshortDesc: \"This Pokemon's Poison moves can hit Steel-types.\",\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Poison'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Noxious Liquid\",\r\n\t\trating: 3.5,\r\n\t},\r\n\tpurewater: {\r\n\t\tshortDesc: \"This Pokemon's draining moves heal it 50% more than usual.\",\r\n\t\tonTryHealPriority: 1,\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tconst heals = ['drain', 'leechseed', 'ingrain', 'aquaring', 'strengthsap'];\r\n\t\t\tif (heals.includes(effect.id)) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pure Water\",\r\n\t\trating: 3.5,\r\n\t},\r\n\tlifedrain: {\r\n\t\tshortDesc: \"This Pokemon's moves heal it for 33% of the damage dealt.\",\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (!move.drain && move.category !== 'Status') {\r\n\t\t\t\tmove.drain = [1, 3];\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Life Drain\",\r\n\t\trating: 3,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
