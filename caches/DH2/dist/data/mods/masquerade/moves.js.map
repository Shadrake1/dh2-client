{
  "version": 3,
  "sources": ["../../../../data/mods/masquerade/moves.ts"],
  "sourcesContent": ["export const Moves: {[k: string]: ModdedMoveData} = {\r\n  dazzlinggleam: {\r\n\t\tnum: 605,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dazzling Gleam\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Gardevoir-Sandshroud': case 'Gardevoir-Sandshroud-Tera':\r\n\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Gardevoir-Blightbent': case 'Gardevoir-Blightbent-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Gardevoir-All-Ice': case 'Gardevoir-All-Ice-Tera':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdrillpeck: {\r\n\t\tnum: 65,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Drill Peck\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, distance: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Corviknight-Burrowing': case 'Corviknight-Burrowing-Tera':\r\n\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Corviknight-Jet': case 'Corviknight-Jet-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\thypervoice: {\r\n\t\tnum: 304,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hyper Voice\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Arboliva-Pondweed': case 'Arboliva-Pondweed-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Arboliva-Sundew': case 'Arboliva-Sundew-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tbodypress: {\r\n\t\tnum: 776,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Body Press\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Chesnaught-Armored': case 'Chesnaught-Armored-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\toverrideOffensiveStat: 'def',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tliquidation: {\r\n\t\tnum: 710,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Liquidation\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Swampert-Lakelurker': case 'Swampert-Lakelurker-Tera':\r\n\t\t\t\tmove.type = 'Dragon';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tfuturesight: {\r\n\t\tnum: 248,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Future Sight\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {allyanim: 1, futuremove: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'futuresight',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'futuresight',\r\n\t\t\t\t\tname: \"Future Sight\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 120,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {allyanim: 1, futuremove: 1},\r\n      \t\tonModifyType(move, pokemon) {\r\n      \t\t\tswitch (pokemon.species.name) {\r\n      \t\t\tcase 'Delphox-Oracle': case 'Delphox-Oracle-Tera':\r\n      \t\t\t\tmove.type = 'Fairy';\r\n      \t\t\t\tbreak;\r\n      \t\t\t}\r\n      \t\t},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Psychic',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Future Sight');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Delphox-Oracle': case 'Delphox-Oracle-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tdrainingtusk: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 120,\r\n\t\tshortDesc: \"Heals the user by 25% of the damage dealt.\",\r\n\t\tviable: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Draining Tusk\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, heal: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Horn Leech\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Emboar-Storm': case 'Emboar-Storm-Tera':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Emboar-Metal': case 'Emboar-Metal-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Emboar-Frostbite': case 'Emboar-Frostbite-Tera':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrain: [1, 4],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tpowerblitz: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tshortDesc: \"Raises user's Attack by 1 if this KOes the target.\",\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Power Blitz\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bolt Strike\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Boltund-Lights': case 'Boltund-Lights-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Boltund-Crash': case 'Boltund-Crash-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Boltund-Cold': case 'Boltund-Cold-Tera':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) this.boost({atk: 1}, pokemon, pokemon, move);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tdoubledose: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Hits twice. 20% chance to poison. Doubles: Tries to hit each foe once.\",\r\n\t\tname: \"Double Dose\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, noparentalbond: 1},\r\n\t\tmultihit: 2,\r\n\t\tsmartTarget: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Dragon Darts\", target);\r\n\t\t\tthis.add('-anim', source, \"Corrosive Gas\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Drapion-Dragonblade': case 'Drapion-Dragonblade-Tera':\r\n\t\t\t\tmove.type = 'Dragon';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Drapion-Hydroscythe': case 'Drapion-Hydroscythe-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Drapion-Wispaxe': case 'Drapion-Wispaxe-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tmaxMove: {basePower: 130},\r\n\t},\r\n\tbulldoze: {\r\n\t\tnum: 523,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bulldoze\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Flygon-Lionheart': case 'Flygon-Lionheart-Tera':\r\n\t\t\t\tmove.type = 'Bug';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Flygon-Cicadasong': case 'Flygon-Cicadasong-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Flygon-Beetlestone': case 'Flygon-Beetlestone-Tera':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tsecurelanding: {\r\n\t\tnum: 355,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Heals 50% HP. Secondary type removed 'til turn ends.\",\r\n\t\tname: \"Secure Landing\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1},\r\n\t\theal: [1, 2],\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Bounce\", target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'securelanding',\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Drifblim-Hot-Headed': case 'Drifblim-Hot-Headed-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Drifblim-Calmed': case 'Drifblim-Calmed-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Drifblim-Noxious': case 'Drifblim-Noxious-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tlet targetType = pokemon.types[1]\r\n\t\t\t\tif (!pokemon.terastallized) {\r\n\t\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === targetType ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('securelanding');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('securelanding');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tlet types = pokemon.baseSpecies.types;\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t\tif (pokemon.getTypes().join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tstoneaxe: {\r\n\t\tnum: 830,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Stone Axe\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, slicing: 1},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Kleavor-Arrowedge': case 'Kleavor-Arrowedge-Tera':\r\n\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kleavor-Galenahead': case 'Kleavor-Galenahead-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kleavor-Expertblade': case 'Kleavor-Expertblade-Tera':\r\n\t\t\t\tmove.type = 'Normal';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {}, // Sheer Force-boosted\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tsplashbite: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Gives the user the Aqua Ring effect.\",\r\n\t\tname: \"Splash Bite\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bite: 1, contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Crunch\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Feraligatr-Volcanic': case 'Feraligatr-Volcanic-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Feraligatr-Irradiating': case 'Feraligatr-Irradiating-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'aquaring',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tterablast: {\r\n\t\tnum: 851,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon.terastallized === 'Stellar') {\r\n\t\t\t\treturn 100;\r\n\t\t\t}\r\n\t\t\treturn 80;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Tera Blast\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, mustpressure: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (source.terastallized) {\r\n\t\t\t\tthis.attrLastMove('[anim] Tera Blast ' + source.teraType);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon, target) {\r\n\t\t\tif (pokemon.terastallized) {\r\n\t\t\t\tmove.type = pokemon.teraType;\r\n\t\t\t}\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Porygon2-Zenithbug': case 'Porygon2-Zenithbug-Tera':\r\n\t\t\t\tmove.type = 'Dark';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Porygon2-Retrowave': case 'Porygon2-Retrowave-Tera':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Porygon2-Dreamnet': case 'Porygon2-Dreamnet-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.terastallized && pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t}\r\n\t\t\tif (pokemon.terastallized === 'Stellar') {\r\n\t\t\t\tmove.self = {boosts: {atk: -1, spa: -1}};\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tdragonpulse: {\r\n\t\tnum: 406,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Dragon Pulse\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, pulse: 1, mirror: 1, distance: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Kingdra-Foamflow': case 'Kingdra-Foamflow-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kingdra-Rushwash': case 'Kingdra-Rushwash-Tera':\r\n\t\t\t\tmove.type = 'Normal';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kingdra-Frostshot': case 'Kingdra-Frostshot-Tera':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tthunderbolt: {\r\n\t\tnum: 85,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Thunderbolt\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Galvantula-Webcrawler': case 'Galvantula-Webcrawler-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Galvantula-Pyrefang': case 'Galvantula-Pyrefang-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Galvantula-Widowmaker': case 'Galvantula-Widowmaker-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tdiamondglow: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"100% chance to raise the user's Sp. Atk by 1.\",\r\n\t\tname: \"Diamond Glow\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Luster Purge\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Aurorus-Freezeflame': case 'Aurorus-Freezeflame-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Aurorus-Glacier': case 'Aurorus-Glacier-Tera':\r\n\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspa: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tscaleshot: {\r\n\t\tnum: 799,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Scale Shot\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tmultihit: [2, 5],\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Druddigon-Rubyhead': case 'Druddigon-Rubyhead-Tera':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Druddigon-Sharpshot': case 'Druddigon-Sharpshot-Tera':\r\n\t\t\t\tmove.type = 'Dark';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tselfBoost: {\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t\tspe: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tzMove: {basePower: 140},\r\n\t\tmaxMove: {basePower: 130},\r\n\t},\r\n\tsmartstrike: {\r\n\t\tnum: 684,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Smart Strike\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Excadrill-Jungletrimmer': case 'Excadrill-Jungletrimmer-Tera':\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Excadrill-Ancientspear': case 'Excadrill-Ancientspear-Tera':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Excadrill-Exoslasher': case 'Excadrill-Exoslasher-Tera':\r\n\t\t\t\tmove.type = 'Bug';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tthroatchop: {\r\n\t\tnum: 675,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Throat Chop\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Absol-Archangels': case 'Absol-Archangels-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Absol-Sandscythe': case 'Absol-Sandscythe-Tera':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Absol-Mothman': case 'Absol-Mothman-Tera':\r\n\t\t\t\tmove.type = 'Bug';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'Throat Chop', '[silent]');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['sound']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (!move.isZ && !move.isMax && move.flags['sound']) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Throat Chop');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (!move.isZ && !move.isMax && move.flags['sound']) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Throat Chop');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 22,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Throat Chop', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target) {\r\n\t\t\t\ttarget.addVolatile('throatchop');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tcottonswab: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"If there are hazards on the user's side, clears them but has halved power.\",\r\n\t\tname: \"Cotton Swab\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {powder: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Pollen Puff\", target);\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (pokemon.side.getSideCondition('stealthrock') || pokemon.side.getSideCondition('spikes') ||\r\n\t\t\t\tpokemon.side.getSideCondition('toxicspikes') || pokemon.side.getSideCondition('stickyweb') ||\r\n\t\t\t\tpokemon.side.getSideCondition('gmaxsteelsurge')) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Whimsicott-Scarespore': case 'Whimsicott-Scarespore-Tera':\r\n\t\t\t\tmove.type = 'Dark';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Whimsicott-Steelspore': case 'Whimsicott-Steelspore-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Whimsicott-Windspore': case 'Whimsicott-Windspore-Tera':\r\n\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Cotton Swab', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Cotton Swab', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tultragulp: {\r\n\t\tnum: 202,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Heals 33% of the damage dealt and steals positive boosts.\",\r\n\t\tname: \"Ultra Gulp\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, heal: 1},\r\n\t\tdrain: [1, 3],\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Crunch\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Guzzlord-Black-Hole': case 'Guzzlord-Black-Hole-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Guzzlord-Miasma': case 'Guzzlord-Miasma-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Guzzlord-Rainbow': case 'Guzzlord-Rainbow-Tera':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, pokemon, move) {\r\n\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\tlet stolen = false;\r\n\t\t\tlet statName: BoostID;\r\n\t\t\tfor (statName in target.boosts) {\r\n\t\t\t\tconst stage = target.boosts[statName];\r\n\t\t\t\tif (stage > 0) {\r\n\t\t\t\t\tboosts[statName] = stage;\r\n\t\t\t\t\tstolen = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (stolen) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-clearpositiveboost', target, pokemon, 'move: ' + move.name);\r\n\t\t\t\tthis.boost(boosts, pokemon, pokemon);\r\n\r\n\t\t\t\tlet statName2: BoostID;\r\n\t\t\t\tfor (statName2 in boosts) {\r\n\t\t\t\t\tboosts[statName2] = 0;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.setBoost(boosts);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(target, pokemon, move) {\r\n\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\tlet stolen = false;\r\n\t\t\tlet statName: BoostID;\r\n\t\t\tfor (statName in target.boosts) {\r\n\t\t\t\tconst stage = target.boosts[statName];\r\n\t\t\t\tif (stage > 0) {\r\n\t\t\t\t\tboosts[statName] = stage;\r\n\t\t\t\t\tstolen = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (stolen) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-clearpositiveboost', target, pokemon, 'move: ' + move.name);\r\n\t\t\t\tthis.boost(boosts, pokemon, pokemon);\r\n\r\n\t\t\t\tlet statName2: BoostID;\r\n\t\t\t\tfor (statName2 in boosts) {\r\n\t\t\t\t\tboosts[statName2] = 0;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.setBoost(boosts);\r\n\t\t\t\tthis.battle.addMove('-anim', pokemon, \"Ultra Gulp\", target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tearthmover: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 20,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Switches user out. Switch-in is immune to hazards.\",\r\n\t\tname: \"Earthmover\",\r\n\t\tviable: true,\r\n\t\tpp: 7.5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tselfSwitch: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Stomping Tantrum\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Gigalith-Incense': case 'Gigalith-Incense-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Gigalith-Graveyard': case 'Gigalith-Graveyard-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Gigalith-Swarmrock': case 'Gigalith-Swarmrock-Tera':\r\n\t\t\t\tmove.type = 'Bug';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tsideCondition: 'earthmover',\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tsurf: {\r\n\t\tnum: 57,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Surf\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, nonsky: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Jellicent-Sea-Witch': case 'Jellicent-Sea-Witch-Tera':\r\n\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Jellicent-Ironclad': case 'Jellicent-Ironclad-Tera': case 'Starmie-UFO': case 'Starmie-UFO-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Starmie-Starfighter': case 'Starmie-Starfighter-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Starmie-Burningstar': case 'Starmie-Burningstar-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdragontail: {\r\n\t\tnum: 525,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dragon Tail\",\r\n\t\tpp: 10,\r\n\t\tpriority: -6,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, noassist: 1, failcopycat: 1},\r\n\t\tforceSwitch: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Kommo-o-Scarabshield': case 'Kommo-o-Scarabshield-Tera':\r\n\t\t\t\tmove.type = 'Bug';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kommo-o-Metalscale': case 'Kommo-o-Metalscale-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kommo-o-Combatwing': case 'Kommo-o-Combatwing-Tera':\r\n\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tmatchagotcha: {\r\n\t\tnum: 902,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Matcha Gotcha\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, defrost: 1, heal: 1, metronome: 1},\r\n\t\tdrain: [1, 2],\r\n\t\tthawsTarget: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Sinistcha-Scalding': case 'Sinistcha-Scalding-Tera': case 'Sinistcha-Masterpiece-Scalding': case 'Sinistcha-Masterpiece-Scalding-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Sinistcha-Corrosive': case 'Sinistcha-Corrosive-Tera': case 'Sinistcha-Masterpiece-Corrosive': case 'Sinistcha-Masterpiece-Corrosive-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Sinistcha-Pure': case 'Sinistcha-Pure-Tera': case 'Sinistcha-Masterpiece-Pure': case 'Sinistcha-Masterpiece-Pure-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tdracometeor: {\r\n\t\tnum: 434,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Draco Meteor\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Tatsugiri-Riceroll': case 'Tatsugiri-Riceroll-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tatsugiri-Tempura': case 'Tatsugiri-Tempura-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -2,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tpetalblizzard: {\r\n\t\tnum: 572,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Petal Blizzard\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, wind: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Tsareena-Winterstyle': case 'Tsareena-Winterstyle-Tera':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tsareena-Feathercrown': case 'Tsareena-Feathercrown-Tera':\r\n\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tsareena-Warmaidens': case 'Tsareena-Warmaidens-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tfungalenergy: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Heals the user by 50% of their max HP and sets Misty Terrain.\",\r\n\t\tname: \"Fungal Energy\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1, metronome: 1},\r\n\t\theal: [1, 2],\r\n\t\tterrain: 'mistyterrain',\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Recover\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Toedscruel-Fairydust': case 'Toedscruel-Fairydust-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Toedscruel-Wyrmstool': case 'Toedscruel-Wyrmstool-Tera':\r\n\t\t\t\tmove.type = 'Dragon';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Toedscruel-Mushroot': case 'Toedscruel-Mushroot-Tera':\r\n\t\t\t\tmove.type = 'Normal';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tbodyslam: {\r\n\t\tnum: 34,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Body Slam\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Wigglytuff-Stormcloud': case 'Wigglytuff-Stormcloud-Tera':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Wigglytuff-Moonlight': case 'Wigglytuff-Moonlight-Tera':\r\n\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Wigglytuff-Nightballoon': case 'Wigglytuff-Nightballoon-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tcrosspoison: {\r\n\t\tnum: 440,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Cross Poison\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Crobat-Nightkite': case 'Crobat-Nightkite-Tera':\r\n\t\t\t\tmove.type = 'Normal';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Crobat-Herowing': case 'Crobat-Herowing-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Crobat-Petalvamp': case 'Crobat-Petalvamp-Tera':\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\tcritRatio: 2,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tspiritbreak: {\r\n\t\tnum: 789,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Spirit Break\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Granbull-Warden': case 'Granbull-Warden-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Granbull-Guardian': case 'Granbull-Guardian-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tsunsteelstrike: {\r\n\t\tnum: 713,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sunsteel Strike\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Solgaleo-Sunfish': case 'Solgaleo-Sunfish-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Solgaleo-Suncore': case 'Solgaleo-Suncore-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Solgaleo-Sunflower': case 'Solgaleo-Sunflower-Tera':\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tignoreAbility: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tivycudgel: {\r\n\t\tnum: 904,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Ivy Cudgel\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tcritRatio: 2,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (move.type !== \"Grass\" && move.type !== \"Ghost\") {\r\n\t\t\t\tthis.attrLastMove('[anim] Ivy Cudgel ' + move.type);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Ogerpon-Wellspring': case 'Ogerpon-Wellspring-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Hearthflame': case 'Ogerpon-Hearthflame-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Cornerstone': case 'Ogerpon-Cornerstone-Tera':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Mournstone': case 'Ogerpon-Mournstone-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\thydropump: {\r\n\t\tnum: 56,\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hydro Pump\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Iron Bundle-Shadowspear': case 'Iron Bundle-Shadowspear-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Iron Bundle-Voltchurner': case 'Iron Bundle-Voltchurner-Tera':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tkowtowcleave: {\r\n\t\tnum: 869,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Kowtow Cleave\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Kingambit-Kusari': case 'Kingambit-Kusari-Tera':\r\n\t\t\t\tmove.type = 'Ghost';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kingambit-Hydramurai': case 'Kingambit-Hydramurai-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Kingambit-Poisonforged': case 'Kingambit-Poisonforged-Tera':\r\n\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tnightslash: {\r\n\t\tnum: 400,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Night Slash\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tcritRatio: 2,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Lokix-Lasersword': case 'Lokix-Lasersword-Tera':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Lokix-Strider': case 'Lokix-Strider-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Lokix-Leechfist': case 'Lokix-Leechfist-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\thex: {\r\n\t\tnum: 506,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status || target.hasAbility('comatose')) {\r\n\t\t\t\tthis.debug('BP doubled from status condition');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Hex\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Pecharunt-Chesto': case 'Pecharunt-Chesto-Tera':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Pecharunt-Lum': case 'Pecharunt-Lum-Tera':\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Pecharunt-Babiri': case 'Pecharunt-Babiri-Tera':\r\n\t\t\t\tmove.type = 'Steel';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tzMove: {basePower: 160},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\r\n// unchanged moves\r\n\tdefog: {\r\n\t\tnum: 432,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Defog\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, bypasssub: 1},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\tconst removeTarget = [\r\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tconst removeAll = [\r\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tif (source.hasAbility('residuecleaning')) {\r\n\t\t\t\t\t\tthis.heal(source.maxhp / 4, source, source, move);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', '[of] ' + source);\r\n\t\t\t\t\tif (source.hasAbility('residuecleaning')) {\r\n\t\t\t\t\t\tthis.heal(source.maxhp / 4, source, source, move);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: {boost: {accuracy: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tblizzard: {\r\n\t\tnum: 59,\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Blizzard\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, wind: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow']) || pokemon.hasAbility('snowcap')) move.accuracy = true;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tweatherball: {\r\n\t\tnum: 311,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Weather Ball\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hasAbility('snowcap')) {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (pokemon.hasAbility('snowcap') && !this.field.isWeather(['hail', 'snow'])) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {basePower: 160},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n// other snowscap effects to add later: Aurora Veil, Weather-healing abilities, Solar Beam\t\r\n\tteraused: {\r\n\t\tshortDesc: \"Prevents Terastalization from being used multiple times.\",\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Tera Used\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tsideCondition: 'teraused',\r\n\t\tcondition: {},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tstealthrock: {\r\n\t\tnum: 446,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Stealth Rock\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, mustpressure: 1},\r\n\t\tsideCondition: 'stealthrock',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Stealth Rock');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasItem('heavydutyboots') || pokemon.side.getSideCondition('earthmover')) return;\r\n\t\t\t\tconst typeMod = this.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('stealthrock')), -6, 6);\r\n\t\t\t\tthis.damage(pokemon.maxhp * Math.pow(2, typeMod) / 8);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Rock\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tspikes: {\r\n\t\tnum: 191,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Spikes\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, mustpressure: 1},\r\n\t\tsideCondition: 'spikes',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 3) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots') || pokemon.side.getSideCondition('earthmover')) return;\r\n\t\t\t\tconst damageAmounts = [0, 3, 4, 6]; // 1/8, 1/6, 1/4\r\n\t\t\t\tthis.damage(damageAmounts[this.effectState.layers] * pokemon.maxhp / 24);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Ground\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\ttoxicspikes: {\r\n\t\tnum: 390,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Toxic Spikes\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, nonsky: 1, mustpressure: 1},\r\n\t\tsideCondition: 'toxicspikes',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 2) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\t\tif (pokemon.hasType('Poison')) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Toxic Spikes', '[of] ' + pokemon);\r\n\t\t\t\t\tpokemon.side.removeSideCondition('toxicspikes');\r\n\t\t\t\t} else if (pokemon.hasType('Steel') || pokemon.hasItem('heavydutyboots') || pokemon.side.getSideCondition('earthmover')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (this.effectState.layers >= 2) {\r\n\t\t\t\t\tpokemon.trySetStatus('tox', pokemon.side.foe.active[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpokemon.trySetStatus('psn', pokemon.side.foe.active[0]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Poison\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tstickyweb: {\r\n\t\tnum: 564,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Sticky Web\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1},\r\n\t\tsideCondition: 'stickyweb',\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Sticky Web');\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots') || pokemon.side.getSideCondition('earthmover')) return;\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Sticky Web');\r\n\t\t\t\tthis.boost({spe: -1}, pokemon, this.effectState.source, this.dex.getActiveMove('stickyweb'));\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Bug\",\r\n\t\tzMove: {boost: {spe: 1}},\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
