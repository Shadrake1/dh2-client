{
  "version": 3,
  "sources": ["../../../../data/mods/hideandseaking/scripts.ts"],
  "sourcesContent": ["export const Scripts: BattleScriptsData = { \r\n\tgen: 9,\r\n\tside: {\r\n\t\tinherit: true,\r\n\t\tconstructor(name: string, battle: Battle, sideNum: number, team: PokemonSet[]) {\r\n\t\t\tconst sideScripts = battle.dex.data.Scripts.side;\r\n\t\t\tif (sideScripts) Object.assign(this, sideScripts);\r\n\t\r\n\t\t\tthis.battle = battle;\r\n\t\t\tthis.id = ['p1', 'p2', 'p3', 'p4'][sideNum] as SideID;\r\n\t\t\tthis.n = sideNum;\r\n\t\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.avatar = '';\r\n\t\r\n\t\t\tthis.team = team;\r\n\t\t\tthis.pokemon = [];\r\n\t\t\tfor (let i = 0; i < this.team.length && i < 24; i++) {\r\n\t\t\t\t// console.log(\"NEW POKEMON: \" + (this.team[i] ? this.team[i].name : '[unidentified]'));\r\n\t\t\t\tthis.pokemon.push(new Pokemon(this.team[i], this));\r\n\t\t\t\tthis.pokemon[i].position = i;\r\n\t\t\t}\r\n\t\r\n\t\t\tswitch (this.battle.gameType) {\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.active = [null!, null!];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples': case 'rotation':\r\n\t\t\t\tthis.active = [null!, null!, null!];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.active = [null!];\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.pokemonLeft = this.pokemon.length;\r\n\t\t\tthis.faintedLastTurn = null;\r\n\t\t\tthis.faintedThisTurn = null;\r\n\t\t\tthis.totalFainted = 0;\r\n\t\t\tthis.zMoveUsed = false;\r\n\t\t\tthis.dynamaxUsed = this.battle.gen !== 9;\r\n\t\r\n\t\t\tthis.sideConditions = {};\r\n\t\t\tthis.slotConditions = [];\r\n\t\t\t// Array#fill doesn't work for this\r\n\t\t\tfor (let i = 0; i < this.active.length; i++) this.slotConditions[i] = {};\r\n\t\r\n\t\t\tthis.activeRequest = null;\r\n\t\t\tthis.choice = {\r\n\t\t\t\tcantUndo: false,\r\n\t\t\t\terror: ``,\r\n\t\t\t\tactions: [],\r\n\t\t\t\tforcedSwitchesLeft: 0,\r\n\t\t\t\tforcedPassesLeft: 0,\r\n\t\t\t\tswitchIns: new Set(),\r\n\t\t\t\tzMove: false,\r\n\t\t\t\tmega: false,\r\n\t\t\t\tultra: false,\r\n\t\t\t\tterastallize: false,\r\n\t\t\t\tdynamax: false,\r\n\t\t\t};\r\n\t\r\n\t\t\t// old-gens\r\n\t\t\tthis.lastMove = null;\r\n\t\t},\r\n\t\tcanDynamaxNow() {\r\n\t\t\tif (this.battle.gen !== 9) return false;\r\n\t\t\tif (this.battle.gameType === 'multi' && this.battle.turn % 2 !== [1, 1, 0, 0][this.n]) return false;\r\n\t\t\t// if (this.battle.gameType === 'multitriples' && this.battle.turn % 3 !== [1, 1, 2, 2, 0, 0][this.side.n]) {\r\n\t\t\t//        return false;\r\n\t\t\t// }\r\n\t\t\tif (this.dynamaxUsed) return false;\r\n\t\t\tif (this.battle.ruleTable.has('bigdogclause')) {\r\n\t\t\t\treturn this.active.some(pokemon => pokemon.m.dog);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t},\r\n\tpokemon: {\r\n\tinherit: true,\r\n\t\tgetDynamaxRequest(skipChecks?: boolean) {\r\n\t\t\t// {gigantamax?: string, maxMoves: {[k: string]: string} | null}[]\r\n\t\t\tif (!skipChecks) {\r\n\t\t\t\tconst speciesid = this.species.id;\r\n\t\t\t\tif (!this.side.canDynamaxNow()) return;\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.species.isMega || this.species.isPrimal || this.species.forme === \"Ultra\" || this.canMegaEvo\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Some pokemon species are unable to dynamax\r\n\t\t\t\tif (this.species.cannotDynamax || this.illusion?.species.cannotDynamax) return;\r\n\t\t\t}\r\n\t\t\tconst result: DynamaxOptions = {maxMoves: []};\r\n\t\t\tlet atLeastOne = false;\r\n\t\t\tfor (const moveSlot of this.moveSlots) {\r\n\t\t\t\tconst move = this.battle.dex.moves.get(moveSlot.id);\r\n\t\t\t\tconst maxMove = this.battle.actions.getMaxMove(move, this);\r\n\t\t\t\tif (maxMove) {\r\n\t\t\t\t\tif (this.maxMoveDisabled(move)) {\r\n\t\t\t\t\t\tresult.maxMoves.push({move: maxMove.id, target: maxMove.target, disabled: true});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.maxMoves.push({move: maxMove.id, target: maxMove.target});\r\n\t\t\t\t\t\tatLeastOne = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!atLeastOne) return;\r\n\t\t\tif (this.canGigantamax) result.gigantamax = this.canGigantamax;\r\n\t\t\treturn result;\r\n\t\t},\t\t\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
