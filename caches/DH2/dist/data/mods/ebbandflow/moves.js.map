{
  "version": 3,
  "sources": ["../../../../data/mods/ebbandflow/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: ModdedMoveData} = {\r\nancientpower: {\r\n\t\tnum: 246,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Ancient Power\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n    onAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) this.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1}, pokemon, pokemon, move);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tconversion: { // NOT FULLY CODED FOR ONE TIME USE\r\n\t\tnum: 160,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Conversion\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tonHit(target) {\r\n\t\t\tconst type = this.dex.moves.get(target.moveSlots[0].id).type;\r\n\t\t\tif (target.hasType(type) || !target.setType(type)) return false;\r\n\t\t\tthis.add('-start', target, 'typechange', type);\r\n\t\t},\r\n    boost: {atk: 1, def: 1, spa: 1, spd: 1, spe: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {boost: {atk: 1, def: 1, spa: 1, spd: 1, spe: 1}},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\ndragonrush: {\r\n\t\tnum: 407,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dragon Rush\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\nfocuspunch: {\r\n\t\tnum: 264,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 250,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Focus Punch\",\r\n\t\tpp: 20,\r\n\t\tpriority: -3,\r\n\t\tflags: {contact: 1, protect: 1, punch: 1, failmefirst: 1, nosleeptalk: 1, noassist: 1, failcopycat: 1, failinstruct: 1},\r\n\t\tpriorityChargeCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('focuspunch');\r\n\t\t},\r\n\t\tbeforeMoveCallback(pokemon) {\r\n\t\t\tif (pokemon.volatiles['focuspunch']?.lostFocus) {\r\n\t\t\t\tthis.add('cant', pokemon, 'Focus Punch', 'Focus Punch');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singleturn', pokemon, 'move: Focus Punch');\r\n\t\t\t},\r\n\t\t\tonHit(pokemon, source, move) {\r\n\t\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t\tthis.effectState.lostFocus = true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTryAddVolatile(status, pokemon) {\r\n\t\t\t\tif (status.id === 'flinch') return null;\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n  highhorsepower: {\r\n\t\tnum: 667,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"High Horsepower\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n    secondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n metalsound: {\r\n\t\tnum: 319,\r\n\t\taccuracy: 85,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Metal Sound\",\r\n\t\tpp: 40,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, sound: 1, bypasssub: 1, allyanim: 1, metronome: 1},\r\n\t\tboosts: {\r\n\t\t\tspd: -1,\r\n\t\t},\r\n\r\nonAfterHit(target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (!move.hasSheerForce) {\r\n\t\t\t\tif (pokemon.hp && pokemon.removeVolatile('leechseed')) {\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Leech Seed', '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.hp && pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Rapid Spin', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hp && pokemon.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tpokemon.removeVolatile('partiallytrapped');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t \r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tzMove: {boost: {spa: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n  // MISTY EXPLOSION difference?? User feints. User on Misty Terrain: 1.5x power.\r\n  // STEALTH ROCK which one?? Now a Rock-type Future Sight clone. ||| ...in addition, the move still sets Stealth Rock on the opposing side, which deals 1/8th of the opponents max HP when they switch out. Factors Rock weakness.\r\n  substitute: {\r\n\t\tnum: 164,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Substitute\",\r\n\t\tpp: 10,\r\n\t\tpriority: 1,\r\n\t\tflags: {snatch: 1, nonsky: 1, metronome: 1},\r\n\t\tvolatileStatus: 'substitute',\r\n\t\tonTryHit(source) {\r\n\t\t\tif (source.volatiles['substitute']) {\r\n\t\t\t\tthis.add('-fail', source, 'move: Substitute');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\tif (source.hp <= source.maxhp / 4 || source.maxhp === 1) { // Shedinja clause\r\n\t\t\t\tthis.add('-fail', source, 'move: Substitute', '[weak]');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\tthis.directDamage(target.maxhp / 4);\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tif (effect?.id === 'shedtail') {\r\n\t\t\t\t\tthis.add('-start', target, 'Substitute', '[from] move: Shed Tail');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', target, 'Substitute');\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.hp = Math.floor(target.maxhp / 4);\r\n\t\t\t\tif (target.volatiles['partiallytrapped']) {\r\n\t\t\t\t\tthis.add('-end', target, target.volatiles['partiallytrapped'].sourceEffect, '[partiallytrapped]', '[silent]');\r\n\t\t\t\t\tdelete target.volatiles['partiallytrapped'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTryPrimaryHitPriority: -1,\r\n\t\t\tonTryPrimaryHit(target, source, move) {\r\n\t\t\t\tif (target === source || move.flags['bypasssub'] || move.infiltrates) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet damage = this.actions.getDamage(source, target, move);\r\n\t\t\t\tif (!damage && damage !== 0) {\r\n\t\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tdamage = this.runEvent('SubDamage', target, source, move, damage);\r\n\t\t\t\tif (!damage) {\r\n\t\t\t\t\treturn damage;\r\n\t\t\t\t}\r\n\t\t\t\tif (damage > target.volatiles['substitute'].hp) {\r\n\t\t\t\t\tdamage = target.volatiles['substitute'].hp as number;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.volatiles['substitute'].hp -= damage;\r\n\t\t\t\tsource.lastDamage = damage;\r\n\t\t\t\tif (target.volatiles['substitute'].hp <= 0) {\r\n\t\t\t\t\tif (move.ohko) this.add('-ohko');\r\n\t\t\t\t\ttarget.removeVolatile('substitute');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Substitute', '[damage]');\r\n\t\t\t\t}\r\n\t\t\t\tif (move.recoil || move.id === 'chloroblast') {\r\n\t\t\t\t\tthis.damage(this.actions.calcRecoilDamage(damage, move, source), source, target, 'recoil');\r\n\t\t\t\t}\r\n\t\t\t\tif (move.drain) {\r\n\t\t\t\t\tthis.heal(Math.ceil(damage * move.drain[0] / move.drain[1]), source, target, 'drain');\r\n\t\t\t\t}\r\n\t\t\t\tthis.singleEvent('AfterSubDamage', move, null, target, source, move, damage);\r\n\t\t\t\tthis.runEvent('AfterSubDamage', target, source, move, damage);\r\n\t\t\t\treturn this.HIT_SUBSTITUTE;\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Substitute');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n      uturn: {\r\n\t\tnum: 369,\r\n\t\taccuracy: 99,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"U-turn\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n      watershuriken: {\r\n\t\tnum: 594,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon.species.name === 'Greninja-Ash' && pokemon.hasAbility('battlebond') &&\r\n\t\t\t\t!pokemon.transformed) {\r\n\t\t\t\treturn move.basePower + 5;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Water Shuriken\",\r\n\t\tpp: 20,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tmultihit: [2, 5],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmistyexplosion: {\r\n\t\tnum: 802,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Misty Explosion\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonHit(source) {\r\n\t\tthis.actions.useMove(\"Feint\", source);\r\n\t\t},\r\n\t\tonBasePower(basePower, source) {\r\n\t\t\tif (this.field.isTerrain('mistyterrain') && source.isGrounded()) {\r\n\t\t\t\tthis.debug('misty terrain boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n  };\r\n"],
  "mappings": "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",
  "names": []
}
