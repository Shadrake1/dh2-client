{
  "version": 3,
  "sources": ["../../../../data/mods/ebbandflow/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[k: string]: ModdedAbilityData} = {\r\n  slowstart: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('slowstart');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['slowstart'];\r\n\t\t\tthis.add('-end', pokemon, 'Slow Start', '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonResidualOrder: 28,\r\n\t\t\tonResidualSubOrder: 2,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Slow Start');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Slow Start');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Slow Start\",\r\n\t\trating: -1,\r\n\t\tnum: 112,\r\n\t},\r\ngoodasgold: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category === 'Status' && target !== source && move.name != 'Defog') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Good as Gold');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Good as Gold\",\r\n\t\trating: 5,\r\n\t\tnum: 283,\r\n\t},\r\ndamp: {\r\n\tonStart(source) {\r\n\t\t\tthis.actions.useMove(\"Explosion\", source);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Damp\",\r\n\t\trating: 0.5,\r\n\t\tnum: 6,\r\n\t},\r\n\tsnowcloak: { // CHECK ONCE\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod === 0) {\r\n\t\t\t\tthis.debug('Snowcloak neutralize');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Snow Cloak\",\r\n\t\trating: 1.5,\r\n\t\tnum: 81,\r\n\t},\r\n\tunnerve: { // Check this\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Ghost') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Ghost')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Unnerve\",\r\n\t\trating: 1,\r\n\t\tnum: 127,\r\n\t},\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,YAA8C;AAAA,EACzD,WAAW;AAAA,IACX,QAAQ,SAAS;AAChB,cAAQ,YAAY,WAAW;AAAA,IAChC;AAAA,IACA,MAAM,SAAS;AACd,aAAO,QAAQ,UAAU,WAAW;AACpC,WAAK,IAAI,QAAQ,SAAS,cAAc,UAAU;AAAA,IACnD;AAAA,IACA,WAAW;AAAA,MACV,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,oBAAoB;AAAA,MACpB,QAAQ,QAAQ;AACf,aAAK,IAAI,UAAU,QAAQ,qBAAqB;AAAA,MACjD;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,MACA,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,MACA,MAAM,QAAQ;AACb,aAAK,IAAI,QAAQ,QAAQ,YAAY;AAAA,MACtC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACD,YAAY;AAAA,IACV,SAAS,QAAQ,QAAQ,MAAM;AAC9B,UAAI,KAAK,aAAa,YAAY,WAAW,UAAU,KAAK,QAAQ,SAAS;AAC5E,aAAK,IAAI,WAAW,QAAQ,8BAA8B;AAC1D,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,OAAO,EAAC,WAAW,EAAC;AAAA,IACpB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACD,MAAM;AAAA,IACL,QAAQ,QAAQ;AACd,WAAK,QAAQ,QAAQ,aAAa,MAAM;AAAA,IACzC;AAAA,IACA,OAAO,EAAC,WAAW,EAAC;AAAA,IACpB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACA,WAAW;AAAA;AAAA,IACV,qBAAqB,QAAQ,QAAQ,QAAQ,MAAM;AAClD,UAAI,OAAO,eAAe,IAAI,EAAE,YAAY,GAAG;AAC9C,aAAK,MAAM,sBAAsB;AACjC,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,OAAO,EAAC,WAAW,EAAC;AAAA,IACpB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AAAA,EACA,SAAS;AAAA;AAAA,IACR,iBAAiB,SAAS;AACzB,UAAI,QAAQ,QAAQ,OAAO,KAAK,QAAQ,WAAW,KAAK,YAAY,MAAM,GAAG;AAC5E,gBAAQ,QAAQ,IAAI;AAAA,MACrB;AAAA,IACD;AAAA,IACA,sBAAsB,SAAS,QAAQ;AACtC,UAAI,CAAC;AAAQ,iBAAS,KAAK,YAAY;AACvC,UAAI,CAAC,UAAU,CAAC,QAAQ,WAAW,MAAM;AAAG;AAC5C,UAAI,CAAC,QAAQ,aAAa,QAAQ,QAAQ,OAAO,GAAG;AACnD,gBAAQ,eAAe;AAAA,MACxB;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACN;AACD;",
  "names": []
}
