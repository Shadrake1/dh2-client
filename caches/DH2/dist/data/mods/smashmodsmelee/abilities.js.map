{
  "version": 3,
  "sources": ["../../../../data/mods/smashmodsmelee/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\tthunderhead: {\r\n\t\tdesc: \"This Pok\u00E9mon ignores other Pok\u00E9mon's Attack, Special Attack, and accuracy stat stages when taking damage, and ignores other Pok\u00E9mon's Defense, Special Defense, and evasiveness stat stages when dealing damage. When this Pok\u00E9mon is hit by an attack, Electric Terrain begins.\",\r\n\t\tshortDesc: \"Ignores stat changes. Sets Electric Terrain when attacked.\",\r\n\t\tname: \"Thunderhead\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!this.field.isTerrain('electricterrain')) {\r\n\t  \t\tthis.field.setTerrain('electricterrain');\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 4,\r\n\t\tnum: -1001,\r\n\t},\r\n\tcoldsweat: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons hail. It changes the current weather to rain whenever any opposing Pok\u00E9mon has an attack that is super effective on this Pok\u00E9mon or an OHKO move. Counter, Metal Burst, and Mirror Coat count as attacking moves of their respective types, Hidden Power counts as its determined type, and Judgment, Multi-Attack, Natural Gift, Revelation Dance, Techno Blast, and Weather Ball are considered Normal-type moves.\",\r\n\t\tshortDesc: \"Summons hail on switch-in. Changes weather to rain if the foe has a supereffective or OHKO move.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('hail');\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, source) && this.dex.getEffectiveness(moveType, source) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.field.setWeather('raindance');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tif (pokemon === source) return;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, source) && this.dex.getEffectiveness(moveType, source) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.field.setWeather('raindance', source);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Cold Sweat\",\r\n\t\trating: 4,\r\n\t\tnum: -1002,\r\n\t},\r\n\ttrashcompactor: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards. If it lands on any type of entry hazard, it clears the hazard and Stockpiles 1.\",\r\n\t\tshortDesc: \"Hazard immunity. Clears hazards, Stockpiles 1 if switched in on them.\",\r\n\t\tonAfterMega(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const sideCondition of ['gmaxsteelsurge', 'spikes', 'stealthrock', 'stickyweb', 'toxicspikes']) {\r\n\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) && !this.field.pseudoWeather.stickyresidues) {\r\n\t\t\t\t\tif (!activated) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Trash Compactor');\r\n\t\t\t\t\t\tactivated = true;\r\n\t\t\t\t\t\tthis.useMove('stockpile', pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpokemon.side.removeSideCondition(sideCondition);\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] Ability: Trash Compactor', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Trash Compactor\",\r\n\t\trating: 5,\r\n\t\tnum: -1003,\r\n\t},\r\n\ttimewarp: {\r\n\t\tdesc: \"On switch-in, the field becomes Trick Room. This room remains in effect until this Ability is no longer active for any Pok\u00E9mon.\",\r\n\t\tshortDesc: \"On switch-in, Trick Room begins until this Ability is not active in battle.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.removePseudoWeather('trickroom');\r\n\t\t\tthis.field.addPseudoWeather('trickroom');\r\n\t\t},\r\n\t\tonAnyTryMove(target, source, effect) {\r\n\t\t\tif (['trickroom'].includes(effect.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: Time Warp', effect, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('timewarp')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.removePseudoWeather('trickroom');\r\n\t\t},\r\n\t\tname: \"Time Warp\",\r\n\t\trating: 4.5,\r\n\t\tnum: -1004,\r\n\t},\r\n\tfilter: {\r\n\t\tshortDesc: \"Reduces damage from supereffective attacks by 1/4 if one stage, 1/2 if two stages.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 1) {\r\n\t\t\t\tthis.debug('Filter neutralize');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t} else if (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Filter neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Filter\",\r\n\t\trating: 3,\r\n\t\tnum: 111,\r\n\t},\r\n\tchlorovolt: {\r\n\t\tdesc: \"If Sunny Day is active and this Pok\u00E9mon is not holding Utility Umbrella, as well as if Electic Terrain is active, this Pok\u00E9mon's Speed is doubled for each one that applies.\",\r\n\t\tshortDesc: \"If Sunny Day or Electric Terrain is active, this Pok\u00E9mon's Speed is doubled for each one.\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isTerrain('electricterrain') && ['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(4);\r\n\t\t\t} else if (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t} else if (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"ChloroVolt\",\r\n\t\trating: 3,\r\n\t\tnum: -1005,\r\n\t},\r\n\tflametouch: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's contact moves have a 30% chance of burning.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move || !move.flags['contact'] || move.target === 'self') return;\r\n\t\t\tif (!move.secondaries) {\r\n\t\t\t\tmove.secondaries = [];\r\n\t\t\t}\r\n\t\t\tmove.secondaries.push({\r\n\t\t\t\tchance: 30,\r\n\t\t\t\tstatus: 'brn',\r\n\t\t\t\tability: this.dex.abilities.get('flametouch'),\r\n\t\t\t});\r\n\t\t},\r\n\t\tname: \"Flame Touch\",\r\n\t\trating: 2,\r\n\t\tnum: -1006,\r\n\t},\r\n\tparasomnia: {\r\n\t\tdesc: \"This Pok\u00E9mon's highest stat is raised by 1 stage if it attacks and knocks out another Pok\u00E9mon and when it falls asleep.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's highest stat is boosted on KOing another Pok\u00E9mon and when falling asleep.\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tlet statName = 'atk';\r\n\t\t\t\tlet bestStat = 0;\r\n\t\t\t\tlet s: StatNameExceptHP;\r\n\t\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\t\tstatName = s;\r\n\t\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.boost({[statName]: length}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'slp') return;\r\n\t\t\tlet statName = 'atk';\r\n\t\t\tlet bestStat = 0;\r\n\t\t\tlet s: StatNameExceptHP;\r\n\t\t\tfor (s in source.storedStats) {\r\n\t\t\t\tif (source.storedStats[s] > bestStat) {\r\n\t\t\t\t\tstatName = s;\r\n\t\t\t\t\tbestStat = source.storedStats[s];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.boost({[statName]: 1}, target);\r\n\t\t},\r\n\t\tname: \"Parasomnia\",\r\n\t\trating: 3.5,\r\n\t\tnum: -1007,\r\n\t},\r\n\tguardup: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon's Defense or Special Defense is raised by 1 stage based on the weaker combined attacking stat of all opposing Pok\u00E9mon. Special Defense is raised if their Special Attack is higher, and Defense is raised if their Attack is the same or higher.\",\r\n\t\tshortDesc: \"On switch-in, Defense or Sp. Def is raised 1 stage based on the foes' weaker Attack.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totalatk = 0;\r\n\t\t\tlet totalspa = 0;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\ttotalatk += target.getStat('atk', false, true);\r\n\t\t\t\ttotalspa += target.getStat('spa', false, true);\r\n\t\t\t}\r\n\t\t\tif (totalatk && totalatk >= totalspa) {\r\n\t\t\t\tthis.boost({def: 1});\r\n\t\t\t} else if (totalspa) {\r\n\t\t\t\tthis.boost({spd: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Guard Up\",\r\n\t\trating: 4,\r\n\t\tnum: -1008,\r\n\t},\r\n\tknightsblade: {\r\n\t\tdesc: \"This Pok\u00E9mon's blade moves have their power multiplied by 1.5.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's blade moves have 1.5x power.\",\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst bladeMoves = [\r\n\t\t\t\t'aircutter', 'airslash', 'crosspoison', 'cut', 'furycutter', 'guillotine', 'leafblade', 'nightslash', 'psychocut', 'razorshell', 'sacredsword', 'secretsword', 'slash', 'solarblade', 'xscissor',\r\n\t\t\t];\r\n\t\t\tif (bladeMoves.includes(move.id)) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Knight's Blade\",\r\n\t\trating: 3,\r\n\t\tnum: -1009,\r\n\t},\r\n\tswarm: {\r\n\t\tdesc: \"When this Pok\u00E9mon has 1/2 or less of its maximum HP, rounded down, its attacking stat is multiplied by 1.5 while using a Bug-type attack.\",\r\n\t\tshortDesc: \"At 1/2 or less of its max HP, this Pok\u00E9mon's attacking stat is 1.5x with Bug attacks.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug' && attacker.hp <= attacker.maxhp / 2) {\r\n\t\t\t\tthis.debug('Swarm boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Swarm\",\r\n\t\trating: 2,\r\n\t\tnum: 68,\r\n\t},\r\n\tdamp: {\r\n\t\tshortDesc: \"On switch-in, Fire- and Electric-type attacks have 1/3 power for 5 turns.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.addPseudoWeather('watersport');\r\n\t\t\tthis.field.addPseudoWeather('mudsport');\r\n\t\t},\r\n\t\tname: \"Damp\",\r\n\t\trating: 3.5,\r\n\t\tnum: 6,\r\n\t},\r\n\tpsychozone: {\r\n\t\tdesc: \"This Pok\u00E9mon's Normal-type moves become Psychic-type moves and have their power multiplied by 1.2. This effect comes after other effects that change a move's type, but before Ion Deluge and Electrify's effects.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon's Normal-type moves become Psychic-type and have 1.2x power.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\tmove.aerilateBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.aerilateBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t\tname: \"Psycho Zone\",\r\n\t\trating: 4,\r\n\t\tnum: -1010,\r\n\t},\r\n\tthunderstorm: {\r\n\t\tshortDesc: \"Summons Rain Dance on switch-in. If the target of a foe's move, the move loses one additional PP.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t\tthis.add('-message', `${source.name} is exerting its pressure!`);\r\n\t\t},\r\n\t\tonDeductPP(target, source) {\r\n\t\t\tif (target.side === source.side) return;\r\n\t\t\treturn 1;\r\n\t\t},\r\n\t\tname: \"Thunderstorm\",\r\n\t\trating: 4.5,\r\n\t\tnum: -1011,\r\n\t},\r\n\trunaway: {\r\n\t\tdesc: \"This Pok\u00E9mon immediately switches out to a chosen ally whenever any opposing Pok\u00E9mon has an attack that is super effective on this Pok\u00E9mon or an OHKO move. Counter, Metal Burst, and Mirror Coat count as attacking moves of their respective types, Hidden Power counts as its determined type, and Judgment, Multi-Attack, Natural Gift, Revelation Dance, Techno Blast, and Weather Ball are considered Normal-type moves.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon switches out if the foe has a supereffective or OHKO move.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.target, 'Run Away');\r\n\t\t\t\t\t\tthis.effectState.target.switchFlag = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySwitchIn(pokemon) {\r\n\t\t\tconst source = this.effectState.target;\r\n\t\t\tif (pokemon === source) return;\r\n\t\t\tfor (const target of source.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, source) && this.dex.getEffectiveness(moveType, source) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.target, 'Run Away');\r\n\t\t\t\t\t\tthis.effectState.target.switchFlag = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Run Away\",\r\n\t\trating: 5,\r\n\t\tnum: 50,\r\n\t},\r\n\tanticipation: {\r\n\t\tshortDesc: \"On switch-in, this Pok\u00E9mon's Speed is raised by 1 stage if any foe has a supereffective or OHKO move.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || target.fainted) continue;\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tif (move.category === 'Status') continue;\r\n\t\t\t\t\tconst moveType = move.id === 'hiddenpower' ? target.hpType : move.type;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.dex.getImmunity(moveType, pokemon) && this.dex.getEffectiveness(moveType, pokemon) > 0 ||\r\n\t\t\t\t\t\tmove.ohko\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.boost({spe: 1}, pokemon);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Anticipation\",\r\n\t\trating: 3,\r\n\t\tnum: 107,\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
