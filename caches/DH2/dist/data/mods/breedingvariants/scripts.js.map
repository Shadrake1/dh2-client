{
  "version": 3,
  "sources": ["../../../../data/mods/breedingvariants/scripts.ts"],
  "sourcesContent": ["export const Scripts: ModdedBattleScriptsData = {\r\n\tgen: 9,\r\n\tactions: {\r\n\t\tcanMegaEvo(pokemon: Pokemon) {\r\n\t\t\tconst species = pokemon.baseSpecies;\r\n\t\t\tconst altForme = species.otherFormes && this.dex.species.get(species.otherFormes[0]);\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\t// Mega Rayquaza\r\n\t\t\tif ((this.battle.gen <= 7 || this.battle.ruleTable.has('+pokemontag:past')) &&\r\n\t\t\t\taltForme?.isMega && altForme?.requiredMove &&\r\n\t\t\t\tpokemon.baseMoves.includes(toID(altForme.requiredMove)) && !item.zMove) {\r\n\t\t\t\treturn altForme.name;\r\n\t\t\t}\r\n\t\t\t// a hacked-in Megazard X can mega evolve into Megazard Y, but not into Megazard X\r\n\t\t\tif (item.megaEvolves === species.baseSpecies && item.megaStone !== species.name) {\r\n\t\t\t\tif (item.megaExcludes.includes(species.name)) return null;\r\n\t\t\t\tif (species.name !== species.baseSpecies && item.altMegaStone.includes(species.name + \"-Mega\")) {\r\n\t\t\t\t\treturn species.name + \"-Mega\";\r\n\t\t\t\t}\r\n\t\t\t\treturn item.megaStone;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,UAAmC;AAAA,EAC/C,KAAK;AAAA,EACL,SAAS;AAAA,IACR,WAAW,SAAkB;AAC5B,YAAM,UAAU,QAAQ;AACxB,YAAM,WAAW,QAAQ,eAAe,KAAK,IAAI,QAAQ,IAAI,QAAQ,YAAY,CAAC,CAAC;AACnF,YAAM,OAAO,QAAQ,QAAQ;AAE7B,WAAK,KAAK,OAAO,OAAO,KAAK,KAAK,OAAO,UAAU,IAAI,kBAAkB,MACxE,UAAU,UAAU,UAAU,gBAC9B,QAAQ,UAAU,SAAS,KAAK,SAAS,YAAY,CAAC,KAAK,CAAC,KAAK,OAAO;AACxE,eAAO,SAAS;AAAA,MACjB;AAEA,UAAI,KAAK,gBAAgB,QAAQ,eAAe,KAAK,cAAc,QAAQ,MAAM;AAChF,YAAI,KAAK,aAAa,SAAS,QAAQ,IAAI;AAAG,iBAAO;AACrD,YAAI,QAAQ,SAAS,QAAQ,eAAe,KAAK,aAAa,SAAS,QAAQ,OAAO,OAAO,GAAG;AAC/F,iBAAO,QAAQ,OAAO;AAAA,QACvB;AACA,eAAO,KAAK;AAAA,MACb;AACA,aAAO;AAAA,IACR;AAAA,EACD;AACD;",
  "names": []
}
