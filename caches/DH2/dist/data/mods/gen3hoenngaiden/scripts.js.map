{
  "version": 3,
  "sources": ["../../../../data/mods/gen3hoenngaiden/scripts.ts"],
  "sourcesContent": ["import { learnsetUpdate } from \"../../mods/gen3hoenngaiden/learnsetupdate\";\r\n\r\nexport const Scripts: ModdedBattleScriptsData = {\r\n\tgen: 3,\r\n\tinherit: 'gen3',\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['New','S1','S2','A1','A2','A3','A4','B1','B2','B3','B4','C1','C2','C3','D1','D2','D3','E','Unranked','NFE','LC','Uber'],\r\n\t},\r\n\tinit() {\r\n\r\n\t\tfor (const species in this.data.Pokedex) {\r\n\t\t\tdelete this.data.Pokedex[species].abilities['H'];\r\n\t\t}\r\n\r\n\t\t// list Pokemon by VR rank\r\n\t\tfor (const species in this.dataCache?.Pokedex) {\r\n\t\t\tif (this.modData('FormatsData', species) && this.modData('FormatsData', species).tier !== 'Uber') {\r\n\t\t\t\tif (this.modData('FormatsData', species).rank !== 'Unranked') {\r\n\t\t\t\t\tthis.modData('FormatsData', species).tier = this.modData('FormatsData', species).rank;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.modData('FormatsData', species).tier = 'Unranked';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlearnsetUpdate(this);\r\n\t\t\r\n\t},\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA+B;AAExB,MAAM,UAAmC;AAAA,EAC/C,KAAK;AAAA,EACL,SAAS;AAAA,EACT,mBAAmB;AAAA,IAClB,sBAAsB;AAAA,IACtB,aAAa,CAAC,OAAM,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,YAAW,OAAM,MAAK,MAAM;AAAA,EACrI;AAAA,EACA,OAAO;AAEN,eAAW,WAAW,KAAK,KAAK,SAAS;AACxC,aAAO,KAAK,KAAK,QAAQ,OAAO,EAAE,UAAU,GAAG;AAAA,IAChD;AAGA,eAAW,WAAW,KAAK,WAAW,SAAS;AAC9C,UAAI,KAAK,QAAQ,eAAe,OAAO,KAAK,KAAK,QAAQ,eAAe,OAAO,EAAE,SAAS,QAAQ;AACjG,YAAI,KAAK,QAAQ,eAAe,OAAO,EAAE,SAAS,YAAY;AAC7D,eAAK,QAAQ,eAAe,OAAO,EAAE,OAAO,KAAK,QAAQ,eAAe,OAAO,EAAE;AAAA,QAClF,OAAO;AACN,eAAK,QAAQ,eAAe,OAAO,EAAE,OAAO;AAAA,QAC7C;AAAA,MACD;AAAA,IACD;AAAC;AAED,8CAAe,IAAI;AAAA,EAEpB;AACD;",
  "names": []
}
