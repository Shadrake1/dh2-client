{
  "version": 3,
  "sources": ["../../../../data/mods/viabilities/conditions.ts"],
  "sourcesContent": ["export const Conditions: {[k: string]: ModdedConditionData} = {\r\n\tsweetveilscreen: {\r\n\t\tname: \"SweetVeilScreen\",\r\n\t\tduration: 5,\r\n\t\tdurationCallback(target, source, effect) {\r\n\t\t\tif (source?.hasItem('lightclay')) {\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\t\t\treturn 5;\r\n\t\t},\r\n\t\tonStart(side) {\r\n\t\t\tthis.add('-sidestart', side, 'ability: Sweet Veil');\r\n\t\t},\r\n\t\tonEnd(side) {\r\n\t\t\tthis.add('-sideend', side, 'ability: Sweet Veil');\r\n\t\t},\r\n\t\tonResidualOrder: 5,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(side) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) return;\r\n\t\t\tfor (const ally of side.active) {\r\n\t\t\t\tthis.heal(ally.maxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTerrain(pokemon) {\r\n\t\t\tif (!this.field.isTerrain('grassyterrain')) return;\r\n\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\tthis.heal(ally.maxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,aAAiD;AAAA,EAC7D,iBAAiB;AAAA,IAChB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,iBAAiB,QAAQ,QAAQ,QAAQ;AACxC,UAAI,QAAQ,QAAQ,WAAW,GAAG;AACjC,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,IACA,QAAQ,MAAM;AACb,WAAK,IAAI,cAAc,MAAM,qBAAqB;AAAA,IACnD;AAAA,IACA,MAAM,MAAM;AACX,WAAK,IAAI,YAAY,MAAM,qBAAqB;AAAA,IACjD;AAAA,IACA,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,WAAW,MAAM;AAChB,UAAI,KAAK,MAAM,UAAU,eAAe;AAAG;AAC3C,iBAAW,QAAQ,KAAK,QAAQ;AAC/B,aAAK,KAAK,KAAK,QAAQ,EAAE;AAAA,MAC1B;AAAA,IACD;AAAA,IACA,UAAU,SAAS;AAClB,UAAI,CAAC,KAAK,MAAM,UAAU,eAAe;AAAG;AAC5C,iBAAW,QAAQ,QAAQ,KAAK,QAAQ;AACvC,aAAK,KAAK,KAAK,QAAQ,EAAE;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
