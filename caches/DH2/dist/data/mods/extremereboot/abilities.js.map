{
  "version": 3,
  "sources": ["../../../../data/mods/extremereboot/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\t// Coded\r\n\tabsorptive: {\r\n\t\tnum: 1001,\r\n\t\tname: \"Absorptive\",\r\n\t\tdesc: \"Draining moves restore 1.5x more HP than normal\",\r\n\t\tonTryHealPriority: 1,\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tconst heals = ['drain'];\r\n\t\t\tif (heals.includes(effect.id)) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tacrid: {\r\n\t\tnum: 1002,\r\n\t\tname: \"Acrid\",\r\n\t\tdesc: \"Lowers an opponent's speed in switch-in\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Acrid', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['decoy']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spe: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\talchemy: {\r\n\t\tnum: 1003,\r\n\t\tname: \"Alchemy\",\r\n\t\tdesc: \"When this pokemon attacks a Poisoned pokemon, it does a random effect from the list. (Replaces Poison with Fear, Curse, or Sleep; Inflicts the target with the Taunt, Torment, or Encore effect; Choosing 2 stats and lowering or raising each one by 1.)\",\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (target.status !== 'psn') return;\r\n\t\t\tlet r = this.random(3);\r\n\t\t\tif (r === 1) {\r\n\t\t\t\tr = this.random(3);\r\n\t\t\t\tconst statuses = ['psn', 'fer', 'crs'];\r\n\t\t\t\ttarget.setStatus(statuses[r - 1]);\r\n\t\t\t} else if (r === 2) {\r\n\t\t\t\tr = this.random(3);\r\n\t\t\t\tconst volatiles = ['taunt', 'torment', 'encore'];\r\n\t\t\t\ttarget.addVolatile(volatiles[r - 1]);\r\n\t\t\t} else {\r\n\t\t\t\tr = this.random(5);\r\n\t\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\t\t\t\tconst stat1 = stats[r - 1];\r\n\t\t\t\tstats.splice(r - 1);\r\n\t\t\t\tr = this.random(4);\r\n\t\t\t\tconst stat2 = stats[r - 1];\r\n\t\t\t\tconst boosts = [1, -1];\r\n\t\t\t\tconst toBoost = {};\r\n\t\t\t\ttoBoost[stat1] = boosts[this.random(2) - 1];\r\n\t\t\t\ttoBoost[stat2] = boosts[this.random(2) - 1];\r\n\t\t\t\tthis.boost(toBoost, target, source, move);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tallseeingeye: {\r\n\t\tnum: 1004,\r\n\t\tname: \"All-Seeing Eye\",\r\n\t\tdesc: \"Bypasses accuracy checks, but takes 15% more damage from attacks.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\treturn this.chainModify(1.15);\r\n\t\t},\r\n\t\tonSourceAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\talmsgiver: {\r\n\t\tnum: 1005,\r\n\t\tshortDesc: \"On switching out, shares a copy of its item with its replacement.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (pokemon.item && pokemon.side.addSlotCondition(pokemon, 'almsgiver')) {\r\n\t\t\t\tObject.assign(pokemon.side.slotConditions[pokemon.position]['almsgiver'], {\r\n\t\t\t\t\titem: pokemon.item,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\ttarget.side.removeSlotCondition(target, 'almsgiver'); // always remove immediately even if it doesn't activate (you can remove this if you want it to be stored like Healing Wish)\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\tif (!target.item && this.effectState.item && target.setItem(this.effectState.item)) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.source, 'Almsgiver');\r\n\t\t\t\t\t\tthis.add('-item', target, this.dex.items.get(this.effectState.item), '[from] Ability: Almsgiver', '[of] ' + this.effectState.source);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Almsgiver\",\r\n\t\trating: 3,\r\n\t},\r\n\t// Coded\r\n\tamplify: {\r\n\t\tnum: 1006,\r\n\t\tname: \"Amplify\",\r\n\t\tdesc: \"Increases power of pulse and sound moves by 1.3x.\",\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['sound'] || move.flags['pulse']) {\r\n\t\t\t\tthis.debug('Amplify boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tarbiter: { // implemented in rules rewrite\r\n\t\tnum: 1007,\r\n\t\tname: \"Arbiter\",\r\n\t\tdesc: \"Extends the duration of Rules Rewrite by 2 turns when used by this pokemon.\",\r\n\t},\r\n\t// Coded\r\n\tataraxia: {\r\n\t\tnum: 1008,\r\n\t\tname: \"Ataraxia\",\r\n\t\tdesc: \"Immune to moves' secondary effects\",\r\n\t\tonModifySecondaries(secondaries) {\r\n\t\t\tthis.debug('Ataraxia prevent secondary');\r\n\t\t\treturn secondaries.filter(effect => !!(effect.self || effect.dustproof));\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tberserker: {\r\n\t\tnum: 1009,\r\n\t\tname: \"Berserker\",\r\n\t\tdesc: \"This pokemon's attack is raised by 1 if it falls below 50% HP.\",\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\r\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\r\n\t\t\tif (!lastAttackedBy) return;\r\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\r\n\t\t\tif (target.hp <= target.maxhp / 2 && target.hp + damage > target.maxhp / 2) {\r\n\t\t\t\tthis.boost({atk: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tbigbellied: { // implemented in Rice Field\r\n\t\tnum: 1010,\r\n\t\tname: \"Big Bellied\",\r\n\t\tdesc: \"If rice feild is active when this pokemon switches in, it instatnly get's the healing without waiting for a countdown. Immune to rice feild damage.\",\r\n\t},\r\n\t// Coded\r\n\tbingchilling: {\r\n\t\tnum: 1011,\r\n\t\tname: \"Bing Chilling\",\r\n\t\tdesc: \"This Pok\u00E9mon's Typless moves become Winter-type and gain a 1.2x. power boost. Existing Winter-type moves also get the power boost.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t\"Season's Greetings\", \"Season's End\",\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Typeless' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = 'Winter';\r\n\t\t\t\tmove.bingChillingBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.bingChillingBoosted || move.type === \"Winter\") return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tbipolar: {\r\n\t\tnum: 1012,\r\n\t\tname: \"Bipolar\",\r\n\t\tdesc: \"Turns Storm-type moves into Serenity-type moves and Serenity-type moves into Storm-type moves, and boosts them by x1.2.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Serenity' && !noModifyType.includes(move.id) && move.category !== 'Status') {\r\n\t\t\t\tmove.type = 'Storm';\r\n\t\t\t\tmove.bipolarBoosted = true;\r\n\t\t\t} else if (move.type === 'Storm' && !noModifyType.includes(move.id) && move.category !== 'Status') {\r\n\t\t\t\tmove.type = 'Serenity';\r\n\t\t\t\tmove.bipolarBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.bipolarBoosted) return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tblessed: {\r\n\t\tnum: 1013,\r\n\t\tname: \"Blessed\",\r\n\t\tdesc: \"This Pokemon cannot be cursed, and is considered to have Serenity type as its secondary type.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.hasType('Serenity')) return false;\r\n\t\t\tif (!pokemon.addType('Serenity')) return false;\r\n\t\t\tpokemon.setType([pokemon.types[1], \"Serenity\"]);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tblightboost: {\r\n\t\tnum: 1014,\r\n\t\tname: \"Blight Boost\",\r\n\t\tdesc: \"While this Pokemon is cursed, the power of its special attacks is multiplied by 1.5 and takes no HP loss from it.\",\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (attacker.status === 'crs' && move.category === 'Special') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'crs') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\trating: 2,\r\n\t},\r\n\t// Coded\r\n\tblindrage: {\r\n\t\tnum: 1015,\r\n\t\tname: \"Blind Rage\",\r\n\t\tdesc: \"Hustle\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk) {\r\n\t\t\treturn this.modify(atk, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: 7,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Physical' && typeof accuracy === 'number') {\r\n\t\t\t\treturn accuracy * 0.8;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tblossom: {\r\n\t\tnum: 1016,\r\n\t\tname: \"Blossom\",\r\n\t\tdesc: \"The first time this pokemon uses a damaging Spring move, its attacking stats will be multiplied by 1.5x when using his next Spring moves.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.type !== \"Spring\") return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tsource.addVolatile(\"blossom\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Blossom');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Spring' && attacker.hasAbility('blossom')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Spring' && attacker.hasAbility('blossom')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Blossom', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tburningrage: {\r\n\t\tnum: 1017,\r\n\t\tname: \"Burning Rage\",\r\n\t\tdesc: \"Whenever this Pokemon has Sunburn, its highest attacking stat gains a 1.2x boost.\",\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (attacker.status === 'brn') {\r\n\t\t\t\tif ((attacker.storedStats['atk'] >= attacker.storedStats['spa'] && move.category === \"Physical\") ||\r\n\t\t\t\t\t(attacker.storedStats['atk'] < attacker.storedStats['spa'] && move.category === \"Special\")) {\r\n\t\t\t\t\treturn this.chainModify(1.2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tburnout: {\r\n\t\tnum: 1018,\r\n\t\tname: \"Burnout\",\r\n\t\tdesc: \"This Pokemon's moves that lower its stats have 1.3x power, but the amount the stat is lowered is doubled.\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.self && move.self.boosts) {\r\n\t\t\t\tlet negBoost = false;\r\n\t\t\t\tfor (const stat in move.self.boosts) {\r\n\t\t\t\t\tif (move.self.boosts[stat] < 0) {\r\n\t\t\t\t\t\tnegBoost = true;\r\n\t\t\t\t\t\tmove.self.boosts[stat] = move.self.boosts[stat] * 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (negBoost) return this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tcelestial: {\r\n\t\tnum: 1019,\r\n\t\tname: \"Celestial\",\r\n\t\tdesc: \"Status conditions are cured after 2 active turns. 1 for sleep.\",\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\ttarget.m.statusT = this.turn;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.status) return;\r\n\t\t\tconst duration = this.turn - pokemon.m.statusT;\r\n\t\t\tif (duration > 2) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Celestial');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tcheckmate: {\r\n\t\tnum: 1020,\r\n\t\tname: \"Checkmate\",\r\n\t\tdesc: \"If the enemy has 33% health or less, it is trapped and cannot escape.\",\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hp / pokemon.baseMaxhp <= 0.33 && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (pokemon.hp / pokemon.baseMaxhp <= 0.33) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tchill: {\r\n\t\tnum: 1021,\r\n\t\tname: \"Chill\",\r\n\t\tdesc: \"Pokemon making contact with this pokemon have a 30% chance to be inflicted with chill.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact'] && move.id !== 'wildpunch') {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('frz', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Not Fully Implemented (Only one mon learns it, and it's only affected move is a Tackle clone)\r\n\tclimaticchange: {\r\n\t\tnum: 1022,\r\n\t\tname: \"Climatic Change\",\r\n\t\t// desc: \"Every Season type attack became the next one.(Spring become summer,summer become autumn,autumn become winter and winter become spring)\",\r\n\t\tdesc: \"Placeholder\",\r\n\t},\r\n\t// Coded\r\n\tcontagious: {\r\n\t\tnum: 1023,\r\n\t\tname: \"Contagious\",\r\n\t\tdesc: \"Contact moves used against this pokemon have a 25% chance to poison the one who made contact.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact'] && move.id !== 'wildpunch') {\r\n\t\t\t\tif (this.randomChance(1, 4)) {\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tcontrary: {\r\n\t\tnum: 1024,\r\n\t\tname: \"Contrary\",\r\n\t\tdesc: \"Inverts stat boosts\",\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tconversion: {\r\n\t\tnum: 1025,\r\n\t\tname: \"Conversion\",\r\n\t\tdesc: \"This pokemon's typeless moves change to match its primary type and deal 1.2x damage.\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t\"Season's Greetings\", \"Season's End\",\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Typeless' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\r\n\t\t\t\tmove.type = pokemon.getTypes()[0];\r\n\t\t\t\tmove.conversionBoosted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.conversionBoosted || move.type === \"Winter\") return this.chainModify([0x1333, 0x1000]);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tcounterswirl: {\r\n\t\tnum: 1026,\r\n\t\tname: \"Counterswirl\",\r\n\t\tdesc: \"This Pokemon is immune to Storm attacks, and if it were to be hit by one, the attacker loses 1/8 of their max health.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t\tthis.damage(source.maxhp / 8, source, target, move);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tcourageous: {\r\n\t\tnum: 1027,\r\n\t\tname: \"Courageous\",\r\n\t\tdesc: \"This Pokemon is immume to fear, and its Atk and SpA cannot be lowered by other Pokemon. Gaining this Ability while under fear cures it.\",\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tif ((boost.atk && boost.atk < 0) || (boost.spa && boost.spa < 0)) {\r\n\t\t\t\tif (boost.atk) {\r\n\t\t\t\t\tdelete boost.atk;\r\n\t\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Attack\", \"[from] ability: Courageous\", \"[of] \" + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (boost.spa) {\r\n\t\t\t\t\tdelete boost.spa;\r\n\t\t\t\t\tif (!(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Special Attack\", \"[from] ability: Courageous\", \"[of] \" + target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'fer' || pokemon.status === 'fer') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Courageous');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'fer' && status.id !== 'fer') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Courageous');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tcritique: {\r\n\t\tnum: 1099,\r\n\t\tname: \"Critique\",\r\n\t\tdesc: \"Bounces back Folklore-type moves as Manmade type at 50% BP.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || move.type !== \"Folklore\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.type = \"Manmade\";\r\n\t\t\tnewMove.basePower = newMove.basePower / 2;\r\n\t\t\tthis.useMove(newMove, target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.side === source.side || move.hasBounced || move.type !== \"Folklore\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.type = \"Manmade\";\r\n\t\t\tnewMove.basePower = newMove.basePower / 2;\r\n\t\t\tthis.useMove(newMove, this.effectState.target, source);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tdataupgrade: {\r\n\t\tnum: 1028,\r\n\t\tname: \"Data Upgrade\",\r\n\t\tdesc: \"When hit by a Special move, raises SpD by 1, but lowers Def by 1. When hit by a Physical move, raises Def by 1, but lowers SpD by 1.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === \"Physical\") {\r\n\t\t\t\tthis.boost({def: 1, spd: -1});\r\n\t\t\t} else if (move.category === \"Special\") {\r\n\t\t\t\tthis.boost({def: -1, spd: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tdecay: {\r\n\t\tnum: 1029,\r\n\t\tname: \"Decay\",\r\n\t\tdesc: \"The first time this pokemon uses a damaging Autumn move, its attacking stats will be multiplied by 1.5x when using his next Autumn moves.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.type !== \"Autumn\") return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tsource.addVolatile(\"decay\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Decay');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Autumn' && attacker.hasAbility('decay')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Autumn' && attacker.hasAbility('decay')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Decay', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tequivalentexchange: {\r\n\t\tnum: 1030,\r\n\t\tname: \"Equivalent Exchange\",\r\n\t\tdesc: \"When this Pok\u00E9mon's Attack is modified, its Special Attack is modified in the opposite way, and vice versa. The same is true for its Defense and Special Defense.\",\r\n\t\tonBoost(boost, target, source, effect) {\r\n\t\t\tconst invBoost = {};\r\n\t\t\tconst swapBoost = {atk: 'spa', spa: 'atk', def: 'spd', spd: 'def'};\r\n\t\t\tfor (const i in swapBoost) {\r\n\t\t\t\tif (boost[i]) {\r\n\t\t\t\t\tinvBoost[swapBoost[i]] = boost[i] * -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const i in invBoost) {\r\n\t\t\t\tif (!swapBoost[i]) continue;\r\n\t\t\t\tif (!boost[i]) boost[i] = 0;\r\n\t\t\t\tboost[i] += invBoost[i];\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tfarreach: {\r\n\t\tnum: 1031,\r\n\t\tname: \"Far Reach\",\r\n\t\tdesc: \"This pokemon's non-contact moves to 1.2x damage.\",\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (!move.flags['contact']) {\r\n\t\t\t\treturn this.chainModify(1.2);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tfluffyfloat: {\r\n\t\tnum: 1032,\r\n\t\tname: \"Fluffy Float\",\r\n\t\tdesc: \"If Cotton Field is active, this Pokemon's Defense and Speed are boosted by x1.5. This Pokemon takes no damage from Cotton Field.\",\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (this.field.isTerrain('cottonfield')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tonModifySpe(pokemon) {\r\n\t\t\tif (this.field.isTerrain('cottonfield')) return this.chainModify(1.5);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tglide: {\r\n\t\tnum: 1033,\r\n\t\tname: \"Glide\",\r\n\t\tdesc: \"This pokemon has it's speed raised by 1 when a Pokemon on the field uses a sky move.\",\r\n\t\tonAnyHit(target, source, move) {\r\n\t\t\tif (move.type !== \"Sky\") return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const pokemon of side.active) {\r\n\t\t\t\t\tif (!pokemon.hasAbility(\"Glide\")) continue;\r\n\t\t\t\t\t// if (!pokemon.m.glideBoost || pokemon.m.glideBoost !== this.turn) {\r\n\t\t\t\t\t// pokemon.m.glideBoost = this.turn;\r\n\t\t\t\t\tthis.boost({spe: 1}, pokemon);\r\n\t\t\t\t\t// }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\thotfeet: {\r\n\t\tnum: 1034,\r\n\t\tname: \"Hot Feet\",\r\n\t\tdesc: \"If this Pokemon is sunburned, its Speed is multiplied by 2\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tignorance: {\r\n\t\tnum: 1035,\r\n\t\tname: \"Ignorance\",\r\n\t\tdesc: \"All Pokemon on the field ignore each others' stat changes.\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tboosts['def'] = 0;\r\n\t\t\tboosts['spd'] = 0;\r\n\t\t\tboosts['evasion'] = 0;\r\n\t\t\tboosts['atk'] = 0;\r\n\t\t\tboosts['spa'] = 0;\r\n\t\t\tboosts['accuracy'] = 0;\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tinfinitescaling: {\r\n\t\tnum: 1036,\r\n\t\tname: \"Infinite Scaling\",\r\n\t\tdesc: \"The damage of this Pok\u00E9mon increases infinitely. (Turn 1: 0.8x, Turn 2: 0.9x, Turn 3: 1x, Turn 4: 1.1x, etc.) Resets upon switching out.\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tlet damageMod = 0.8;\r\n\t\t\tdamageMod = damageMod + (source.activeTurns * 0.1);\r\n\t\t\treturn this.chainModify(damageMod);\r\n\t\t},\r\n\t},\r\n\t// Not Fully Implemented (only pokemon with this ability has no moves (and isn't manmade or storm type)\r\n\tinternetrage: {\r\n\t\tnum: 1037,\r\n\t\tname: \"Internet Rage\",\r\n\t\tdesc: \"(Placeholder) This Pokemon's Manmade-type moves become Storm-type, and Storm-type moves become Manmade-type.\",\r\n\t},\r\n\t// Coded\r\n\tjacko: {\r\n\t\tnum: 1038,\r\n\t\tname: \"Jack-O'\",\r\n\t\tdesc: \"1.3x Atk and SpA in Pumpkin Field. Immune to Pumpkin Field\",\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (this.field.isTerrain(\"pumpkinfield\")) return this.chainModify([0x14CC, 0x1000]);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tlesspell: {\r\n\t\tnum: 1039,\r\n\t\tname: \"Lesspell\",\r\n\t\tdesc: \"Lowers opposing Pokemon Special Attack by 1 stage when switching in.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.side.foe.active) {\r\n\t\t\t\tif (!target || !target.isAdjacent(pokemon)) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Lesspell', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['decoy']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tlifecycle: {\r\n\t\tname: \"Life Cycle\",\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.activeTurns) return;\r\n\t\t\tconst seasons = [\"Spring\", \"Summer\", \"Autumn\", \"Winter\"];\r\n\t\t\tconst types = [...pokemon.getTypes(true)];\r\n\t\t\tfor (const i in types) {\r\n\t\t\t\tif (seasons.includes(types[i])) {\r\n\t\t\t\t\ttypes[i] = seasons[(seasons.indexOf(types[i]) + 1) % 4];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.setType(types);\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[from] ability: Life Cycle');\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tpokemon.setType([\"Spring\", \"Sky\"]);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tlinger: {\r\n\t\tnum: 1040,\r\n\t\tname: \"Linger\",\r\n\t\tdesc: \"The first time this pokemon uses a damaging Winter move, its attacking stats will be multiplied by 1.5x when using his next Winter moves.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.type !== \"Winter\") return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tsource.addVolatile(\"linger\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Linger');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Winter' && attacker.hasAbility('linger')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Winter' && attacker.hasAbility('linger')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Linger', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tmagimorph: {\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (attacker.species.baseSpecies !== 'Salamoon' || attacker.transformed) return;\r\n\t\t\tconst targetForme = (move.category === 'Status' ? 'Salamoon' : 'Salamoon-Allegro');\r\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Magi-Morph\",\r\n\t\trating: 4,\r\n\t},\r\n\t// Not Used\r\n\t// megatonburst: {\r\n\t// num: 1041,\r\n\t// name: \"Megaton Burst\",\r\n\t// desc: \"This Pokemon uses a 60 BP physical Earth-type move (uses the user's Attack stat) after using a Sound-based move.\",\r\n\t// },\r\n\t// Coded\r\n\tmetalcoat: {\r\n\t\tnum: 1042,\r\n\t\tname: \"Metal Coat\",\r\n\t\tdesc: \"This pokemon is immune to moves that are 60 bp or lower.\",\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.basePower <= 60 && move.category !== \"Status\") {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Metal Coat');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tmodernadaptation: {\r\n\t\tnum: 1043,\r\n\t\tname: \"Modern Adaptation\",\r\n\t\tdesc: \"Transform any Folklore type move used by the pokemon into Manmade type.\",\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (move.type === 'Folklore') {\r\n\t\t\t\tmove.type = 'Manmade';\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tnanobarrier: {\r\n\t\tnum: 1044,\r\n\t\tname: \"Nanobarrier\",\r\n\t\tdesc: \"This pokemon receives 3/4 damage from neutrally effective attacks.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod === 0) {\r\n\t\t\t\tthis.debug('Filter neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tnecromancer: {\r\n\t\tnum: 1045,\r\n\t\tname: \"Necromancer\",\r\n\t\tdesc: \"This Pokemon's attacking stat is multiplied by 1.5 while using a Folklore-type attack.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Folklore') {\r\n\t\t\t\t// this.debug('Dragon\\'s Maw boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Folklore') {\r\n\t\t\t\t// this.debug('Dragon\\'s Maw boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tnocturnal: {\r\n\t\tnum: 1046,\r\n\t\tname: \"Nocturnal\",\r\n\t\tdesc: \"Immune to Night-type moves, raises Spe by  1 if hit by one\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Night') {\r\n\t\t\t\tif (!this.boost({spe: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Nocturnal');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Night') {\r\n\t\t\t\tthis.boost({spe: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tnonbeliever: {\r\n\t\tnum: 1047,\r\n\t\tname: \"Non-Believer\",\r\n\t\tdesc: \"This Pokemon is immune to Folklore-type moves\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Folklore') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Non-Believer');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tpetalbody: {\r\n\t\tnum: 1048,\r\n\t\tname: \"Petal Body\",\r\n\t\tdesc: \"If Rose Field is active, this Pokemon restores 1/8 of its maximum HP, rounded down, at the end of each turn.\",\r\n\t\tonResidualOrder: 26,\r\n\t\tonResidualSubOrder: 1,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isTerrain('rosefield')) this.heal(pokemon.baseMaxhp / 8);\r\n\t\t},\r\n\t},\r\n\t// Coded and Tested\r\n\tprudentplow: {\r\n\t\tnum: 1049,\r\n\t\tname: \"Prudent Plow\",\r\n\t\tdesc: \"Autumn-type moves become two-hit moves. 2nd hit of attacking moves has 1/4 damage.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.selfdestruct || move.multihit) return;\r\n\t\t\tif (['beachball', 'boulder'].includes(move.id)) return;\r\n\t\t\tif (!move.flags['charge'] && !move.spreadHit) {\r\n\t\t\t\tmove.multihit = 2;\r\n\t\t\t\tmove.multihitType = 'parentalbond';\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.multihitType === 'parentalbond' && move.hit > 1) {\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHealPriority: 1,\r\n\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\tconst move = this.activeMove;\r\n\t\t\tif (effect.id !== 'drain' && move && move.multihitType === 'parentalbond' && move.hit === 2) {\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tragingsea: {\r\n\t\tnum: 1050,\r\n\t\tname: \"Raging Sea\",\r\n\t\tdesc: \"Increases the power of Sea-type moves by up to 40% the lower its HP gets.\",\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Sea') {\r\n\t\t\t\tlet mod = 1 + (0.4 * (1 - (attacker.hp / attacker.maxhp)));\r\n\t\t\t\tif (attacker.hp === 1) mod = 1.4;\r\n\t\t\t\treturn this.chainModify(mod);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Sea') {\r\n\t\t\t\tlet mod = 1 + (0.4 * (1 - (attacker.hp / attacker.maxhp)));\r\n\t\t\t\tif (attacker.hp === 1) mod = 1.4;\r\n\t\t\t\treturn this.chainModify(mod);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\trainbringer: {\r\n\t\tnum: 1051,\r\n\t\tname: \"Rainbringer\",\r\n\t\tdesc: \"Sets weather to Rain for the next 5 turns. Spring and Sea deals 1.3x damage.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('rainyseason');\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\treality: {\r\n\t\tnum: 1052,\r\n\t\tname: \"Reality\",\r\n\t\tdesc: \"Immune to Folklore-type, boosts its Attack by 1 stage if hit by Folklore-type moves.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Folklore') {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Reality');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Folklore') {\r\n\t\t\t\tthis.boost({atk: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\trebirth: {\r\n\t\tnum: 1152,\r\n\t\tname: \"Rebirth\",\r\n\t\tdesc: \"Fully resets pokemon when an attack would KO it.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.m.rebirthFlag) return;\r\n\t\t\tpokemon.heal(pokemon.maxhp);\r\n\t\t\tpokemon.setStatus('');\r\n\t\t\tpokemon.clearBoosts();\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tmoveSlot.pp = moveSlot.maxpp;\r\n\t\t\t}\r\n\t\t\tconst negativeVolatiles = ['energysiphon', 'tantalize', 'shroomspores', 'partiallytrapped', 'rabidmaw', 'pollinate', 'pheromonalgas',\r\n\t\t\t\t'moonblade', 'mindcleansing', 'torment', 'Deafened', 'hypnotize', 'blasphemy', 'void', 'technocut',\r\n\t\t\t\t'temporarytrap', 'hitodama',\r\n\t\t\t];\r\n\t\t\tfor (const vol of negativeVolatiles) {\r\n\t\t\t\tif (pokemon.volatiles[vol]) pokemon.removeVolatile('vol');\r\n\t\t\t}\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, \"[from] ability: Rebirth\");\r\n\t\t\tpokemon.m.reborn = true;\r\n\t\t\tpokemon.m.rebirthFlag = false;\r\n\t\t},\r\n\t\tonDamagePriority: -100,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp && effect && effect.effectType === 'Move' && !target.m.rebirthFlag && !target.m.reborn) {\r\n\t\t\t\tthis.add('-ability', target, 'Sturdy');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t\t!target.m.rebirthFlag;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\treaper: {\r\n\t\tnum: 1053,\r\n\t\tname: \"Reaper\",\r\n\t\tdesc: \"This Pokemon's Autumn-type moves do 1.2x damage and restore the user 50% of the damage dealt.\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.drain || move.type !== \"Autumn\") return;\r\n\t\t\tmove.drain = [1, 2];\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tregenerator: {\r\n\t\tnum: 1054,\r\n\t\tname: \"Regenerator\",\r\n\t\tdesc: \"This pokemon has 1/4 of its max hp, rounded down, restored when it switches out\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 4);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\trigormortis: {\r\n\t\tnum: 1055,\r\n\t\tname: \"Rigor Mortis\",\r\n\t\tdesc: \"If the user takes a physical hit, it gains +1 defense stage.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === \"Physical\") {\r\n\t\t\t\tthis.boost({def: 1});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tsacrificer: {\r\n\t\tnum: 1056,\r\n\t\tname: \"Sacrificer\",\r\n\t\tdesc: \"This Pokemon loses 1/3 of its max HP when it switches out. Next Pokemon gets those HP.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (pokemon.side.addSlotCondition(pokemon, 'sacrificer')) {\r\n\t\t\t\tconst hp = pokemon.baseMaxhp / 3;\r\n\t\t\t\tObject.assign(pokemon.side.slotConditions[pokemon.position]['sacrificer'], {\r\n\t\t\t\t\thp: hp,\r\n\t\t\t\t});\r\n\t\t\t\tthis.damage(hp, pokemon, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonSwap(target) {\r\n\t\t\t\ttarget.side.removeSlotCondition(target, 'sacrificer'); // always remove immediately even if it doesn't activate (you can remove this if you want it to be stored like Healing Wish)\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\tif (this.heal(this.effectState.hp, target, this.effectState.source)) {\r\n\t\t\t\t\t\tthis.add('-ability', this.effectState.source, 'Sacrificer');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tscavenge: {\r\n\t\tnum: 1057,\r\n\t\tname: \"Scavenge\",\r\n\t\tdesc: \"This Pokemon restores 1/3 of its max health if another Pokemon on the field faints.\",\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-activate', source, 'ability: Scavenge');\r\n\t\t\t\tthis.heal(source.baseMaxhp / 3, source, source, effect);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tshatter: {\r\n\t\tnum: 1058,\r\n\t\tname: \"Shatter\",\r\n\t\tdesc: \"This pokemon's attacks are guaranteed to be critical hits if the opponent is statused.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && target.status) return 5;\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tshine: {\r\n\t\tnum: 1059,\r\n\t\tname: \"Shine\",\r\n\t\tdesc: \"The first time this pokemon uses a damaging Summer move, its attacking stats will be multiplied by 1.5x when using his next Summer moves.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target || move.type !== \"Summer\") return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tsource.addVolatile(\"shine\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Shine');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Summer' && attacker.hasAbility('shine')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Summer' && attacker.hasAbility('shine')) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'ability: Shine', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tsmite: {\r\n\t\tnum: 1060,\r\n\t\tname: \"Smite\",\r\n\t\tdesc: \"Moves' power is boosted by 1.3x if the target is below half health\",\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (defender.hp / defender.baseMaxhp < 0.5) {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tsnowbringer: {\r\n\t\tnum: 1061,\r\n\t\tname: \"Snowbringer\",\r\n\t\tdesc: \"Sets weather to Snow for the next 5 turns. Winter deals 1.5x damage, Summer deals 0.5x\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('snowfall');\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tspectralshifter: {\r\n\t\tnum: 1062,\r\n\t\tname: \"Spectral Shifter\",\r\n\t\tdesc: \"While this Pokemon is active, opposing Pokemons' stat raises will be lowers instead, and vice versa.\",\r\n\t\tonFoeBoost(boost, target, source, effect) {\r\n\t\t\tlet i: BoostName;\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tstarlite: {\r\n\t\tnum: 1100,\r\n\t\tname: \"Starlite\",\r\n\t\tdesc: \"This pokemon takes half damage from Summer type attacks.\",\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Summer') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tsteadfast: { // implemented in conditions.ts\r\n\t\tnum: 1063,\r\n\t\tname: \"Steadfast\",\r\n\t\tdesc: \"Inverts Sunburn and Chill effects on the user.\",\r\n\t},\r\n\t// Coded\r\n\tstoneskin: {\r\n\t\tnum: 1064,\r\n\t\tname: \"Stone Skin\",\r\n\t\tdesc: \"User takes 25% less damage from contact moves.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.flags['contact'] && move.id !== 'wildpunch') return this.chainModify(0.75);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tstormwatch: {\r\n\t\tnum: 1065,\r\n\t\tname: \"Storm Watch\",\r\n\t\tdesc: \"Immunity to Storm, being targeted by a Storm move will boost both defenses by 1 stage.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Storm') {\r\n\t\t\t\tif (!this.boost({def: 1, spd: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Storm Watch');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\r\n\t\t\tif (move.type === 'Storm') {\r\n\t\t\t\tthis.boost({def: 1, spd: 1}, this.effectState.target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded and Tested\r\n\tstrategicretreat: {\r\n\t\tnum: 1066,\r\n\t\tname: \"Strategic Retreat\",\r\n\t\tdesc: \"emergency exit but activates in 25% of max HP and heals 25% of max HP on switch\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.hp >= pokemon.maxhp / 4) {\r\n\t\t\t\tpokemon.m.SRActive = true;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp < pokemon.maxhp / 4 && pokemon.m.SRActive) {\r\n\t\t\t\tif (!this.canSwitch(pokemon.side) || pokemon.forceSwitchFlag || pokemon.switchFlag) return;\r\n\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.m.SRActive = false;\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Strategic Retreat');\r\n\t\t\t\tpokemon.switchFlag = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (pokemon.hp < pokemon.maxhp / 4) pokemon.heal(pokemon.baseMaxhp / 4);\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tsubrosa: {\r\n\t\tnum: 1067,\r\n\t\tname: \"Sub Rosa\",\r\n\t\tdesc: \"This Pokemon is unharmed by Rose Field. This Pokemon restores 1/8 of its maximum HP, rounded down, if any Pokemon (including itself) switches into Rose Field.\",\r\n\t},\r\n\t// Coded\r\n\tsunbringer: {\r\n\t\tnum: 1068,\r\n\t\tname: \"Sunbringer\",\r\n\t\tdesc: \"Sets weather to Sun for the next 5 turns. Summer deals 1.5x damage, Winter deals 0.5x\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('highnoon');\r\n\t\t},\r\n\t},\r\n\t// Not Used\r\n\t// supersapience: {\r\n\t// num: 1069,\r\n\t// name: \"Super Sapience\",\r\n\t// desc: \"Boosts moves that start with S by 1.5x. Moves that start with any other letter receive a 0.5x  decrease in power.\",\r\n\t// },\r\n\t// Coded\r\n\tthickheaded: {\r\n\t\tnum: 1070,\r\n\t\tname: \"Thick Headed\",\r\n\t\tdesc: \"When this pokemon makes contact with the foe, nullifies their type-based immunities.\",\r\n\t\tonFoeDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\ttarget.addVolatile('thickheaded');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Thick Headed');\r\n\t\t\t},\r\n\t\t\tonNegateImmunity(pokemon, type) {\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tthickskin: {// implemented in conditions.ts\r\n\t\tnum: 1071,\r\n\t\tname: \"Thick Skin\",\r\n\t\tdesc: \"This Pokemon is immune to the negative effects of Sunburn, and its defenses are 1.5x if it is Sunburned.\",\r\n\t},\r\n\t// Coded\r\n\ttoughclaws: {\r\n\t\tnum: 1072,\r\n\t\tname: \"Tough Claws\",\r\n\t\tdesc: \"Contact moves are boosted by 1.3x\",\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['contact']) {\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Not Fully Implemented (only used on a primarily Folklore type)\r\n\ttranscription: {\r\n\t\tnum: 1073,\r\n\t\tname: \"Transcription\",\r\n\t\tdesc: \"(Placeholder) First type and matching moves become Folklore and get a 10% boost.\",\r\n\t},\r\n\t// Coded\r\n\ttropicalspirit: {\r\n\t\tnum: 1074,\r\n\t\tname: \"Tropical Spirit\",\r\n\t\tdesc: \"This Pokemon's attacks are critical hits if the target is sunburnt. Winter-type moves against this Pokemon deal half damage.\",\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Winter') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && target.status === 'brn') return 5;\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\tunstable: {\r\n\t\tnum: 1075,\r\n\t\tname: \"Unstable\",\r\n\t\tdesc: \"The pokemon is immune to serenity move.But the fear status is doubled if applied on the pokemon with the ability.\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Storm') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Storm Watch');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\twavecrasher: {\r\n\t\tnum: 1076,\r\n\t\tname: \"Wave Crasher\",\r\n\t\tdesc: \"After another Pokemon uses a Sea-type move, the user uses the same move. Sea-type moves against this Pokemon deal half damage. Other Pokemon cannot force the user to switch out.\",\r\n\t\tonSourceBasePowerPriority: 18,\r\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Sea') {\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDragOutPriority: 1,\r\n\t\tonDragOut(pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Suction Cups');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\t// Coded\r\n\twintercoat: {\r\n\t\tnum: 1077,\r\n\t\tname: \"Winter Coat\",\r\n\t\tdesc: \"This Pokemon is immune to Winter-type moves and is immune to chill. Gaining this Ability while under chill cures it.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'psn' || pokemon.status === 'tox') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Immunity');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (status.id !== 'frz') return;\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Winter Coat');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Winter') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Storm Watch');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["i"]
}
