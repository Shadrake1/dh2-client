{
  "version": 3,
  "sources": ["../../../../data/mods/gen9strong/items.ts"],
  "sourcesContent": ["export const Items: {[k: string]: ModdedItemData} = {\r\n\taguavberry: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tpokemon.eatItem();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEat(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 2);\r\n\t\t\tif (pokemon.getNature().minus === 'spd') {\r\n\t\t\t\tpokemon.addVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Restores 1/2 max HP at 1/2 max HP or less; confuses if -SpD Nature. Single use.\",\r\n\t},\r\n\tfigyberry: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tpokemon.eatItem();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEat(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 2);\r\n\t\t\tif (pokemon.getNature().minus === 'atk') {\r\n\t\t\t\tpokemon.addVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Restores 1/2 max HP at 1/2 max HP or less; confuses if -Atk Nature. Single use.\",\r\n\t},\r\n\tiapapaberry: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tpokemon.eatItem();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEat(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 2);\r\n\t\t\tif (pokemon.getNature().minus === 'def') {\r\n\t\t\t\tpokemon.addVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Restores 1/2 max HP at 1/2 max HP or less; confuses if -Def Nature. Single use.\",\r\n\t},\r\n\tkingsrock: {\r\n\t\tinherit: true,\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category !== \"Status\") {\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.volatileStatus === 'flinch') return;\r\n\t\t\t\t}\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 12,\r\n\t\t\t\t\tvolatileStatus: 'flinch',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Holder's attacks without a chance to flinch gain a 12% chance to flinch.\",\r\n\t},\r\n\tmagoberry: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tpokemon.eatItem();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEat(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 2);\r\n\t\t\tif (pokemon.getNature().minus === 'spe') {\r\n\t\t\t\tpokemon.addVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Restores 1/2 max HP at 1/2 max HP or less; confuses if -Spe Nature. Single use.\",\r\n\t},\r\n\tquickclaw: {\r\n\t\tinherit: true,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.category === \"Status\" && pokemon.hasAbility(\"myceliummight\")) return;\r\n\t\t\tif (priority <= 0 && this.randomChance(60, 256)) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'item: Quick Claw');\r\n\t\t\t\treturn 0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Each turn, holder has a ~23.4% chance to move first in its priority bracket.\",\r\n\t},\r\n\tsouldew: {\r\n\t\tinherit: true,\r\n\t\tonBasePower() {},\r\n\t\tonModifySpAPriority: 1,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.num === 380 || pokemon.baseSpecies.num === 381) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 2,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.num === 380 || pokemon.baseSpecies.num === 381) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If held by a Latias or a Latios, its Sp. Atk and Sp. Def are 1.5x.\",\r\n\t},\r\n\twikiberry: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) {\r\n\t\t\t\tpokemon.eatItem();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEat(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 2);\r\n\t\t\tif (pokemon.getNature().minus === 'spa') {\r\n\t\t\t\tpokemon.addVolatile('confusion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"Restores 1/2 max HP at 1/2 max HP or less; confuses if -SpA Nature. Single use.\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
