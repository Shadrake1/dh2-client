{
  "version": 3,
  "sources": ["../../../../data/mods/m4apaldea/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: ModdedMoveData} = {\r\n  // completely just being lazy and copying everything about the main mod's hazards for the hazardImmune flag; will change if it causes problems\r\n\tgmaxsteelsurge: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: G-Max Steelsurge');\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\t\tthis.add('-ability', active, 'Gravitational Pull');\r\n\t\t\t\t\t\tthis.add('-message', `The sharp spikes are surrounding ${active.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasItem('heavydutyboots') || (this.dex.abilities.get(pokemon.ability).hazardImmune && !pokemon.ignoringAbility())) return;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.hasAbility('gravitationalpull')) return;\r\n\t\t\t\t}\r\n\t\t\t\t// Ice Face and Disguise correctly get typed damage from Stealth Rock\r\n\t\t\t\t// because Stealth Rock bypasses Substitute.\r\n\t\t\t\t// They don't get typed damage from Steelsurge because Steelsurge doesn't,\r\n\t\t\t\t// so we're going to test the damage of a Steel-type Stealth Rock instead.\r\n\t\t\t\tconst steelHazard = this.dex.getActiveMove('Stealth Rock');\r\n\t\t\t\tsteelHazard.type = 'Steel';\r\n\t\t\t\tconst typeMod = this.clampIntRange(pokemon.runEffectiveness(steelHazard), -6, 6);\r\n\t\t\t\tthis.damage(pokemon.maxhp * Math.pow(2, typeMod) / 8);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tspikes: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\t\tthis.add('-ability', active, 'Gravitational Pull');\r\n\t\t\t\t\t\tthis.add('-message', `The spikes are surrounding ${active.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 3) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots') || (this.dex.abilities.get(pokemon.ability).hazardImmune && !pokemon.ignoringAbility())) return;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.hasAbility('gravitationalpull')) return;\r\n\t\t\t\t}\r\n\t\t\t\tconst damageAmounts = [0, 3, 4, 6]; // 1/8, 1/6, 1/4\r\n\t\t\t\tthis.damage(damageAmounts[this.effectState.layers] * pokemon.maxhp / 24);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tstealthrock: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Stealth Rock');\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\t\tthis.add('-ability', active, 'Gravitational Pull');\r\n\t\t\t\t\t\tthis.add('-message', `The pointed stones are surrounding ${active.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (pokemon.hasItem('heavydutyboots') || (this.dex.abilities.get(pokemon.ability).hazardImmune && !pokemon.ignoringAbility())) return;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.hasAbility('gravitationalpull')) return;\r\n\t\t\t\t}\r\n\t\t\t\tconst typeMod = this.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('stealthrock')), -6, 6);\r\n\t\t\t\tthis.damage(pokemon.maxhp * Math.pow(2, typeMod) / 8);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tstickyweb: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Sticky Web');\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\t\tthis.add('-ability', active, 'Gravitational Pull');\r\n\t\t\t\t\t\tthis.add('-message', `The sticky web is surrounding ${active.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots') || (this.dex.abilities.get(pokemon.ability).hazardImmune && !pokemon.ignoringAbility())) return;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.hasAbility('gravitationalpull')) return;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Sticky Web');\r\n\t\t\t\tthis.boost({spe: -1}, pokemon, this.effectState.source, this.dex.getActiveMove('stickyweb'));\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\ttoxicspikes: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\t\tthis.add('-ability', active, 'Gravitational Pull');\r\n\t\t\t\t\t\tthis.add('-message', `The toxic spikes are surrounding ${active.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 2) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonEntryHazard(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\t\tif (pokemon.hasType('Poison') && !this.field.getPseudoWeather('stickyresidues')) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Toxic Spikes', '[of] ' + pokemon);\r\n\t\t\t\t\tpokemon.side.removeSideCondition('toxicspikes');\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tpokemon.hasType('Steel') || pokemon.hasType('Poison') ||\r\n\t\t\t\t\tpokemon.hasItem('heavydutyboots') || (this.dex.abilities.get(pokemon.ability).hazardImmune && !pokemon.ignoringAbility())\r\n\t\t\t\t\t\t\t ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\t\tif (active.hasAbility('gravitationalpull')) return;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.effectState.layers >= 2) {\r\n\t\t\t\t\t\tpokemon.trySetStatus('tox', pokemon.side.foe.active[0]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpokemon.trySetStatus('psn', pokemon.side.foe.active[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\r\n\t// Endless Dream field\r\n\twakeupslap: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'slp' || target.hasAbility('comatose') || this.field.getPseudoWeather('endlessdream')) return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t},\r\n\tdreameater: {\r\n\t\tinherit: true,\r\n\t\tonTryImmunity(target, source) {\r\n\t\t\treturn target.status === 'slp' || target.hasAbility('comatose') || this.field.getPseudoWeather('endlessdream');\r\n\t\t},\r\n\t},\r\n\tnightmare: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.status !== 'slp' && !pokemon.hasAbility('comatose') && !this.field.getPseudoWeather('endlessdream')) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', pokemon, 'Nightmare');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 9,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 4);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tsleeptalk: {\r\n\t\tinherit: true,\r\n\t\tonTry(source) {\r\n\t\t\tlet usable = false;\r\n\t\t\tfor (const opponent of source.adjacentFoes()) {\r\n\t\t\t\tif (this.field.getPseudoWeather('endlessdream')) {\r\n\t\t\t\t\tusable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn source.status === 'slp' || source.hasAbility('comatose') || usable;\r\n\t\t},\r\n\t},\r\n\t// For Ogerpon-Mega\r\n\tivycudgel: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Ogerpon-Wellspring': case 'Ogerpon-Wellspring-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Hearthflame': case 'Ogerpon-Hearthflame-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Cornerstone': case 'Ogerpon-Cornerstone-Tera':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Mega':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
