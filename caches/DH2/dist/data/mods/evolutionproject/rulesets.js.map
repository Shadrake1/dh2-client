{
  "version": 3,
  "sources": ["../../../../data/mods/evolutionproject/rulesets.ts"],
  "sourcesContent": ["export const Rulesets: {[k: string]: ModdedFormatData} = {\r\n\tzmoveclause: {\r\n\t\teffectType: 'ValidatorRule',\r\n\t\tname: 'Z-Move Clause',\r\n\t\tdesc: \"Bans Pok\u00E9mon from holding Z-Crystals, except Pok\u00E9mon-exclusive ones\",\r\n\t\tonValidateSet(set) {\r\n\t\t\tconst item = this.dex.items.get(set.item);\r\n\t\t\tif (item.zMove && !item.itemUser) return [`${set.name || set.species}'s item ${item.name} is banned by Z-Move Clause. Only Pok\u00E9mon-exclusive Z-Moves are allowed!`];\r\n\t\t},\r\n\t\tonBegin() {\r\n\t\t\tthis.add('rule', 'Z-Move Clause: Type-based Z-Moves are banned');\r\n\t\t},\r\n\t},\r\n\tdatamod: {\r\n\t\teffectType: 'Rule',\r\n\t\tname: 'Data Mod',\r\n\t\tdesc: 'When a new Pok\u00E9mon switches in for the first time, information about its types, stats and Abilities is displayed to both players.',\r\n\t\tonBegin() {\r\n\t\t\tfor (const pokemon of this.getAllPokemon()) {\r\n\t\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\t\tconst baseSpecies = Dex.species.get(pokemon.species.name);\r\n\t\t\t\tlet modded = false;\r\n\t\t\t\tfor (const type in [0, 1]) {\r\n\t\t\t\t\tif (species.types[type] !== baseSpecies.types[type]) {\r\n\t\t\t\t\t\t// console.log(species.types[type] + \" is different from \" + baseSpecies.types[type]);\r\n\t\t\t\t\t\tmodded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (species.baseStats.hp !== baseSpecies.baseStats.hp) modded = true;\r\n\t\t\t\tif (species.baseStats.atk !== baseSpecies.baseStats.atk) modded = true;\r\n\t\t\t\tif (species.baseStats.def !== baseSpecies.baseStats.def) modded = true;\r\n\t\t\t\tif (species.baseStats.spa !== baseSpecies.baseStats.spa) modded = true;\r\n\t\t\t\tif (species.baseStats.spd !== baseSpecies.baseStats.spd) modded = true;\r\n\t\t\t\tif (species.baseStats.spe !== baseSpecies.baseStats.spe) modded = true;\r\n\t\t\t\tif (species.abilities[0] !== baseSpecies.abilities[0]) modded = true;\r\n\t\t\t\tif (species.abilities[1] !== baseSpecies.abilities[1]) modded = true;\r\n\t\t\t\tif (species.abilities['H'] !== baseSpecies.abilities['H']) modded = true;\r\n\t\t\t\tif (species.abilities['S'] !== baseSpecies.abilities['S']) modded = true;\r\n\t\t\t\tif (modded) {\r\n\t\t\t\t\tpokemon.isModded = true;\r\n\t\t\t\t\t// console.log(species.name + \" is different from in canon\");\r\n\t\t\t\t// } else {\r\n\t\t\t\t\t// console.log(species.name + \" is the same as in canon\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tlet species = this.dex.species.get(pokemon.species.name);\r\n\t\t\tconst switchedIn = pokemon.switchedIn;\r\n\t\t\tif (pokemon.illusion) {\r\n\t\t\t\tspecies = this.dex.species.get(pokemon.illusion.species.name);\r\n\t\t\t\t// console.log(pokemon.illusion.name + \" is being reported\");\r\n\t\t\t\tif (!pokemon.illusion.isModded) return;\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.illusion.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (pokemon.illusion.switchedIn) return;\r\n\t\t\t\tpokemon.illusion.switchedIn = true;\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(pokemon.name + \" is being reported\");\r\n\t\t\t\tif (!pokemon.isModded) return;\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (pokemon.switchedIn) return;\r\n\t\t\t\tpokemon.switchedIn = true;\r\n\t\t\t}\r\n\t\t\tlet abilities = species.abilities[0];\r\n\t\t\tif (species.abilities[1]) {\r\n\t\t\t\tabilities += ` / ${species.abilities[1]}`;\r\n\t\t\t}\r\n\t\t\tif (species.abilities['H']) {\r\n\t\t\t\tabilities += ` / ${species.abilities['H']}`;\r\n\t\t\t}\r\n\t\t\tif (species.abilities['S']) {\r\n\t\t\t\tabilities += ` / ${species.abilities['S']}`;\r\n\t\t\t}\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tif (species.types[1]) {\r\n\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t}\r\n\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\tif (species.creator) this.hint(`${species.name} was created by ${species.creator}!`);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.hasAbility('illusion')) { // making sure the correct information is given when an Illusion breaks\r\n\t\t\t\tif (target.isModded) {\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\tif (!target.switchedIn) {\r\n\t\t\t\t\t\ttarget.switchedIn = true;\r\n\t\t\t\t\t\tconst species = this.dex.species.get(target.species.name);\r\n\t\t\t\t\t\tlet abilities = species.abilities[0];\r\n\t\t\t\t\t\tif (species.abilities[1]) {\r\n\t\t\t\t\t\t\tabilities += ` / ${species.abilities[1]}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (species.abilities['H']) {\r\n\t\t\t\t\t\t\tabilities += ` / ${species.abilities['H']}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (species.abilities['S']) {\r\n\t\t\t\t\t\t\tabilities += ` / ${species.abilities['S']}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities + `</span><span class=\"col abilitycol\"></span></span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\tif (species.creator) this.hint(`${species.name} was created by ${species.creator}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = target.baseSpecies.types;\r\n\t\t\t\t\tif (target.getTypes().join() === types.join()) {\r\n\t\t\t\t\t\tthis.add('-end', target, 'typechange', '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmegadatamod: {\r\n\t\teffectType: 'Rule',\r\n\t\tname: 'Mega Data Mod',\r\n\t\tdesc: 'Gives data on stats, Ability and types when a Pok\u00E9mon Mega Evolves or undergoes Ultra Burst.',\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.illusion) {\r\n\t\t\t\tif (pokemon.illusion.species.forme.startsWith('Mega') || pokemon.illusion.species.forme.startsWith('Ultra')) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.illusion.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.forme.startsWith('Mega') || pokemon.species.forme.startsWith('Ultra')) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.hasAbility('illusion')) {\r\n\t\t\t\tif (target.species.forme.startsWith('Mega') || target.species.forme.startsWith('Ultra')) {\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = target.baseSpecies.types;\r\n\t\t\t\t\tif (target.getTypes().join() === types.join()) {\r\n\t\t\t\t\t\tthis.add('-end', target, 'typechange', '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMega(pokemon) {\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\tconst abilities = species.abilities;\r\n\t\t\tconst baseStats = species.baseStats;\r\n\t\t\tconst type = species.types[0];\r\n\t\t\tif (species.types[1]) {\r\n\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t}\r\n\t\t\tif (species.creator) this.hint(`${species.name} was created by ${species.creator}!`);\r\n\t\t\tpokemon.switchedIn = true;\r\n\t\t},\r\n\t},\r\n\tteampreview: {\r\n\t\teffectType: 'Rule',\r\n\t\tname: 'Team Preview',\r\n\t\tdesc: \"Allows each player to see the Pok&eacute;mon on their opponent's team before they choose their lead Pok&eacute;mon\",\r\n\t\tonBegin() {\r\n\t\t\tthis.add('clearpoke');\r\n\t\t\tfor (const pokemon of this.getAllPokemon()) {\r\n\t\t\t\tconst details = pokemon.details.replace(', shiny', '')\r\n\t\t\t\t\t.replace(/(Arceus|Gourgeist|Pumpkaboo|Jackourd|Silvally|Urshifu)(-[a-zA-Z?-]+)?/g, '$1-*');\r\n\t\t\t\tthis.add('poke', pokemon.side.id, details, '');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTeamPreview() {\r\n\t\t\tthis.makeRequest('teampreview');\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
