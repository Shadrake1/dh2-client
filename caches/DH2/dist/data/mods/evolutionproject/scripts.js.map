{
  "version": 3,
  "sources": ["../../../../data/mods/evolutionproject/scripts.ts"],
  "sourcesContent": ["export const Scripts: {[k: string]: ModdedBattleScriptsData} = {\r\n\tteambuilderConfig: {\r\n\t\texcludeStandardTiers: true,\r\n\t\tcustomTiers: ['Evo!', 'Evo NFE!', 'Evo (NFE)'],//Adding a new tier for NFEs that I don't want buried in the lower section [like Michu :(]\r\n\t\tcustomDoublesTiers: ['Evo!', 'Evo NFE!', 'Evo (NFE)'],\r\n\t},\r\n\tinit() {\r\n\t\t// :man-shrugging:\r\n\t\tthis.modData(\"Learnsets\", \"parasect\").learnset.myceliate = ['8L40'];\r\n\t\t\r\n\t\tfor (const id in this.dataCache.Pokedex) {\r\n\t\t\tconst newMon = this.dataCache.Pokedex[id];\r\n\t\t\tif (!newMon || !newMon.copyData) continue; // weeding out Pok\u00E9mon that aren't new\r\n\t\t\tconst copyData = this.dataCache.Pokedex[this.toID(newMon.copyData)];\r\n\r\n\t\t\tif (!newMon.types && copyData.types) newMon.types = copyData.types;\r\n\t\t\tif (!newMon.baseStats && copyData.baseStats) newMon.baseStats = copyData.baseStats;\r\n\t\t\tif (!newMon.abilities && copyData.abilities) newMon.abilities = copyData.abilities;\r\n\t\t\tif (!newMon.num && copyData.num) newMon.num = copyData.num * -1; // inverting the original's dex number\r\n\t\t\tif (!newMon.genderRatio && copyData.genderRatio) newMon.genderRatio = copyData.genderRatio;\r\n\t\t\tif (!newMon.heightm && copyData.heightm) newMon.heightm = copyData.heightm;\r\n\t\t\tif (!newMon.weightkg && copyData.weightkg) newMon.weightkg = copyData.weightkg;\r\n\t\t\tif (!newMon.color && copyData.color) newMon.color = copyData.color;\r\n\t\t\tif (!newMon.eggGroups && copyData.eggGroups) newMon.eggGroups = copyData.eggGroups;\r\n\r\n\t\t\tlet copyMoves = newMon.copyData;\r\n\t\t\tif (newMon.copyMoves) copyMoves = newMon.copyMoves;\r\n\t\t\tif (copyMoves) {\r\n\t\t\t\tif (!this.dataCache.Learnsets[id]) this.dataCache.Learnsets[id] = {learnset: {}}; // create a blank learnset entry so we don't need a learnsets file (thank you ink)\r\n\t\t\t\tconst learnset = this.dataCache.Learnsets[this.toID(copyMoves)].learnset;\r\n\t\t\t\tfor (const moveid in learnset) {\r\n\t\t\t\t\tthis.modData('Learnsets', id).learnset[moveid] = learnset[moveid].filter(\r\n\t\t\t\t\t\t(method) => !method.includes('S')\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolAdditions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolAdditions) {\r\n\t\t\t\t\t\tthis.modData('Learnsets', this.toID(id)).learnset[this.toID(move)] = [\"8M\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (newMon.movepoolDeletions) {\r\n\t\t\t\t\tfor (const move of newMon.movepoolDeletions) {\r\n\t\t\t\t\t\tdelete this.modData('Learnsets', this.toID(id)).learnset[this.toID(move)];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// hard-coding a bit for Eclipseroid specifically (may rework if we get more fusions later but kinda doubt)\r\n\t\t\t\tif (newMon.name === 'Eclipseroid') {\r\n\t\t\t\t\tfor (const moveid in this.dataCache.Learnsets[this.toID(\"Lunatone\")].learnset) {\r\n\t\t\t\t\t\tthis.modData('Learnsets', id).learnset[moveid] = this.dataCache.Learnsets[this.toID(\"Lunatone\")].learnset[moveid].filter(\r\n\t\t\t\t\t\t\t(method) => !method.includes('S')\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tactions: {//Glad I checked this before making the PR!\r\n\t\trunSwitch(pokemon) { // modified for Hoard\r\n\t\t\r\n\t\t\tthis.battle.runEvent('Swap', pokemon);\r\n\r\n\t\t\tif (this.battle.gen >= 5) {\r\n\t\t\t\tthis.battle.runEvent('SwitchIn', pokemon);\r\n\t\t\t}\r\n\r\n\t\t\tthis.battle.runEvent('EntryHazard', pokemon);\r\n\r\n\t\t\tif (this.battle.gen <= 4) {\r\n\t\t\t\tthis.battle.runEvent('SwitchIn', pokemon);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.battle.gen <= 2) {\r\n\t\t\t\t// pokemon.lastMove is reset for all Pokemon on the field after a switch. This affects Mirror Move.\r\n\t\t\t\tfor (const poke of this.battle.getAllActive()) poke.lastMove = null;\r\n\t\t\t\tif (!pokemon.side.faintedThisTurn && pokemon.draggedIn !== this.battle.turn) {\r\n\t\t\t\t\tthis.battle.runEvent('AfterSwitchInSelf', pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!pokemon.hp) return false;\r\n\t\t\tpokemon.isStarted = true;\r\n\t\t\tif (!pokemon.fainted) {\r\n\t\t\t\tthis.battle.singleEvent('Start', pokemon.getAbility(), pokemon.abilityState, pokemon);\r\n\t\t\t\tthis.battle.singleEvent('Start', pokemon.getItem(), pokemon.itemState, pokemon);\r\n\t\t\t}\r\n\t\t\tif (this.battle.gen === 4) {\r\n\t\t\t\tfor (const foeActive of pokemon.foes()) {\r\n\t\t\t\t\tfoeActive.removeVolatile('substitutebroken');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!pokemon.m.originalItem) pokemon.m.originalItem = pokemon.item; //The edit\r\n\t\t\tpokemon.draggedIn = null;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t}, \r\n\t//There used to be a section for Mind Blown here but apparently they fixed that on main so that's gone now!\r\n\r\n\tpokemon: {\r\n\t\tisGrounded(negateImmunity = false) {\r\n\t\t\tif ('gravity' in this.battle.field.pseudoWeather) return true;\r\n\t\t\tif ('ingrain' in this.volatiles && this.battle.gen >= 4) return true;\r\n\t\t\tif ('smackdown' in this.volatiles) return true;\r\n\t\t\tconst item = (this.ignoringItem() ? '' : this.item);\r\n\t\t\tif (item === 'ironball') return true;\r\n\t\t\t// If a Fire/Flying type uses Burn Up and Roost, it becomes ???/Flying-type, but it's still grounded.\r\n\t\t\tif (!negateImmunity && this.hasType('Flying') && !('roost' in this.volatiles)) return false;\r\n\t\t\tif (this.hasAbility('levitate') && !this.battle.suppressingAbility(this)) return null;\r\n\t\t\tif ((this.hasAbility('hoverdrive') && this.battle.field.isTerrain('electricterrain')) && !this.battle.suppressingAbility(this)) return false;\r\n\t\t\tif ('magnetrise' in this.volatiles) return false;\r\n\t\t\tif ('telekinesis' in this.volatiles) return false;\r\n\t\t\treturn item !== 'airballoon';\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
