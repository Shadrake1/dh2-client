{
  "version": 3,
  "sources": ["../../../../data/mods/evolutionproject/moves.ts"],
  "sourcesContent": ["export const Moves: {[moveid: string]: ModdedMoveData} = {\r\n\tplaquefang: {\r\n\t\tnum: -1001,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Poisons the target if the user is statused.\",\r\n\t\tname: \"Plaque Fang\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Poison Fang\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (source.status && source.status !== 'slp') {\r\n\t\t\t\t\ttarget.trySetStatus('psn', source, move);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tflurry: {\r\n\t\tnum: -1002,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Flurry\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tignoreImmunity: true,\r\n\t\tisFutureMove: true,\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Chatter\", target);\r\n\t\t},\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'flurry')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['flurry'], {\r\n\t\t\t\tduration: 5,\r\n\t\t\t\tmove: 'flurry',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tposition: target.position,\r\n\t\t\t\tside: target.side,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'flurry',\r\n\t\t\t\t\tname: \"Flurry\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 25,\r\n\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\ttype: 'Flying',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (source.species.baseSpecies === 'Starly') this.add('-message', `${(source.illusion ? source.illusion.name : source.name)} called for help!`);\r\n\t\t\telse this.add('-message', `${(source.illusion ? source.illusion.name : source.name)} prepared a flurry of attacks!`);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\t// this is a slot condition\r\n\t\t\tduration: 5,\r\n\t\t\tonResidualOrder: 3,\r\n\t\t\tonResidual(target) {\r\n\t\t\t\t// unlike a future move, Flurry activates each turn\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get('flurry');\r\n\t\t\t\tif (data.target.fainted || data.target === data.source) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because the target is ${(data.fainted ? 'fainted' : 'the user')}.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.source.species.baseSpecies === 'Starly') this.add('-message', `${(data.target.illusion ? data.target.illusion.name : data.target.name)} is being swarmed by a flurry of Starly!`);\r\n\t\t\t\telse this.add('-message', `${(data.target.illusion ? data.target.illusion.name : data.target.name)} is weathering a flurry of attacks!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\tif (data.source.isActive) {\r\n\t\t\t\t\tthis.add('-anim', data.source, \"Sky Attack\", data.target);\r\n\t\t\t\t}\r\n\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\t// unlike a future move, Flurry activates each turn\r\n\t\t\t\tthis.effectState.target = this.effectState.side.active[this.effectState.position];\r\n\t\t\t\tconst data = this.effectState;\r\n\t\t\t\tconst move = this.dex.moves.get('flurry');\r\n\t\t\t\tif (data.target.fainted || data.target === data.source) {\r\n\t\t\t\t\tthis.hint(`${move.name} did not hit because the target is ${(data.fainted ? 'fainted' : 'the user')}.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.source.species.baseSpecies === 'Starly') this.add('-message', `${(data.target.illusion ? data.target.illusion.name : data.target.name)} is being swarmed by a flurry of Starly!`);\r\n\t\t\t\telse this.add('-message', `${(data.target.illusion ? data.target.illusion.name : data.target.name)} is weathering a flurry of attacks!`);\r\n\t\t\t\tdata.target.removeVolatile('Endure');\r\n\r\n\t\t\t\tif (data.source.hasAbility('infiltrator') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.infiltrates = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('normalize') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.type = 'Normal';\r\n\t\t\t\t}\r\n\t\t\t\tif (data.source.hasAbility('adaptability') && this.gen >= 6) {\r\n\t\t\t\t\tdata.moveData.stab = 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst hitMove = new this.dex.Move(data.moveData) as ActiveMove;\r\n\t\t\t\tif (data.source.isActive) {\r\n\t\t\t\t\tthis.add('-anim', data.source, \"Sky Attack\", data.target);\r\n\t\t\t\t}\r\n\t\t\t\tthis.actions.trySpreadMoveHit([data.target], data.source, hitMove);//??\r\n\t\t\t\tif (data.source.species.baseSpecies === 'Starly') this.add('-message', `The flurry of Starly dispersed!`);\r\n\t\t\t\telse this.add('-message', `The flurry of attacks subsided!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tdispersion: {\r\n\t\tnum: -1003,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Type varies based on the user's primary type. Hits foes.\",\r\n\t\tname: \"Dispersion\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, dance: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Silver Wind\", target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tlet type = pokemon.types[0];\r\n\t\t\tif (type === \"Bird\") type = \"???\";\r\n\t\t\tmove.type = type;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\taxonrush: {\r\n\t\tnum: -1004,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Raises the user's and ally's Atk, Def, Spe by 1 in Electric Terrain.\",\r\n\t\tname: \"Axon Rush\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, dance: 1},\r\n\t\tonTryHit() {\r\n\t\t\tif (!this.field.isTerrain('electricterrain')) return false;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Acupressure\", target);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tdef: 1,\r\n\t\t\tspe: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allies\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmineraldrain: {\r\n\t\tnum: -1005,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mineral Drain\",\r\n\t\tshortDesc: \"User recovers 50% of the damage dealt.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, heal: 1},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tclatteringblades: {\r\n\t\tnum: -1006,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Clattering Blades\",\r\n\t\tshortDesc: \"Critical hit if hailing; hits foes.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow'])) move.willCrit = true;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cool\"\r\n\t},\r\n\tshaveoff: {\r\n\t\tnum: -1007,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Shave Off\",\r\n\t\tshortDesc: \"User restores 1/2 its max HP; 2/3 in Hail.\",\r\n\t\tpp: 10,//gen 8\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1},\r\n\t\tonHit(pokemon) {\r\n\t\t\tlet factor = 0.5;\r\n\t\t\tif (this.field.isWeather(['hail', 'snow'])) {\r\n\t\t\t\tfactor = 0.667;\r\n\t\t\t}\r\n\t\t\tconst success = !!this.heal(this.modify(pokemon.maxhp, factor));\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', pokemon, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\ttripleneedle: {\r\n\t\tshortDesc: \"100% to lower target's Defense by 1; user's crit ratio +2.\",\r\n\t\tnum: -1008,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Triple Needle\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Acupressure\", source);\r\n\t\t\tthis.add('-anim', source, \"Needle Arm\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'focusenergy',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Cool\",//Necessary\r\n\t},\r\n\tmyceliate: {\r\n\t\tshortDesc: \"Power doubles if the target has a status ailment.\",\r\n\t\tnum: -1009,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status || target.hasAbility('comatose')) {\r\n\t\t\t\tthis.debug('BP doubled from status condition');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Spore\", target);\r\n\t\t\tthis.add('-anim', source, \"Frenzy Plant\", target);\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Myceliate\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {basePower: 160},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\r\n\t// restored official moves\r\n\r\n\tbaddybad: { // Gen VII Baddy Bad for Curski\r\n\t\tinherit: true,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\t\r\n\t// modified official moves \r\n\t\r\n\tchillyreception: {\r\n\t\tinherit: true,\r\n\t\tweather: 'hail', // Gen 8 baby! Snow isnt real and cant hurt me!\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
