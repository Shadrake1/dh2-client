{
  "version": 3,
  "sources": ["../../../../data/mods/evolutionproject/abilities.ts"],
  "sourcesContent": ["export const Abilities: {[abilityid: string]: ModdedAbilityData} = {\r\n\thoard: {\r\n\t\tshortDesc: \"When it leaves battle, the Pok\u00E9mon restores its original held item.\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tif (!pokemon.item && pokemon.m.originalItem) {\r\n\t\t\t\tif (pokemon.setItem(pokemon.m.originalItem)) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Hoard');\r\n\t\t\t\t\tthis.add('-item', pokemon, this.dex.items.get(pokemon.m.originalItem), '[from] Ability: Hoard');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hoard\",\r\n\t\trating: 3,\r\n\t\tnum: -1,\r\n\t},\r\n\tchainlink: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon steals its partner's Steel type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tif (!pokemon.hasType('Steel')) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\t\tif (ally.hasAbility('chainlink')) continue; // don't bounce back and forth indefinitely\r\n\t\t\t\t\tif (ally.hasType('Steel') && pokemon.addType('Steel')) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Chain Link');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} stole its partner's armor!`);\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Ability: Chain Link');\r\n\t\t\t\t\t\tally.addVolatile('chainlink');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.hasType('Steel')) return;\r\n\t\t\t// doesn't happen twice if the ally has already returned the armor\r\n\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\tally.removeVolatile('chainlink');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) { // it seems like volatiles may not run onEnd on their own the way Abilities do\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) { // revert Chain Link user's type first\r\n\t\t\t\t\tif (ally.hasAbility('chainlink') && ally.hasType('Steel')) {\r\n\t\t\t\t\t\tlet types = ally.baseSpecies.types;\r\n\t\t\t\t\t\tif (ally.getTypes().join() === types.join() || !ally.setType(types)) return;\r\n\t\t\t\t\t\tthis.add('-ability', ally, 'Chain Link');\r\n\t\t\t\t\t\tthis.add('-message', `${ally.name} returned its partner's armor!`);\r\n\t\t\t\t\t\tthis.add('-start', ally, 'typechange', ally.types.join('/'));\r\n\t\t\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t\t\t\tif (pokemon.getTypes().join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Chain Link\",\r\n\t\trating: 3,\r\n\t\tnum: -2,\r\n\t},\r\n\tlavaflow: {\r\n\t\tshortDesc: \"The Pok\u00E9mon draws Fire moves to itself to raise Speed by 1; Fire immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tif (!this.boost({spe: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Lava Flow');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Fire' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Lava Flow\",\r\n\t\trating: 3,\r\n\t\tnum: -3,\r\n\t},\r\n\tcentrifuge: {\r\n\t\tshortDesc: \"The Pok\u00E9mon draws Ground moves to itself to raise Attack by 1; Ground immunity.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ground') {\r\n\t\t\t\tif (!this.boost({atk: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Centrifuge');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Ground' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Centrifuge\",\r\n\t\trating: 3,\r\n\t\tnum: -4,\r\n\t},\r\n\tblowout: {\r\n\t\tshortDesc: \"Sound-based moves: 1.3x damage, give target Soundproof.\",\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.debug('Blowout boost');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!source || !target || !move) return; // just being safe here\r\n\t\t\tif (!move.flags['sound'] || target.getAbility().isPermanent || target.ability === 'soundproof' || target.ability === 'truant') return;\r\n\t\t\tconst oldAbility = target.setAbility('soundproof');\r\n\t\t\tif (oldAbility) {\r\n\t\t\t\tthis.add('-ability', source, 'Blowout');\r\n\t\t\t\tthis.add('-ability', target, 'Soundproof');\r\n\t\t\t\tthis.add('-message', `${target.illusion ? target.illusion.name : target.name} lost its hearing!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Blowout\",\r\n\t\trating: 3.5,\r\n\t\tnum: -5,\r\n\t},\r\n\tmurmuration: {\r\n\t\tshortDesc: \"If user is Crown Starly, changes to Cloud Form if it has > 1/4 max HP, else Solo Form.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.species.id.startsWith('starlycrown') || pokemon.level < 34 || pokemon.transformed) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'starlycrown') {\r\n\t\t\t\t\tpokemon.formeChange('Starly-Crown-Cloud', this.effect, true);\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} changed to Cloud Form!`);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'starlycrowncloud') {\r\n\t\t\t\t\tpokemon.formeChange('Starly-Crown', this.effect, true);\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} changed to Solo Form...`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tif (!this.effectState.busted && pokemon.species.id === 'starlycrowncloud') { // this is just to make a dt that only shows up once per Starly\r\n\t\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\tconst type = species.types[0];\r\n\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 27,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.species.id.startsWith('starlycrown') || pokemon.level < 34 || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 4) {\r\n\t\t\t\tif (pokemon.species.id === 'starlycrown') {\r\n\t\t\t\t\tpokemon.formeChange('Starly-Crown-Cloud', this.effect, true);\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} changed to Cloud Form!`);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'starlycrowncloud') {\r\n\t\t\t\t\tpokemon.formeChange('Starly-Crown', this.effect, true);\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} changed to Solo Form...`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\tif (!this.effectState.busted && pokemon.species.id === 'starlycrowncloud') { // this is just to make a dt that only shows up once per Starly\r\n\t\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\tconst type = species.types[0];\r\n\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tif (pokemon.species.id !== 'starlycrowncloud' || pokemon.transformed) return;\r\n\t\t\tpokemon.formeChange('Starly-Crown', this.effect, true);\r\n\t\t\tthis.add('-message', `${pokemon.name} changed to Solo Form...`);\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Murmuration\",\r\n\t\trating: 3,\r\n\t\tnum: -6,\r\n\t},\r\n\tscaleshift: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon copies its partner's first type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tlet newtype = null;\r\n\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tally !== pokemon && !ally.hasAbility('scaleshift') && ally.types[0] !== pokemon.baseSpecies.types[0] &&\r\n\t\t\t\t\tally.types[0] !== pokemon.baseSpecies.types[1]\r\n\t\t\t\t) {\r\n\t\t\t\t\tnewtype = ally.types[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newtype) {\r\n\t\t\t\tconst typecombo = [newtype, pokemon.baseSpecies.types[1]];\r\n\t\t\t\tif (pokemon.getTypes().join() === typecombo.join() || !pokemon.setType(typecombo)) return;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.getTypes().join() === pokemon.baseSpecies.types.join() || !pokemon.setType(pokemon.baseSpecies.types)) return;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.getTypes().join() === pokemon.baseSpecies.types.join() || !pokemon.setType(pokemon.baseSpecies.types)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t},\r\n\t\tname: \"Scale Shift\",\r\n\t\trating: 3,\r\n\t\tnum: -7,\r\n\t},\r\n\tdisengage: {\r\n\t\tshortDesc: \"This Pok\u00E9mon switches out when it reaches 1/2 or less of its maximum HP.\",\r\n\t\tonEmergencyExit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tactive.switchFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget.switchFlag = true;\r\n\t\t\tthis.add('-activate', target, 'ability: Disengage');\r\n\t\t},\r\n\t\tname: \"Disengage\",\r\n\t\trating: 1,\r\n\t\tnum: -8,\r\n\t},\r\n\thoverdrive: {\r\n\t\tshortDesc: \"This Pok\u00E9mon is immune to Ground during Electric Terrain.\",\r\n\t\t// airborneness implemented in scripts.ts\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Hover Drive');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} levitates above the Electric Terrain!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTerrainStart() {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tthis.add('-ability', this.effectState.target, 'Hover Drive');\r\n\t\t\t\tthis.add('-message', `${this.effectState.target.name} levitates above the Electric Terrain!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Hover Drive\",\r\n\t\trating: 3,\r\n\t\tnum: -9,\r\n\t},\r\n\tsnowpack: {\r\n\t\tshortDesc: \"Defense +2 when hit by an Ice-type move.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.boost({def: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Snowpack\",\r\n\t\trating: 1.5,\r\n\t\tnum: -10,\r\n\t},\r\n\r\n\t// modded form-changing Abilities\r\n\r\n\tstancechange: {\r\n\t\tshortDesc: \"Changes Aegislash/Condana to Blade/Coiled before attack, Aegislash to Shield before King's Shield.\",\r\n\t\tonBeforeMovePriority: 0.5,\r\n\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\tif (\r\n\t\t\t\t(!attacker.species.name.startsWith('Aegislash') && !attacker.species.name.startsWith('Condana')) || attacker.transformed\r\n\t\t\t) return;\r\n\t\t\tif ((move.category === 'Status' && move.id !== 'kingsshield') || move.id == 'flurry') return;//if using a non-kings-shield status move, or if using Flurry\r\n\t\t\tif (attacker.species.name === 'Aegislash' || attacker.species.name === 'Aegislash-Blade') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else if (attacker.species.name === 'Aegislash-Verdant' || attacker.species.name === 'Aegislash-Verdant-Blade') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash-Verdant' : 'Aegislash-Verdant-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t\tthis.add('-message', `${attacker.name} changed to ${move.id === 'kingsshield' ? 'Shield Forme' : 'Blade Forme'}!`);\r\n\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Condana\r\n\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t} else if (attacker.species.name.startsWith('Condana') && attacker.species.name !== 'Condana-Coiled') {\r\n\t\t\t\t// Condana can't learn King's Shield, so it can't change back to Slither Forme (by design)\r\n\t\t\t\tattacker.formeChange('Condana-Coiled');\r\n\t\t\t\tthis.add('-message', `${attacker.name} changed to Coiled Forme!`);\r\n\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Condana\r\n\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Stance Change\",\r\n\t\trating: 4,\r\n\t\tnum: 176,\r\n\t},\r\n\thungerswitch: {\r\n\t\tshortDesc: \"If Morpeko or Klefki-Galar, it changes between modes at the end of each turn.\",\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.transformed) return;\r\n\t\t\tlet targetForme = null;\r\n\t\t\tif (pokemon.species.baseSpecies === 'Morpeko') targetForme = pokemon.species.name === 'Morpeko' ? 'Morpeko-Hangry' : 'Morpeko';\r\n\t\t\tif (pokemon.species.name.startsWith('Klefki-Galar')) targetForme = pokemon.species.name === 'Klefki-Galar' ? 'Klefki-Galar-Revealed' : 'Klefki-Galar';\r\n\t\t\tif (targetForme) {\r\n\t\t\t\tpokemon.formeChange(targetForme);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (targetForme === 'Klefki-Galar') {\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} changed to Lure Mode!`);\r\n\t\t\t\t} else if (targetForme === 'Klefki-Galar-Revealed') {\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} changed to Revealed Mode!`);\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.effectState.busted && pokemon.species.baseSpecies !== 'Morpeko') { // this is just to make a dt that only shows up once per Klefki\r\n\t\t\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// flags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1}, // it actually isn't in canon despite how weird that is\r\n\t\tname: \"Hunger Switch\",\r\n\t\trating: 1,\r\n\t\tnum: 258,\r\n\t},\r\n\tzenmode: {\r\n\t\tinherit: true,\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (\r\n\t\t\t\t(pokemon.baseSpecies.baseSpecies !== 'Darmanitan'//we aren't a Darmanitan,\r\n\t\t\t\t&& pokemon.baseSpecies.baseSpecies !== 'Overchill'//and we aren't an Overchill,\r\n\t\t\t\t&& !(//and we are NOT\r\n\t\t\t\t\tpokemon.species.forme.includes('Kalos')//specifically a mon whose forme name includes Kalos,\r\n\t\t\t\t\t&& pokemon.baseSpecies.baseSpecies == 'Qwilfish')//and whose base species is Qwilfish.\r\n\t\t\t\t\t//Ugh this made my brain spin.\r\n\t\t\t\t) || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen', 'Galar-Zen', 'Kalos-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen', 'Galar-Zen', 'Kalos-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Darmanitan-Zen\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif ((pokemon.species.baseSpecies === 'Darmanitan' || ['Overchill-Zen', 'Qwilfish-Kalos-Zen'].includes(pokemon.species.name)) && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t\t//This is when we leave or die so I dunno if this is helpful\r\n\t\t\t\t//this.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (!pokemon.species.name.includes('Darmanitan')) {//The non-Darmanitans\r\n\t\t\t\t\tlet targetForme = pokemon.species.name.includes('Kalos') ? 'Qwilfish-Kalos-Zen' : 'Overchill-Zen';\r\n\t\t\t\t\tif (!pokemon.species.id.includes('zen')) pokemon.formeChange(targetForme);\r\n\t\t\t\t} else if (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitanzen') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (pokemon.species.id !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen', 'Galar-Zen', 'Kalos-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\ticeface: {\r\n\t\tinherit: true,\r\n\t\tshortDesc: \"If Eiscue/Froslass-Theater, first physical hit deals 0 damage. Effect restored in Hail.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.isWeather(['hail', 'snow']) &&\r\n\t\t\t\t(pokemon.species.id === 'eiscuenoice' || pokemon.species.id === 'froslasstheaterunmasked') && !pokemon.transformed) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = false;\r\n\t\t\t\tif (pokemon.species.id === 'eiscuenoice') pokemon.formeChange('Eiscue', this.effect, true);\r\n\t\t\t\tif (pokemon.species.id === 'froslasstheaterunmasked') pokemon.formeChange('Froslass-Theater', this.effect, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.effectType === 'Move' && effect.category === 'Physical' &&\r\n\t\t\t\t(target.species.id === 'eiscue' || target.species.id === 'froslasstheater') && !target.transformed\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (move.category !== 'Physical' || (target.species.id !== 'eiscue' && target.species.id !== 'froslasstheater') || target.transformed) return;\r\n\t\t\tif (target.volatiles['substitute'] && !(move.flags['bypasssub'] || move.infiltrates)) return;\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (move.category !== 'Physical' || (target.species.id !== 'eiscue' && target.species.id !== 'froslasstheater') || target.transformed) return;\r\n\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move.type)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif ((pokemon.species.id === 'eiscue' || pokemon.species.id === 'froslasstheater') && this.effectState.busted) {\r\n\t\t\t\tif (pokemon.species.id === 'eiscue') pokemon.formeChange('Eiscue-Noice', this.effect, true);\r\n\t\t\t\tif (pokemon.species.id === 'froslasstheater') {\r\n\t\t\t\t\tpokemon.formeChange('Froslass-Theater-Unmasked', this.effect, true);\r\n\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\t\tif (!this.effectState.dataMod) { // this is just to make a dt that only shows up once per Klefki\r\n\t\t\t\t\t\tconst species = this.dex.species.get(pokemon.species.name);\r\n\t\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.effectState.dataMod = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeatherChange(pokemon, source, sourceEffect) {\r\n\t\t\t// snow/hail resuming because Cloud Nine/Air Lock ended does not trigger Ice Face\r\n\t\t\tif ((sourceEffect as Ability)?.suppressWeather) return;\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tif (this.field.isWeather(['hail', 'snow']) &&\r\n\t\t\t\t(pokemon.species.id === 'eiscuenoice' || pokemon.species.id === 'froslasstheaterunmasked') && !pokemon.transformed) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\r\n\t\t\t\tthis.effectState.busted = false;\r\n\t\t\t\tif (pokemon.species.id === 'eiscuenoice') pokemon.formeChange('Eiscue', this.effect, true);\r\n\t\t\t\tif (pokemon.species.id === 'froslasstheaterunmasked') pokemon.formeChange('Froslass-Theater', this.effect, true);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
