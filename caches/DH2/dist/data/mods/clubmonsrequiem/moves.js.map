{
  "version": 3,
  "sources": ["../../../../data/mods/clubmonsrequiem/moves.ts"],
  "sourcesContent": ["export const Moves: { [moveid: string]: ModdedMoveData } = {\r\n\tburnup: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t},\r\n\twaterpulse: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 90,\r\n\t},\r\n\thiddenpower: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerfighting: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerfire: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowergrass: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerwater: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerelectric: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerice: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerpoison: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerground: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerpsychic: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerdark: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerbug: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerghost: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerdragon: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowersteel: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerflying: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\thiddenpowerrock: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t},\r\n\tcultivate: {\r\n\t\tnum: 404,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Cultivate\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Seed Flare', target);\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\tswitch (source.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tif (target.getTypes().join() === 'Water' || !target.setType('Water')) {\r\n\t\t\t\t\tthis.add('-fail', target);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', target, 'typechange', 'Water');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tthis.field.addPseudoWeather('mudsport', source);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\ttarget.addVolatile('smackdown', source, move);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tlet success = false;\r\n\t\t\t\tif (!target.volatiles['substitute'] || move.infiltrates) success = !!this.boost({evasion: -1});\r\n\t\t\t\tconst removeTarget = [\r\n\t\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tconst removeAll = [\r\n\t\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Cultivate', '[of] ' + source);\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Cultivate', '[of] ' + source);\r\n\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t\treturn success;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\t\t\t\r\n\t\tsecondary: null,\r\n\t\tshortDesc: \"Secondary effect depends on the active weather.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tcoldrush: {\r\n\t\tnum: 248,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Cold Rush\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonTry(source, target) {\r\n\t\t\tthis.add('-anim', source, 'Future Sight', target);\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'coldrush',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'coldrush',\r\n\t\t\t\t\tname: \"Cold Rush\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 80,\r\n\t\t\t\t\tcategory: \"Physical\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\t\t\t\tignoreImmunity: false,\r\n\t\t\t\t\tonAfterMoveSecondary() {\r\n\t\t\t\t\t\tthis.field.setWeather('hail');\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonPrepareHit(target, source) {\r\n\t\t\t\t\t\tthis.add('-anim', source, 'Doom Desire', target);\r\n\t\t\t\t\t},\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Ice',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Cold Rush');\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Hits after 2 turns and sets Hail.\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\txscissor: {\r\n\t\tnum: 404,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"X-Scissor\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tself: {\r\n\t\t\t\tvolatileStatus: 'focusenergy',\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"30% chance to boost crit ratio by 2 stages.\",\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tstoneaxe: {\r\n\t\tnum: 830,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Stone Axe\",\r\n\t\tcritRatio: 2,\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('stealthrock');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {}, // Sheer Force-boosted\r\n\t\ttarget: \"normal\",\r\n\t\tshortDesc: \"Sets Stealth Rock on hit. High crit ratio.\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tgravity: {\r\n\t\tnum: 356,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Gravity\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tpseudoWeather: 'gravity',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('newtonsapple')) {\r\n\t\t\t\t\t\treturn 8;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonFieldStart(target, source) {\r\n\t\t\t\tif (source?.hasAbility('persistent')) {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Gravity', '[persistent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Gravity');\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tlet applies = false;\r\n\t\t\t\t\tif (pokemon.removeVolatile('bounce') || pokemon.removeVolatile('fly')) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['skydrop']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\r\n\t\t\t\t\t\tif (pokemon.volatiles['skydrop'].source) {\r\n\t\t\t\t\t\t\tthis.add('-end', pokemon.volatiles['twoturnmove'].source, 'Sky Drop', '[interrupt]');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpokemon.removeVolatile('skydrop');\r\n\t\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['magnetrise']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tdelete pokemon.volatiles['magnetrise'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.volatiles['telekinesis']) {\r\n\t\t\t\t\t\tapplies = true;\r\n\t\t\t\t\t\tdelete pokemon.volatiles['telekinesis'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (applies) this.add('-activate', pokemon, 'move: Gravity');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyAccuracy(accuracy) {\r\n\t\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\t\treturn this.chainModify([6840, 4096]);\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['gravity']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// groundedness implemented in battle.engine.js:BattlePokemon#isGrounded\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (move.flags['gravity'] && !move.isZ) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Gravity', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (move.flags['gravity'] && !move.isZ) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Gravity', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (move.id === 'gravitonwave') {\r\n\t\t\t\t\tthis.debug('Graviton Wave boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 2,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Gravity');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Psychic\",\r\n\t\tzMove: {boost: {spa: 1}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tgravitonwave: {\r\n\t\tnum: 1005,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 80, //power coded in gravity\r\n\t\tcategory: \"Special\",\r\n\t\tshortDesc: \"Sets Gravity and pivots out. If Gravity active, boosts power instead.\",\r\n\t\tname: \"Graviton Wave\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, pulse: 1},\r\n\t\tsecondary: null,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Dark Pulse', target);\r\n\t\t\tthis.add('-anim', source, 'Psychic', target);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!this.field.pseudoWeather['gravity']) {\r\n\t\t\t\tthis.field.addPseudoWeather('gravity', pokemon);\r\n\t\t\t\tif (pokemon.switchFlag === true) return;\r\n\t\t\t\tpokemon.switchFlag = true;\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tclimatecrash: {\r\n\t\tnum: 311,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Climate Crash\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tshortDesc: \"Move is 2x stronger under weather and changes its type.\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Stomping Tantrum', target);\r\n\t\t\tthis.add('-anim', source, 'Rock Wrecker', target);\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.type = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.basePower *= 2;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t},\r\n\t\tonHit() {\r\n\t\t\tthis.field.clearWeather();\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {basePower: 160},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tlightningswing: {\r\n\t\tnum: 1005,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"User recovers 2/3 of the damage dealt.\",\r\n\t\tname: \"Lightning Swing\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, heal: 1, metronome: 1},\r\n\t\tdrain: [2, 3],\r\n\t\tsecondary: null,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Plasma Fists', target);\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tsnowscape: {\r\n\t\tnum: 883,\r\n\t\tisNonstandard: \"Unobtainable\",\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Snowscape\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tweather: 'snow',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tsyrupbomb: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\taccuracy: 100,\r\n\t\tshortDesc: \"Lowers Speed by 2 stages for 3 turns.\",\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tduration: 4,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Syrup Bomb');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 14,\r\n\t\t\tonResidual() {\r\n\t\t\t\tthis.boost({spe: -2});\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Syrup Bomb', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trushingtide: {\r\n\t\tnum: 389,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Rushing Tide\",\r\n\t\tpp: 5,\r\n\t\tpriority: 1,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tshortDesc: \"Usually moves first. Move fails if target isn't attacking.\",\r\n\t\tonTry(source, target) {\r\n\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\tconst move = action?.choice === 'move' ? action.move : null;\r\n\t\t\tif (!move || (move.category === 'Status' && move.id !== 'mefirst') || target.volatiles['mustrecharge']) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Waterfall', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tblackhole: {\r\n\t\tnum: 1003,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 250,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Black Hole\",\r\n\t\tshortDesc: \"User will KO itself upon use.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, noparentalbond: 1},\r\n\t\tselfdestruct: \"always\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Black Hole Eclipse', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdarkdevour: {\r\n\t\tnum: 1004,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dark Devour\",\r\n\t\tshortDesc: \"User heals the amount of HP the opponent lost if they fainted.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Brutal Swing', target);\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp) {\r\n\t\t\t\tthis.heal(target.hp, source)\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tdefog: {\r\n\t\tinherit: true,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, wind: 1, bypasssub: 1, metronome: 1},\r\n\t},\r\n\ttriplearrows: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tshortDesc: \"Lowers target's Defense by 1; user's crit ratio +2.\",\r\n\t\tname: \"Triple Arrows\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tcritRatio: null,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'focusenergy',\r\n\t\t},\r\n\t\tcontestType: \"Cool\", //Necessary\r\n\t\ttype: \"Fighting\",\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\tmigratingwing: {\r\n\t\tnum: 1002,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Migrating Wing\",\r\n\t\tshortDesc: \"Pivots user out. +1 priority if under 50%.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Dual Wingbeat', target);\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2) return priority + 1;\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t},\r\n\tcompost: {\r\n\t\tnum: 1001,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Compost\",\r\n\t\tshortDesc: \"1.5x power if user has no item. Recycles item.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Quiver Dance', source);\r\n\t\t},\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tconst item = source.getItem();\r\n\t\t\tif (!item) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (source.item || !source.lastItem) return false;\r\n\t\t\tconst item = source.lastItem;\r\n\t\t\tsource.lastItem = '';\r\n\t\t\tthis.add('-item', source, this.dex.items.get(item), '[from] move: Compost');\r\n\t\t\tsource.setItem(item);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\telectroball: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target) {\r\n\t\t\tlet ratio = Math.floor(pokemon.getStat('spe') / target.getStat('spe') * 10) / 10;\r\n\t\t\tif (!isFinite(ratio)) ratio = 0;\r\n\t\t\tlet bp = 40;\r\n\t\t\tif (ratio >= 1) bp = 60;\r\n\t\t\tif (ratio >= 1.5) bp = 80;\r\n\t\t\tif (ratio >= 2) bp = 100;\r\n\t\t\tif (ratio >= 3) bp = 120;\r\n\t\t\tif (ratio >= 4) bp = 150;\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t},\t\t\r\n\tshelter: {\r\n\t\tinherit: true,\r\n\t\tonHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('mistyterrain');\r\n\t\t},\r\n\t\tshortDesc: \"Raises the Defense by 2. Summons Misty Terrain.\",\r\n\t},\r\n\thaywirecudgel: {\r\n\t\tnum: 1006,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"High Critical hit ratio. Electric if Ogerpon-Costar.\",\r\n\t\tname: \"Haywire Cudgel\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tcritRatio: 2,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (move.type !== \"Normal\") {\r\n\t\t\t\tthis.attrLastMove('[anim] Thunderbolt')\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Ogerpon-Costar':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tjoyride: {\r\n\t\tnum: 1007,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Joyride\",\r\n\t\tshortDesc: \"Crits are boosted in power after use. User crashes if dodged.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: null,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Agility', source);\r\n\t\t\tthis.add('-anim', source, 'Play Rough', target);\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tsource.addVolatile('joyride');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(target, source, effect) {\r\n\t\t\t\tif (target.volatiles['dragoncheer']) return false;\r\n\t\t\t\tif (effect?.id === 'zpower') {\r\n\t\t\t\t\tthis.add('-start', target, 'move: Joyride', '[zeffect]');\r\n\t\t\t\t} else if (effect && (['costar', 'imposter', 'psychup', 'transform'].includes(effect.id))) {\r\n\t\t\t\t\tthis.add('-start', target, 'move: Joyride', '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', target, 'move: Joyride');\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-message', `${target.name} is feeling full of energy!`);\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (target.getMoveHitData(move).crit) {\r\n\t\t\t\t\tthis.debug('Joyride boost');\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonMoveFail(target, source, move) {\r\n\t\t\tthis.damage(source.baseMaxhp / 2, source, source, this.dex.conditions.get('Joyride'));\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\techoedvoice: {\r\n\t\tnum: 497,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tlet bp = move.basePower;\r\n\t\t\tif (this.field.pseudoWeather.echoedvoice) {\r\n\t\t\t\tbp = move.basePower * this.field.pseudoWeather.echoedvoice.multiplier;\r\n\t\t\t}\r\n\t\t\tthis.debug('BP: ' + move.basePower);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Echoed Voice\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1, metronome: 1},\r\n\t\tonTry() {\r\n\t\t\tthis.field.addPseudoWeather('echoedvoice');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonFieldStart() {\r\n\t\t\t\tthis.effectState.multiplier = 1;\r\n\t\t\t},\r\n\t\t\tonFieldRestart() {\r\n\t\t\t\tif (this.effectState.duration !== 3) {\r\n\t\t\t\t\tthis.effectState.duration = 3;\r\n\t\t\t\t\tif (this.effectState.multiplier < 5) {\r\n\t\t\t\t\t\tthis.effectState.multiplier++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"Power increases when used on consecutive turns. Power resets if not used for more than 1 turn.\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\taxonrush: {\r\n\t\tnum: -1004,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Raises the user's and ally's Atk, Def, Spe by 1 in Electric Terrain.\",\r\n\t\tname: \"Axon Rush\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, dance: 1},\r\n\t\tonTryHit() {\r\n\t\t\tif (!this.field.isTerrain('electricterrain')) return false;\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Acupressure\", target);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tdef: 1,\r\n\t\t\tspe: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allies\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target", "source"]
}
