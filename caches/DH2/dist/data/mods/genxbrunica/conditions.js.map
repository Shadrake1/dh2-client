{
  "version": 3,
  "sources": ["../../../../data/mods/genxbrunica/conditions.ts"],
  "sourcesContent": ["export const Conditions: import('../../../sim/dex-conditions').ModdedConditionDataTable = {\r\n\tpar: {\r\n\t\tinherit: true,\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (!sourceEffect) {\r\n\t\t\t\tthis.add('-status', target, 'par');\r\n\t\t\t} else if (sourceEffect.id === 'thunderorb') {\r\n\t\t\t\t//TODO: Make the anim and message play concurrently?\r\n\t\t\t\tthis.add('-status', target, 'par', '[from] item: Thunder Orb', '[silent]');\r\n\t\t\t\tthis.add('-message', `${target.name} was paralyzed by the Thunder Orb!`);\r\n\t\t\t} else if (sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-status', target, 'par', '[from] ability: ' + sourceEffect.name, '[of] ' + source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'par');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 1,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (this.randomChance(1, 4) && !(pokemon.hasAbility('quickfeet') && pokemon.hasItem('thunderorb'))) {\r\n\t\t\t\tthis.add('cant', pokemon, 'par');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\r\n\ttwoturnmove: {\r\n\t\t// Cloning Genes\r\n\t\tinherit: true,\r\n\t\tonStart(attacker, defender, effect) {\r\n\t\t\t// (\"attacker\" is the Pokemon using the two turn move and the Pokemon this condition is being applied to)\r\n\t\t\tthis.effectState.move = effect.id;\r\n\t\t\tattacker.addVolatile(effect.id);\r\n\t\t\t// lastMoveTargetLoc is the location of the originally targeted slot before any redirection\r\n\t\t\t// note that this is not updated for moves called by other moves\r\n\t\t\t// i.e. if Dig is called by Metronome, lastMoveTargetLoc will still be the user's location\r\n\t\t\tlet moveTargetLoc: number = attacker.lastMoveTargetLoc!;\r\n\t\t\tif (effect.sourceEffect && this.dex.moves.get(effect.id).target !== 'self') {\r\n\t\t\t\t// this move was called by another move such as Metronome\r\n\t\t\t\t// and needs a random target to be determined this turn\r\n\t\t\t\t// it will already have one by now if there is any valid target\r\n\t\t\t\t// but if there isn't one we need to choose a random slot now\r\n\t\t\t\tif (defender.fainted) {\r\n\t\t\t\t\tdefender = this.sample(attacker.foes(true));\r\n\t\t\t\t}\r\n\t\t\t\tmoveTargetLoc = attacker.getLocOf(defender);\r\n\t\t\t}\r\n\t\t\tattacker.volatiles[effect.id].targetLoc = moveTargetLoc;\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tif (defender.hasAbility('cloninggenes')) {\r\n\t\t\t\tdefender.addVolatile('cloninggenes', defender);\r\n\t\t\t}\r\n\t\t\t// Run side-effects normally associated with hitting (e.g., Protean, Libero)\r\n\t\t\tthis.runEvent('PrepareHit', attacker, defender, effect);\r\n\t\t},\r\n\t},\r\n\ttypebalm: {\r\n\t\t//This is here to track whether a mon has used a Type Balm this switch-in\r\n\t\tduration: 0,\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tthis.add('-start', target, 'typechange', target.getTypes(false, true).join('/'), '[silent]');\r\n\t\t\tthis.add('-message', `${target.name} gained the ${target.addedType} type from the Type Balm!`);\r\n\t\t\tconst balmMoveList = {\r\n\t\t\t\tphotalohm: 'Magnetic Updraft',\r\n\t\t\t\tsmeltusk: 'Leaping Onrush',\r\n\t\t\t\tpanthoard: 'Cupric Deluge',\r\n\t\t\t\tmustelone: 'Clone Express',\r\n\t\t\t\tfroskua: 'Dive Bomb',\r\n\t\t\t\tmuk: 'Mud Devourment',\r\n\t\t\t\tmukalola: 'Mud Devourment',\r\n\t\t\t\tsyruptitious: 'Adulteration',\r\n\t\t\t\tsteelix: 'Olive Rampage',\r\n\t\t\t\tcrobat: 'Venomous Fang',\r\n\t\t\t\tsaunusca: 'Tectonic Shift',\r\n\t\t\t\traatilus: 'Ammolite Vortex',\r\n\t\t\t\tblootilus: 'Ammolite Vortex',\r\n\t\t\t\tyleltilus: 'Ammolite Vortex',\r\n\t\t\t\tacktilus: 'Ammolite Vortex',\r\n\t\t\t\twhitilus: 'Ammolite Vortex',\r\n\t\t\t\tdodrio: 'Asura Barrage',\r\n\t\t\t\troserade: 'Vive Le\\u0301 Rose',\r\n\t\t\t\tbouffalant: 'Dread Stampede',\r\n\t\t\t\tpichat: 'Thunder Armor',\r\n\t\t\t\tpikachat: 'Thunder Armor',\r\n\t\t\t\traichat: 'Thunder Armor',\r\n\t\t\t\ttrippletop: 'Mystic Burst',\r\n\t\t\t\tviolagarie: 'Violet Seed',\r\n\t\t\t\tyiseng: 'Mental Extract',\r\n\t\t\t\tgaroupe: 'Discovery',\r\n\t\t\t\tfrostabone: 'Shaking Tundra',\r\n\t\t\t\tmoskitoski: 'Venom Drain',\r\n\t\t\t\tmoskitoskiswarm: 'Venom Drain',\r\n\t\t\t\tgastly: 'Maiden\\'s Peak',\r\n\t\t\t\thaunter: 'Maiden\\'s Peak',\r\n\t\t\t\tgengar: 'Maiden\\'s Peak',\r\n\t\t\t\tcryophtore: 'Neural Network',\r\n\t\t\t\tpantaray: 'Electrified Jet',\r\n\t\t\t\twreckitanic: 'Iceberg Crash',\r\n\t\t\t\twailord: 'Northern Collapse',\r\n\t\t\t\ttalonflame: 'Bright Wing',\r\n\t\t\t\tmilotic: 'Sea Monster',\r\n\t\t\t\tkelpurion: 'Sunblast',\r\n\t\t\t\tkirlia: 'Spiritual Embrace',\r\n\t\t\t\tgardevoir: 'Spiritual Embrace',\r\n\t\t\t\tgallade: 'Spiritual Embrace',\r\n\t\t\t\tmeowth: 'Go West, Young Feline',\r\n\t\t\t\tpersian: 'Go West, Young Feline',\r\n\t\t\t\tpikachu: '100,000 Volt Kahuna Wave',\r\n\t\t\t\traichu: '100,000 Volt Kahuna Wave',\r\n\t\t\t\traichualola: '100,000 Volt Kahuna Wave',\r\n\t\t\t\tazdharsha: 'Furious Flare',\r\n\t\t\t\ticypenser: 'Cryptic Chill',\r\n\t\t\t\tadoraboa: 'Sneaky Squeeze',\r\n\t\t\t\tsagachelys: 'Pearl of Wisdom',\r\n\t\t\t\tlakegishi: 'Luscious Lake',\r\n\t\t\t\tplowudji: 'Prolific Plow',\r\n\t\t\t};\r\n\t\t\tconst species = target.species.id;\r\n\t\t\t//...All this to adjust the PP. \r\n\t\t\tif (balmMoveList[species]) {\r\n\t\t\t\tconst balmMove = this.dex.moves.get(balmMoveList[species]);\r\n\t\t\t\tif (balmMove.type === target.addedType) {\r\n\t\t\t\t\tthis.effectState.balmMove = balmMoveList[species];\r\n\t\t\t\t\tthis.effectState.balmType = target.addedType;\r\n\t\t\t\t\tthis.effectState.balmPriority = balmMove.priority;\r\n\t\t\t\t\tconst balmCategory = balmMove.category;\r\n\t\t\t\t\tthis.effectState.isBalmStatus = (balmCategory === 'Status');\r\n\t\t\t\t\tconst newMoveSlots = [];\r\n\t\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\t\tlet move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\t\tlet type = move.type;\r\n\t\t\t\t\t\tif (moveSlot.id === 'hiddenpower') {\r\n\t\t\t\t\t\t\ttype = target.hpType;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (type !== balmMove.type || \r\n\t\t\t\t\t\t\t(move.category !== balmCategory && [move.category,balmCategory].includes('Status'))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tnewMoveSlots.push(moveSlot);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst movepp = balmCategory === 'Status' ? 16 : 8;\r\n\t\t\t\t\t\t\t//I can't specify BP in these new moveslots D:\r\n\t\t\t\t\t\t\tnewMoveSlots.push({\r\n\t\t\t\t\t\t\t\tmove: moveSlot.move,\r\n\t\t\t\t\t\t\t\tid: moveSlot.id,\r\n\t\t\t\t\t\t\t\tpp: movepp,\r\n\t\t\t\t\t\t\t\tmaxpp: movepp,\r\n\t\t\t\t\t\t\t\ttarget: moveSlot.target,\r\n\t\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\t\t\tvirtual: true,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttarget.moveSlots = newMoveSlots;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t//Priority's kinda janky so this should iron it out\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (!this.effectState.balmMove) return;\r\n\t\t\tconst isStatus = this.effectState.isBalmStatus;\r\n\t\t\tif (move.type === this.effectState.balmType && (move.category === 'Status' ? isStatus : !isStatus)) {\r\n\t\t\t\tlet bPriority = this.effectState.balmPriority;\r\n\t\t\t\t//Sunlight priority hack for Bright Wing\r\n\t\t\t\tif (pokemon.species.id === 'talonflame' && \r\n\t\t\t\t\t['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) bPriority++;\r\n\t\t\t\treturn bPriority;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tthunderarmorboost: {\r\n\t\tduration: 2,\r\n\t\tonBasePowerPriority: 6,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\treturn this.chainModify(2);\r\n\t\t},\r\n\t\tonDisableMove(pokemon) {\r\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\tif (move.type === 'Electric' && move.category === 'Status') {\r\n\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsunnyday: {\r\n\t\tinherit: true,\r\n\t\tonWeatherModifyDamage(damage, attacker, defender, move) {\r\n\t\t\tif (move.id === 'hydrosteam' && !attacker.hasItem('utilityumbrella')) {\r\n\t\t\t\tthis.debug('Sunny Day Hydro Steam boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (defender.hasItem('utilityumbrella')) return;\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Sunny Day fire boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t\tif (move.type === 'Water' && (!attacker.hasAbility('hydrosynthesis') || attacker.hasItem('utilityumbrella'))) {\r\n\t\t\t\tthis.debug('Sunny Day water suppress');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
