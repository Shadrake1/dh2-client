{
  "version": 3,
  "sources": ["../../../../data/mods/genxbrunica/moves.ts"],
  "sourcesContent": ["export const Moves: import('../../../sim/dex-moves').ModdedMoveDataTable = {\r\n\t//New Brunician moves\r\n\tcruelstrike: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Cruel Strike\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Defense by 1 stage. Fails unless it is the user's first turn on the field.\",\r\n\t\tshortDesc: \"100% lower target's Defense by 1. First turn out only.\",\r\n\t\tpp: 5,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Darkest Lariat');\r\n\t\t},\r\n\t\tonTry(source) {\r\n\t\t\tif (source.activeMoveActions > 1) {\r\n\t\t\t\tthis.hint(\"Cruel Strike only works on your first turn out.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\ticyend: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Icy End\",\r\n\t\tdesc: \"Power triples if the target has less than or equal to half of its maximum HP remaining.\",\r\n\t\tshortDesc: \"Usually goes first. x3 power if target's HP 50% or less.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (target.hp * 2 <= target.maxhp) {\r\n\t\t\t\treturn this.chainModify(3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Sheer Cold');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tgaiarecovery: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Gaia Recovery\",\r\n\t\tdesc: \"Raises the user's Attack and Special Attack by 1 stage. The user restores 1/2 of its maximum HP, rounded half up.\",\r\n\t\tshortDesc: \"Heals user by 50%. Raises its Atk and Sp. Atk by 1.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Synthesis');\r\n\t\t},\r\n\t\theal: [1, 2],\r\n\t\tboosts: {\r\n\t\t\tatk: 1,\r\n\t\t\tspa: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tgemdevour: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Gem Devour\",\r\n\t\tdesc: \"This move's type effectiveness against Rock is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"Super effective on Rock.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, bite: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bug Bite');\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Rock') return 1;\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tovercharge: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Overcharge\",\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second. If the user is hit by a damaging move while charging, the attacker is paralyzed.\",\r\n\t\tshortDesc: \"Charges turn 1. Hits turn 2. Paralyzes attackers while charging.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, charge: 1, protect: 1, mirror: 1, metronome: 1, nosleeptalk: 1, failinstruct: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Wild Charge');\r\n\t\t},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\t\r\n\t\t\tthis.add('-anim', attacker, \"Charge\", attacker);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.volatiles['twoturnmove']) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.removeVolatile('overcharge');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t},\r\n\tbladerunner: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Blade Runner\",\r\n\t\tdesc: \"Has a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"High critical hit ratio.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Smart Strike');\r\n\t\t},\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tbullybash: {\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bully Bash\",\r\n\t\tdesc: \"Has a 20% chance to make the target flinch.\",\r\n\t\tshortDesc: \"20% chance to make the target flinch.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dragon Rush');\r\n\t\t},\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\toutcry: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Outcry\",\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"No additional effect. Hits foe(s).\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Snarl');\r\n\t\t},\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, sound: 1, bypasssub: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tpsybolt: {\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Psy Bolt\",\r\n\t\tdesc: \"Has a 30% chance to confuse the target. If the terrain is Psychic Terrain, this move does not check accuracy.\",\r\n\t\tshortDesc: \"30% chance to confuse target. Can't miss in Psychic Terrain.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Psycho Boost');\r\n\t\t},\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, distance: 1, metronome: 1},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tvolatileStatus: 'confusion',\r\n\t\t},\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tsnowbank: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tname: \"Snowbank\",\r\n\t\tdesc: \"If this move is successful, the target experiences the effects of all entry hazards on its side of the field, unless its held item is Heavy-Duty Boots or its ability is Keen Eye.\",\r\n\t\tshortDesc: \"Target takes hazard damage after being hit by this move.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Ice Spinner');\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tthis.runEvent('EntryHazard',target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tsmokebomb: {\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Smoke Bomb\",\r\n\t\tdesc: \"Has a 10% chance to burn the target and a 20% chance to lower its accuracy by 1 stage.\",\r\n\t\tshortDesc: \"10% to burn. 20% to lower target's acc. by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, bullet: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Smoke Screen');\r\n\t\t},\r\n\t\tsecondaries: [\r\n\t\t\t{\r\n\t\t\t\tchance: 10,\r\n\t\t\t\tstatus: 'brn',\r\n\t\t\t}, {\r\n\t\t\t\tchance: 20,\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\taccuracy: -1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tjoustinglance: {\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 150,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Jousting Lance\",\r\n\t\tdesc: \"If the target lost HP, the user takes recoil damage equal to 1/2 the HP lost by the target, rounded half up, but not less than 1 HP.\",\r\n\t\tshortDesc: \"Has 1/2 recoil.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Head Smash');\r\n\t\t},\r\n\t\trecoil: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\ttorchtail: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Torch Tail\",\r\n\t\tdesc: \"Has a 10% chance to burn the target and a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"High critical hit ratio. 10% chance to burn.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Fire Lash');\r\n\t\t},\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tclarentcleave: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Clarent Cleave\",\r\n\t\tdesc: \"This move ignores the Fairy type's immunity to Dragon. Its type effectiveness against Fairy is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"Hits and is super effective on Fairy.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, slicing: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Ceaseless Edge');\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Fairy') return 1;\r\n\t\t},\r\n\t\tignoreImmunity: {'Dragon': true},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tzMove: {basePower: 180},\r\n\t},\r\n\tdisconnect: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Disconnect\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Defense by 1 stage. Cannot be selected the turn after it's used.\",\r\n\t\tshortDesc: \"100% lower target's Def 1. Can't be used consecutively.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1, cantusetwice: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Wild Charge');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t},\r\n\tsleepdrain: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 75,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sleep Drain\",\r\n\t\tdesc: \"The user recovers 1/2 the HP lost by the target, rounded half up. If the target is sleeping, it instead recovers 3/4 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.\",\r\n\t\tshortDesc: \"User heals 50% damage dealt, 75% instead if target asleep.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, heal: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dream Eater');\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && target.status === 'slp') {\r\n\t\t\t\tmove.drain = [3,4];\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\thealingnature: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Healing Nature\",\r\n\t\tdesc: \"The user recovers 1/2 the HP lost by the target, rounded half up. This move's type effectiveness against Poison is changed to be super effective no matter what this move's type is. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.\",\r\n\t\tshortDesc: \"Super effective on Poison. User heals 50% of damage dealt.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, heal: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Seed Flare');\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Poison') return 1;\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tspectralbeam: {\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Spectral Beam\",\r\n\t\tdesc: \"Has a 10% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"10% chance to lower the target's Sp. Def by 1.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dragon Fang');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\tmalevolentmaul: {\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Malevolent Maul\",\r\n\t\tdesc: \"Has a 30% chance to inflict a Curse that damages the target for 25% of its maximum HP, rounded down, at the end of each turn while the target remains active. If the target uses Baton Pass, the replacement will continue to be affected. Inflicting the curse does not consume the user's HP.\",\r\n\t\tshortDesc: \"30% chance to Curse the target.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1, contact: 1, bite: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Jaw Lock');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tvolatileStatus: 'curse',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tfilletaway: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Raises the user's Attack, Special Attack, and Speed by 3 stages in exchange for the user losing 1/3 of its maximum HP, rounded down. Fails if the user would faint or if its Attack, Special Attack, and Speed stat stages would not change.\",\r\n\t\tshortDesc: \"+3 Attack, Sp. Atk, Speed for 1/3 user's max HP.\",\r\n\t\tonTry(source) {\r\n\t\t\tif (source.hp <= source.maxhp / 3 || source.maxhp === 1) return false;\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tthis.directDamage(pokemon.maxhp / 3);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 3,\r\n\t\t\tspa: 3,\r\n\t\t\tspe: 3,\r\n\t\t},\r\n\t},\r\n\trefracture: {\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 85,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (pokemon.volatiles['rockpolish']) {\r\n\t\t\t\tthis.debug('Rock Polish into Refracture damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tdesc: \"Has a 40% chance to lower the target's accuracy by 1 stage. If the user had used Rock Polish previously, then this move doubles in power.\",\r\n\t\tshortDesc: \"40% to lower target's accuracy by 1.\",\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Refracture\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Luster Purge');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 40,\r\n\t\t\tboosts: {\r\n\t\t\t\taccuracy: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\treefraze: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 65,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Reef Raze\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tdesc: \"If this move is successful, it sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate or Keen Eye Abilities. A maximum of three layers may be set, and opponents lose 1/8 of their maximum HP with one layer, 1/6 of their maximum HP with two layers, and 1/4 of their maximum HP with three layers, all rounded down. Can be removed from the opposing side if any opposing Pokemon uses Mortal Spin, Rapid Spin, Defog, or Tectonic Shift successfully, is hit by Defog, or has the ability Traveler and switches in.\",\r\n\t\tshortDesc: \"Sets a layer of Spikes on the opposing side.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Aqua Cutter');\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('spikes');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('spikes');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {}, // Sheer Force-boosted\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tthorntail: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Thorn Tail\",\r\n\t\tdesc: \"Has a 10% chance to inflict Leech Seed on the target and a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"High critical hit ratio. 10% chance to inflict Leech Seed.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Ivy Cudgel');\r\n\t\t},\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tcritRatio: 2,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (!target.hasType('Grass')) {\r\n\t\t\t\t(move.secondaries ||= []).push({chance: 10, volatileStatus: 'leechseed'});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\ttailsmash: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to lower the target's Defense by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Tail Smash\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Ivy Cudgel Rock');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\tdragonsdrone: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Has a 20% chance to confuse the target.\",\r\n\t\tshortDesc: \"20% chance to confuse the foe(s).\",\r\n\t\tname: \"Dragon's Drone\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {sound: 1, protect: 1, mirror: 1, bypasssub: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Clanging Scales');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tvolatileStatus: 'confusion',\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Dragon\",\r\n\t},\r\n\tmindlance: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"After using this move, for 3 turns, the user cannot avoid any attacks made against it, other than OHKO moves, as long as it remains active. During the effect, the user is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as it remains active. If the user uses Baton Pass while under this effect, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball negate this effect. The user will not gain this effect if its species is Diglett, Dugtrio, Alolan Diglett, Alolan Dugtrio, Sandygast, Palossand, or Gengar while Mega-Evolved. Mega Gengar cannot be under this effect by any means.\",\r\n\t\tshortDesc: \"Applies Telekinesis to the user if successful.\",\r\n\t\tname: \"Mind Lance\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Psycho Boost');\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'telekinesis',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tlratio: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"This move does not check accuracy. Has a 20% chance to lower the target's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage. This move becomes a physical attack that makes contact if the value of ((((2 * the user's level / 5 + 2) * 90 * X) / Y) / 50), where X is the user's Attack stat and Y is the target's Defense stat, is greater than the same value where X is the user's Special Attack stat and Y is the target's Special Defense stat. Otherwise, it becomes a Wind attack. No stat modifiers other than stat stage changes are considered for this purpose. If the two values are equal, this move chooses a damage category at random.\",\r\n\t\tshortDesc: \"Can't miss. 20% -1 all foe(s) stats. Physical+Contact if stronger, else Wind.\",\r\n\t\tname: \"L+Ratio\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, defrost: 1},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tif (!source.isAlly(target)) {\r\n\t\t\t\tthis.attrLastMove('[anim] ' + (move.category === 'Physical' ? 'Zen Headbutt' : 'Hurricane'));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (!target) return;\r\n\t\t\tconst atk = pokemon.getStat('atk', false, true);\r\n\t\t\tconst spa = pokemon.getStat('spa', false, true);\r\n\t\t\tconst def = target.getStat('def', false, true);\r\n\t\t\tconst spd = target.getStat('spd', false, true);\r\n\t\t\tconst physical = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * atk) / def) / 50);\r\n\t\t\tconst special = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * spa) / spd) / 50);\r\n\t\t\tif (physical > special || (physical === special && this.random(2) === 0)) {\r\n\t\t\t\tmove.category = 'Physical';\r\n\t\t\t\tmove.flags.contact = 1;\r\n\t\t\t} else {\r\n\t\t\t\tmove.flags.wind = 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\t// Shell Side Arm normally reveals its category via animation on cart, but doesn't play either custom animation against allies\r\n\t\t\tif (!source.isAlly(target)) this.hint(move.category + \" L+Ratio\");\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!source.isAlly(target)) this.hint(move.category + \" L+Ratio\");\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t\tdef: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tgoldenrush: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Golden Rush\",\r\n\t\tdesc: \"Raises the Attack, Defense, Special Attack, and Special Defense of the Pokemon in the target's position by two stages two turns after this move is used. Fails if this move, Future Sight, Doom Desire, or Idle Thunder is already in effect for the target's position.\",\r\n\t\tshortDesc: \"+2 Atk/Def/SpA/SpD to allied position two turns after being used.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\tignoreImmunity: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tmove: 'goldenrush',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'goldenrush',\r\n\t\t\t\t\tname: \"Golden Rush\",\r\n\t\t\t\t\taccuracy: true,\r\n\t\t\t\t\tbasePower: 0,\r\n\t\t\t\t\tcategory: \"Status\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {allyanim: 1, metronome: 1, futuremove: 1},\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\ttype: 'Ground',\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tatk: 2,\r\n\t\t\t\t\t\tdef: 2,\r\n\t\t\t\t\t\tspa: 2,\r\n\t\t\t\t\t\tspd: 2,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'move: Golden Rush');\r\n\t\t\tthis.add('-message', `${source.name} has started a Gold Rush!`);\r\n\t\t\treturn this.NOT_FAIL;\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: 2,\r\n\t\t\tdef: 2,\r\n\t\t\tspa: 2,\r\n\t\t\tspd: 2,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"adjacentAllyOrSelf\",\r\n\t\ttype: \"Ground\",\r\n\t},\r\n\t\r\n\t//Balm Moves\r\n\tmagneticupdraft: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Magnetic Updraft\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, wind: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. For 3 turns, the target cannot avoid any attacks made against it, other than OHKO moves, as long as it remains active. During the effect, the target is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as it remains active. If the target uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball override this move if the target is under any of their effects. Fails if the target is already under this effect or the effects of Ingrain, Smack Down, Thousand Arrows, or Leaping Onrush. The target is immune to this added effect if its species is Diglett, Dugtrio, Alolan Diglett, Alolan Dugtrio, Sandygast, Palossand, or Gengar while Mega-Evolved. Mega Gengar cannot be under this effect by any means.\",\r\n\t\tshortDesc: \"x1.5 base move power. 3 turns: Target floats but moves can't miss it.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Wildbolt Storm');\r\n\t\t},\r\n\t\tvolatileStatus: 'telekinesis',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t},\r\n\tleapingonrush: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Leaping Onrush\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, contact: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying type that has not used Roost this turn or a Pokemon with the Levitate Ability, it loses its immunity to Ground-type attacks and the Arena Trap Ability as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.\",\r\n\t\tshortDesc: \"x1.5 base move power. Removes target's Ground immunity.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Headlong Rush');\r\n\t\t},\r\n\t\tvolatileStatus: 'smackdown',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tcupricdeluge: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Cupric Deluge\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If this move is successful, it sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in. Foes lose 1/32, 1/16, 1/8, 1/4, or 1/2 of their maximum HP, rounded down, based on their weakness to the Steel type; 0.25x, 0.5x, neutral, 2x, or 4x, respectively. Can be removed from the opposing side if any opposing Pokemon uses Mortal Spin, Rapid Spin, or Defog successfully, or is hit by Defog.\",\r\n\t\tshortDesc: \"x1.5 base move power. Foes: Steel hazard.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Thousand Waves');\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('gmaxsteelsurge');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!move.hasSheerForce && source.hp) {\r\n\t\t\t\tfor (const side of source.side.foeSidesWithConditions()) {\r\n\t\t\t\t\tside.addSideCondition('gmaxsteelsurge');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tdivebomb: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dive Bomb\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. After the move lands, it the target to become a Water type unless the target is an Arceus or a Silvally, the target is already purely Water type, the target is Terastallized, or the target is using a Type Balm.\",\r\n\t\tshortDesc: \"x1.5 base move power. Target's type becomes Water.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Wave Crash');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target) {\r\n\t\t\t\tif (target.getTypes().join() !== 'Water' && target.setType('Water')) {\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', 'Water');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tmuddevourment: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mud Devourment\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Ends the effects of Electric Terrain, Grassy Terrain, Misty Terrain, and Psychic Terrain. Does not end the effects of Nature Field\",\r\n\t\tshortDesc: \"x1.5 base move power. Ends terrain unless Poison Terrain or Nature Field.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Earth Power');\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (source.hp && !this.field.isTerrain(['poisonterrain', 'guardianofnature'])) {\r\n\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source) {\r\n\t\t\tif (source.hp && !this.field.isTerrain(['poisonterrain', 'guardianofnature'])) {\r\n\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t},\r\n\tcloneexpress: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Clone Express\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 100% chance to confuse the target if it has a non-volatile status condition.\",\r\n\t\tshortDesc: \"x1.5 base move power. 100% confuse statused target.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Spectral Thief');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.status) {\r\n\t\t\t\t\ttarget.addVolatile('confusion', source, move);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\tadulteration: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Adulteration\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Causes the target's Ability to be rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. If the target's Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Tera Shift, Zen Mode, Zero to Hero, or Surf's Up, this move fails, and receiving the effect through Baton Pass ends the effect immediately.\",\r\n\t\tshortDesc: \"x1.5 base move power. Nullifies target's Ability.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Sludge Wave');\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\tif (!target.getAbility().flags['cantsuppress']) target.addVolatile('gastroacid');\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target) {\r\n\t\t\tif (!target.getAbility().flags['cantsuppress']) target.addVolatile('gastroacid');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\toliverampage: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Olive Rampage\",\r\n\t\tpp: 5,\r\n\t\tpriority: 1,\r\n\t\tflags: {nosketch: 1, protect: 1, contact: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power.\",\r\n\t\tshortDesc: \"x1.5 base move power. Usually goes first.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Outrage');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t},\r\n\ttectonicshift: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Tectonic Shift\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, contact: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If this move is successful and the user has not fainted, all hazards are removed from the user's side of the field.\",\r\n\t\tshortDesc: \"x1.5 base move power. Clears hazards on user's side.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Precipice Blades');\r\n\t\t},\r\n\t\tonAfterHit(target, pokemon, move) {\r\n\t\t\tif (pokemon.hp) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Tectonic Shift', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, pokemon, move) {\r\n\t\t\tif (pokemon.hp) {\r\n\t\t\t\tconst sideConditions = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\t\tfor (const condition of sideConditions) {\r\n\t\t\t\t\tif (pokemon.side.removeSideCondition(condition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(condition).name, '[from] move: Tectonic Shift', '[of] ' + pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t},\r\n\tvenomousfang: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Venomous Fang\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, contact: 1, bite: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If this move is successful, the target loses all of its type-based immunities and any moves that the target was formerly immune to are super effective against the respective type instead.\",\r\n\t\tshortDesc: \"x1.5 base move power. Target's immunities become weaknesses.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Poison Fang');\r\n\t\t},\r\n\t\tvolatileStatus: 'venomousfang',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.terastallized) return false;\r\n\t\t\t\tthis.add('-start', pokemon, 'Venom Aspect');\r\n\t\t\t},\r\n\t\t\tonNegateImmunity: false,\r\n\t\t\tonEffectivenessPriority: -2,\r\n\t\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\t\t//If the type would be immune to the move in a vacuum then it turns super effective\r\n\t\t\t\t//(We can't check immunity for the mon itself as it is considered to completely lack immunities)\r\n\t\t\t\tif (!this.dex.getImmunity(move.type,type)) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tammolitevortex: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Ammolite Vortex\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. This move ignores effectiveness against types that would otherwise resist it. The target is immune if it does not share a type with the user or if it was immune to the move's type to begin with.\",\r\n\t\tshortDesc: \"x1.5 base move power. Hits targets sharing user's type. Ignores resistances.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Luster Purge');\r\n\t\t},\r\n\t\tonTryImmunity(target, source) {\r\n\t\t\treturn target.hasType(source.getTypes());\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (typeMod < 0) return 0;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tasurabarrage: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Asura Barrage\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, recharge: 1, contact: 1, failcopycat: 1},\r\n\t\tmultihit: 3,\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Hits three times. If this move is successful, the user must recharge on the following turn and cannot select a move.\",\r\n\t\tshortDesc: \"x1.5 base move power. Hits three times. User cannot move next turn.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Hyper Drill');\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tvolatileStatus: 'mustrecharge',\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t},\r\n\tdreadstampede: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Dread Stampede\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, contact: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Ignores the target's stat stage changes, including evasiveness.\",\r\n\t\tshortDesc: \"x1.5 base move power. Ignores target's stat changes.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Close Combat');\r\n\t\t},\r\n\t\tignoreEvasion: true,\r\n\t\tignoreDefensive: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tvivelerose: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Vive Le\\u0301 Rose\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, contact: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 50% chance to raise the user's Attack and Special Attack by 1 stage each.\",\r\n\t\tshortDesc: \"x1.5 base move power. 50% raise user's Atk/Sp. Atk by 1.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Petal Dance');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tatk: 1,\r\n\t\t\t\t\tspa: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tthunderarmor: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Thunder Armor\",\r\n\t\tpp: 5,\r\n\t\tpriority: 4,\r\n\t\tflags: {nosketch: 1, cantusetwice: 1, failcopycat: 1},\r\n\t\tdesc: \"Cannot be selected the turn after it's used. The user and its party members are protected from damaging attacks made by other Pokemon, including allies, during this turn. The next damaging move used by the user will have doubled power. When a contact move is blocked, the attacker is paralyzed. Fails if this move is already in effect for the user's side.\",\r\n\t\tshortDesc: \"Protects allies from damaging attacks. Contact: paralysis. User's next attack has x2 BP. Cannot be selected the turn after it's used.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Protect');\r\n\t\t},\r\n\t\tsideCondition: 'thunderarmor',\r\n\t\tonTry() {\r\n\t\t\treturn !!this.queue.willAct();\r\n\t\t},\r\n\t\tonHitSide(side, source) {\r\n\t\t\tsource.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonSideStart(target, source) {\r\n\t\t\t\tthis.add('-singleturn', source, 'Thunder Armor');\r\n\t\t\t\tsource.addVolatile('thunderarmorboost');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 4,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (move.category === 'Status') return;\r\n\t\t\t\tthis.add('-activate', target, 'move: Thunder Armor');\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove/*) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (*/&& source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Electric\",\r\n\t},\r\n\tmysticburst: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mystic Burst\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If Trick Room is not already active when this move is used, it sets up Trick Room.\",\r\n\t\tshortDesc: \"x1.5 base move power. Sets up Trick Room unless already present.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Psywave');\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tif (!this.field.pseudoWeather.trickroom && !move.hasSheerForce && source.hp) {\r\n\t\t\t\tthis.field.addPseudoWeather('trickroom');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!this.field.pseudoWeather.trickroom && !move.hasSheerForce && source.hp) {\r\n\t\t\t\tthis.field.addPseudoWeather('trickroom');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {}, // Sheer Force-boosted\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tvioletseed: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Violet Seed\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1, bullet: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. This move becomes a critical hit if the target is under the effects of Leech Seed.\",\r\n\t\tshortDesc: \"x1.5 base move power. Crits seeded targets.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Aura Sphere');\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (target.volatiles['leechseed']) {\r\n\t\t\t\tmove.critRatio = 5;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"adjacentFoe\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tmentalextract: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mental Extract\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. After using this move, the user prevents all opposing Pokemon from using any moves that the user also knows as long as the user remains active.\",\r\n\t\tshortDesc: \"x1.5 base move power. Foes can't use user's moves.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Psystrike');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tvolatileStatus: 'imprison',\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"adjacentFoe\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tdiscovery: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Discovery\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 100% chance to raise the user's Special Defense and Speed by 1 stage each.\",\r\n\t\tshortDesc: \"x1.5 base move power. 100% raise user's SpDef/Speed by 1.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Grassy Glide');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspd: 1,\r\n\t\t\t\t\tspe: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"adjacentFoe\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tshakingtundra: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Shaking Tundra\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 100% chance to lower the target's Speed by 1 stage.\",\r\n\t\tshortDesc: \"x1.5 base move power. 100% lower adjacent Pkmn Speed by 1.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\t\tthis.attrLastMove('[anim] Earthquake');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Ground\",\r\n\t},\r\n\tvenomdrain: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Venom Drain\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.\",\r\n\t\tshortDesc: \"x1.5 base move power. User heals 50% of damage dealt.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\t\r\n\t\t\t\tthis.attrLastMove('[anim] Giga Drain');\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\tmaidenspeak: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Maiden's Peak\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, failcopycat: 1},\r\n\t\tdesc: \"The first use of this move will boost the user's Special Attack, change its typing to Grass/Water, and replace its ability with Unnerve. Later uses call Hydro Pump.\",\r\n\t\tshortDesc: \"First use: +1 SpA; become Grass/Water; gain Unnerve. Future calls become Hydro Pump.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tif (!source.volatiles['maidenspeak']) {\r\n\t\t\t\tthis.attrLastMove('[anim] Haze');\r\n\t\t\t} else {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tif (pokemon.volatiles['maidenspeak']) {\r\n\t\t\t\tthis.actions.useMove('hydropump',pokemon,target);\r\n\t\t\t} else {\r\n\t\t\t\tpokemon.addVolatile('maidenspeak');\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonHitSide(side, source) {\r\n\t\t\tsource.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Maiden\\'s Peak', '[silent]');\r\n\t\t\t\tthis.add('-message', `${pokemon.name} took the form of Venustoise!`);\r\n\t\t\t\tpokemon.setType(['Grass','Water']);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', 'Grass/Water', '[silent]');\r\n\t\t\t\tthis.boost({spa: 1}, pokemon, pokemon);\r\n\t\t\t\tthis.add('-ability', pokemon, pokemon.getAbility().name);\r\n\t\t\t\tthis.add('-ability', pokemon, 'Unnerve', '[from] move: Maiden\\'s Peak', '[of] ' + pokemon);\r\n\t\t\t\tpokemon.setAbility('unnerve');\r\n\t\t\t\tconst newMoveSlots = [];\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tlet move = this.dex.moves.get(moveSlot.id);\r\n\t\t\t\t\tif (move.type !== 'Dark' || move.category !== 'Status') {\r\n\t\t\t\t\t\tnewMoveSlots.push(moveSlot);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewMoveSlots.push({\r\n\t\t\t\t\t\tmove: 'Hydro Pump',\r\n\t\t\t\t\t\tid: 'hydropump',\r\n\t\t\t\t\t\tpp: 8,\r\n\t\t\t\t\t\tmaxpp: 8,\r\n\t\t\t\t\t\ttarget: 'normal',\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\tvirtual: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.moveSlots = newMoveSlots;\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tneuralnetwork: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Neural Network\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.\",\r\n\t\tshortDesc: \"x1.5 base move power. 30% paralyze foe(s). Allies: x2 SpA/SpD until next turn ends.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Discharge');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tfor (const pokemon of source.alliesAndSelf()) {\r\n\t\t\t\t\tpokemon.addVolatile('neuralnetwork');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Neural Network', '[silent]');\r\n\t\t\t\tthis.add('-message', `The Balm move supercharged ${pokemon.name}'s Special Attack and Special Defense!`);\r\n\t\t\t},\r\n\t\t\tonRestart(pokemon) {\r\n\t\t\t\tpokemon.volatiles['neuralnetwork'].duration = 2;\r\n\t\t\t\tthis.add('-message', `The Balm move supercharged ${pokemon.name}'s Special Attack and Special Defense!`);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Neural Network', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Electric\",\r\n\t},\r\n\telectrifiedjet: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Electrified Jet\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 30% chance to paralyze the target.\",\r\n\t\tshortDesc: \"x1.5 base move power. 30% to paralyze the target.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Fusion Bolt');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\ticebergcrash: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Iceberg Crash\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 10% chance to freeze the target. This move's type effectiveness against Steel is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"x1.5 base move power. 10% freeze. Super effective on Steel.\",\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Steel') return 1;\r\n\t\t},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Subzero Slammer');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'frz',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tnortherncollapse: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Northern Collapse\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"Power is equal to 1.5 times the base move's power, and is multiplied by 1.5 again if the user is heavier than the target. \",\r\n\t\tshortDesc: \"x1.5 base move power, x2.25 instead if user heavier than target.\",\r\n\t\tonBasePower(basePower, source, target, move) {\r\n\t\t\tif (target.getWeight() < source.getWeight()) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Mountain Gale');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\tbrightwing: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bright Wing\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If the current weather is Sunny Day and the user is not holding a Utility Umbrella, this move has its priority increased by 1.\",\r\n\t\tshortDesc: \"x1.5 base move power. Sun: +1 Priority.\",\r\n\t\t//Priority modifying is in conditions.ts because it didn't work when i coded it here\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Solar Blade');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tseamonster: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sea Monster\",\r\n\t\tpp: 5,\r\n\t\tpriority: -6,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If neither the user nor the target has fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target is under the effects of Ingrain, has the Suction Cups Ability, or this move hit a substitute.\",\r\n\t\tshortDesc: \"x1.5 base move power. Forces target into random ally.\",\r\n\t\tforceSwitch: true,\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dive');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t},\r\n\tsunblast: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sunblast\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If this move is successful, the effect of Sunny Day begins.\",\r\n\t\tshortDesc: \"x1.5 base move power. Starts Sunny Day.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Solar Beam');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tonHit() {\r\n\t\t\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tspiritualembrace: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Spiritual Embrace\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. If this move is successful, the effect of Sunny Day begins.\",\r\n\t\tshortDesc: \"x1.5 base move power. Sets target ability to Synchronize.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Seed Flare');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target) {\r\n\t\t\t\tconst oldAbility = target.setAbility('Synchronize');\r\n\t\t\t\tif (target.setAbility('Synchronize')) {\r\n\t\t\t\t\tthis.add('-ability', target, oldAbility);\r\n\t\t\t\t\tthis.add('-ability', target, 'Synchronize', '[from] move: Spiritual Embrace');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tgowestyoungfeline: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Go West, Young Feline\",\r\n\t\tpp: 10,\r\n\t\tpriority: 5,\r\n\t\tflags: {nosketch: 1, failcopycat: 1, reflectable: 1},\r\n\t\tdesc: \"Causes the target's Ability to become Rattled. Fails if the target's Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Simple, Stance Change, Tera Shift, Truant, Zen Mode, or Zero to Hero.\",\r\n\t\tshortDesc: \"Always goes first. The target's Ability becomes Rattled.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Uproar');\r\n\t\t},\r\n\t\tonTryHit(target) {\r\n\t\t\tif (target.getAbility().flags['cantsuppress'] || target.ability === 'rattled') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tconst oldAbility = pokemon.setAbility('rattled');\r\n\t\t\tif (oldAbility) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'Rattled', '[from] move: Go West, Young Feline');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\treturn oldAbility as false | null;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\t'100000voltkahunawave': {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"100,000 Volt Kahuna Wave\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"Power is equal to 1.5 times the base move's power, and further doubles if the target is paralyzed. This move and its effects ignore the Abilities of other Pokemon.\",\r\n\t\tshortDesc: \"x1.5 base move power, x3 instead on Paralyzed. Ignores abilities.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Electro Drift');\r\n\t\t},\r\n\t\tignoreAbility: true,\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (target.status === 'par') {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t},\r\n\tfuriousflare: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Furious Flare\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Has a 100% chance to lower the target's Attack, Special Attack, and Speed by 1 stage.\",\r\n\t\tshortDesc: \"x1.5 base move power; 100% lower target's Atk/SpA/Spe by 1.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Temper Flare');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tcrypticchill: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Cryptic Chill\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding a Shed Shell, has the Run Away ability, or uses Baton Pass, Drift, Flip Turn, Frost Feint, Parting Shot, Shed Tail, Swindle, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Mortal Spin, Rapid Spin, or Substitute successfully. This effect is not stackable or reset by using this or another binding move.\",\r\n\t\tshortDesc: \"x1.5 base move power; Traps and damages the target for 4-5 turns.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bitter Malice');\r\n\t\t},\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\tsneakysqueeze: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sneaky Squeeze\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding a Shed Shell, has the Run Away ability, or uses Baton Pass, Drift, Flip Turn, Frost Feint, Parting Shot, Shed Tail, Swindle, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Mortal Spin, Rapid Spin, or Substitute successfully. This effect is not stackable or reset by using this or another binding move.\",\r\n\t\tshortDesc: \"x1.5 base move power; Traps and damages the target for 4-5 turns.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Constrict');\r\n\t\t},\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tpearlofwisdom: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Pearl of Wisdom\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"Power is equal to  (1.5 times the base move's power) + (X*20), where X is the total amount of stats on the user with at least one stat change greater than zero. Having multiple stat positive changes to the same stat will still only contribute 20 power.\",\r\n\t\tshortDesc: \"x1.5 base move power, then +20 for each boosted stat.\",\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tlet boost: BoostID;\r\n\t\t\tfor (boost in pokemon.boosts) {\r\n\t\t\t\tif (pokemon.boosts[boost] > 0) basePower += 20;\r\n\t\t\t}\r\n\t\t\treturn basePower;\r\n\t\t},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Power Gem');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tlusciouslake: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Luscious Lake\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"This move's power is equal to 1.5 times the base move's power. For 5 turns, all Fire-type attacks used by any active Pokemon have their power multiplied by 0.33. If used while Grassy Terrain or Nature Field is active, then upon using this move a swamp appears on the target's side for 4 turns, which quarters the Speed of each Pokemon on that side.\",\r\n\t\tshortDesc: \"x1.5 base move power; Sets Water Sport and (in Grassy Terrain) swamp.\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Seed Flare');\r\n\t\t},\r\n\t\tpseudoWeather: 'watersport',\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (this.field.isTerrain(['grassyterrain','guardianofnature'])) {\r\n\t\t\t\tmove.sideCondition = 'grasspledge';\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\tprolificplow: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 1,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Prolific Plow\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {nosketch: 1, protect: 1, failcopycat: 1},\r\n\t\tdesc: \"Power is equal to 1.5 times the base move's power. Raises the Attack, Special Attack, and Speed of all active Grass-type Pokemon on the field by 2 stages if Grassy Terrain or Nature Field is active or 1 stage if not.\",\r\n\t\tshortDesc: \"x1.5 base move power; +1 Atk/SpA/Spe to Grass-types, +2 instead in Grassy Terrain\",\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Land\\'s Wrath');\r\n\t\t},\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\tconst targets: Pokemon[] = [];\r\n\t\t\tconst boost = this.field.isTerrain(['grassyterrain','guardianofnature']) ? 2 : 1;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon.hasType('Grass')) {\r\n\t\t\t\t\t// This move affects every Grass-type Pokemon in play.\r\n\t\t\t\t\tthis.boost(pokemon.isGrounded() ? {atk: boost, spa: boost, spe: boost} : {atk: 1, spa: 1, spe: 1}, pokemon, source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Grass\",\r\n\t},\r\n\t\r\n\t//Interacting with new Brunician mechanics\r\n\tfloralhealing: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source) {\r\n\t\t\tlet success;\r\n\t\t\tif (this.field.isTerrain(['grassyterrain','guardianofnature'])) {\r\n\t\t\t\tsuccess = !!this.heal(this.modify(target.baseMaxhp, 0.667));\r\n\t\t\t\tif (this.field.isTerrain('guardianofnature')) success = target.cureStatus() || success;\r\n\t\t\t} else {\r\n\t\t\t\tsuccess = !!this.heal(Math.ceil(target.baseMaxhp * 0.5));\r\n\t\t\t}\r\n\t\t\tif (!success) {\r\n\t\t\t\tthis.add('-fail', target, 'heal');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\tif (!target.isAlly(source)) {\r\n\t\t\t\ttarget.staleness = 'external';\r\n\t\t\t}\r\n\t\t\treturn success;\r\n\t\t},\r\n\t},\r\n\tgrassyglide: {\r\n\t\tinherit: true,\r\n\t\tonModifyPriority(priority, source, target, move) {\r\n\t\t\tif (source.isGrounded()) {\r\n\t\t\t\tif (this.field.isTerrain('guardianofnature')) return priority + 2;\r\n\t\t\t\tif (this.field.isTerrain('grassyterrain')) return priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tminimize: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonRestart: () => null,\r\n\t\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t\tconst boostedMoves = [\r\n\t\t\t\t\t'stomp', 'steamroller', 'bodyslam', 'flyingpress', 'dragonrush', 'heatcrash', 'heavyslam', 'bullybash',//'maliciousmoonsault',\r\n\t\t\t\t];\r\n\t\t\t\tif (boostedMoves.includes(move.id)) {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAccuracy(accuracy, target, source, move) {\r\n\t\t\t\tconst boostedMoves = [\r\n\t\t\t\t\t'stomp', 'steamroller', 'bodyslam', 'flyingpress', 'dragonrush', 'heatcrash', 'heavyslam', 'bullybash',//'maliciousmoonsault',\r\n\t\t\t\t];\r\n\t\t\t\tif (boostedMoves.includes(move.id)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy;\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trockpolish: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Raises the user's Speed by 2 stages. As long as the user remains active, the power of the user's Refracture will be doubled (this effect is not stackable).\",\r\n\t\tvolatileStatus: 'rockpolish',\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonRestart: () => null,\r\n\t\t},\r\n\t},\r\n\t//Returning moves from Desvega\r\n\tmindmelt: {\r\n\t\tnum: -1,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Mind Melt\",\r\n\t\tdesc: \"Has a 30% chance to confuse the target.\",\r\n\t\tshortDesc: \"30% chance to confuse the target.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Confusion');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tvolatileStatus: 'confusion',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\twatchfuleye: {\r\n\t\tnum: -2,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Watchful Eye\",\r\n\t\tdesc: \"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Drift, Flip Turn, Frost Feint, Guardian Wind, Parting Shot, Poisonous Flight, Shed Tail, Swindle, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.\",\r\n\t\tshortDesc: \"Prevents the target from switching out.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Mean Look');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (source.isActive) target.addVolatile('trapped', source, move, 'trapper');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tpoisonousflight: {\r\n\t\tnum: -3,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Poisonous Flight\",\r\n\t\tdesc: \"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.\",\r\n\t\tshortDesc: \"User switches out after damaging the target.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Mortal Spin');\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\tsleuth: {\r\n\t\tnum: -4,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Sleuth\",\r\n\t\tdesc: \"If this move is successful, all of the target's moves are revealed.\",\r\n\t\tshortDesc: \"Reveals the target's moveset.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {reflectable: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Foresight');\r\n\t\t},\r\n\t\tonHit(target, pokemon) {\r\n\t\t\tlet warnMoves: (Move | Pokemon)[][] = [];\r\n\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\twarnMoves.push(\" \" + this.dex.moves.get(moveSlot.move));\r\n\t\t\t}\r\n\t\t\tif (!warnMoves.length) return;\r\n\t\t\tthis.add('-message', `${pokemon.name} revealed ${target.name}'s ${warnMoves}!`);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tlastlaugh: {\r\n\t\tnum: -5,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Last Laugh\",\r\n\t\tdesc: \"Lowers the target's Attack, Special Attack, and Speed by 1 stage. The user faints unless this move misses or there is no target. Fails entirely if this move hits a substitute, but does not fail if the target's stats cannot be changed.\",\r\n\t\tshortDesc: \"Lowers target's Attack, Sp. Atk, Speed by 1. User faints.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Memento');\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tatk: -1,\r\n\t\t\tspa: -1,\r\n\t\t\tspe: -1,\r\n\t\t},\r\n\t\tselfdestruct: \"ifHit\",\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tgeistbite: {\r\n\t\tnum: -6,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Geist Bite\",\r\n\t\tdesc: \"Has a 20% chance to lower the target's Defense and Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"20% chance to lower the target's Def and SpD by 1.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bite: 1, contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Crunch');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t},\r\n\tfrostfeint: {\r\n\t\tnum: -7,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Frost Feint\",\r\n\t\tdesc: \"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.\",\r\n\t\tshortDesc: \"User switches out after damaging the target.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Aurora Beam');\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t},\r\n\t//realmon distribution: Flareon, Kalosian Litleo line, Tepig line, Fennekin line, Turtonator, Rolycoly line, Caspakid line\r\n\tdrift: {\r\n\t\tnum: -8,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Drift\",\r\n\t\tdesc: \"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.\",\r\n\t\tshortDesc: \"User switches out after damaging the target.\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Flame Charge');\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t},\r\n\tmagicspin: {\r\n\t\tnum: -9,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Magic Spin\",\r\n\t\tdesc: \"Has a 10% chance to confuse the target.\",\r\n\t\tshortDesc: \"10% chance to confuse the target.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Magical Torque');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tvolatileStatus: 'confusion',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t},\r\n\tsheriffshot: {\r\n\t\tnum: -10,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sheriff Shot\",\r\n\t\tdesc: \"Has a 50% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"50% chance to lower the target's Defense by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Vacuum Wave');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n\tbanditblast: {\r\n\t\tnum: -11,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bandit Blast\",\r\n\t\tdesc: \"Has a 50% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"50% chance to lower the target's Defense by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Vacuum Wave');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tfanthehammer: {\r\n\t\tnum: -12,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Fan the Hammer\",\r\n\t\tdesc: \"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.\",\r\n\t\tshortDesc: \"Hits 2-5 times in one turn.\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Rock Blast');\r\n\t\t},\r\n\t\tmultihit: [2, 5],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tironstrike: {\r\n\t\tnum: -13,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tname: \"Iron Strike\",\r\n\t\tdesc: \"If this move is successful, the target experiences the effects of all entry hazards on its side of the field, unless its held item is Heavy-Duty Boots or its ability is Keen Eye.\",\r\n\t\tshortDesc: \"Target takes hazard damage after being hit by this move.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Iron Head');\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tthis.runEvent('EntryHazard',target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\trailwayblitz: {\r\n\t\tnum: -14,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Railway Blitz\",\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"Usually moves first.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 1,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bullet Punch');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tdraconicfang: {\r\n\t\tnum: -15,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Draconic Fang\",\r\n\t\tdesc: \"Has a 30% chance to burn the target.\",\r\n\t\tshortDesc: \"30% chance to burn the target.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bite: 1, contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Hyper Fang');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//Realmon distribution: Oddish family, Wooper line, Paldean Wooper line, Gligar line, Trubbish line, Poipole line\r\n\tpoisonterrain: {\r\n\t\tnum: -16,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Poison Terrain\",\r\n\t\tdesc: \"For 5 turns, the terrain becomes Poison Terrain. During the effect, the power of Poison-type attacks made by grounded Pokemon is multiplied by 1.3 and grounded Pokemon that would be poisoned are always badly poisoned; Pokemon already experiencing standard poisoning do not become badly poisoned. Grounded Pokemon that are neither Bug-, Poison-, nor Steel-type lose 1/16 of their maximum HP at the end of each turn. Camouflage and Mimicry transform the user into an Poison type, Nature Power becomes Sludge Wave, and Secret Power has a 30% chance to lower the target's Special Defense by 1 stage. Fails if the current terrain is Poison Terrain.\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Poison power, -1/16 max HP if not Bug/Poison/Steel, Poison -> Toxic.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {nonsky: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Grassy Terrain');\r\n\t\t},\r\n\t\tterrain: 'poisonterrain',\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Poison' && attacker.isGrounded()) {\r\n\t\t\t\t\tthis.debug('poison terrain boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Poison Terrain', '[from] ability: ' + effect.name, '[of] ' + source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Poison Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 5,\r\n\t\t\tonResidualSubOrder: 2,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tif (!pokemon.isGrounded() || pokemon.isSemiInvulnerable()) {\r\n\t\t\t\t\tthis.debug(`Pokemon semi-invuln or not grounded; Poison Terrain skipped`);\r\n\t\t\t\t} else if(!pokemon.hasType(['Bug', 'Poison', 'Steel'])) this.damage(pokemon.baseMaxhp / 16, pokemon, pokemon);\r\n\t\t\t},\r\n\t\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\t\tif (status.id === 'psn' && target.isGrounded() && !target.isSemiInvulnerable()\r\n\t\t\t\t\t&& effect?.effectType === 'Move') {\r\n\t\t\t\t\t//This allows Dire Claw to inflict Toxic poisoning\r\n\t\t\t\t\ttarget.setStatus('tox');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Poison Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"all\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\trototiller: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tdesc: \"Raises the Attack and Special Attack of all grounded Grass-type Pokemon on the field by 2 stages if Grassy Terrain or Nature Field is active or 1 stage if not. On Nature Field, this move also inflicts Leech Seed on all grounded Pokemon that are neither Grass-type nor behind substitutes.\",\r\n\t\tshortDesc: \"Raises Atk/Sp. Atk of grounded Grass types by 1, 2 if Grassy Terrain; Seeds grounded non-Grass-types on Nature Field.\",\r\n\t\tonHitField(target, source) {\r\n\t\t\tconst targets: Pokemon[] = [];\r\n\t\t\tlet anyAirborne = false;\r\n\t\t\tconst nonGrass: Pokemon[] = [];\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (!pokemon.runImmunity('Ground')) {\r\n\t\t\t\t\tthis.add('-immune', pokemon);\r\n\t\t\t\t\tanyAirborne = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.hasType('Grass')) {\r\n\t\t\t\t\t// This move affects every grounded Grass-type Pokemon in play.\r\n\t\t\t\t\ttargets.push(pokemon);\r\n\t\t\t\t} else if (pokemon !== source && !pokemon.volatiles['substitute']) {\r\n\t\t\t\t\tnonGrass.push(pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst isNatureField = this.field.isTerrain('guardianofnature');\r\n\t\t\tif (!targets.length && !anyAirborne && (!nonGrass.length || !isNatureField)) return false; // Fails when there are no grounded Grass types or airborne Pokemon\r\n\t\t\tlet boost = 2;\r\n\t\t\tif (isNatureField) {\r\n\t\t\t\tfor (const pokemon of nonGrass) {\r\n\t\t\t\t\tpokemon.addVolatile('leechseed');\r\n\t\t\t\t}\r\n\t\t\t} else if (!this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tboost = 1;\r\n\t\t\t}\r\n\t\t\tfor (const pokemon of targets) {\r\n\t\t\t\tthis.boost({atk: boost, spa: boost}, pokemon, source);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t//Realmon distribution: Oddish family, both Wooper lines, Trubbish line, Frogadier and Greninja, Mareanie line, Naganadel\r\n\ttoxicshock: {\r\n\t\tnum: -17,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Toxic Shock\",\r\n\t\tdesc: \"Has a 30% chance to badly poison the target. If the current terrain is Poison Terrain and the target is grounded, this move will always land a critical hit.\",\r\n\t\tshortDesc: \"30% to badly poison. Crits if target is grounded on Poison Terrain.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Gunk Shot');\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (this.field.isTerrain('poisonterrain') && target?.isGrounded()) {\r\n\t\t\t\tthis.hint(`Toxic Shock always crits on grounded targets in Poison Terrain.`,true);\r\n\t\t\t\treturn 5;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'tox',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\ticeshove: {\r\n\t\tnum: -18,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Ice Shove\",\r\n\t\tdesc: \"Has a 100% chance to raise the user's Speed by 1 stage and a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"High critical hit ratio. 100% chance to raise user's Speed by 1.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Ice Spinner');\r\n\t\t},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tspe: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//Realmon distribution: Unovan Braviary, Mandibuzz, Hawlucha\r\n\tairdive: {\r\n\t\tnum: -19,\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Air Dive\",\r\n\t\tdesc: \"This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.\",\r\n\t\tshortDesc: \"Always results in a critical hit.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Beak Blast');\r\n\t\t},\r\n\t\twillCrit: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\toilslick: {\r\n\t\tnum: -20,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Oil Slick\",\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"Usually moves first.\",\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Quick Attack');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tpepperrush: {\r\n\t\tnum: -21,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Pepper Rush\",\r\n\t\tdesc: \"If the user is burned, this move's damage is multiplied by 1.5 instead of halved. Has a 10% chance to burn the target. If the user does not have a non-volatile status condition after using this move, it is burned after using it.\",\r\n\t\tshortDesc: \"1.5x power if user burned. Thaws user. 10% chance to burn target. Burns user.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, defrost: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Flare Blitz');\r\n\t\t},\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tif (pokemon.status === 'brn') {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (source.hp) {\r\n\t\t\t\tsource.trySetStatus('brn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tpluspulse: {\r\n\t\tnum: -22,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Plus Pulse\",\r\n\t\tdesc: \"This move does not check accuracy. If the target has at least one stat stage greater than 0, this move's power is multiplied by 1.5.\",\r\n\t\tshortDesc: \"Does not check accuracy. 1.5x power if target has a stat boosted.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tif (target.positiveBoosts()) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Shock Wave');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tminusion: {\r\n\t\tnum: -23,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Minus Ion\",\r\n\t\tdesc: \"This move does not check accuracy. If the target has at least one stat stage less than 0, this move's power is multiplied by 1.5.\",\r\n\t\tshortDesc: \"Does not check accuracy. 1.5x power if target has a stat lowered.\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonBasePower(basePower, pokemon, target) {\r\n\t\t\tfor (const i in target.boosts) {\r\n\t\t\t\tif (target.boosts[i] < 0) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Electro Ball');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tinfestation: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Prevents the target from switching for three turns. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Drift, Flip Turn, Frost Feint, Guardian Wind, Parting Shot, Poisonous Flight, Shed Tail, Swindle, Teleport, U-turn, or Volt Switch. The effect does not end if the user leaves the field, but does end if the target leaves the field or uses Mortal Spin, Rapid Spin, or Substitute successfully. Using this move again does not stack or reset the effect.\",\r\n\t\tshortDesc: \"Traps+Damages target for 3 turns even if user switches out.\",\r\n\t\tonAfterHit(target, source, move) {\r\n\t\t\ttarget.addVolatile('infestation');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tnoCopy: true,\r\n\t\t\tonTrapPokemon(pokemon) {\r\n\t\t\t\tpokemon.tryTrap();\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8);\r\n\t\t\t},\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-activate', target, 'infestation');\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\tinkburst: {\r\n\t\tnum: -24,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Ink Burst\",\r\n\t\tdesc: \"Has a 30% chance to lower the target's Speed by 1 stage. If used by a Crayoct, this move's type will change depending on its color. Fire for Red, Flying for Blue, Electric for Yellow, Fairy for Pink, and Ground for Brown.\",\r\n\t\tshortDesc: \"30% lower target's Speed by 1. Type depends on user's form.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tswitch (source.species.name) {\r\n\t\t\t\tcase 'Crayoct':\r\n\t\t\t\t\tthis.attrLastMove('[anim] Spicy Extract');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Crayoct-Blue':\r\n\t\t\t\t\tthis.attrLastMove('[anim] Mist Ball');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Crayoct-Yellow':\r\n\t\t\t\t\tthis.attrLastMove('[anim] Charge Beam');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Crayoct-Pink':\r\n\t\t\t\t\tthis.attrLastMove('[anim] Psywave');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Crayoct-Brown':\r\n\t\t\t\t\tthis.attrLastMove('[anim] Mud Bomb');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.attrLastMove('[anim] Sludge Bomb');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Crayoct':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Crayoct-Blue':\r\n\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Crayoct-Yellow':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Crayoct-Pink':\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Crayoct-Brown':\r\n\t\t\t\tmove.type = 'Ground';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t},\r\n\tvenommist: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Venom Mist\",\r\n\t\tdesc: \"Raises the user's Attack by 1 stage. Poisons the target.\",\r\n\t\tshortDesc: \"Raises the user's Attack by 1. Poisons adjacent Pokemon.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Haze');\r\n\t\t},\r\n\t\tstatus: 'psn',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacent\",\r\n\t\tself: {\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tstingspit: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Sting Spit\",\r\n\t\tdesc: \"Hits twice, with each hit having a 50% chance to poison the target. If the first hit breaks the target's substitute, it will take damage for the second hit. In Double Battles, this move attempts to hit the targeted Pokemon and its ally once each. If hitting one of these Pokemon would be prevented by immunity, protection, semi-invulnerability, an Ability, or accuracy, it attempts to hit the other Pokemon twice instead. If this move is redirected, it hits that target twice.\",\r\n\t\tshortDesc: \"Hits twice. Doubles: Tries to hit each foe once. Each hit has a 50% chance to poison.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, noparentalbond: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dragon Darts');\r\n\t\t},\r\n\t\tmultihit: 2,\r\n\t\tsmartTarget: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Bug\",\r\n\t\tmaxMove: {basePower: 130},\r\n\t},\r\n\tacidtrip: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Acid Trip\",\r\n\t\tdesc: \"Raises the user's Defense by 1 stage and Special Attack by 2 stages in exchange for the user losing 1/8 of its maximum HP, rounded down. Fails if the user would faint or if its Defense and Special Attack stat stages would not change.\",\r\n\t\tshortDesc: \"+2 SpA, +1 Def for 1/8 user's max HP.\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, metronome: 1},\r\n\t\tonTry(source) {\r\n\t\t\tif (source.hp <= (source.maxhp / 8) || source.maxhp === 1) return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (!this.boost(move.boosts as SparseBoostsTable)) return null;\r\n\t\t\tdelete move.boosts;\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tthis.directDamage(pokemon.maxhp / 8);\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tdef: 1,\r\n\t\t\tspa: 2,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\tvoraciousfang: {\r\n\t\tnum: -25,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Voracious Fang\",\r\n\t\tdesc: \"Has a 30% chance to make the target flinch. If the target is poisoned, this move has a 100% chance to make it flinch instead.\",\r\n\t\tshortDesc: \"30% to flinch target. Target poisoned: 100% to flinch instead.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {bite: 1, contact: 1, protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Hyper Fang');\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (!['tox','psn'].includes(target.status)) return;\r\n\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\tif (secondary?.volatileStatus === 'flinch') secondary.chance = 100;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tvolatileStatus: 'flinch',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\troyalpunt: {\r\n\t\tnum: -26,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Royal Punt\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to lower the target's Defense by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tisViable: true,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Mega Kick');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\thighroller: {\r\n\t\tnum: -27,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tconst bp = move.basePower + 20 * pokemon.positiveBoosts();\r\n\t\t\tthis.debug('BP: ' + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tisViable: true,\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Pay Day');\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"High Roller\",\r\n\t\tdesc: \"Power is equal to 40+(X*20), where X is the user's total stat stage changes that are greater than 0.\",\r\n\t\tshortDesc: \"+ 20 power for each of the user's stat boosts.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\t\r\n\tfirewall: {\r\n\t\tnum: -28,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user is protected from most attacks made by other Pokemon during this turn, and restores 1/4 of its maximum HP and cures its non-volatile status condition when other Pokemon try to make contact. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Burning Bulwark, Detect, Endure, Field of Vision, Firewall, King's Shield, Max Guard, Obstruct, Protect, Quick Guard, Silk Trap, Spiky Shield, Toxic Snowball, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.\",\r\n\t\tshortDesc: \"Protects the user. Contact: user restores 1/4 of max HP and cures its status.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Firewall\",\r\n\t\tpp: 5,\r\n\t\tpriority: 4,\r\n\t\tflags: {},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Iron Defense');\r\n\t\t},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'firewall',\r\n\t\tonTryHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove/*) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (*/&& source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\tif (move.flags['contact']) {\r\n\t\t\t\t\tthis.heal(target.maxhp / 4, target, target, this.dex.getActiveMove(\"Firewall\"));\r\n\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && move.flags['contact']) {\r\n\t\t\t\t\tthis.heal(target.maxhp / 4, target, target, this.dex.getActiveMove(\"Firewall\"));\r\n\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Steel\",\r\n\t},\r\n\tpitfall: {\r\n\t\tnum: -29,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Pitfall\",\r\n\t\tdesc: \"If the user is hit by a contact move this turn before it can execute this move, the attacker deals halved damage with its move and is prevented from switching out afterward.\",\r\n\t\tshortDesc: \"Traps and deals halved damage on contact with the user before it moves.\",\r\n\t\tpp: 15,\r\n\t\tpriority: -2,\r\n\t\tflags: {protect: 1, noassist: 1, failmefirst: 1, nosleeptalk: 1, failcopycat: 1, failinstruct: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dig');\r\n\t\t},\r\n\t\tpriorityChargeCallback(pokemon) {\r\n\t\t\tpokemon.addVolatile('pitfall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singleturn', pokemon, 'move: Pitfall');\r\n\t\t\t},\r\n\t\t\tonSourceBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, attacker, defender)) {\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tsource.addVolatile('trapped', target, this.dex.getActiveMove(\"Pitfall\"), 'trapper');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tonAfterMove(pokemon) {\r\n\t\t\tpokemon.removeVolatile('pitfall');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tskyrush: {\r\n\t\tnum: -30,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Sky Rush\",\r\n\t\tdesc: \"Has a 50% chance to raise the user's Attack by 1 stage.\",\r\n\t\tshortDesc: \"50% chance to raise the user's Attack by 1.\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Brave Bird');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tself: {\r\n\t\t\t\tboosts: {\r\n\t\t\t\t\tatk: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\r\n\tboltburst: {\r\n\t\tnum: -31,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tconst hp = target.hp;\r\n\t\t\tconst maxHP = target.maxhp;\r\n\t\t\tconst bp = Math.floor(Math.floor((140 * (100 * Math.floor(hp * 4096 / maxHP)) + 2048 - 1) / 4096) / 100) || 1;\r\n\t\t\tthis.debug('BP for ' + hp + '/' + maxHP + \" HP: \" + bp);\r\n\t\t\treturn bp;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Bolt Burst\",\r\n\t\tdesc: \"Power is equal to 140 * (target's current HP / target's maximum HP), rounded half down, but not less than 1.\",\r\n\t\tshortDesc: \"More power the more HP the target has left. (Max 140)\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Discharge');\r\n\t\t},\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tzMove: {basePower: 200},\r\n\t\tmaxMove: {basePower: 150},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//vanilla moves\r\n\toctazooka: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 30% chance to poison the target.\",\r\n\t\tshortDesc: \"30% chance to poison the target.\",\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'psn',\r\n\t\t}\r\n\t},\r\n\t\r\n\ttelekinesis: {\r\n\t\t//not sure if it's movexited or not\r\n\t\t//whatever the case it removes the immune message from magnetic updraft vs palossand\r\n\t\tinherit: true,\r\n\t\tonTry(source, target, move) {\r\n\t\t\t// Additional Gravity check for Z-move variant\r\n\t\t\tif (this.field.getPseudoWeather('Gravity')) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', source, 'move: Gravity', move);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\telse if (['Diglett', 'Dugtrio', 'Palossand', 'Sandygast'].includes(target.baseSpecies.baseSpecies) ||\r\n\t\t\t\t\ttarget.baseSpecies.name === 'Gengar-Mega') {\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (['Diglett', 'Dugtrio', 'Palossand', 'Sandygast'].includes(target.baseSpecies.baseSpecies) ||\r\n\t\t\t\t\ttarget.baseSpecies.name === 'Gengar-Mega') {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['smackdown'] || target.volatiles['ingrain']) return false;\r\n\t\t\t\tthis.add('-start', target, 'Telekinesis');\r\n\t\t\t},\r\n\t\t\tonAccuracyPriority: -1,\r\n\t\t\tonAccuracy(accuracy, target, source, move) {\r\n\t\t\t\tif (move && !move.ohko) return true;\r\n\t\t\t},\r\n\t\t\tonImmunity(type) {\r\n\t\t\t\tif (type === 'Ground') return false;\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (pokemon.baseSpecies.name === 'Gengar-Mega') {\r\n\t\t\t\t\tdelete pokemon.volatiles['telekinesis'];\r\n\t\t\t\t\tthis.add('-end', pokemon, 'Telekinesis', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 19,\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Telekinesis');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\thaze: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Resets the stat stages of all active Pokemon to 0. Pokemon with the ability Rock Bottom are not affected.\",\r\n\t\tonHitField() {\r\n\t\t\tthis.add('-clearallboost');\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif(!pokemon.hasAbility('rockbottom')) pokemon.clearBoosts();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tnaturepower: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This move calls another move for use based on the battle terrain. Tri Attack on the regular Wi-Fi terrain, Thunderbolt during Electric Terrain, Moonblast during Misty Terrain, Energy Ball during Grassy Terrain, Chloroblast during Nature Field, Psychic during Psychic Terrain, and Sludge Wave during Poison Terrain.\",\r\n\t\tisNonstandard: null,\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tlet move;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\t\tcase 'electricterrain':\r\n\t\t\t\t\tmove = 'thunderbolt';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'grassyterrain':\r\n\t\t\t\t\tmove = 'energyball';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'mistyterrain':\r\n\t\t\t\t\tmove = 'moonblast';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychicterrain':\r\n\t\t\t\t\tmove = 'psychic';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'poisonterrain':\r\n\t\t\t\t\tmove = 'sludgewave';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'guardianofnature':\r\n\t\t\t\t\tmove = 'chloroblast';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmove = 'triattack';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.actions.useMove(move, pokemon, target);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tterrainpulse: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"Power doubles if the user is grounded and a terrain is active, and this move's type changes to match. Electric type during Electric Terrain, Grass type during Grassy Terrain or Nature Field, Fairy type during Misty Terrain, Psychic type during Psychic Terrain, and Poison type during Poison Terrain.\",\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\t\tcase 'electricterrain':\r\n\t\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'grassyterrain':\r\n\t\t\t\tcase 'guardianofnature':\r\n\t\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'mistyterrain':\r\n\t\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychicterrain':\r\n\t\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'poisonterrain':\r\n\t\t\t\t\tmove.type = 'Poison';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\ttopsyturvy: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"The target's positive stat stages become negative and vice versa. Fails if the target's ability is Rock Bottom or all of its stat stages are 0.\",\r\n\t\tonHit(target) {\r\n\t\t\tif(target.hasAbility('rockbottom')) {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Rock Bottom\", \"[of] \" + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tlet success = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in target.boosts) {\r\n\t\t\t\tif (target.boosts[i] === 0) continue;\r\n\t\t\t\ttarget.boosts[i] = -target.boosts[i];\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t\tif (!success) return false;\r\n\t\t\tthis.add('-invertboost', target, '[from] move: Topsy-Turvy');\r\n\t\t},\r\n\t},\r\n\tclearsmog: {\r\n\t\tinherit: true,\r\n\t\tonHit(target) {\r\n\t\t\tif(!target.hasAbility('rockbottom')) {\r\n\t\t\t\ttarget.clearBoosts();\r\n\t\t\t\tthis.add('-clearboost', target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsecretpower: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (this.field.isTerrain(['','electricterrain'])) return;\r\n\t\t\tmove.secondaries = [];\r\n\t\t\t/*if (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'par',\r\n\t\t\t\t});\r\n\t\t\t} else */if (this.field.isTerrain(['grassyterrain','guardianofnature'])) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tstatus: 'slp',\r\n\t\t\t\t});\r\n\t\t\t\tif (this.field.isTerrain('guardianofnature')) move.critRatio++;\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspa: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else if (this.field.isTerrain('poisonterrain')) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 30,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspd: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcamouflage: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t\tdesc: \"The user's type changes based on the battle terrain. Normal type on the regular Wi-Fi terrain, Electric type during Electric Terrain, Fairy type during Misty Terrain, Grass type during Grassy Terrain or Nature Field, Psychic type during Psychic Terrain, and Poison type during Poison Terrain. Fails if the user's type cannot be changed or if the user is already purely that type.\",\r\n\t\tonHit(target) {\r\n\t\t\tlet newType;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\t\tcase 'electricterrain':\r\n\t\t\t\t\tnewType = 'Electric';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'grassyterrain':\r\n\t\t\t\tcase 'guardianofnature':\r\n\t\t\t\t\tnewType = 'Grass';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'mistyterrain':\r\n\t\t\t\t\tnewType = 'Fairy';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psychicterrain':\r\n\t\t\t\t\tnewType = 'Psychic';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'poisonterrain':\r\n\t\t\t\t\tnewType = 'Poison';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tnewType = 'Normal';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (target.getTypes().join() === newType || !target.setType(newType)) return false;\r\n\t\t\tthis.add('-start', target, 'typechange', newType);\r\n\t\t},\r\n\t},\r\n\tsmackdown: {\r\n\t\tinherit: true,\r\n\t\tdesc: \"This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying type that has not used Roost this turn or a Pokemon with the Levitate or Soaring Spirit Abilities, or if there is an active Pokemon with Tree Topper, the target loses its immunity to Ground-type attacks and the Arena Trap Ability as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target, and the target is not affected by Tree-Topper.\",\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tlet applies = !(\r\n\t\t\t\t\t!(\r\n\t\t\t\t\tpokemon.hasType('Flying') || pokemon.hasAbility(['levitate','soaringspirit'])\r\n\t\t\t\t\t\t|| (pokemon.species.name === 'Fulmenops-Stormy' && pokemon.hasAbility('weatherflux'))\r\n\t\t\t\t\t\t|| (this.getAllActive().some(target => target.hasAbility('treetopper'))\r\n\t\t\t\t\t\t\t\t&& !['Diglett','Dugtrio','Sandygast','Palossand'].includes(pokemon.baseSpecies.baseSpecies))\r\n\t\t\t\t\t) || pokemon.hasItem('ironball') || pokemon.volatiles['ingrain'] || this.field.getPseudoWeather('gravity')\r\n\t\t\t\t);\r\n\t\t\t\t//TODO: Exclude Diglett/Sandygast lines/MGengar from Tree-Topper check\r\n\t\t\t\tif (pokemon.removeVolatile('fly') || pokemon.removeVolatile('bounce')) {\r\n\t\t\t\t\tapplies = true;\r\n\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.volatiles['magnetrise']) {\r\n\t\t\t\t\tapplies = true;\r\n\t\t\t\t\tdelete pokemon.volatiles['magnetrise'];\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.volatiles['telekinesis']) {\r\n\t\t\t\t\tapplies = true;\r\n\t\t\t\t\tdelete pokemon.volatiles['telekinesis'];\r\n\t\t\t\t}\r\n\t\t\t\telse if (!applies) return false;\r\n\t\t\t\tthis.add('-start', pokemon, 'Smack Down');\r\n\t\t\t},\r\n\t\t\tonRestart(pokemon) {\r\n\t\t\t\tif (pokemon.removeVolatile('fly') || pokemon.removeVolatile('bounce')) {\r\n\t\t\t\t\tthis.queue.cancelMove(pokemon);\r\n\t\t\t\t\tpokemon.removeVolatile('twoturnmove');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Smack Down');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdive: {\r\n\t\tinherit: true,\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (attacker.hasAbility(['gulpmissile','gulpcannon']) && ['Cramorant','Cramorant-Desvega','Toxirant'].includes(attacker.species.name)\r\n\t\t\t\t&& !attacker.transformed) {\r\n\t\t\t\tconst forme = attacker.hp <= attacker.maxhp / 2 ? 'gorging' : 'gulping';\r\n\t\t\t\tattacker.formeChange(attacker.species.id + forme, move);\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tknockoff: {\r\n\t\tinherit: true,\r\n\t\tonAfterHit(target, source) {\r\n\t\t\tif (source.hp) {\r\n\t\t\t\tconst item = target.takeItem();\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tthis.add('-enditem', target, item.name, '[from] move: Knock Off', '[of] ' + source);\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tif (pokemon.hasAbility('ravenous')) this.heal(pokemon.maxhp / 6, pokemon, pokemon, this.dex.abilities.get('ravenous'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t//There are mons that got dexited in SV but not Desvega and thus their signatures can't be used, so freeing their signatures here\r\n\t/*naturesmadness: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tobstruct: {\r\n\t\tinherit: true,\r\n\t\t//Functionality is untouched\r\n\t\tdesc: \"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user have their Defense lowered by 2 stages. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Burning Bulwark, Detect, Endure, Field of Vision, Firewall, King's Shield, Max Guard, Obstruct, Protect, Quick Guard, Silk Trap, Spiky Shield, Toxic Snowball, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.\",\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tshelltrap: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},*/\r\n\tgeomancy: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\r\n\t//misc movexit undoing\r\n\tfrustration: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\treturn: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\thiddenpower: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tnaturalgift: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tpursuit: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tautotomize: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\tluckychant: {\r\n\t\tinherit: true,\r\n\t\tisNonstandard: null,\r\n\t},\r\n\t\r\n\t//brazdo and loria moves just in case\r\n\tcitrusysting: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tshortDesc: \"Paralyzes the target. Grass-types are immune.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Citrusy Sting\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, powder: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Acid Spray');\r\n\t\t},\r\n\t\tstatus: 'par',\r\n\t\tignoreImmunity: false,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {boost: {spd: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tberryblast: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"The type and power of this move depend on the user's held Berry, and the Berry is lost. Fails if the user is not holding a Berry, if the user has the Klutz Ability, or if Embargo, Magic Room, or an opponent's Rulebook is in effect for the user.\",\r\n\t\tshortDesc: \"Power and type depends on the user's berry; Consumes berry.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Berry Blast\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (pokemon.ignoringItem()) return;\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (!item.naturalGift) return;\r\n\t\t\tmove.type = item.naturalGift.type;\r\n\t\t},\r\n\t\tonPrepareHit(target, pokemon, move) {\r\n\t\t\tif (pokemon.ignoringItem()) return false;\r\n\t\t\tconst item = pokemon.getItem();\r\n\t\t\tif (!item.naturalGift) return false;\r\n\t\t\tthis.attrLastMove('[anim] Terrain Pulse');\r\n\t\t\tmove.basePower = item.naturalGift.basePower;\r\n\t\t\tpokemon.setItem('');\r\n\t\t\tpokemon.lastItem = item.id;\r\n\t\t\tpokemon.usedItemThisTurn = true;\r\n\t\t\tthis.runEvent('AfterUseItem', pokemon, null, null, item);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {basePower: 160},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tbushclaws: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'slp' || target.hasAbility('comatose')) return move.basePower * 2;\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Power doubles if the target is asleep.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Bush Claws\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Metal Claw');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t//Alolan Oricorio gets this too\r\n\trevelationspin: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"This move's type depends on the user's primary type. If the user's primary type is typeless, this move's type is the user's secondary type if it has one, otherwise the added type from Forest's Curse or Trick-or-Treat. This move is typeless if the user's type is typeless alone.\",\r\n\t\tshortDesc: \"Type varies based on the user's primary type.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Revelation Spin\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, dance: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Revelation Dance');\r\n\t\t},\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tlet type = pokemon.getTypes()[0];\r\n\t\t\tif (type === \"Bird\") type = \"???\";\r\n\t\t\telse if (type === \"Stellar\") type = pokemon.getTypes(false, true)[0];\r\n\t\t\tmove.type = type;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tfieldofvision: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user have their Special Defense lowered by 2 stages. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Burning Bulwark, Detect, Endure, Field of Vision, Firewall, King's Shield, Max Guard, Obstruct, Protect, Quick Guard, Silk Trap, Spiky Shield, Toxic Snowball, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.\",\r\n\t\tshortDesc: \"Protects from damaging attacks. Contact: -2 Sp. Def.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Field of Vision\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Laser Focus');\r\n\t\t},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'fieldofvision',\r\n\t\tonTryHit(pokemon) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', pokemon);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (['gmaxoneblow', 'gmaxrapidflow'].includes(move.id)) return;\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove/*) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (*/&& source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\tif (move.flags['contact']) {\r\n\t\t\t\t\tthis.boost({spd: -2}, source, target, this.dex.getActiveMove(\"Field of Vision\"));\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && move.flags['contact']) {\r\n\t\t\t\t\tthis.boost({spd: -2}, source, target, this.dex.getActiveMove(\"Field of Vision\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Psychic\",\r\n\t},\r\n\tjawcrush: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Prevents the user and the target from switching out. The user and the target can still switch out if either of them is holding Shed Shell or uses Baton Pass, Drift, Flip Turn, Frost Feint, Guardian Wind, Parting Shot, Poisonous Flight, Shed Tail, Swindle, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field.\",\r\n\t\tshortDesc: \"Traps both the user and the target\",\r\n\t\tisViable: true,\r\n\t\tname: \"Jaw Crush\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {bite: 1, contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Crunch');\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tsource.addVolatile('trapped', target, move, 'trapper');\r\n\t\t\ttarget.addVolatile('trapped', source, move, 'trapper');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t},\r\n/*\r\n\tclinch: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 60,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Clinch\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tdef: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 100,\r\n\t\t\t\t\tboosts: {\r\n\t\t\t\t\t\tspe: -1,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondaries: [],\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n*/\r\n\tsonicpulse: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Sonic Pulse\",\r\n\t\tpp: 30,\r\n\t\tdesc: \"Until the target faints or switches out, all further attacks used against it will become critical hits.\",\r\n\t\tshortDesc: \"Moves against the target become guaranteed crits.\",\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1},\r\n\t\tvolatileStatus: 'sonicpulse',\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Supersonic');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 0,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tif (effect && (['imposter', 'psychup', 'transform'].includes(effect.id))) {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'move: Sonic Pulse', '[silent]');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-start', pokemon, 'move: Sonic Pulse');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSourceModifyCritRatio(critRatio) {\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Sonic Pulse', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {boost: {atk: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tcenturyblade: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"This attack charges on the first turn and executes on the second. Raises the user's Defense by 1 stage on the first turn. If the user is holding a Power Herb or the weather is Desolate Land or Sunny Day, the move completes in one turn. If the user is holding Utility Umbrella and the weather is Desolate Land or Sunny Day, the move still requires a turn to charge.\",\r\n\t\tshortDesc: \"Raises Def by 1, hits turn 2. Sun: no charge.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Century Blade\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {charge: 1, protect: 1, mirror: 1, contact: 1, slicing: 1},\r\n\t\tonTryMove(attacker, defender, move) {\r\n\t\t\tif (attacker.removeVolatile(move.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-prepare', attacker, move.name);\r\n\t\t\tthis.boost({def: 1}, attacker, attacker, move);\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(attacker.effectiveWeather())) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', attacker, 'Solar Blade', defender);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.runEvent('ChargeMove', attacker, defender, move)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tattacker.addVolatile('twoturnmove', defender);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\t//Realmon distribution (pre-Loria): Carvanha Families, Snorunt line, Hydreigon line, Lycanroc line, Silvally, Guzzlord, Crobat line,\r\n\t//Noivern line, Mimikyu, Grimmsnarl line, Arbok line, Girafarig (+Farigiraf), Houndoom line, Mightyena line, Seviper, Huntail, \r\n\t//Eelektross line, Gengar line, Banette line, Hoennian Sableye (likely Desvegan too), Giratina, Trevenant, Lunala, Dragapult line\r\n\tdrainfang: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.\",\r\n\t\tshortDesc: \"User recovers 50% of the damage dealt.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Drain Fang\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, heal: 1, bite: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Strength Sap');\r\n\t\t},\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t//Realmon distribution (pre-Loria): Rhyhorn line, Mudkip line, Numel line, Johtonian Swinub line (likely Desvegan too), Mudbray line\r\n\tterracharge: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 10% chance to lower the target's Speed by 1 stage. If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.\",\r\n\t\tshortDesc: \"Has 33% recoil. 10% to lower target's Speed by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Terra Charge\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Head Smash');\r\n\t\t},\r\n\t\trecoil: [33, 100],\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ground\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//Pre-Loria Evo lines that could get it via Mirror Herb: Spoink, Darumaka, Oranguru, Woobat, Espurr, Pikipek\r\n\tpressurecook: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"This move's type effectiveness against Water is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"Super effective on Water.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Pressure Cook\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Psyshock');\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Water') return 1;\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//Pre-Loria Evo lines that could get it via Mirror Herb: Mienfoo, Ekans, Seviper, Skorupi, Croagunk (+Croakorrode), Trapinch\r\n\tpoisondart: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 10% chance to poison the target.\",\r\n\t\tshortDesc: \"Usually goes first. 10% chance to poison\",\r\n\t\tisViable: true,\r\n\t\tname: \"Poison Dart\",\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Poison Sting');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tstatus: 'psn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdarkfang: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit. In Double Battles, this move attempts to hit the targeted Pokemon and its ally once each. If hitting one of these Pokemon would be prevented by immunity, protection, semi-invulnerability, an Ability, or accuracy, it attempts to hit the other Pokemon twice instead. If this move is redirected, it hits that target twice.\",\r\n\t\tshortDesc: \"Hits twice. Doubles: Tries to hit each foe once.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Dark Fang\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, bite: 1, noparentalbond: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bite');\r\n\t\t},\r\n\t\tmultihit: 2,\r\n\t\tsmartTarget: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tmaxMove: {basePower: 130},\r\n\t},\r\n\teyeofchaos: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Damage is calculated using the user's Special Defense stat as its Special Attack, including stat stage changes. Other effects that modify the Special Attack stat are used as normal.\",\r\n\t\tshortDesc: \"Uses user's SpD stat as SpA in damage calculation.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Eye of Chaos\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Glare');\r\n\t\t},\r\n\t\toverrideOffensiveStat: 'spd',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t},\r\n\tdreadwing: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Damage is calculated using the target's Special Attack stat, including stat stage changes. The user's Ability and item are used as normal.\",\r\n\t\tshortDesc: \"Uses target's SpA stat in damage calculation.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Dread Wing\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Oblivion Wing');\r\n\t\t},\r\n\t\toverrideOffensivePokemon: 'target',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tforestrage: {\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Regardless of this move's type, it has neutral effectiveness against any types that it would otherwise be not very effective against. This move does not ignore type-based immunities.\", \r\n\t\tshortDesc: \"Ignores resistances.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Forest Rage\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.add('-anim', source, \"Work Up\");\r\n\t\t\tthis.add('-anim', source, \"Frenzy Plant\", target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (typeMod < 0) {\r\n\t\t\t\tthis.debug('Ignoring resist');\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\triverwrath: {\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Regardless of this move's type, it has neutral effectiveness against any types that it would otherwise be not very effective against. This move does not ignore type-based immunities.\", \r\n\t\tshortDesc: \"Ignores resistances.\",\r\n\t\tisViable: true,\r\n\t\tname: \"River Wrath\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.add('-anim', source, \"Work Up\");\r\n\t\t\tthis.add('-anim', source, \"Hydro Cannon\", target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (typeMod < 0) {\r\n\t\t\t\tthis.debug('Ignoring resist');\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n   // Flare Up, Toxic Snowball\r\n\tflareup: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"If the target's Attack stat is greater than the user's, the user's Speed is raised by 1 stage. Otherwise, the target's Defense is lowered by 1 stage.\",\r\n\t\tshortDesc: \"User's Atk >= target's: -1 Def; Otherwise user gains +1 Spe.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Flare Up\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Taunt');\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (source.getStat('atk', false, true) < target.getStat('atk', false, true)) {\r\n\t\t\t\tmove.self = {boosts: {spe: 1}};\r\n\t\t\t} else {\r\n\t\t\t\tmove.boosts = {def: -1};\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: {boost: {atk: 1}},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\ttoxicsnowball: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user is protected from most attacks made by other Pokemon during this turn. Attackers trying to use Special moves against it lose 1/4 of their maximum HP and are poisoned. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Burning Bulwark, Detect, Endure, Field of Vision, Firewall, King's Shield, Max Guard, Obstruct, Protect, Quick Guard, Silk Trap, Spiky Shield, Toxic Snowball, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.\",\r\n\t\tshortDesc: \"Protects user. Special blocked: Attacker loses 25% of max HP and gets poisoned.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Toxic Snowball\",\r\n\t\tpp: 10,\r\n\t\tpriority: 4,\r\n\t\tflags: {},\r\n\t\tstallingMove: true,\r\n\t\tvolatileStatus: 'toxicsnowball',\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Baneful Bunker');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\treturn !!this.queue.willAct() && this.runEvent('StallMove', target);\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.addVolatile('stall');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'move: Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect']) {\r\n\t\t\t\t\tif (move.isZ || (move.isMax && !move.breaksProtect)) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove/*) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (*/&& source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\tif (move.category == 'Special') {\r\n\t\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && move.category == 'Special') {\r\n\t\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Ice\",\r\n\t\tzMove: {boost: {def: 1}},\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\t// Loria Region\r\n\tpurification: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"If this move is successful and the user had any stat changes less than 0 upon using it, these stat changes are cleared afterward.\",\r\n\t\tshortDesc: \"Eliminates the user's negative stat changes.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Purification\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tsecondary: null,\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Diamond Storm\", target);\r\n\t\t\tthis.add('-anim', source, \"Recover\");\r\n\t\t},\r\n\t\tonHit(target, source, move){\r\n\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in source.boosts) {\r\n\t\t\t\tif (source.boosts[i] < 0) {\r\n\t\t\t\t\tboosts[i] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsource.setBoost(boosts);\r\n\t\t\tthis.battle.add('-clearnegativeboost', source);\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tguardianwind: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"For 3 turns, the user and its party members cannot have negative stat changes, non-volatile status conditions, or confusion inflicted on them by other Pokemon. The user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members.\",\r\n\t\tshortDesc: \"Sets Mist and Safeguard for 3 turns and then switches out.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Guardian Wind\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tselfSwitch: true,\r\n\t\tsideCondition: 'guardianwind',\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Tailwind');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tonBoost(boost, target, source, effect) {\r\n\t\t\t\tif (effect.effectType === 'Move' && effect.infiltrates && target.side !== source.side) return;\r\n\t\t\t\tif (source && target !== source) {\r\n\t\t\t\t\tlet showMsg = false;\r\n\t\t\t\t\tlet i: BoostName;\r\n\t\t\t\t\tfor (i in boost) {\r\n\t\t\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\r\n\t\t\t\t\t\tthis.add('-activate', target, 'move: Guardian Wind');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\t\tif (!effect || !source || effect.id === 'yawn'/*) return;\r\n\t\t\t\tif */|| (effect.effectType === 'Move' && effect.infiltrates && target.side !== source.side)) return;\r\n\t\t\t\tif (target !== source) {\r\n\t\t\t\t\tthis.debug('interrupting setStatus');\r\n\t\t\t\t\tif (effect.id === 'synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\t\tthis.add('-activate', target, 'move: Guardian Wind');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTryAddVolatile(status, target, source, effect) {\r\n\t\t\t\tif (!effect || !source) return;\r\n\t\t\t\tif (effect.effectType === 'Move' && effect.infiltrates && target.side !== source.side) return;\r\n\t\t\t\tif ((status.id === 'confusion' || status.id === 'yawn') && target !== source) {\r\n\t\t\t\t\tif (effect.effectType === 'Move' && !effect.secondaries) this.add('-activate', target, 'move: Guardian Wind');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Guardian Wind');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 21,\r\n\t\t\tonResidualSubOrder: 3,\r\n\t\t\tonEnd(side) {\r\n\t\t\t\tthis.add('-sideend', side, 'Guardian Wind');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allySide\",\r\n\t\ttype: \"Flying\",\r\n\t\tzMove: {effect: 'heal'},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tcoconutburst: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 25,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Hits two to five times. Each hit has a 10% chance to lower the target's Defense by 1 stage. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.\",\r\n\t\tshortDesc: \"Hits 2-5 times. 10% chance to lower the target's Defense by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Coconut Burst\",\r\n\t\tpp: 30,\r\n\t\tpriority: 0,\r\n\t\tflags: {bullet: 1, protect: 1, mirror: 1},\r\n\t\tmultihit: [2, 5],\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Rock Blast');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 10,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tzMove: {basePower: 140},\r\n\t\tmaxMove: {basePower: 130},\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\theatrelease: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"Fails unless the user is a Fire type. If this move is successful, it restores 2/3 of the user's maximum HP and if it is not Terastallized, the user's Fire type becomes typeless as long as it remains active.\",\r\n\t\tshortDesc: \"Restores 2/3 of Max HP; User's Fire type becomes typeless; must be Fire.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Heat Release\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, heal: 1},\r\n\t\theal: [2, 3],\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bulk Up');\r\n\t\t},\r\n\t\tonTryMove(pokemon, target, move) {\r\n\t\t\tif (pokemon.hasType('Fire')) return;\r\n\t\t\tthis.add('-fail', pokemon, 'move: Heat Release');\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonHit(pokemon) {\r\n\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Fire\" ? \"???\" : type));\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'), '[from] move: Heat Release');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Fire\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tsteadystream: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tbasePowerCallback() {\r\n\t\t\tif (this.field.pseudoWeather.steadystream) {\r\n\t\t\t\treturn 50 * this.field.pseudoWeather.steadystream.multiplier;\r\n\t\t\t}\r\n\t\t\treturn 50;\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"For every consecutive turn that this move is used by at least one Pokemon, this move's power is multiplied by the number of turns to pass, but not more than 5.\",\r\n\t\tshortDesc: \"Power increases when used on consecutive turns.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Steady Stream\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Sparkling Aria');\r\n\t\t},\r\n\t\tonTry() {\r\n\t\t\tthis.field.addPseudoWeather('steadystream');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart() {\r\n\t\t\t\tthis.effectData.multiplier = 1;\r\n\t\t\t},\r\n\t\t\tonRestart() {\r\n\t\t\t\tif (this.effectData.duration !== 2) {\r\n\t\t\t\t\tthis.effectData.duration = 2;\r\n\t\t\t\t\tif (this.effectData.multiplier < 5) {\r\n\t\t\t\t\t\tthis.effectData.multiplier++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tpsychicsurf: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"If the current terrain is Psychic Terrain and the user is grounded, this move has a 100% chance to raise the its Speed by 1 stage.\",\r\n\t\tshortDesc: \"User on Psychic Terrain: 100% chance to raise its Speed by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Psychic Surf\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Expanding Force');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tself: {\r\n\t\t\t\tonHit(target, source, move) {\r\n\t\t\t\t\treturn (this.field.isTerrain('psychicterrain') && source.isGrounded() && !!this.boost({spe: 1}, source));\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacent\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//Pre-Lorian mons that get this: Electivire, Mareep line, Shinx line, Pachirisu, Blitzle line, Eelektrik, Eelektross, Yamper line,\r\n\t// Toxel line, Rhyhorn line, Absol, Pikachu, Raichu, Plusle, Minun, Pachirisu, Emolga, Dedenne, Togedemaru, Rikomoco\r\n\r\n\tshocktail: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"If the target has at least one stat change greater than 0, then this move has a 100% chance to paralyze the target.\",\r\n\t\tshortDesc: \"Paralyzes if the target has positive stat boosts.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Shock Tail\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Charge\");\r\n\t\t\tthis.add('-anim', source, \"Iron Tail\", target);\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.positiveBoosts()) {\r\n\t\t\t\t\ttarget.trySetStatus('par', source, move);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//Vanillite, Tropius, and Snover lines get this too\r\n\tbananasplit: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit. In Double Battles, this move attempts to hit the targeted Pokemon and its ally once each. If hitting one of these Pokemon would be prevented by immunity, protection, semi-invulnerability, an Ability, or accuracy, it attempts to hit the other Pokemon twice instead. If this move is redirected, it hits that target twice.\",\r\n\t\tshortDesc: \"Hits twice. Doubles: Tries to hit each foe once.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Banana Split\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Icy Wind');\r\n\t\t},\r\n\t\tmultihit: 2,\r\n\t\tsmartTarget: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Ice\",\r\n\t\tmaxMove: {basePower: 130},\r\n\t},\r\n\tswindle: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"The user swaps its held item with the target's held item. If this move is successful, the user switches out even if it is trapped and is replaced immediately by a selected party member. Fails if either the user or the target is holding a Mail, Wonder Mask, or Z-Crystal, if neither is holding an item, if the user is trying to give or take a Mega Stone to or from the species that can Mega Evolve with it, or if the user is trying to give or take a Blue Orb, a Red Orb, a Griseous Orb, a Plate, a Drive, a Memory, a Rusted Sword, a Rusted Shield, or an Awakening Seed to or from a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, a Silvally, a Zacian, a Zamazenta, or a Lutakon respectively. The target is immune to this move if it has the Sticky Hold or Suction Cups Ability. The user does not switch out if there are no unfainted party members.\",\r\n\t\tshortDesc: \"Switches user's item with foe's. User switches out if successful.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Swindle\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, mystery: 1, reflectable: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Trick');\r\n\t\t},\r\n\t\tonTryImmunity(target) {\r\n\t\t\treturn !target.hasAbility(['stickyhold','suctioncups']);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\tconst myItem = source.takeItem();\r\n\t\t\tif (target.item || source.item || (!yourItem && !myItem)) {\r\n\t\t\t\tif (yourItem) target.item = yourItem.id;\r\n\t\t\t\tif (myItem) source.item = myItem.id;\r\n\t\t\t\tdelete move.selfSwitch;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(myItem && !this.singleEvent('TakeItem', myItem, source.itemData, target, source, move, myItem)) ||\r\n\t\t\t\t(yourItem && !this.singleEvent('TakeItem', yourItem, target.itemData, source, target, move, yourItem))\r\n\t\t\t) {\r\n\t\t\t\tif (yourItem) target.item = yourItem.id;\r\n\t\t\t\tif (myItem) source.item = myItem.id;\r\n\t\t\t\tdelete move.selfSwitch;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.add('-activate', source, 'move: Trick', '[of] ' + target);\r\n\t\t\tif (myItem) {\r\n\t\t\t\ttarget.setItem(myItem);\r\n\t\t\t\tthis.add('-item', target, myItem, '[from] move: Switcheroo');\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-enditem', target, yourItem, '[silent]', '[from] move: Switcheroo');\r\n\t\t\t}\r\n\t\t\tif (yourItem) {\r\n\t\t\t\tsource.setItem(yourItem);\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] move: Switcheroo');\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-enditem', source, myItem, '[silent]', '[from] move: Switcheroo');\r\n\t\t\t}\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tzMove: {boost: {spe: 2}},\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\t//Realmon distribution: Plusle, Minun, Eelektrik, Joltik, Chinchou, Regieleki, Stunfisk, Togedemaru, Blitzle, Zeraora\r\n\tsparkingleap: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a higher chance for a critical hit.\",\r\n\t\tshortDesc: \"High critical hit ratio.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Sparking Leap\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bolt Beak');\r\n\t\t},\r\n\t\tcritRatio: 2,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tpearlbarrage: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Attack and Special Attack by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to lower the foe(s)'s Attack and Sp. Atk by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Pearl Barrage\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Power Gem');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t\tspa: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Rock\",\r\n\t},\r\n\t//Pre-Loria distribution: Zarude, Rowlet line (+Presumably Decidueye-H), Cacnea line, Phantump line, Carnivine\r\n\tfireworkleaf: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"This move's type effectiveness against Steel is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"Super effective against Steel-types.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Firework Leaf\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, bullet: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t\tthis.add('-anim', source, \"Jungle Healing\", target);\r\n\t\t\tthis.add('-anim', source, \"Flame Burst\", target);\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Steel') return 1;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\t//Realmon distribtuion: Magby line, Cyndaquil line (+Presumably Typhlosion-H), Fennekin line, Salandit line, Kalosian Litleo line\r\n\tquickshot: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 40,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"No additional effect.\",\r\n\t\tshortDesc: \"Usually goes first.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Quick Shot\",\r\n\t\tpp: 30,\r\n\t\tpriority: 1,\r\n\t\tflags: {protect: 1, mirror: 1, bullet: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Ember');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tmercilessrend: {\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Drift, Frost Feint, Flip Turn, Parting Shot, Poisonous Flight, Shed Tail, Swindle, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Mortal Spin, Rapid Spin, or Substitute successfully. This effect is not stackable or reset by using this or another binding move.\",\r\n\t\tshortDesc: \"Traps and damages the target for 4-5 turns.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Merciless Rend\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, bite: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Crunch');\r\n\t\t},\r\n\t\tvolatileStatus: 'partiallytrapped',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Tough\",\r\n\t},\r\n\tskylance: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 130,\r\n\t\tcategory: \"Physical\",\r\n\t\tshortDesc: \"Fails if the user is grounded.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Sky Lance\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, gravity: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Aerial Ace');\r\n\t\t},\r\n\t\tonTryHit(target, source) {\r\n\t\t\tif (source.isGrounded()) return false;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tspellcast: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Has a 20% chance to cause the target to either fall asleep, become poisoned, or become paralyzed.\",\r\n\t\tshortDesc: \"20% chance to sleep, poison, or paralyze target.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Spell Cast\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Hex');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tonHit(target, source) {\r\n\t\t\t\tconst result = this.random(3);\r\n\t\t\t\tif (result === 0) {\r\n\t\t\t\t\ttarget.trySetStatus('par', source);\r\n\t\t\t\t} else if (result === 1) {\r\n\t\t\t\t\ttarget.trySetStatus('slp', source);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.trySetStatus('psn', source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tsteamingblast: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 95,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Has a 30% chance to burn the target. This move's type effectiveness against Water is changed to be super effective no matter what this move's type is.\",\r\n\t\tshortDesc: \"30% chance to burn. Super effective on Water.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Steaming Blast\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, defrost: 1, metronome: 1},\r\n\t\tthawsTarget: true,\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Steam Eruption');\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Water') return 1;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'brn',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tjawsoflife: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"If the target is an ally, this move restores 1/2 of its maximum HP, rounded down, instead of dealing damage. If the target is an opponent, it prevents it from switching out. The opponent can still switch out if it is holding Shed Shell or uses Baton Pass, Drift, Flip Turn, Frost Feint, Parting Shot, Poisonous Flight, Swindle, Teleport, U-turn, or Volt Switch. If the opponent leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.\",\r\n\t\tshortDesc: \"Traps if used on foe. If used on ally, heals by 50% of their max HP.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Jaws of Life\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, bite: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Psychic Fangs');\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (source.side === target.side) {\r\n\t\t\t\tmove.basePower = 0;\r\n\t\t\t\tmove.infiltrates = true;\r\n\t\t\t\tdelete move.secondaries;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHit(target, source) {\r\n\t\t\tif (source.side === target.side && !this.heal(Math.floor(target.baseMaxhp * 0.5))) {\r\n\t\t\t\tthis.add('-immune', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (source.isActive) target.addVolatile('trapped', source, move, 'trapper');\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\tjavelinstone: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 20% chance to lower the target's Defense by 1 stage.\",\r\n\t\tshortDesc: \"20% chance to lower the target's Defense by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Javelin Stone\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Rock Wrecker');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 20,\r\n\t\t\tboosts: {\r\n\t\t\t\tdef: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\t//Realmon distribution: Rhyhorn line, Onix line, Aron line, Armaldo, Regirock,\r\n\t//\tRampardos, Gigalith, Barbaracle, Lycanroc-Midnight, Stonjourner line\r\n \r\n\tcrippleclobber: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Speed by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to lower the target's Speed by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Cripple Clobber\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {contact: 1, protect: 1, mirror: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Low Kick');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspe: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n\tthunderstrike: {\r\n\t\taccuracy: 70,\r\n\t\tbasePower: 110,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"Has a 30% chance to paralyze the target. This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If the weather is Desolate Land or Sunny Day, this move does not check accuracy. If this move is used against a Pokemon holding Utility Umbrella, this move's accuracy remains at 70%.\",\r\n\t\tshortDesc: \"30% chance to paralyze. Can't miss in sun.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Thunderstrike\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, contact: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Bolt Strike');\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (this.field.isWeather(['sunnyday', 'desolateland'])) move.accuracy = true;\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tstatus: 'par',\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\taquaballet: {\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tdesc: \"Raises the user's Special Attack and Speed by 1 stage.\",\r\n\t\tshortDesc: \"Raises the user's Sp. Atk and Speed by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Aqua Ballet\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: {snatch: 1, dance: 1, metronome: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Rain Dance');\r\n\t\t},\r\n\t\tboosts: {\r\n\t\t\tspa: 1,\r\n\t\t\tspe: 1,\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: {effect: 'clearnegativeboost'},\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tironblaster: {\r\n\t\taccuracy: 80,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Has a 30% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"30% chance to lower the target's Sp. Def by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Iron Blaster\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Steel Beam');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tgenesiswave: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"The user recovers 3/4 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.\",\r\n\t\tshortDesc: \"User recovers 75% of the damage dealt.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Genesis Wave\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1, distance: 1, heal: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Parabolic Charge');\r\n\t\t},\r\n\t\tdrain: [3, 4],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"any\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tidlethunder: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 140,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move, Doom Desire, or Future Sight is already in effect for the target's position.\",\r\n\t\tshortDesc: \"Hits two turns after being used.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Idle Thunder\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: {},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Zap Cannon');\r\n\t\t},\r\n\t\tisFutureMove: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\r\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\r\n\t\t\t\tmove: 'idlethunder',\r\n\t\t\t\tsource: source,\r\n\t\t\t\tmoveData: {\r\n\t\t\t\t\tid: 'idlethunder',\r\n\t\t\t\t\tname: \"Idle Thunder\",\r\n\t\t\t\t\taccuracy: 100,\r\n\t\t\t\t\tbasePower: 140,\r\n\t\t\t\t\tcategory: \"Special\",\r\n\t\t\t\t\tpriority: 0,\r\n\t\t\t\t\tflags: {},\r\n\t\t\t\t\teffectType: 'Move',\r\n\t\t\t\t\tisFutureMove: true,\r\n\t\t\t\t\ttype: 'Electric',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.add('-start', source, 'Idle Thunder');\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t},\r\n\tdisasterbolt: {\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Special\",\r\n\t\tdesc: \"Has a 100% chance to lower the target's Special Defense by 1 stage.\",\r\n\t\tshortDesc: \"100% chance to lower the target's Sp. Def by 1.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Disaster Bolt\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Thunder');\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tchance: 100,\r\n\t\t\tboosts: {\r\n\t\t\t\tspd: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t},\r\n\tdragonsgift: {\r\n\t\taccuracy: 90,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Physical\",\r\n\t\tdesc: \"If this move is successful, it deals damage or heals the target. 40% chance for 80 power, 30% chance for 100 power, 10% chance for 120 power, and 20% chance to raise the target's critical hit ratio by 1 stage.\",\r\n\t\tshortDesc: \"80, 100, 120 power, or raises the target's crit ratio by 1 stage.\",\r\n\t\tisViable: true,\r\n\t\tname: \"Dragon's Gift\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: {protect: 1, mirror: 1},\r\n\t\tonPrepareHit: function(target, source, move) {\r\n\t\t\tthis.attrLastMove('[anim] Dynamax Cannon');\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tconst rand = this.random(10);\r\n\t\t\tif (rand < 2) {\r\n\t\t\t\ttarget.addVolatile('gmaxchistrike');\r\n\t\t\t\tmove.infiltrates = true;\r\n\t\t\t} else if (rand < 6) {\r\n\t\t\t\tmove.basePower = 80;\r\n\t\t\t} else if (rand < 9) {\r\n\t\t\t\tmove.basePower = 100;\r\n\t\t\t} else {\r\n\t\t\t\tmove.basePower = 120;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Cute\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
