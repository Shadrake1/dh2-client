{
  "version": 3,
  "sources": ["../../../../data/mods/maadowrlostzone/abilities.ts"],
  "sourcesContent": ["export const Abilities: { [abilityid: string]: ModdedAbilityData } = {\r\n  absorption: {\r\n\t  shortDesc: \"Increases user's base Def or SpD in terrain.\",\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain') || this.field.isTerrain('electricterrain')) return this.chainModify(1.5);\r\n\t\t},\r\n\t    onModifySpDPriority: 6,\r\n\t\tonModifySpD(pokemon) {\r\n\t\t\tif (this.field.isTerrain('acidicterrain') || this.field.isTerrain('mistyterrain') || this.field.isTerrain('psychicterrain')) return this.chainModify(1.5);\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Absorption\",\r\n\t\trating: 2,\r\n\t\tnum: -1,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tacidicsurge: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Acidic Terrain for 5 turns. During the effect, the power of Poison-type attacks made by grounded Pok\u00E9mon is multiplied by 1.3, and grounded Steel-types are not immune to Poison-type damage. Steel-type Pok\u00E9mon are still immune to being poisoned and badly poisoned, except by Pok\u00E9mon with Corrosion. Camouflage transforms the user into a Poison-type, Nature Power becomes Sludge Bomb, and Secret Power has a 30% chance to cause poison. Lasts for 8 turns if the user is holding a Terrain Extender (such as through Skill Swap).\",\r\n\t\tshortDesc: \"5 turns. Grounded: +Poison power, Steel not immune to Poison type.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Acidic Surge\",\r\n\t\trating: 4,\r\n\t\tnum: -2,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tmimicry: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonTerrainChange(pokemon) {\r\n\t\t\tlet types;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\tcase 'electricterrain':\r\n\t\t\t\ttypes = ['Electric'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grassyterrain':\r\n\t\t\t\ttypes = ['Grass'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mistyterrain':\r\n\t\t\t\ttypes = ['Fairy'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psychicterrain':\r\n\t\t\t\ttypes = ['Psychic'];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'acidicterrain':\r\n\t\t\t\ttypes = ['Poison'];\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault:\r\n\t\t\t\ttypes = pokemon.baseSpecies.types;\r\n\t\t\t}\r\n\t\t\tconst oldTypes = pokemon.getTypes();\r\n\t\t\tif (oldTypes.join() === types.join() || !pokemon.setType(types)) return;\r\n\t\t\tif (this.field.terrain || pokemon.transformed) {\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'), '[from] ability: Mimicry');\r\n\t\t\t\tif (!this.field.terrain) this.hint(\"Transform Mimicry changes you to your original un-transformed types.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Mimicry');\r\n\t\t\t\tthis.add('-end', pokemon, 'typechange', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mimicry\",\r\n\t\trating: 0,\r\n\t\tnum: 250,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tagitation: {\r\n\t\tdesc: \"When this Pok\u00E9mon raises or lowers another Pok\u00E9mon's stat stages, the effect is increased by one stage for each affected stat.\",\r\n\t\tshortDesc: \"Increases stat stage changes the Pok\u00E9mon inflicts by 1 stage.\",\r\n\t\tonAnyTryBoost(boost, target, source, effect) {\r\n\t\t\t// Prevent the effect if it's a Z-Power move\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\r\n\t\t\t// Ensure that the target and source are valid and not the same\r\n\t\t\tif (!target || !source || target === source || source !== this.effectState.target) return;\r\n\t\r\n\t\t\t// Iterate through the boost object to modify stat changes\r\n\t\t\tfor (const stat in boost) {\r\n\t\t\t\t// Type assertion to ensure stat is a key of BoostsTable\r\n\t\t\t\tconst boostValue = boost[stat as keyof BoostsTable];\r\n\t\t\t\tif (boostValue !== undefined) {\r\n\t\t\t\t\tif (boostValue < 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue - 1; // Exacerbate debuffs\r\n\t\t\t\t\t} else if (boostValue > 0) {\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = boostValue + 1; // Augment buffs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Agitation\",\r\n\t\trating: 4,\r\n\t\tnum: -3,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n   ampup: {\r\n\t\tdesc: \"When this Pok\u00E9mon's move misses, raises its Speed by 2 stages.\",\r\n\t\tshortDesc: \"Raises user's Speed by 2 stages if its move misses.\",\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (pokemon.moveThisTurnResult === false) {\r\n\t\t\t\tthis.boost({spe: 2});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Amp Up\",\r\n\t   rating: 2,\r\n\t   num: -4,\r\n\t},\r\n\t// end\r\n\r\n\t// start:\r\n   buzz: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Sound move, the target(s) will be inflicted with a Torment effect.\",\r\n\t\tshortDesc: \"Inflicts Torment effect if the Pok\u00E9mon uses a Sound move.\",\r\n\t\tonAfterMove(source: Pokemon, target: Pokemon, move: ActiveMove) {\r\n\t\t\tif (!move.flags['sound']) return;\r\n\t\r\n\t\t\tconst applyTorment = (pokemon: Pokemon) => {\r\n\t\t\t\tif (pokemon && !pokemon.hasAbility('soundproof') && !pokemon.volatiles['torment'] && !pokemon.volatiles['stall']) {\r\n\t\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Torment', '[from] ability: Buzz');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tswitch (move.target) {\r\n\t\t\t\tcase 'all':\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tapplyTorment(pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'allAdjacent':\r\n\t\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\t\tapplyTorment(adjacent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'allAdjacentFoes':\r\n\t\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\t\tapplyTorment(foe);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'normal':\r\n\t\t\t\t\tapplyTorment(target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'self':\r\n\t\t\t\t\tapplyTorment(source);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(`Unhandled move target: ${move.target}`); // notifier in case there's a type of Sound move I forgot to handle\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t    name: \"Buzz\",\r\n\t\trating: 3,\r\n\t\tnum: -5,\r\n\t},\t\t\r\n\t// end\r\n\r\n\t// start: look for typetracker and soaksteeldenial in condition.ts, Soak in moves.ts\r\n\t// If someone wishes to copy this ability, make sure you account for Magic Powder and special form changes from certain Pkm (like\r\n\t// my own Aegislash-Ma'adowr which is Grass / Steel in shield form and Grass / Flying in blade form. Form changes override any\r\n\t// temporary type change effect from stuff like Soak or Burn Up, etc.! Magic Powder isn't in my regional dex, so, that's one stuff\r\n\t// less to worry about.)\r\n   chainlink: {\r\n\t\tshortDesc: \"In a double battle, the Pok\u00E9mon steals its partner's Steel type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\t\tif (!pokemon.hasType('Steel')) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\t\tif (ally.hasAbility('chainlink')) continue; // don't bounce back and forth indefinitely\r\n\t\t\t\t\tif (ally.hasType('Steel') && pokemon.addType('Steel')) {\r\n\t\t\t\t\t\tthis.add('-ability', pokemon, 'Chain Link');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} stole its partner's armor!`);\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Ability: Chain Link');\r\n\t\t\t\t\t\tally.addVolatile('chainlink');\r\n\t\t\t\t\t\tally.addVolatile('typetracker'); // New Inclusion to keep track of fringe cases...\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.hasType('Steel')) return;\r\n\t\t\t// doesn't happen twice if the ally has already returned the armor\r\n\t\t\tfor (const ally of pokemon.allies()) {\r\n\t\t\t\tally.removeVolatile('chainlink');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tpokemon.setType(pokemon.getTypes(true).map(type => type === \"Steel\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t},\r\n\t\t\tonSwitchOut(pokemon) { // it seems like volatiles may not run onEnd on their own the way Abilities do\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tpokemon.removeVolatile('chainlink');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tfor (const ally of pokemon.allies()) { // revert Chain Link user's type first\r\n\t\t\t\t\tif (ally.hasAbility('chainlink') && ally.hasType('Steel')) {\r\n\t\t\t\t\t\tconst currentTypes = ally.getTypes();\r\n                \t\tconst newTypes = currentTypes.filter(type => type !== 'Steel'); // Remove Steel type\r\n                \t\tally.setType(newTypes); // Set the new types without Steel\r\n               \t\t \tthis.add('-ability', ally, 'Chain Link');\r\n                \t\tthis.add('-message', `${ally.name} returned its partner's armor!`);\r\n                \t\tthis.add('-start', ally, 'typechange', ally.types.join('/'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Now we handle the Pok\u00E9mon and add a special case for Mechatauro as it could theoretically have ???-typing twice through\r\n\t\t\t\t// Chain Link and Burn Up\r\n\t\t\t\tif (pokemon.hasType('???')) {\r\n\t\t\t\t\tif (pokemon.baseSpecies.name === 'Mechatauro') {\r\n\t\t\t\t\t\t// Replace only the first instance of ??? with Steel for Mechatauro\r\n\t\t\t\t\t\tconst currentTypes = pokemon.getTypes();\r\n\t\t\t\t\t\tconst newTypes = [];\r\n\t\t\t\t\t\tlet replaced = false; // Flag to track if we've replaced the first ???\r\n\t\t\t\t\r\n\t\t\t\t\t\tfor (const type of currentTypes) {\r\n\t\t\t\t\t\t\tif (type === '???' && !replaced) {\r\n\t\t\t\t\t\t\t\tnewTypes.push('Steel'); // Replace the first ??? with Steel\r\n\t\t\t\t\t\t\t\treplaced = true; // Set the flag to true after replacement\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewTypes.push(type); // Keep the other types as they are\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\tpokemon.setType(newTypes); // Set the new types with Steel replacing the first ???\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Replace all instances of ??? with Steel for other Pok\u00E9mon\r\n\t\t\t\t\t\tconst currentTypes = pokemon.getTypes();\r\n\t\t\t\t\t\tconst newTypes = currentTypes.filter(type => type !== '???').concat('Steel');\r\n\t\t\t\t\t\tpokemon.setType(newTypes); // Set the new types including Steel\r\n\t\t\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.types.join('/'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (pokemon.volatiles['typetracker'] && pokemon.baseSpecies.name !== 'Aegislash-Ma\\'adowr' &&\r\n\t\t\t\t\tpokemon.baseSpecies.name !== 'Aegislash-Blade-Ma\\'adowr' && pokemon.hasType('Water')) {\r\n\t\t\t\t\t// Add Steel type to the Pok\u00E9mon\r\n    \t\t\t\tif (!pokemon.hasType('Steel')) {\r\n        \t\t\t\tpokemon.addType('Steel'); // Add Steel type if it doesn't already have it; it's just to be safe even if I cannot imagine how the Pkm would have gained Steel beforehand...\r\n        \t\t\t\tthis.add('-start', pokemon, 'typeadd', 'Steel', '[from] Typetracker');\r\n        \t\t\t\tthis.add('-message', `${pokemon.name} gained its Steel type back!`);\r\n    \t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Chain Link\",\r\n\t\trating: 3,\r\n\t\tnum: -6,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcoupdegrass: {\r\n\t\tdesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less of its maximum HP, rounded down. Does not affect moves that have multiple targets.\",\r\n\t\tshortDesc: \"This Pok\u00E9mon moves first in its priority bracket when its target has 1/2 or less HP.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\tif (!action) return;\r\n\t\t\tconst target = this.getTarget(action.pokemon, action.move, action.targetLoc);\r\n\t\t\tif (!target) return;\r\n\t\t\t// Check if the target's HP is at or below half\r\n\t\t\tif (target.hp <= Math.floor(target.maxhp / 2)) {\r\n\t\t\t\t// Check if the move is not a spread move\r\n\t\t\t\tif (action.move.target !== 'allAdjacent' && action.move.target !== 'all') {\r\n\t\t\t\t\tpokemon.addVolatile('coupdegrass');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst action = this.queue.willMove(pokemon);\r\n\t\t\t\tif (action) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Coup de Grass');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} prepared to move immediately!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyPriority(priority) {\r\n\t\t\t\treturn priority + 0.1;\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Coup de Grass\",\r\n\t\trating: 3,\r\n\t\tnum: -7,\r\n\t},\r\n\t// end\r\n\r\n\t// start:\r\n\tcultivation: {\r\n\t\tshortDesc: \"User and ally recover 1/16 of their HP in terrain.\",\r\n\t\tonResidualOrder: 26,\r\n    \tonResidual(pokemon) {\r\n\t\t//onTerrainChange(target, source) {\r\n\t\t\t// Check if any relevant terrain is active\r\n\t\t\tif (this.field.isTerrain('electricterrain') || \r\n\t\t\t\tthis.field.isTerrain('grassyterrain') || \r\n\t\t\t\tthis.field.isTerrain('mistyterrain') || \r\n\t\t\t\tthis.field.isTerrain('psychicterrain') || \r\n\t\t\t\tthis.field.isTerrain('acidicterrain')) {\r\n\t\t\t\t\r\n\t\t\t\t// Heal the user by 1/16 of its max HP\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t\t\t\r\n\t\t\t\t// Heal the ally by 1/16 of their max HP\r\n\t\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon && !ally.fainted);\r\n\t\t\t\t\tif (ally) {\r\n\t\t\t\t\t\tthis.heal(ally.baseMaxhp / 16, ally);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Cultivation\",\r\n\t\trating: 2,\r\n\t\tnum: -8,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tgraviton: {\r\n\t\tshortDesc: \"Ally faints: user sets Gravity.\",\r\n\t\tonAfterMega(source) {\r\n\t\t\tif (!source.side.faintedLastTurn) return; // this is a new line added to balance the ability\r\n\t\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tif (!source.side.faintedThisTurn) return; // this is a new line added to balance the ability\r\n\t\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Graviton\",\r\n\t\trating: 4,\r\n\t\tnum: -9,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tillwind: {\r\n\t\tshortDesc: \"Sets Tailwind when user replaces a fainted ally.\",\r\n\t\t//onAfterMega(pokemon) {\r\n\t\t//\tif (!pokemon.side.faintedLastTurn) return;\r\n\t\t//\tthis.field.addPseudoWeather('tailwind');\r\n\t  // },\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tpokemon.side.addSideCondition('tailwind');\r\n       \t//\tthis.add('-sidestart', pokemon.side, 'move: Tailwind');\r\n    \t},\r\n\t\tflags: {},\r\n\t\tname: \"Ill Wind\",\r\n\t\trating: 5,\r\n\t\tnum: -10,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tinoculum: {\r\n\t\tdesc: \"Pok\u00E9mon on user's side receive 50% less damage from Fire moves and receive halfed Burn damage.\",\r\n\t\tshortDesc: \"User's side: Heatproof effect.\",\r\n\t\tname: \"Inoculum\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Fire') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Inoculum damage reduction from Fire-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Inoculum, reducing damage from the Fire-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Inoculum damage reduction for burn damage');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Inoculum, reducing burn damage!`);\r\n\t\t\t\t\treturn damage / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\t\r\n\t\tflags: {},\r\n\t\trating: 2,\r\n\t\tnum: -11,\r\n\t},\r\n\t\r\n\t// end\r\n\r\n\t// start\r\n\tinterference: {\r\n\t\tshortDesc: \"If user gets hurt by a move, inflicts Torment on the attacker.\",\r\n   \t\tonDamagingHit(damage, target, source, move) {\r\n\t\t//\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tsource.addVolatile('torment', this.effectState.target);\r\n\t\t//\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Interference\",\r\n\t\trating: 3,\r\n\t\tnum: -12,\r\n\t},\r\n\t// end\r\n\t\r\n\t// start: Malware\r\n\tmalware: {\r\n\t\tdesc: \"As long as user is on the field, all other Pok\u00E9mon are considered poisoned and loose 1/16 of their HP from this status condition.\",\r\n\t\tshortDesc: \"Considers others poisoned. 1/16 damage.\",\r\n\t\tname: \"Malware\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Malware');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Malware is active!`);\r\n\t\t\tthis.effectState.malwareUser = pokemon;\r\n\t\t\tthis.eachEvent('Update');\r\n\t\t},\r\n\t\tonAnyDragOut(pokemon) {\r\n\t\t\tpokemon.removeVolatile('malwarepoisoned');\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon === this.effectState.malwareUser) {\r\n\t\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\t\tif (target !== pokemon && !target.hasType('Poison') && !target.hasType('Steel') && !target.status) {\r\n\t\t\t\t\t\t// Check for immunity to poison\r\n\t\t\t\t\t\tif (target.isGrounded() && this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Misty Terrain!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasAbility('immunity')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name}'s Immunity prevents it from being poisoned!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasAbility('comatose')) {\r\n\t\t\t\t\t\t\t//\tthis.add('-message', `${target.name}'s Immunity prevents it from being poisoned!`);\r\n\t\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.getSideCondition('safeguard')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Safeguard!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.hasItem('sunring') && (target.baseSpecies.baseSpecies === 'Horizonoc')) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Sun Ring!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Check if the ally is Horizonoc and Sun or Desolate Land is active\r\n\t\t\t\t\t\tconst allyPresent = target.side.active.some(ally => ally && ally !== target && ally.baseSpecies.baseSpecies === 'Horizonoc' && ally.hasItem('sunring'));\r\n\t\t\t\t\t\tif (allyPresent && ['sunnyday', 'desolateland'].includes(this.field.effectiveWeather())) {\r\n\t\t\t\t\t\t//\tthis.add('-message', `${target.name} is protected from being poisoned because its ally Horizonoc is present with Sun Ring and the weather is active!`);\r\n\t\t\t\t\t\t\tcontinue; // Skip applying poison and flag\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.add('-message', `${target.name} is affected by Malware!`);\r\n\t\t\t\t\t\ttarget.setStatus('psn', pokemon, null, true);\r\n\t\t\t\t\t\ttarget.addVolatile('malwarepoisoned');\r\n\t\t\t\t\t//\tthis.add('-start', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); //this is internal check\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\t// Remove all Malware poison effects when the user switches out\r\n\t\tfor (const target of this.getAllActive()) {\r\n\t\t\tif (target.volatiles['malwarepoisoned']) {\r\n\t\t\t\ttarget.removeVolatile('malwarepoisoned');\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tthis.add('-end', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\t\tthis.add('-message', `${target.name} is cured of Malware poison.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// This method handles when any Pok\u00E9mon switches out\r\n\t\tonAnySwitchOut(pokemon) {\r\n\t\t// Check if the switching Pok\u00E9mon has the malwarepoisoned status\r\n\t\tif (pokemon.volatiles['malwarepoisoned']) {\r\n\t\t\tpokemon.removeVolatile('malwarepoisoned'); // Remove the malwarepoisoned volatile status\r\n\t\t\tif (pokemon.status === 'psn') {\r\n\t\t\t\tpokemon.cureStatus(); // Cure the poison status if it exists\r\n\t\t\t\t}\r\n\t\t\t//\tthis.add('-end', pokemon, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\tthis.add('-message', `${pokemon.name} is cured of Malware poison.`);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonFaint(pokemon) {\r\n\t\t// Remove all Malware poison effects when the user faints\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.volatiles['malwarepoisoned']) {\r\n\t\t\t\t\ttarget.removeVolatile('malwarepoisoned');\r\n\t\t\t\t\tif (target.status === 'psn') {\r\n\t\t\t\t\t\ttarget.cureStatus();\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tthis.add('-end', target, 'malwarepoisoned', '[from] ability: Malware', '[of] ' + pokemon); // this is internal check\r\n\t\t\t\t\tthis.add('-message', `${target.name} is cured of Malware poison.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\trating: 4,\r\n\t\tnum: -13,\r\n\t},\r\n\t// end\r\n\t\r\n\t// start\r\n\tmasquerade: {\r\n\t\tdesc: \"This Pok\u00E9mon inherits the Ability of the last unfainted Pokemon in its party until it takes direct damage from another Pok\u00E9mon's attack. Abilities that cannot be copied are \\\"No Ability\\\", As One, Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Gulp Missile, Hunger Switch, Ice Face, Illusion, Imposter, Multitype, Neutralizing Gas, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, Wonder Guard, and Zen Mode.\",\r\n\t\tshortDesc: \"Inherits the Ability of the last party member. Wears off when attacked.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || pokemon.volatiles['masquerade']) return;\r\n\t\t\tpokemon.addVolatile('masquerade');\r\n\t\t\tlet i;\r\n\t\t\tfor (i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\r\n\t\t\t\tif (!pokemon.side.pokemon[i]) continue;\r\n\t\t\t\tconst additionalBannedAbilities = [\r\n\t\t\t\t\t'noability', 'caretaker', 'desertmirage', 'dittobolic', 'flowergift', 'forecast', 'hugepower', 'hungerswitch', 'illusion', \r\n\t\t\t\t\t'imposter', 'malware', 'neutralizinggas', 'poultageist', 'powerofalchemy', 'psychout', 'purepower', 'receiver', 'sharedmindset', \r\n\t\t\t\t\t'skyrider', 'teamup', 'trace', 'wonderguard',\r\n\t\t\t\t];\r\n\t\t\t\tif (\r\n\t\t\t\t\tpokemon.side.pokemon[i].fainted ||\r\n\t\t\t\t\t(pokemon.side.pokemon[i].getAbility() as any).isPermanent || additionalBannedAbilities.includes(pokemon.side.pokemon[i].ability)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.side.pokemon[i] || pokemon === pokemon.side.pokemon[i]) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst masquerade = pokemon.side.pokemon[i];\r\n\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\tpokemon.setAbility(masquerade.ability);\r\n\t\t\tthis.hint(`${pokemon.name} inherited ${this.dex.abilities.get(pokemon.ability).name} from ${masquerade.name}!`);\r\n\t\t\tthis.add('-ability', pokemon, this.dex.abilities.get(pokemon.ability).name, '[silent]');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (pokemon.hasAbility('masquerade')) return;\r\n\t\t\t\tif (this.effectState.busted) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Masquerade');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name}'s Masquerade wore off!`);\r\n\t\t\t\t\tpokemon.setAbility('masquerade');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Masquerade\",\r\n\t\trating: 3,\r\n\t\tnum: -14,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpermafrost: {\r\n\t\tshortDesc: \"Boosts Ice moves by 50% on user's side.\",\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Permafrost boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Permafrost\",\r\n\t\trating: 3.5,\r\n\t\tnum: -15,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpoisonspit: {\r\n\t\tshortDesc: \"Sets Acidic Terrain when hurt.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('acidicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Poison Spit\",\r\n\t\trating: 2,\r\n\t\tnum: -16,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\treconfiguration: {\r\n\t\tshortDesc: \"Boosts user's stat depending on target's best stat.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst foes = pokemon.side.foe.active;\r\n\t\t\tconst target = foes[foes.length - 1 - pokemon.position];\r\n\t\t\tif (!target) return;\r\n\t\t\tthis.boost({[target.getBestStat(false,true)]: 1});\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Reconfiguration\",\r\n\t\trating: 3,\r\n\t\tnum: -17,\r\n\t},\r\n\t// end\r\n\r\n\t// start: \r\n\trewind: {\r\n\t\tshortDesc: \"Recovers items on user's side at 50% or below. Form change.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Chronosensis' || pokemon.transformed) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 2) {\r\n\t\t\t\tif (pokemon.species.forme !== 'Alternate') {\r\n\t\t\t\t\tpokemon.formeChange('Chronosensis-Alternate');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.forme === 'Alternate') {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.set.species);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Chronosensis' || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 2) {\r\n\t\t\t\tif (pokemon.species.forme !== 'Alternate') {\r\n\t\t\t\t\tpokemon.formeChange('Chronosensis-Alternate');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.forme === 'Alternate') {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.set.species);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\t// Check if the target's HP is brought to 50% or below after damage is applied\r\n\t\t\tif (target.hp - damage <= target.maxhp / 2) {\r\n\t\t\t\tthis.effectState.rewindTriggered = true; // Mark that the ability has been triggered\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondary(target, source, move) {\r\n\t\t\t// Check if the ability was triggered\r\n\t\t\tif (this.effectState.rewindTriggered) {\r\n\t\t\t\tthis.effectState.rewindTriggered = false; // Reset the trigger\r\n\t\t\t\t// Recover items from all Pok\u00E9mon on the user's side that don't already have an item\r\n\t\t\t\tfor (const ally of target.side.pokemon) {\r\n\t\t\t\t\tif (ally && !ally.item) { // Only recover items for allies without items\r\n\t\t\t\t\t\t// Use Recycle to recover the item\r\n\t\t\t\t\t\tthis.actions.useMove('Recycle', ally);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Rewind\",\r\n\t\trating: 4,\r\n\t\tnum: -18,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tscaleshift: {\r\n\t\tshortDesc: \"Copies its partner's first type.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted) return; // should activate *after* Data Mod\r\n\t\r\n\t\t\tlet newtype = null;\r\n\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\tif (ally && ally !== pokemon && !ally.fainted && !ally.hasAbility('scaleshift') &&\r\n\t\t\t\t\tally.types[0] !== pokemon.baseSpecies.types[0] &&\r\n\t\t\t\t\tally.types[0] !== pokemon.baseSpecies.types[1]) {\r\n\t\t\t\t\tnewtype = ally.types[0];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tif (newtype) {\r\n\t\t\t\tconst typecombo = [newtype, pokemon.baseSpecies.types[1]];\r\n\t\t\t\tif (pokemon.getTypes().join() === typecombo.join() || !pokemon.setType(typecombo)) return;\r\n\t\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.getTypes().join() === pokemon.baseSpecies.types.join() || !pokemon.setType(pokemon.baseSpecies.types)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Scale Shift');\r\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'));\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Scale Shift\",\r\n\t\trating: 3,\r\n\t\tnum: -19,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsolarcore: {\r\n\t\tshortDesc: \"During intense sunlight, this Pok\u00E9mon can skip the charging turn of its moves.\",\r\n\t\tonChargeMove(pokemon, target, move) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('Solar Core - remove charge turn for ' + move.id);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', pokemon, move.name, target);\r\n\t\t\t\treturn false; // skip charge turn\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Solar Core\",\r\n\t\trating: 2,\r\n\t\tnum: -20,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsteelbreaker: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's attacks are critical hits if the target is a Steel-type Pok\u00E9mon.\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target && target.hasType('Steel')) return 5;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Steelbreaker\",\r\n\t\trating: 3,\r\n\t\tnum: -21,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\ttempestuous: {\r\n\t\tdesc: \"When replacing a fainted party member, this Pok\u00E9mon's Special Defense is boosted, and it charges power to double the power of its Electric-type move on its first turn.\",\r\n\t\tshortDesc: \"Gains the effect of Charge when replacing a fainted ally.\",\r\n\t\tonAfterMega(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedLastTurn) return;\r\n\t\t\tthis.boost({spd: 1}, pokemon);\r\n     \t\t// Check if Charge is already active\r\n\t\t\tif (!pokemon.volatiles['charge']) {\r\n\t\t\t//\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t\t\t\tpokemon.addVolatile('charge'); // Apply Charge effect\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.side.faintedThisTurn) return;\r\n\t\t\tthis.boost({spd: 1}, pokemon);\r\n\t\t\t// Check if Charge is already active\r\n\t\t\tif (!pokemon.volatiles['charge']) {\r\n\t\t\t//\tthis.add('-activate', pokemon, 'move: Charge');\r\n\t\t\t\tpokemon.addVolatile('charge'); // Apply Charge effect\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Tempestuous\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\t// thermal expansion\r\n\tthermalexpansion: {\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (!target.hasType('Ice')) return;\r\n\t\t\tif (effect && effect.id === 'stealthrock') {\r\n\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes().join('/'));\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (!target.hasType('Ice')) return;\r\n\t\t\tif (move.type === 'Rock') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Thermal Expansion');\r\n\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === \"Ice\" ? \"???\" : type));\r\n\t\t\t\tthis.add('-start', target, 'typechange', target.getTypes().join('/'));\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (target.hasType('Ice')) return;\r\n\t\t\tif (!target.addType('Ice')) return false;\r\n\t\t\tif (effect.id === 'snow') {\r\n\t\t\t\tthis.add('-start', target, 'typeadd', 'Ice', '[from] ability: Thermal Expansion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Thermal Expansion\",\r\n\t\tshortDesc: \"If user is Ice-type, immunity to Stealth Rock and Rock-type moves. On immunity, lose Ice-type. Regain in Snow or switch.\",\r\n\t\trating: 4,\r\n\t\tnum: -23,\r\n\t},\r\n\r\n\t// end\r\n\r\n\t// start\r\n\tvampirism: {\r\n\t\tshortDesc: \"Replaces target's ability with Vampirism if user made contact.\",\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tconst sourceAbility = source.getAbility();\r\n\t\t\tconst targetAbility = target.getAbility();\r\n\t\r\n\t\t\t// Check if the target's ability can be suppressed\r\n\t\t\tif (targetAbility.flags['cantsuppress'] || targetAbility.id === 'vampirism') {\r\n\t\t\t\treturn; // Exit if the target's ability cannot be replaced or is already Vampirism\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check if the move makes contact\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, !source.isAlly(target))) {\r\n\t\t\t\t// Replace the target's ability with Vampirism\r\n\t\t\t\tconst oldAbility = target.setAbility('vampirism', source);\r\n\t\t\t\tif (oldAbility) {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Vampirism', this.dex.abilities.get(oldAbility).name, '[of] ' + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Vampirism\",\r\n\t\trating: 3,\r\n\t\tnum: -24,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\twoodstove: {\r\n\t\tshortDesc: \"Ice does 50% less damage against user's side.\",\r\n\t\tonAnyModifyDamage(damage, source, target, effect) {\r\n\t\t\tif (source && effect && effect.effectType === 'Move' && effect.type === 'Ice') {\r\n\t\t\t\tif (target === this.effectState.target || target.isAlly(this.effectState.target)) {\r\n\t\t\t\t\tthis.debug('Wood Stove damage reduction from Ice-type move');\r\n\t\t\t\t//\tthis.add('-message', `${target.name} is protected by Wood Stove, reducing damage from the Ice-type move!`);\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if the user or any ally is frozen\r\n\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tif (ally.status === 'frz') {\r\n\t\t\t\t\tthis.add('-activate', ally, 'ability: Wood Stove');\r\n\t\t\t\t\tally.cureStatus(); // Cure the frozen status for the ally\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t // Also check the user of the ability\r\n\t\t\t if (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Wood Stove');\r\n\t\t\t\tpokemon.cureStatus(); // Cure the frozen status for the user\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\t// Grant immunity to freeze for the user and their allies\r\n\t\t\tif (type === 'frz') {\r\n\t\t\t\tconst allies = pokemon.side.active; // Get all active Pok\u00E9mon on the user's side\r\n\t\t\t\tfor (const ally of allies) {\r\n\t\t\t\t\tif (ally === pokemon || ally.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.add('-immune', ally, 'ability: Wood Stove');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // Prevent the freeze status from being applied\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Wood Stove\",\r\n\t\trating: 2,\r\n\t\tnum: -25,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tskyrider: {\r\n\t\tshortDesc: \"Tag Team: Escavalier and Grapplin.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst grapplin = pokemon.side.active.find(ally => ally.species.name === 'Grapplin');\r\n\r\n    \t\tif (!grapplin) return; // Ensure Grapplin is present\r\n\r\n\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\tif ((grapplin) && !grapplin.volatiles['skyriding']) {\r\n\t\t\t\tgrapplin.addVolatile('skyriding')\r\n\t\t\t} // end\r\n\r\n    \t\tif (pokemon.hasType('Steel')) {\r\n        \t\t// If the user is Steel and Grapplin is not Steel, add skyriderally to Grapplin\r\n        \t\tif (!grapplin.hasType('Steel')) {\r\n            \t\tgrapplin.addVolatile('skyriderally');\r\n        \t\t}\r\n    \t\t} else {\r\n        \t\t// If the user is not Steel, remove skyriderally from Grapplin\r\n        \t\tif (grapplin.volatiles['skyriderally']) {\r\n            \t\tgrapplin.removeVolatile('skyriderally');\r\n        \t\t}\r\n    \t\t}\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\tif (ally && ally.volatiles['skyriderally']) {\r\n\t\t\t\t\tally.removeVolatile('skyriderally');\r\n\t\t\t\t}\r\n\t\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['skyriding']) {\r\n\t\t\t\t\tally.removeVolatile('skyriding')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\tif (ally && ally.volatiles['skyriderally']) {\r\n\t\t\t\t\tally.removeVolatile('skyriderally');\r\n\t\t\t\t}\r\n\t\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['skyriding']) {\r\n\t\t\t\t\tally.removeVolatile('skyriding')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\tif (ally && ally.volatiles['skyriderally']) {\r\n\t\t\t\t\tally.removeVolatile('skyriderally');\r\n\t\t\t\t}\r\n\t\t\t\t// This is a new line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['skyriding']) {\r\n\t\t\t\t\tally.removeVolatile('skyriding')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonPrepareHit(pokemon, target, move) {\r\n\t\t\tconst grapplin = pokemon.side.active.find(ally => ally.species.name === 'Grapplin');\r\n   \t\t\tif (!grapplin) return; // Ensure Grapplin is present\r\n\r\n\t\t\t// Check if the move is not a status move\r\n\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t// Loop through the action queue\r\n\t\t\t\tfor (const action of this.queue.list as MoveAction[]) {\r\n\t\t\t\t\t// Check if the action is valid\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!action.move || !action.pokemon?.isActive ||\r\n\t\t\t\t\t\taction.pokemon.fainted || action.maxMove || action.zmove\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue; // Skip invalid actions\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t// Check if the action belongs specifically to the ally; indirectly, that's Grapplin\r\n\t\t\t\t\tif (action.pokemon.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.queue.prioritizeAction(action, move); // Prioritize the action\r\n\t\t\t\t\t\tthis.add('-waiting', pokemon, action.pokemon); // Notify that Grapplin is waiting\r\n\t\t\t\t\t\tbreak; // Exit the loop but not the function, meaning user's move should be able to do damage now\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Sky Rider\",\r\n\t\trating: 0,\r\n\t\tnum: -26,\r\n\t},\r\n\t// end\r\n\r\n\t// start: Archetype\r\n\tarchetype: {\r\n\t\tshortDesc: \"Gains opposite effect of target's lowered stat.\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move && move.target === 'allAdjacentFoes') {\r\n\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...foe.boosts };\r\n\t\t\t\t\t\tfoe.addVolatile('archetype', source);\r\n\t\t\t\t\t\tfoe.volatiles['archetype'].boosts = boosts;\r\n\t\t\t\t\t//\tthis.add('-start', foe, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t\t\t//\tthis.add('-message', `${foe.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'allAdjacent') {\r\n\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\tconst boosts = { ...adjacent.boosts };\r\n\t\t\t\t\t\tadjacent.addVolatile('archetype', source);\r\n\t\t\t\t\t\tadjacent.volatiles['archetype'].boosts = boosts;\r\n\t\t\t\t\t//\tthis.add('-start', adjacent, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t\t\t//\tthis.add('-message', `${adjacent.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (move && move.target === 'normal') {\r\n\t\t\t\tconst boosts = { ...target.boosts };\r\n\t\t\t\ttarget.addVolatile('archetype', source);\r\n\t\t\t\ttarget.volatiles['archetype'].boosts = boosts;\r\n\t\t\t//\tthis.add('-start', target, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t//\tthis.add('-message', `${target.name}'s boosts were copied: ${JSON.stringify(boosts)}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (target === source) return; // originally had \"target.fainted\" but its inclusion might be unnecessary, especially in VGC where if one ally faints, the other becomes unaffected by ability\r\n\t\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\ttype BoostStatistics = typeof stats[number];\r\n\t\t\tconst boostGains: Partial<Record<BoostStatistics, number>> = {};\r\n\t\r\n\t\t\tfor (const activeTarget of this.getAllActive()) {\r\n\t\t\t\tif (!activeTarget.volatiles['archetype']) continue;\r\n\t\r\n\t\t\t\tconst storedBoosts = activeTarget.volatiles['archetype'].boosts;\r\n\t\t\t\tconst currentBoosts = activeTarget.boosts;\r\n\t\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\tif (currentBoosts[stat] < storedBoosts[stat] || \r\n\t\t\t\t\t\t(currentBoosts[stat] < 0 && currentBoosts[stat] < storedBoosts[stat])) {\r\n\t\t\t\t\t\tconst difference = storedBoosts[stat] - currentBoosts[stat];\r\n\t\t\t\t\t\tboostGains[stat] = (boostGains[stat] || 0) + difference;\r\n\t\r\n\t\t\t\t\t//\tthis.add('-message', `${source.name} gains ${difference} ${stat} boost from ${activeTarget.name}'s lower boost.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdelete activeTarget.volatiles['archetype'];\r\n\t\t\t//\tthis.add('-end', activeTarget, 'Archetype', '[from] ability: Archetype');\r\n\t\t\t}\r\n\t\r\n\t\t\t// Apply all boost gains at once and trigger visual display\r\n\t\t\tif (Object.keys(boostGains).length > 0) {\r\n\t\t\t\tthis.boost(boostGains, source, source, this.effect);\r\n\t\t\t}\r\n\t\t},\t\r\n\t\tflags: {},\r\n\t\tname: \"Archetype\",\r\n\t\trating: 4,\r\n\t\tnum: -27,\r\n\t},\r\n\t// end\r\n\t// start\r\n\tparasignal: {\r\n\t\tshortDesc: \"Sets Psychic Terrain when hurt.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Parasignal\",\r\n\t\trating: 2,\r\n\t\tnum: -28,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tsharedmindset: {\r\n\t\tdesc: \"Applies opposite of negative stat changes to ally Mycecroak's opposite stat, and vice versa: (Atk/SpA, Def/SpD).\",\r\n\t\tshortDesc: \"Atk/SpA & Def/SpD for Mycecroak, and vice versa.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst partnermycecroak = pokemon.side.active.find(ally => ally.species.name === 'Mycecroak');\r\n    \t\tif (!partnermycecroak) return;\r\n\t\t\tif (partnermycecroak) {\r\n\t\t\t\tif (!partnermycecroak.volatiles['fungus']) {\r\n\t\t\t\t\tpartnermycecroak.addVolatile('fungus')\r\n\t\t\t\t}\r\n\t\t\t\tif (!pokemon.volatiles['fungus']) {\r\n\t\t\t\t\tpokemon.addVolatile('fungus')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Shared Mindset\",\r\n\t\trating: 3,\r\n\t\tnum: -30,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcaretaker: {\r\n\t\tdesc: \"If there's a Swanneil ally, that Pok\u00E9mon can no longer switch out and becomes invulnerable until the Arbarnacle user faints. Arbarnacle has all of its stats boosted by 1 + Ingrain.\",\r\n\t\tshortDesc: \"Commander effect; reversed; Swanneil.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (this.gameType !== 'doubles') return;\r\n\t\t\tconst ally = pokemon.allies()[0];\r\n\t\t\tif (!ally || pokemon.baseSpecies.baseSpecies !== 'Arbarnacle' || ally.baseSpecies.baseSpecies !== 'Swanneil') {\r\n\t\t\t\tif (pokemon.getVolatile('caretaking')) pokemon.removeVolatile('caretaking');\r\n\t\t\t\tif (ally && ally.getVolatile('caretaken')) ally.removeVolatile('caretaken');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (!pokemon.getVolatile('caretaking')) {\r\n\t\t\t\tif (ally.getVolatile('caretaken')) return;\r\n\t\t\t\tthis.queue.cancelAction(ally);\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Caretaker', '[of] ' + ally);\r\n\t\t\t\tpokemon.addVolatile('caretaking');\r\n\t\t\t\tally.addVolatile('caretaken');\r\n\t\t\t} else {\r\n\t\t\t\tif (!ally.fainted) return;\r\n\t\t\t\tpokemon.removeVolatile('caretaking');\r\n\t\t\t\tally.removeVolatile('caretaken');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Caretaker\",\r\n\t\trating: 0,\r\n\t\tnum: -31,\r\n\t},\r\n\t// end\r\n\r\n\t// start, Color Spray, -32\r\n\tcolorspray: {\r\n\t\tshortDesc: \"Changes attacker's type to user's primary type.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t// Check if the source (attacker) and target (user of the ability) are valid\r\n\t\t\tif (!source) return;\r\n\t\r\n\t\t\t// Get the user's primary type\r\n\t\t\tconst userPrimaryType = target.types[0];\r\n\t\t\t\r\n\t\t\t// Change the attacker's type to the user's primary type\r\n\t\t\tif (source.setType(userPrimaryType)) {\r\n\t\t\t\tthis.add('-start', source, 'typechange', userPrimaryType, '[from] ability: Color Spray', '[of] ' + target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Color Spray\",\r\n\t\trating: 2,\r\n\t\tnum: -32,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcounterbalance: {\r\n\t\tdesc: \"When this Pok\u00E9mon's Attack is modified, its Special Attack is modified in the opposite way, and vice versa. The same is true for its Defense and Special Defense.\",\r\n\t\tshortDesc: \"Applies the opposite of stat changes to the opposite stat (Atk/Sp. Atk, Def/Sp. Def).\",\r\n\t\tonAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (!boost || effect.id === 'counterbalance') return;\r\n\t\t\tlet activated = false;\r\n\t\t\tconst counterbalanceBoost: SparseBoostsTable = {};\r\n\t\t\tif (boost.spa) {\r\n\t\t\t\tcounterbalanceBoost.atk = -1 * boost.spa;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.spd) {\r\n\t\t\t\tcounterbalanceBoost.def = -1 * boost.spd;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.atk) {\r\n\t\t\t\tcounterbalanceBoost.spa = -1 * boost.atk;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (boost.def) {\r\n\t\t\t\tcounterbalanceBoost.spd = -1 * boost.def;\r\n\t\t\t\tactivated = true;\r\n\t\t\t}\r\n\t\t\tif (activated === true) {\r\n\t\t\t\tthis.add('-ability', target, 'Counterbalance');\r\n\t\t\t\tthis.boost(counterbalanceBoost, target, target, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Counterbalance\",\r\n\t\trating: 4,\r\n\t\tnum: -33,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcryptobiosis: {\r\n\t\tdesc: \"If user's HP is at 50% or below, it receives halfed damage, including indirect damage.\",\r\n\t\tshortDesc: \"User's HP <= 50%: 1/2 damage reduction.\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.hp <= target.maxhp / 2) {\r\n\t\t\t\tthis.debug('Cryptobiosis damage reduction');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Cryptobiosis\",\r\n\t\trating: 3.5,\r\n\t\tnum: -34,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tdesertmirage: {\r\n\t\tdesc: \"Sand: Ground/Flying, Rain: Ground/Water, Sun: Ground/Fire, Snow: Ground/Ice.\",\r\n\t\tshortDesc: \"Gains additional type in weather.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Dustform' || pokemon.transformed) return;\r\n\t\t\tlet forme = null;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformsunny') forme = 'Dustform-Sunny';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformrainy') forme = 'Dustform-Rainy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformsnowy') forme = 'Dustform-Snowy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\tcase 'desertgales':\r\n\t\t\t\tif (pokemon.species.id !== 'dustformsandy') forme = 'Dustform-Sandy';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (pokemon.species.id !== 'dustform') forme = 'Dustform';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (pokemon.isActive && forme) {\r\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"Desert Mirage\",\r\n\t\trating: 2,\r\n\t\tnum: -35,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tdesertgales: {\r\n\t\tdesc: \"On switch-in, this Pok\u00E9mon summons Desert Gales for 5 turns. During the effect, Ground-, Rock-, and Steel-type attacks have their power multiplied by 1.2; Normal-type moves become Ground-type moves; Weather Ball becomes a Ground-type move, and its base power is 100; and other weather-related moves and Abilities behave as they do in Sandstorm.\",\r\n\t\tshortDesc: \"5 turns. +Ground/Rock/Steel power, Normal moves become Ground-type.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('desertgales');\r\n\t\t},\r\n\t\tname: \"Desert Gales\",\r\n\t\trating: 4,\r\n\t\tnum: -36,\r\n\t},\r\n\t// modded for Desert Gales\r\n\tsandforce: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isWeather('sandstorm') || this.field.isWeather('desertgales')) {\r\n\t\t\t\tif (move.type === 'Rock' || move.type === 'Ground' || move.type === 'Steel') {\r\n\t\t\t\t\tthis.debug('Sand Force boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"This Pok\u00E9mon's Ground/Rock/Steel attacks do 1.3x in Sandstorm and Desert Gales; immunity to Sandstorm.\",\r\n\t},\r\n\tsandrush: {\r\n\t\tinherit: true,\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather('sandstorm') || this.field.isWeather('desertgales')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If Sandstorm or Desert Gales is active, this Pok\u00E9mon's Speed is doubled; immunity to Sandstorm.\",\r\n\t},\r\n\tsandveil: {\r\n\t\tinherit: true,\r\n\t\tonModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tif (this.field.isWeather('sandstorm') || this.field.isWeather('desertgales')) {\r\n\t\t\t\tthis.debug('Sand Veil - decreasing accuracy');\r\n\t\t\t\treturn this.chainModify([3277, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"If Sandstorm or Desert Gales is active, this Pok\u00E9mon's evasiveness is 1.25x; immunity to Sandstorm.\",\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tdittobolic: {\r\n\t\tshortDesc: \"Transforms into ally and faints it. +50% HP.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.switchingIn = true; // Set flag for switching in\r\n\t\t//\tconsole.log(`Dittobolic activated for ${pokemon.name}.`);\r\n\t\t},\r\n\t\t\r\n\t\tonStart(pokemon) {\r\n\t\t\t// Check if the Pok\u00E9mon is actually switching in\r\n\t\t\tif (!this.effectState.switchingIn) return;\r\n\t\t\r\n\t\t\t// Find a non-fainted ally to transform into\r\n\t\t\tlet target = null;\r\n\t\t\tfor (const ally of pokemon.side.pokemon) {\r\n\t\t\t\tif (ally && !ally.fainted && ally !== pokemon) {\r\n\t\t\t\t\ttarget = ally;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (!target) {\r\n\t\t//\t\tconsole.log(`No valid ally found for ${pokemon.name} to transform into.`);\r\n\t\t\t\tthis.effectState.switchingIn = false; // Reset flag\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// Log details of transformation\r\n\t\t//\tconsole.log(`${pokemon.name} is transforming into the ally ${target.name}.`);\r\n\t\t\r\n\t\t\t// Perform transformation logic\r\n\t\t\tpokemon.transformInto(target, this.dex.abilities.get('dittobolic'));\r\n\t\t\r\n\t\t\t// Display battle message indicating which Pok\u00E9mon was transformed into\r\n\t\t\tthis.add('-message', `${pokemon.name} sacrificed and transformed into the ally ${target.name}!`);\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t// If I ever have need of this part to balance the ability\r\n\t\t\t// Get the target's max HP\r\n\t\t\tconst targetMaxHP = target.baseMaxhp;\r\n\r\n\t\t\t// Get the target's remaining HP\r\n\t\t\tconst targetRemainingHP = target.hp;\r\n\r\n\t\t\t// Calculate the percentage of remaining HP\r\n\t\t\tconst remainingHPPercentage = targetRemainingHP / targetMaxHP;\r\n\r\n\t\t\t// Calculate HP increase (50% of target's remaining HP as a percentage)\r\n\t\t\tconst hpIncrease = Math.floor(targetMaxHP * remainingHPPercentage * 0.5);\r\n\r\n\t\t\t// Increase the user's base max HP\r\n\t\t\tpokemon.baseMaxhp += hpIncrease;\r\n\r\n\t\t\t// Calculate new max HP, considering Dynamax state\r\n\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\r\n\t\t\t// Adjust current HP proportionally\r\n\t\t\tconst hpPercentage = pokemon.hp / pokemon.baseMaxhp;\r\n\t\t\tpokemon.hp = Math.floor(newMaxHP * hpPercentage);\r\n\t\t\tpokemon.maxhp = newMaxHP;\r\n\r\n\t\t\tthis.add('-message', `${pokemon.name}'s HP increased by ${hpIncrease}!`);\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');*/\r\n\r\n\t\t\t// Faint the ally\r\n\t\t\ttarget.faint();\r\n\r\n\t\t\t// Calculate new max HP (50% increase)\r\n\t\t\tpokemon.baseMaxhp = Math.floor(pokemon.baseMaxhp * 1.5);\r\n\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\r\n\t\t\r\n\t\t\t// Adjust current HP proportionally\r\n\t\t\tconst hpPercentage = pokemon.hp / pokemon.maxhp;\r\n\t\t\tpokemon.hp = Math.floor(newMaxHP * hpPercentage);\r\n\t\t\tpokemon.maxhp = newMaxHP;\r\n\t\t\r\n\t\t\tthis.add('-message', `${pokemon.name}'s HP increased by 50%!`);\r\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\r\n\t\t\t// Reset the switching in flag\r\n\t\t\tthis.effectState.switchingIn = false;\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1},\r\n\t\tname: \"Dittobolic\",\r\n\t\trating: 5,\r\n\t\tnum: -37,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tendlessdream: {\r\n\t\tdesc: \"While this Pokemon is active, every other Pokemon is treated as if it has the Comatose ability. Pokemon that are either affected by Sweet Veil, or have Insomnia or Vital Spirit as their abilities are immune this effect.\",\r\n\t\tshortDesc: \"All Pokemon are under Comatose effect.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.add('-ability', source, 'Endless Dream');\r\n\t\t\tthis.field.addPseudoWeather('endlessdream');\r\n\t\t\tthis.hint(\"All Pokemon are under Comatose effect!\");\r\n\t\t},\r\n\t\tonResidualOrder: 21,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.field.removePseudoWeather('endlessdream');\r\n\t\t},\r\n\t\tname: \"Endless Dream\",\r\n\t\trating: 3,\r\n\t\tnum: -22,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tfimbulvetr: {\r\n\t\tdesc: \"Sets side condition on user's side lasting for 5 turns. Causes 1/8 chip damage in Snow/Hail.\",\r\n\t\tshortDesc: \"1/8 chip damage in Snow/Hail.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check if Hail, Ice Age, or Snow is active\r\n\t\t\tconst weather = this.field.weather;\r\n\t\t\tif (weather === 'hail' || weather === 'snow') {\r\n\t\t\t\t// Check if the opponent's side already has a Fimbulvetr side condition\r\n\t\t\t\tif (!pokemon.side.foe.getSideCondition('fimbulvetr')) {\r\n\t\t\t\t\t// Set the Fimbulvetr side condition on the opponent's side\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} sets up Fimbulvetr on the opponent's side!`);\r\n\t\t\t\t\tpokemon.side.foe.addSideCondition('fimbulvetr');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Fimbulvetr\",\r\n\t\trating: 4,\r\n\t\tnum: -39,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tgoodwill: {\r\n\t\tdesc: \"Stops stats from further lowering if they've already been lowered. Type of stat dependent.\",\r\n\t\tshortDesc: \"Stops further stat lowering.\",\t\t\r\n\t\tonChangeBoost(boost: Partial<BoostsTable>, target: Pokemon, source: Pokemon | null, effect: Effect) {\r\n\t\t\tif (!target.volatiles['goodwill']) {\r\n\t\t\t\ttarget.addVolatile('goodwill');\r\n\t\t\t}\r\n\t\t\tconst goodwillEffect = target.volatiles['goodwill'];\r\n\t\t\t\r\n\t\t\tfor (const stat in boost) {\r\n\t\t\t\tif (boost[stat as keyof BoostsTable] && boost[stat as keyof BoostsTable]! < 0) {\r\n\t\t\t\t\t// Check if the stat is already lowered\r\n\t\t\t\t\tif (target.boosts[stat as keyof BoostsTable] < 0) {\r\n\t\t\t\t\t\tif (!goodwillEffect.affectedStats) {\r\n\t\t\t\t\t\t\tgoodwillEffect.affectedStats = [] as (keyof BoostsTable)[];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!goodwillEffect.affectedStats.includes(stat as keyof BoostsTable)) {\r\n\t\t\t\t\t\t\tgoodwillEffect.affectedStats.push(stat as keyof BoostsTable);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tboost[stat as keyof BoostsTable] = 0;\r\n\t\t\t\t\t\tthis.add('-fail', target, 'unboost', stat, '[from] ability: Goodwill');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon: Pokemon) {\t\r\n\r\n\t\t\t\r\n\t\t\t// start\r\n\t\t\t// New line to account for ally\r\n\t\t\tif (pokemon && pokemon.side && Array.isArray(pokemon.side.active)) {\r\n\t\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\t\t// Ensure ally is defined, not fainted, and doesn't already have the extension\r\n\t\t\t\t\tif (ally && ally !== pokemon && !ally.fainted && !ally.volatiles['goodwillextension']) {\r\n\t\t\t\t\t\tally.addVolatile('goodwillextension'); // Grant extension to ally\r\n\t\t\t\t\t//\tthis.add('-start', ally, 'Goodwill Extension', '[of] ' + pokemon.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// end\r\n\r\n\t\t\tif (!pokemon.volatiles['goodwill']) return;\r\n\t\t\tconst goodwillEffect = pokemon.volatiles['goodwill'];\r\n\t\t\t\r\n\t\t\tif (goodwillEffect.affectedStats) {\r\n\t\t\t\tgoodwillEffect.affectedStats = goodwillEffect.affectedStats.filter((stat: keyof BoostsTable) => \r\n\t\t\t\t\tpokemon.boosts[stat] < 0\r\n\t\t\t\t);\r\n\t\t\t\tif (goodwillEffect.affectedStats.length === 0) {\r\n\t\t\t\t\tdelete goodwillEffect.affectedStats;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\t\r\n\t\tname: \"Goodwill\",\r\n\t\trating: 3.5,\r\n\t\tnum: -40,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tcosmicpull: {\r\n\t\tshortDesc: \"No Guard, but cannot be suppressed.\",\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tflags: {failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Cosmic Pull\",\r\n\t\trating: 4,\r\n\t\tnum: -41,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tlunarparticles: {\r\n\t\tdesc: \"After any of this Pok\u00E9mon's stats is reduced, making contact with a Pok\u00E9mon on its team lowers the attacker's Spe. The duration is one turn for each stat stage that was reduced, and the duration is extended if stats are reduced again while it is already in effect.\",\r\n\t\tshortDesc: \"Stat reduction: contact lowers attacker's Spe.\",\r\n\t\tname: \"Lunar Particles\",\r\n\t\tonTryBoost(boost: Partial<BoostsTable>, target: Pokemon, source: Pokemon, effect: Effect) {\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\tif ((boost as any)[i] < 0) {\r\n\t\t\t\t\tlet num = (boost as any)[i];\r\n\t\t\t\t\twhile (num !== 0) {\r\n\t\t\t\t\t\ttarget.side.addSideCondition('lunarparticles');\r\n\t\t\t\t\t\tnum++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(side) {\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Lunar Particles');\r\n\t\t\t\tthis.add('-message', `The gravity around ${this.effectState.source.name}'s team increased!`);\r\n\t\t\t\tthis.hint(`During Lunar Particles, making contact with a Pok\u00E9mon on ${this.effectState.source.name}'s team will result in Spe drop!`);\r\n\t\t\t\tthis.hint(`The effect is extended each time ${this.effectState.source.name}'s stats are lowered!`);\r\n\t\t\t\tthis.effectState.duration = 2;\r\n\t\t\t},\r\n\t\t\tonRestart(side) {\r\n\t\t\t\tthis.effectState.duration++;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.side === this.effectState.target && move.flags['contact']) {\r\n\t\t\t\t\tthis.boost({spe: -1}, source);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 10,\r\n\t\t\tonResidual(side) {\r\n\t\t\t\tif (this.effectState.duration > 1) {\r\n\t\t\t\t\tthis.add('-message', `There are ${this.effectState.duration} turns left of Lunar Particles!`);\r\n\t\t\t\t} else if (this.effectState.duration === 1) {\r\n\t\t\t\t\tthis.add('-message', `There is one turn left of Lunar Particles!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(side) {\r\n\t\t\t\tthis.add('-message', `The gravity around ${this.effectState.source.name}'s team wore off!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\trating: 3.5,\r\n\t\tnum: -42,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tmetamorphosis: {\r\n\t\tshortDesc: \"Increases best stat in non-acidic terrain.\",\r\n\t\t/*onStart(pokemon) {\r\n\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t\tthis.add('-ability', pokemon, 'Metamorphosis');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s best stat is ${this.effectState.bestStat}!`);\r\n\t\t},*/\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\r\n\t\t},\r\n\t\tonChangeBoost(boost, pokemon) {\r\n\t\t\tconst newBestStat = pokemon.getBestStat(false, true);\r\n\t\t\tif (this.effectState.bestStat !== newBestStat) {\r\n\t\t\t\tthis.effectState.bestStat = newBestStat;\r\n\t\t\t\tif (['grassyterrain', 'electricterrain', 'mistyterrain', 'psychicterrain'].includes(this.field.terrain)) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Metamorphosis');\r\n\t\t\t\t//\tthis.add('-message', `${pokemon.name}'s best stat is now ${newBestStat}!`);\r\n\t\t\t\t\tthis.add('-start', pokemon, 'metamorphosis' + this.effectState.bestStat);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'atk' && \r\n\t\t\t\t['grassyterrain', 'electricterrain', 'mistyterrain', 'psychicterrain'].includes(this.field.terrain)) {\r\n\t\t\t\tthis.debug('Metamorphosis atk boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 5,\r\n\t\tonModifyDef(def, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'def' && \r\n\t\t\t\t['grassyterrain', 'electricterrain', 'mistyterrain', 'psychicterrain'].includes(this.field.terrain)) {\r\n\t\t\t\tthis.debug('Metamorphosis def boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'spa' && \r\n\t\t\t\t['grassyterrain', 'electricterrain', 'mistyterrain', 'psychicterrain'].includes(this.field.terrain)) {\r\n\t\t\t\tthis.debug('Metamorphosis spa boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 5,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'spd' && \r\n\t\t\t\t['grassyterrain', 'electricterrain', 'mistyterrain', 'psychicterrain'].includes(this.field.terrain)) {\r\n\t\t\t\tthis.debug('Metamorphosis spd boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpePriority: 5,\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.effectState.bestStat === 'spe' && \r\n\t\t\t\t['grassyterrain', 'electricterrain', 'mistyterrain', 'psychicterrain'].includes(this.field.terrain)) {\r\n\t\t\t\tthis.debug('Metamorphosis spe boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Metamorphosis\",\r\n\t\trating: 3,\r\n\t\tnum: -43,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tmyomancy: {\r\n\t\tshortDesc: \"Spotlight on entry.\",\r\n\t\t// Triggered when the Pok\u00E9mon with Myomancy switches in\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\t// Check if there is an ally present\r\n\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon);\r\n\t\t\tif (ally) {\r\n\t\t\t\t// Add the spotlight volatile to the ally\r\n\t\t\t\tally.addVolatile('spotlight');\r\n\t\t\t\tthis.add('-message', `${ally.name} is now in the spotlight!`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Myomancy\",\r\n\t\trating: 3,\r\n\t\tnum: -44,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpoisonscatter: {\r\n\t\tshortDesc: \"Poisons all others when attacked.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\tif (pokemon === target || pokemon.fainted) continue;\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', target, 'Poison Scatter');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.trySetStatus('psn', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Poison Scatter\",\r\n\t\trating: 2,\r\n\t\tnum: -45,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpoultageist: {\r\n\t\tshortDesc: \"Returns by fainting; Wonder Guard; once.\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (target.baseSpecies.baseSpecies === 'Restowl' && target.species.forme !== 'Guardian') {\r\n\t\t\t\tif (damage >= target.hp) {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Poultageist');\r\n\t\t\t\t\tthis.add('-message', `${target.name} survived with 1 HP due to Poultageist!`);\r\n\t\t\t\t\tthis.effectState.guardian = true;\r\n\t\t\t\t\treturn target.hp - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies === 'Restowl' && this.effectState.guardian) {\r\n\t\t\t\tpokemon.formeChange('Restowl-Guardian', this.effect, true);\r\n\t\t\t\tpokemon.setAbility('Wonder Guard');\r\n\t\t\t\tpokemon.hp = 1;\r\n            \tpokemon.maxhp = 1;\r\n\t\t\t\tthis.add('-message', `${pokemon.name} transformed into Restowl-Guardian!`);\r\n\t\t\t\tthis.add('-ability', pokemon, 'Wonder Guard');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {\r\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1,\r\n\t\t\tcantsuppress: 1, breakable: 1, notransform: 1,\r\n\t\t},\r\n\t\tname: \"Poultageist\",\r\n\t\trating: 4,\r\n\t\tnum: -46,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tpsychout: {\r\n\t\tdesc: \"If a Pok\u00E9mon on user's side would faint from damage, it hangs on. Once per game.\",\r\n\t\tshortDesc: \"No fainting from damage. Once.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\t// Ensure that hasTriggered is set to false at the start of the battle\r\n\t\t\tif (!this.effectState.hasTriggered) {\r\n\t\t\t\tthis.effectState.hasTriggered = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, move) {\r\n\t\t\t// Check if the ability has already triggered\r\n\t\t\tif (this.effectState.hasTriggered) return damage;\r\n\t\t\t\r\n\t\t\tif (damage >= target.hp) {\r\n\t\t\t\t// Set the flag to true to prevent future activations\r\n\t\t\t\tthis.effectState.hasTriggered = true;\r\n\t\t\t\t\r\n\t\t\t\treturn target.hp - 1; // Set HP to 1 instead of fainting\r\n\t\t\t}\r\n\t\t\treturn damage; // Return the original damage if conditions aren't met\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\t// Check for allies with the psychoutnotifier volatile condition\r\n\t\t\tconst hasNotifierAlly = pokemon.side.active.some(ally => \r\n\t\t\t\tally !== pokemon && \r\n\t\t\t\tally.hp > 0 && \r\n\t\t\t\tally.volatiles['psychoutnotifier']\r\n\t\t\t)\r\n\t\r\n\t\t\t// If an ally has psychoutnotifier, prevent further triggering of this ability\r\n\t\t\tif (hasNotifierAlly) {\r\n\t\t\t\tthis.effectState.hasTriggered = true; // Mark as triggered permanently\r\n\t\t\t\treturn; // Exit early since we don't need to proceed further\r\n\t\t\t}\r\n\r\n\t\t\t// Check if the ability has already triggered\r\n\t\t\tif (this.effectState.hasTriggered) {\r\n\t\t\t\t// Remove psychout volatile from any ally if it has been triggered\r\n\t\t\t\tconst ally = pokemon.side.active.find(ally => ally !== pokemon && ally.hp > 0);\r\n\t\t\t\tif (ally && ally.volatiles['psychout']) {\r\n\t\t\t\t\tally.removeVolatile('psychout');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check if the user has an ally\r\n\t\t\tconst ally = pokemon.side.active.find(ally => ally !== pokemon && ally.hp > 0);\r\n\t\t\t\r\n\t\t\t// If an ally exists and it doesn't have the psychout volatile condition\r\n\t\t\tif (ally && !ally.volatiles['psychout'] && !this.effectState.hasTriggered) {\r\n\t\t\t\t// Add psychout volatile to the ally\r\n\t\t\t\tally.addVolatile('psychout');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Psych Out\",\r\n\t\trating: 5,\r\n\t\tnum: -47,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\trebel: {\r\n\t\tshortDesc: \"User's side: 1.3x damage when any Pok\u00E9mon has stat drops.\",\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\t// Check if any Pok\u00E9mon on the user's side has a negative stat drop\r\n\t\t\tconst hasNegativeDrop = attacker.side.pokemon.some(pokemon => \r\n\t\t\t\tpokemon.boosts && Object.values(pokemon.boosts).some(stat => stat < 0)\r\n\t\t\t);\r\n\t\r\n\t\t\tif (hasNegativeDrop) {\r\n\t\t\t\tthis.debug('Rebel boost');\r\n\t\t\t\tthis.add('-ability', attacker, 'Rebel');\r\n\t\t\t\treturn this.chainModify([0x14CD, 0x1000]); // Increase damage by 30%\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Rebel\",\r\n\t\trating: 2.5,\r\n\t\tnum: -48,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\treekingstench: {\r\n\t\tshortDesc: \"Bug-type Storm Drain.\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Bug') {\r\n\t\t\t\tif (!this.boost({spa: 1})) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Reeking Stench');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\tif (move.type !== 'Bug' || move.flags['pledgecombo']) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Reeking Stench');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Reeking Stench\",\r\n\t\trating: 3,\r\n\t\tnum: -49,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tresidualdrain: {\r\n\t\tdesc: \"Every time another Pok\u00E9mon is damaged indirectly, this Pok\u00E9mon's HP is restored by the same amount.\",\r\n\t\tshortDesc: \"Heals from indirect damage dealt to others.\",\r\n\t\tonAnyDamage(damage, target, source, effect) {\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tif (effect.effectType !== 'Move' && target !== pokemon && effect.id !== 'leechseed') {\r\n\t\t\t\tpokemon.heal(damage);\r\n\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Residual Drain\",\r\n\t\trating: 4,\r\n\t\tnum: -50,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tconcordia: {\r\n\t\tdesc: \"When this Pok\u00E9mon uses a Sound move, the target(s) will be inflicted with a Torment effect.\",\r\n\t\tshortDesc: \"Inflicts Torment effect if the Pok\u00E9mon uses a Sound move.\",\r\n\t\tonAfterMove(source: Pokemon, target: Pokemon, move: ActiveMove) {\r\n\t\t\tif (!move.flags['sound']) return;\r\n\t\r\n\t\t\tconst applyTorment = (pokemon: Pokemon) => {\r\n\t\t\t\tif (pokemon && !pokemon.hasAbility('soundproof') && !pokemon.volatiles['torment'] && !pokemon.volatiles['stall']) {\r\n\t\t\t\t\tpokemon.addVolatile('torment');\r\n\t\t\t\t\tthis.add('-start', pokemon, 'Torment', '[from] ability: Concordia');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tswitch (move.target) {\r\n\t\t\t\tcase 'all':\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tapplyTorment(pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'allAdjacent':\r\n\t\t\t\t\tfor (const adjacent of this.getAllActive()) {\r\n\t\t\t\t\t\tif (adjacent !== source && adjacent.isAdjacent(source)) {\r\n\t\t\t\t\t\t\tapplyTorment(adjacent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'allAdjacentFoes':\r\n\t\t\t\t\tfor (const foe of source.foes()) {\r\n\t\t\t\t\t\tif (foe.isAdjacent(source)) {\r\n\t\t\t\t\t\t\tapplyTorment(foe);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'normal':\r\n\t\t\t\t\tapplyTorment(target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'self':\r\n\t\t\t\t\tapplyTorment(source);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(`Unhandled move target: ${move.target}`); // notifier in case there's a type of Sound move I forgot to handle\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t    name: \"Concordia\",\r\n\t\trating: 3,\r\n\t\tnum: -51,\r\n\t},\t\r\n\t// end\t\r\n\r\n\t// start\r\n\tsolarflare: {\r\n\t\tdesc: \"After any of this Pok\u00E9mon's stats is reduced, making contact with a Pok\u00E9mon on its team burns the attacker. The duration is one turn for each stat stage that was reduced, and the duration is extended if stats are reduced again while it is already in effect.\",\r\n\t\tshortDesc: \"Stat reduction: contact burns attacker.\",\r\n\t\tname: \"Solar Flare\",\r\n\t\tonTryBoost(boost: Partial<BoostsTable>, target: Pokemon, source: Pokemon, effect: Effect) {\r\n\t\t\tfor (const i in boost) {\r\n\t\t\t\tif ((boost as any)[i] < 0) {\r\n\t\t\t\t\tlet num = (boost as any)[i];\r\n\t\t\t\t\twhile (num !== 0) {\r\n\t\t\t\t\t\ttarget.side.addSideCondition('solarflare');\r\n\t\t\t\t\t\tnum++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonStart(side) {\r\n\t\t\t\tthis.add('-ability', this.effectState.source, 'Solar Flare');\r\n\t\t\t\tthis.add('-message', `The air around ${this.effectState.source.name}'s team was superheated!`);\r\n\t\t\t\tthis.hint(`During Solar Flare, making contact with a Pok\u00E9mon on ${this.effectState.source.name}'s team will result in a burn!`);\r\n\t\t\t\tthis.hint(`The effect is extended each time ${this.effectState.source.name}'s stats are lowered!`);\r\n\t\t\t\tthis.effectState.duration = 2;\r\n\t\t\t},\r\n\t\t\tonRestart(side) {\r\n\t\t\t\tthis.effectState.duration++;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (target.side === this.effectState.target && move.flags['contact']) {\r\n\t\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 10,\r\n\t\t\tonResidual(side) {\r\n\t\t\t\tif (this.effectState.duration > 1) {\r\n\t\t\t\t\tthis.add('-message', `There are ${this.effectState.duration} turns left of Solar Flare!`);\r\n\t\t\t\t} else if (this.effectState.duration === 1) {\r\n\t\t\t\t\tthis.add('-message', `There is one turn left of Solar Flare!`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(side) {\r\n\t\t\t\tthis.add('-message', `The air around ${this.effectState.source.name}'s team cooled down!`);\r\n\t\t\t},\r\n\t\t},\r\n\t\trating: 3.5,\r\n\t\tnum: -52,\r\n\t},\r\n\t// end\r\n\r\n\t// start, Star Force, -53\r\n\tstarforce: {\r\n\t\tdesc: \"If Gravity is active and user must recharge, gains +1 on every stat.\",\r\n\t\tshortDesc: \"Gravity + recharge: stat boosts.\",\r\n\t\t/*onChargeMove(pokemon, target, move) {\r\n\t\t\tif (!pokemon.volatiles['starforcecooldown']) {\r\n\t\t\t\tthis.debug('Star Force - remove charge turn for ' + move.id);\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.addMove('-anim', pokemon, move.name, target);\r\n\t\t\t\t// Mark as activated and skip charge turn\r\n\t\t\t\tif (!pokemon.volatiles['starforcecooldown']) {\r\n\t\t\t\t\tpokemon.addVolatile('starforcecooldown');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name}'s Star Force is now on cooldown!`);\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // skip charge turn\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.flags.recharge) {\r\n\t\t\t\t// Skip the recharge turn by removing the \"mustRecharge\" volatile\r\n\t\t\t\tif (!source.volatiles['starforcecooldown2']) {\r\n\t\t\t\t\tsource.addVolatile('starforcecooldown2');\r\n\t\t\t\t//\tthis.add('-end', source, 'mustRecharge', '[from] ability: Star Force');\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-message', `${source.name}'s Star Force is now on cooldown!`);\r\n\t\t\t}\r\n\t\t},*/\r\n\t\t/*onAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\t// Check if Gravity is active and if the move requires recharge\r\n\t\t\tif (this.field.getPseudoWeather('gravity') && move.flags.recharge) {\r\n\t\t\t\t// Find the best stat to lower\r\n\t\t\t\tconst bestStat = pokemon.getBestStat();\r\n\t\t\t\tif (bestStat) {\r\n\t\t\t\t\tthis.boost({ [bestStat]: -1 }, pokemon); // Lower the best stat by 1 stage\r\n\t\t\t\t\tpokemon.removeVolatile('mustrecharge');\r\n\t\t\t\t\tthis.add('-end', pokemon, 'mustrecharge', '[from] ability: Star Force', '[of] ' + pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},*/\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\t// If the user has Must Recharge after using a move\r\n\t\t\tif (this.field.getPseudoWeather('gravity') && pokemon.volatiles['mustrecharge']) {\r\n\t\t\t\tthis.boost({atk: 1, def: 1, spa: 1, spd: 1, spe: 1}, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Star Force\",\r\n\t\trating: 4,\r\n\t\tnum: -53,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tteamup: {\r\n\t\tdesc: \"If ally attacks first, user attacks immediately afterwards.\",\r\n\t\tshortDesc: \"Attacks after ally.\",\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t    name: \"Team Up\",\r\n\t\trating: 3,\r\n\t\tnum: -54,\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tconst hasAlly = pokemon.side.active.find(ally => ally && ally !== pokemon);\r\n    \t\tif (!hasAlly) return; // Ensure ally is present\r\n\r\n\t\t\t// This is a line to handle the case where ally attacks first and user afterwards\r\n\t\t\tif ((hasAlly) && !hasAlly.volatiles['headstart']) {\r\n\t\t\t\thasAlly.addVolatile('headstart')\r\n\t\t\t} // end\r\n\t\t},\r\n\t\tonFaint(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\t// This is a line to handle the case where ally attacks first and user afterwards\r\n\t\t\t\tif (ally && ally.volatiles['headstart']) {\r\n\t\t\t\t\tally.removeVolatile('headstart')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\t// This is a line to handle the case where ally attacks first and user afterwards\r\n\t\t\t\tif (ally && ally.volatiles['headstart']) {\r\n\t\t\t\t\tally.removeVolatile('headstart')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tpokemon.side.active.forEach(ally => {\r\n\t\t\t\t// This is a line to handle the case where Grapplin attacks first and Escavalier afterwards\r\n\t\t\t\tif (ally && ally.volatiles['headstart']) {\r\n\t\t\t\t\tally.removeVolatile('headstart')\r\n\t\t\t\t} // end\r\n\t\t\t});\r\n\t\t},\r\n\t\t/*onPrepareHit(pokemon, target, move) {\r\n\t\t\t// Check if the user has any ally\r\n\t\t\tconst hasAlly = pokemon.side.active.some(ally => ally !== pokemon && !ally.fainted);\r\n\t\t\tif (!hasAlly) return; // Ensure there is at least one ally present\r\n\r\n\t\t\t// Check if the move is not a status move\r\n\t\t\tif (move.category !== 'Status') {\r\n\t\t\t\t// Loop through the action queue\r\n\t\t\t\tfor (const action of this.queue.list as MoveAction[]) {\r\n\t\t\t\t\t// Check if the action is valid\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!action.move || !action.pokemon?.isActive ||\r\n\t\t\t\t\t\taction.pokemon.fainted || action.maxMove || action.zmove\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue; // Skip invalid actions\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t// Check if the action belongs specifically to the ally\r\n\t\t\t\t\tif (action.pokemon.isAlly(pokemon)) {\r\n\t\t\t\t\t\tthis.queue.prioritizeAction(action, move); // Prioritize the action\r\n\t\t\t\t\t\tthis.add('-waiting', pokemon, action.pokemon); // Notify that ally is waiting\r\n\t\t\t\t\t\tbreak; // Exit the loop but not the function, meaning user's move should be able to do damage now\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},*/\t\r\n\t\t\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\ttransmutation: {\r\n\t\tdesc: \"At the end of the turn, if Acidic Terrain is active, boosts user's worst stat by 1 stage.\",\r\n\t\tshortDesc: \"Boosts worst stat in Acidic Terrain every turn.\",\r\n\t\tonResidualOrder: 10, // Ensure this runs after most other effects\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (this.field.isTerrain('acidicterrain')) {\r\n\t\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe'] as const; // Order of priority\r\n\t\t\t\tconst statValues = stats.map(stat => pokemon.getStat(stat));\r\n\t\t\t\tconst minValue = Math.min(...statValues);\r\n\t\t\t\t\r\n\t\t\t\tlet worstStat = null;\r\n\t\r\n\t\t\t\t// Find the worst stat based on current values\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\tif (pokemon.getStat(stat) === minValue) {\r\n\t\t\t\t\t\tworstStat = stat;\r\n\t\t\t\t\t\tbreak; // Only boost the first worst stat found\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Boost the worst stat by 1 stage\r\n\t\t\t\tif (worstStat) {\r\n\t\t\t\t\tthis.boost({ [worstStat]: 1 }, pokemon);\r\n\t\t\t\t//\tthis.add('-activate', pokemon, 'ability: Transmutation');\r\n\t\t\t\t//\tthis.add(`-message`, `${pokemon.name}'s ${this.dex.stats.names[worstStat]} was boosted by 1 stage!`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Transmutation\",\r\n\t\trating: 5,\r\n\t\tnum: -55,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\ttropicalbreeze: {\r\n\t\tdesc: \"Sets Tailwind in Sun or Desolate Land.\",\r\n\t\tshortDesc: \"Tailwind in Sun.\",\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif ((this.field.isWeather('sunnyday') || this.field.isWeather('desolateland')) && !pokemon.side.sideConditions['tailwind']) {\r\n\t\t\t\tpokemon.side.addSideCondition('tailwind');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Tropical Breeze\",\r\n\t\trating: 5,\r\n\t\tnum: -56,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\ticeage: {\r\n\t\tdesc: \"On switch-in, the weather becomes Hail. This weather remains in effect until this Ability is no longer active for any Pok\u00E9mon, or the weather is changed by Delta Stream, Desolate Land or Primordial Sea.\",\r\n\t\tshortDesc: \"On switch-in, hail begins until this Ability is not active in battle.\",\r\n\t\t/*onStart(source) {\r\n\t\t\tif (this.field.setWeather('hail')) {\r\n\t\t\t\tthis.add('-message', `${source.name} created an unrelenting snow storm!`);\r\n\t\t\t\tthis.hint(\"Ice Age doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.weatherState.duration = 0;\r\n\t\t\t} else if (this.field.isWeather('hail') && this.field.weatherState.duration !== 0) {\r\n\t\t\t\tthis.add('-ability', source, 'Ice Age');\r\n\t\t\t\tthis.add('-message', `${source.name} created an unrelenting snow storm!`);\r\n\t\t\t\tthis.hint(\"Ice Age doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.weatherState.source = source;\r\n\t\t\t\tthis.field.weatherState.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('iceage') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'hail' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('iceage')) {\r\n\t\t\t\t\tthis.field.weatherState.source = target;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearWeather();\r\n\t\t},*/\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('hail');\r\n\t\t},\r\n\t\tname: \"Ice Age\",\r\n\t\trating: 4.5,\r\n\t\tnum: -57,\r\n\t},\r\n\t/*// modded for Everlasting Winter\r\n\tdeltastream: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('iceage') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'deltastream' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tdesolateland: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('iceage') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'desolateland' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tprimordialsea: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (source.hasAbility('iceage') && weather.id === 'hail') return;\r\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\r\n\t\t\tif (this.field.getWeather().id === 'primordialsea' && !strongWeathers.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\t// end*/\r\n\r\n\t// start\r\n\twitheringglare: {\r\n\t\tonAnyTryMove(this, source, target, move) {\r\n\t\t\tif (source === this.effectState.target) return;\r\n\t\t\tif (move.id === 'batonpass', move.id === 'uturn' || move.id === 'voltswitch' || move.id === 'teleport' || move.id === 'partingshot' || move.id === 'chillyreception' || move.id === 'thunderousroar' || move.id === 'unicorndance' ) {\r\n\t\t\t\tthis.add('-fail', source, 'ability: Withering Glare', '[of] ' + this.effectState.target);\r\n\t\t\t\tthis.add('-ability', target, 'Withering Glare');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Withering Glare\",\r\n\t\tshortDesc: \"While active, Pokemon without this ability cannot pivot out.\",\r\n\t\trating: 3,\r\n\t\tnum: -57,\r\n\t},\r\n\t// end\r\n\r\n\t// start\r\n\tfendente: {\r\n\t\tshortDesc: \"User's HP: +1 prio / +1 Def / +50%.\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.flags['slicing'] && pokemon.hp === pokemon.maxhp) return priority + 1;\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (source.hp === source.maxhp || source.hp <= source.maxhp / 3) return;\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.boost({def: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterSubDamage(damage, target, source, move) { // should still activate when targeting a Substitute\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (source.hp === source.maxhp || source.hp <= source.maxhp / 3) return;\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.boost({def: 1}, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio, source, target, move) {\r\n\t\t\tif (move.flags['slicing'] && source.hp <= source.maxhp / 3) return 5;\r\n\t\t},\r\n\t\tname: \"Fendente\",\r\n\t\trating: 3,\r\n\t\tnum: -58,\r\n\t},\r\n\tcurseenergy: {\r\n\t\tshortDesc: \"Absorbs ally's negative stats.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\t// Initialize the ability when the Pok\u00E9mon enters the battle\r\n\t\t\tthis.add('-ability', pokemon, 'Curse Energy');\r\n\t\t},\r\n\t\t/*onUpdate(pokemon) {\r\n\t\t\t// Check if the user has an ally\r\n\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon);\r\n\t\t\tif (!ally) return; // No ally to absorb from\r\n\t\r\n\t\t\t// Check for negative stat boosts on the ally\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\tlet boostGains: Partial<Record<typeof stats[number], number>> = {};\r\n\t\t\t\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tif (ally.boosts[stat] < 0) {\r\n\r\n\t\t\t\t\t// Calculate how much can be absorbed\r\n\t\t\t\t\tconst canAbsorb = -ally.boosts[stat]; // The absolute value of the negative boost\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Remove negative boost from ally\r\n\t\t\t\t\tally.boosts[stat] += canAbsorb; // This effectively increases the ally's stat (less negative)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Apply the negative boost to the user\r\n\t\t\t\t\tboostGains[stat] = (boostGains[stat] || 0) - canAbsorb; // User gains a negative boost\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Apply the absorbed boosts to the user\r\n\t\t\tif (Object.keys(boostGains).length > 0) {\r\n\t\t\t\tthis.boost(boostGains, pokemon, pokemon); // Apply negative boosts to the user\r\n\t\t\t\tthis.add('-message', `${pokemon.name} absorbs negative boosts from ${ally.name}!`);\r\n\t\t\t}\r\n\t\t},*/\r\n\t\t// version below is almost perfect. At the moment, it always takes away regardless of user's stats\r\n\t\t/*onUpdate(pokemon) {\r\n\t\t\tconsole.log(`Curse Energy onUpdate triggered for ${pokemon.name}`);\r\n\t\t\t\r\n\t\t\tconst allies = pokemon.side.active.filter(ally => ally && ally !== pokemon);\r\n\t\t\tif (allies.length === 0) {\r\n\t\t\t\tconsole.log('No allies found');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\tlet boostGains: Partial<Record<typeof stats[number], number>> = {};\r\n\t\t\tlet absorbed = false;\r\n\r\n\r\n\t\t\t// New line: Additional check if any ally has negative boosts to stop internally triggering the ability\r\n\t\t\tconst hasNegativeBoosts = allies.some(ally => \r\n\t\t\t\tstats.some(stat => ally.boosts[stat] < 0)\r\n\t\t\t);\r\n\t\t\r\n\t\t\tif (!hasNegativeBoosts) {\r\n\t\t\t\tconsole.log('No negative boosts found among allies, skipping absorption.');\r\n\t\t\t\treturn; // Exit early if no negative boosts are present\r\n\t\t\t}\r\n\t\t\t// end\r\n\r\n\t\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tconsole.log(`Checking ally: ${ally.name}`);\r\n\t\t\t\tconsole.log(`Ally's current boosts:`, ally.boosts);\r\n\t\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\tif (ally.boosts[stat] < 0) {\r\n\t\t\t\t\t\tconst canAbsorb = Math.min(-ally.boosts[stat], 6);  // Changed this line\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (canAbsorb > 0) {\r\n\t\t\t\t\t\t\tally.boosts[stat] += canAbsorb;\r\n\t\t\t\t\t\t\tboostGains[stat] = (boostGains[stat] || 0) - canAbsorb;\r\n\t\t\t\t\t\t\tabsorbed = true;\r\n\t\t\t\t\t\t\tconsole.log(`Absorbed ${canAbsorb} from ${stat} of ${ally.name}`);\r\n\r\n\r\n\t\t\t\t\t\t\t// Add visual update for the ally's stat change\r\n\t\t\t\t\t\t\tthis.add('-setboost', ally, stat, ally.boosts[stat]);\r\n\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tif (absorbed) {\r\n\t\t\t\tconsole.log('Applying absorbed boosts:', boostGains);\r\n\t\t\t\tthis.boost(boostGains, pokemon, pokemon);\r\n\t\t\t\tthis.add('-message', `${pokemon.name} absorbs negative boosts from its ally!`);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('No boosts absorbed');\r\n\t\t\t}\r\n\t\t},*/\r\n\t\t// This version below seems to actually work... finally.\r\n\t\tonUpdate(pokemon) {\r\n\t\t//\tconsole.log(`Curse Energy onUpdate triggered for ${pokemon.name}`);\r\n\t\t\t\r\n\t\t\tconst allies = pokemon.side.active.filter(ally => ally && ally !== pokemon);\r\n\t\t\tif (allies.length === 0) {\r\n\t\t//\t\tconsole.log('No allies found');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'] as const;\r\n\t\t\tlet boostGains: Partial<Record<typeof stats[number], number>> = {};\r\n\t\t\tlet absorbed = false;\r\n\t\t\r\n\t\t\tfor (const ally of allies) {\r\n\t\t//\t\tconsole.log(`Checking ally: ${ally.name}`);\r\n\t\t//\t\tconsole.log(`Ally's current boosts:`, ally.boosts);\r\n\t\t\r\n\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\t// Stop absorption if the ally's stat is already at -6\r\n\t\t\t\t\tif (ally.boosts[stat] < 0 && pokemon.boosts[stat] > -6) { // New line: pokemon.boosts replaced ally.boosts\r\n\t\t\t\t\t\tconst canAbsorb = Math.min(-ally.boosts[stat], 6);  // Limit absorption to a maximum of 6\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (canAbsorb > 0) {\r\n\t\t\t\t\t\t\tally.boosts[stat] += canAbsorb;\r\n\t\t\t\t\t\t\tboostGains[stat] = (boostGains[stat] || 0) - canAbsorb;\r\n\t\t\t\t\t\t\tabsorbed = true;\r\n\t\t//\t\t\t\t\tconsole.log(`Absorbed ${canAbsorb} from ${stat} of ${ally.name}`);\r\n\t\t\r\n\t\t\t\t\t\t\t// Add visual update for the ally's stat change\r\n\t\t\t\t\t\t\tthis.add('-setboost', ally, stat, ally.boosts[stat]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (absorbed) {\r\n\t\t//\t\tconsole.log('Applying absorbed boosts:', boostGains);\r\n\t\t\t\tthis.boost(boostGains, pokemon, pokemon);\r\n\t\t\t\tthis.add('-message', `${pokemon.name} absorbs negative boosts from its ally!`);\r\n\t\t\t} //else {\r\n\t\t\t\t//console.log('No boosts absorbed');\r\n\t\t\t//}\r\n\t\t},\r\n\t\tname: \"Curse Energy\",\r\n\t\trating: 4,\r\n\t\tnum: -59,\r\n\t},\r\n\tsplitsystem: {\r\n\t\tshortDesc: \"Old gen phys/spec split. +20% boost.\",\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\tif (move.category !== 'Status') {\r\n\t\t\tconst originalCategory = move.category; // New line\r\n\t\t\tswitch (move.type) {\r\n\t\t\t\tcase 'Grass':\r\n\t\t\t\tcase 'Fire':\r\n\t\t\t\tcase 'Water':\r\n\t\t\t\tcase 'Ice':\r\n\t\t\t\tcase 'Electric':\r\n\t\t\t\tcase 'Psychic':\r\n\t\t\t\tcase 'Dragon':\r\n\t\t\t\tcase 'Dark':\r\n\t\t\t\t\tmove.category = 'Special';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Bug':\r\n\t\t\t\tcase 'Ghost':\r\n\t\t\t\tcase 'Poison':\r\n\t\t\t\tcase 'Ground':\r\n\t\t\t\tcase 'Rock':\r\n\t\t\t\tcase 'Fighting':\r\n\t\t\t\tcase 'Normal':\r\n\t\t\t\tcase 'Flying':\r\n\t\t\t\tcase 'Steel':\r\n\t\t\t\tcase 'Fairy':\r\n\t\t\t\t\tmove.category = 'Physical';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// Apply 20% boost only if the category has changed\r\n\t\t\tif (move.category !== originalCategory) {\r\n\t\t\t\tmove.basePower = Math.floor(move.basePower * 1.2);\r\n\t\t\t\tthis.add('-message', `Split System boosted ${move.name}'s power!`);\r\n\t\t\t}\r\n\t\t}\r\n\t\t},\r\n\t\tname: \"Split System\",\r\n\t\trating: 2,\r\n\t\tnum: -60,\r\n\t},\r\n\t//\r\n\tfortify: {\r\n\t\tshortDesc: \"Recovers item for ally. Once for each ally.\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tfor (const ally of pokemon.side.pokemon) {\r\n\t\t\t\tif (ally && !ally.item && !ally.volatiles['fortifyactivated']) {\r\n\t\t\t\t\tconst success = this.actions.useMove('Recycle', ally);\r\n\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\tally.addVolatile('fortifyactivated');\r\n\t\t\t\t\t\tthis.add('-message', `${ally.name}'s item was recovered by ${pokemon.name}'s Fortify!`);\r\n\t\t\t\t\t\tthis.add('-anim', pokemon, 'Aromatherapy');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fortify\",\r\n\t\trating: 3.5,\r\n\t\tnum: -61,\r\n\t},\r\n\t//\r\n\tsoothinggift: {\r\n\t\tdesc: \"On switch-in, if the user's ally doesn't have max HP, the user gives away HP to heal the ally. The user cannot faint from this effect. The ally gains 50% of the HP the user gives away, rounded up.\",\r\n\t\tshortDesc: \"On switch-in: ally recovers half of user's HP.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.active.length === 1) {\r\n\t\t\t\treturn; // No ally in single battles\r\n\t\t\t}\r\n\t\t\tconst ally = pokemon.side.active.find(mon => mon && mon !== pokemon && !mon.fainted);\r\n\t\t\tif (!ally || ally.hp === ally.maxhp) {\r\n\t\t\t\treturn; // No valid ally or ally at full HP\r\n\t\t\t}\r\n\t\r\n\t\t\tconst userCurrentHP = pokemon.hp;\r\n\t\t\tconst allyMissingHP = ally.maxhp - ally.hp;\r\n\t\r\n\t\t\t// Calculate how much HP the user can give away without fainting\r\n\t\t\tlet hpToGive = Math.min(userCurrentHP - 1, allyMissingHP * 2);\r\n\t\t\t\r\n\t\t\t// Calculate how much HP the ally will receive (50% of what user gives, rounded up)\r\n\t\t\tconst hpToReceive = Math.ceil(hpToGive / 2);\r\n\t\t\t\r\n\t\t\t// Only proceed if we can actually give HP and heal the ally\r\n\t\t\tif (hpToGive >= 1) {\r\n\t\t\t\t// Apply the HP changes\r\n\t\t\t\tthis.directDamage(hpToGive, pokemon);\r\n\t\t\t\tally.heal(hpToReceive);\r\n\t\t\t\t\r\n\t\t\t\tthis.add('-message', `${pokemon.name} gave away ${hpToGive} HP to heal its ally!`);\r\n\t\t\t\tthis.add('-message', `${ally.name} recovered ${hpToReceive} HP!`);\r\n\t\t\t\tthis.add('-heal', ally, ally.getHealth, '[silent]'); // visual update\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-message', `${pokemon.name} couldn't give any HP to heal its ally.`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1},\r\n\t\tname: \"Soothing Gift\",\r\n\t\trating: 5,\r\n\t\tnum: -62,\r\n\t},\r\n\t//\r\n\tgforce: {\r\n\t\tdesc: \"On switch-in, user sets Gravity. This remains in effect until user is no longer active.\",\r\n\t\tshortDesc: \"Perma Gravity if user active.\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.field.getPseudoWeather('gravity')) {\r\n\t\t\t\tthis.add('-ability', source, 'G-Force');\r\n\t\t\t\tthis.add('-message', `${source.name} twisted the dimensions!`);\r\n\t\t\t\tthis.hint(\"G-Force doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.pseudoWeather.gravity.source = source;\r\n\t\t\t\tthis.field.pseudoWeather.gravity.duration = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-ability', source, 'G-Force');\r\n\t\t\t\tthis.field.addPseudoWeather('gravity');\r\n\t\t\t\tthis.hint(\"G-Force doesn't wear off until the user leaves the field!\");\r\n\t\t\t\tthis.field.pseudoWeather.gravity.duration = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyTryMove(target, source, move) {\r\n\t\t\tif (['gravity'].includes(move.id)) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('cant', this.effectState.target, 'ability: G-Force', move, '[of] ' + target);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('gforce')) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.removePseudoWeather('gravity');\r\n\t\t},\r\n\t\tname: \"G-Force\",\r\n\t\trating: 4.5,\r\n\t\tnum: -63,\r\n\t},\r\n\t//\r\n\tcoordination: {\r\n\t\tshortDesc: \"Boosts Bug moves by 50% on user's side.\",\r\n\t\tonAllyBasePowerPriority: 22,\r\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Bug') {\r\n\t\t\t\tthis.debug('Coordination boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Coordination\",\r\n\t\trating: 3.5,\r\n\t\tnum: -64,\r\n\t},\r\n\t//\r\n\tgravitationalpull: {\r\n\t\tdesc: \"This Pok\u00E9mon is immune to all entry hazards and incorporates them into its body. Pok\u00E9mon making contact with this Pok\u00E9mon are affected by all of the hazards on both sides of the field, in the same way as if they had switched in.\",\r\n\t\tshortDesc: \"Hazard immunity. Attacked = hazard effect.\",\r\n\t\tname: \"Gravitational Pull\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\tactive.removeVolatile('gravitationalpull');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.addVolatile('gravitationalpull');\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['gravitationalpull']) return;\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tif (active.volatiles['gravitationalpull']) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon.addVolatile('gravitationalpull');\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (pokemon.volatiles['gravitationalpull']) {\r\n\t\t\t\tpokemon.removeVolatile('gravitationalpull');\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tif (active.hasAbility('gravitationalpull') && active !== pokemon) {\r\n\t\t\t\t\t\tactive.addVolatile('gravitationalpull');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst hazards = [\r\n\t\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const sideCondition of hazards) {\r\n\t\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) || pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-message', `The hazards on the field returned to their original positions!`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'ability: Gravitational Pull');\r\n\t\t\t\tconst hazards = [\r\n\t\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const sideCondition of hazards) {\r\n\t\t\t\t\tif (pokemon.side.getSideCondition(sideCondition) || pokemon.side.foe.getSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-message', `The hazards on the field are surrounding ${pokemon.name}!`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'ability: Gravitational Pull', '[silent]');\r\n\t\t\t},\r\n\t\t\tonDamagingHitOrder: 1,\r\n\t\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\t//\tif (move.flags['contact']) {\r\n\t\t\t\t\tlet success = undefined;\r\n\t\t\t\t\tif (target.side.getSideCondition('spikes') || target.side.foe.getSideCondition('spikes')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet layers = 0;\r\n\t\t\t\t\t\tif (target.side.sideConditions['spikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.sideConditions['spikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.foe.sideConditions['spikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.foe.sideConditions['spikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst damageAmounts = [0, 3, 4, 6, 6, 6, 6]; // 1/8, 1/6, 1/4 - caps at 3\r\n\t\t\t\t\t\tthis.damage(damageAmounts[layers] * source.maxhp / 24, source, target);\r\n\t\t\t\t\t\t// this.add('-message', `${source.name} was hurt by the spikes!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('toxicspikes') || target.side.foe.getSideCondition('toxicspikes')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet layers = 0;\r\n\t\t\t\t\t\tif (target.side.sideConditions['toxicspikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.sideConditions['toxicspikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target.side.foe.sideConditions['toxicspikes']) {\r\n\t\t\t\t\t\t\tlayers += target.side.foe.sideConditions['toxicspikes'].layers;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (layers >= 2) {\r\n\t\t\t\t\t\t\tsource.trySetStatus('tox', target);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsource.trySetStatus('psn', target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('stealthrock') || target.side.foe.getSideCondition('stealthrock')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst typeMod = this.clampIntRange(source.runEffectiveness(this.dex.getActiveMove('stealthrock')), -6, 6);\r\n\t\t\t\t\t\tthis.damage(source.maxhp * Math.pow(2, typeMod) / 8, source, target);\r\n\t\t\t\t\t\t// this.add('-message', `Pointed stones dug into ${source.name}!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('stickyweb') || target.side.foe.getSideCondition('stickyweb')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.add('-activate', source, 'move: Sticky Web');\r\n\t\t\t\t\t\tthis.boost({spe: -1}, source, target, this.dex.getActiveMove('stickyweb'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target.side.getSideCondition('gmaxsteelsurge') || target.side.foe.getSideCondition('gmaxsteelsurge')) {\r\n\t\t\t\t\t\tif (!success) {\r\n\t\t\t\t\t\t\tsuccess = true;\r\n\t\t\t\t\t\t\tthis.add('-ability', target, 'Gravitational Pull');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst steelHazard = this.dex.getActiveMove('Stealth Rock');\r\n\t\t\t\t\t\tsteelHazard.type = 'Steel';\r\n\t\t\t\t\t\tconst typeMod = this.clampIntRange(source.runEffectiveness(steelHazard), -6, 6);\r\n\t\t\t\t\t\tthis.damage(source.maxhp * Math.pow(2, typeMod) / 8, source, target);\r\n\t\t\t\t\t\t// this.add('-message', `${source.name} was hurt by the sharp spikes!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t//\t},\r\n\t\t},\r\n\t//\thazardImmune: true,\r\n\t\trating: 3,\r\n\t\tnum: -65,\r\n\t},\r\n\tburningtrain: {\r\n\t\tshortDesc: \"Sets Sea of Fire after fainting target.\",\r\n\t\tonAfterMove(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) target.side.addSideCondition('firepledge');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Burning Train\",\r\n\t\trating: 4,\r\n\t\tnum: -66,\r\n\t},\r\n\t//\r\n\tgooeyessence: {\r\n\t\tshortDesc: \"User's side: 1/16 recovery per stat drop.\",\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon && pokemon.boosts) {\r\n\t\t\t\t// Calculate the number of negative stat boosts on the Pok\u00E9mon\r\n\t\t\t\tlet negativeBoosts = 0;\r\n\t\t\t\tconst boostKeys: Array<keyof BoostsTable> = ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion']; // Define the valid keys\r\n\t\r\n\t\t\t\tfor (const stat of boostKeys) {\r\n\t\t\t\t\tif (pokemon.boosts[stat] < 0) {\r\n\t\t\t\t\t\tnegativeBoosts += Math.abs(pokemon.boosts[stat]); // Count the absolute value of negative boosts\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Apply HP recovery for each negative boost\r\n\t\t\t\tif (negativeBoosts > 0) {\r\n\t\t\t\t//\tconst healAmount = Math.floor((pokemon.maxhp / 16) * negativeBoosts); // Calculate total healing based on negative boosts\r\n\t\t\t\t\tlet healAmount = Math.floor((pokemon.maxhp / 16) * negativeBoosts);\r\n                \thealAmount = Math.min(healAmount, Math.floor(pokemon.maxhp / 8)); // Cap healing\r\n\t\t\t\t\tthis.heal(healAmount, pokemon); // Apply healing\r\n\t\t\t\t//\tthis.add('-message', `${pokemon.name} is healed by Gooey Essence!`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Heal the ally based on the ally's stat drops\r\n\t\t\t\tconst ally = pokemon.side.active.find(ally => ally && ally !== pokemon && !ally.fainted);\r\n\t\t\t\tif (ally) {\r\n\t\t\t\t\tlet allyNegativeBoosts = 0;\r\n\t\t\t\t\tfor (const stat of boostKeys) {\r\n\t\t\t\t\t\tif (ally.boosts[stat] < 0) {\r\n\t\t\t\t\t\t\tallyNegativeBoosts += Math.abs(ally.boosts[stat]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (allyNegativeBoosts > 0) {\r\n\t\t\t\t\t//\tconst allyHealAmount = Math.floor((ally.maxhp / 16) * allyNegativeBoosts);\r\n\t\t\t\t\t\tlet allyHealAmount = Math.floor((ally.maxhp / 16) * allyNegativeBoosts);\r\n                    \tallyHealAmount = Math.min(allyHealAmount, Math.floor(ally.maxhp / 8)); // Cap healing\r\n\t\t\t\t\t\tthis.heal(allyHealAmount, ally);\r\n\t\t\t\t\t\t// this.add('-message', `${ally.name} is healed by Gooey Essence!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gooey Essence\",\r\n\t\trating: 3.5,\r\n\t\tnum: -67,\r\n\t},\r\n\t// end\r\n\r\n\t// start: modifying vanilla abilities\r\n\tleafguard: {\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryAddVolatile(status, target) {\r\n\t\t\tif (status.id === 'yawn' && ['sunnyday', 'desolateland'].includes(target.effectiveWeather())) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Leaf Guard');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n    \tonModifyDef(pokemon) {\r\n        // Check if the weather is sunny or Desolate Land\r\n\t\tif (this.field.isWeather('sunnyday') || this.field.isWeather('desolateland')) {\r\n            \treturn this.chainModify(1.5); // Increase Defense by 50%\r\n        \t}\r\n    \t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Leaf Guard\",\r\n\t\trating: 0.5,\r\n\t\tnum: 102,\r\n\t},\r\n\r\n\tmagmaarmor: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.status === 'frz') {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Magma Armor');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'frz') return false; // Prevent freezing\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\t// Check if the move is Ice-type and reduce damage by 50%\r\n\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\tthis.debug('Magma Armor damage reduction from Ice-type move');\r\n\t\t\t\treturn this.chainModify(0.5); // Reduce damage by 50%\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Magma Armor\",\r\n\t\trating: 0.5,\r\n\t\tnum: 40,\r\n\t},\r\n\r\n\tpixilate: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'colourmegone', 'judgment', 'multiattack', 'naturalgift', 'pincerattack', 'revelationdance', 'schadenfreude', \r\n\t\t\t\t'seasonalantlers', 'stellarfission', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Pixilate\",\r\n\t\trating: 4,\r\n\t\tnum: 182,\r\n\t},\r\n\trefrigerate: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'colourmegone', 'judgment', 'multiattack', 'naturalgift', 'pincerattack', 'revelationdance', 'schadenfreude', \r\n\t\t\t\t'seasonalantlers', 'stellarfission', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Ice';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Refrigerate\",\r\n\t\trating: 4,\r\n\t\tnum: 174,\r\n\t},\r\n\taerilate: {\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'colourmegone', 'judgment', 'multiattack', 'naturalgift', 'pincerattack', 'revelationdance', 'schadenfreude', \r\n\t\t\t\t'seasonalantlers', 'stellarfission', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Flying';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Aerilate\",\r\n\t\trating: 4,\r\n\t\tnum: 184,\r\n\t},\r\n\r\n\trivalry: {\r\n\t\tonBasePowerPriority: 24,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t// Check if the attacker has an ally and both share the same gender\r\n\t\t\tconst ally = attacker.side.active.find(pokemon => pokemon && pokemon !== attacker);\r\n\t\t\tif (ally && attacker.gender && ally.gender) {\r\n\t\t\t\tif (attacker.gender === ally.gender) {\r\n\t\t\t\t\tthis.debug('Rivalry boost');\r\n\t\t\t\t\treturn this.chainModify(1.25); // Increase damage by 25%\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Rivalry\",\r\n\t\trating: 0,\r\n\t\tnum: 79,\r\n\t},\r\n\r\n\tflowergift: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\r\n\t\t},\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (!pokemon.isActive || pokemon.baseSpecies.baseSpecies !== 'Cherrim' || pokemon.transformed) return;\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tif (pokemon.species.id !== 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim-Sunshine', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'cherrimsunshine') {\r\n\t\t\t\t\tpokemon.formeChange('Cherrim', this.effect, false, '[msg]');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifyAtkPriority: 3,\r\n\t\tonAllyModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.baseSpecies.baseSpecies !== 'Hieroturoc') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAllyModifySpDPriority: 4,\r\n\t\tonAllyModifySpD(spd, pokemon) {\r\n\t\t\tif (this.effectState.target.baseSpecies.baseSpecies !== 'Cherrim' &&\r\n\t\t\t\tthis.effectState.target.baseSpecies.baseSpecies !== 'Hieroturoc') return;\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, breakable: 1},\r\n\t\tname: \"Flower Gift\",\r\n\t\trating: 1,\r\n\t\tnum: 122,\r\n\t},\r\n\r\n\tstancechange: {\r\n\t\tonModifyMovePriority: 1,\r\n\t\tonModifyMove(move, attacker, defender) {\r\n\t\t\tif (\r\n\t\t\t\t(!attacker.species.name.startsWith('Aegislash') && !attacker.species.name.startsWith('Light')) || attacker.transformed\r\n\t\t\t) return;\r\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield') return;//if using a non-kings-shield status move, or if using Flurry\r\n\t\t\tif (attacker.species.name === 'Aegislash' || attacker.species.name === 'Aegislash-Blade') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash' : 'Aegislash-Blade');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t} else if (attacker.species.name === 'Aegislash-Light' || attacker.species.name === 'Aegislash-Blade-Light') {\r\n\t\t\t\tconst targetForme = (move.id === 'kingsshield' ? 'Aegislash-Light' : 'Aegislash-Blade-Light');\r\n\t\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\r\n\t\t\t\tthis.add('-message', `${attacker.name} changed to ${move.id === 'kingsshield' ? 'Shield Forme' : 'Blade Forme'}!`);\r\n\t\t\t\tthis.add('-start', attacker, 'typechange', attacker.getTypes(true).join('/'), '[silent]');\r\n\t\t\t\tif (!this.effectState.busted) { // this is just to make a dt that only shows up once per Condana\r\n\t\t\t\t\tconst species = this.dex.species.get(attacker.species.name);\r\n\t\t\t\t\tconst abilities = species.abilities;\r\n\t\t\t\t\tconst baseStats = species.baseStats;\r\n\t\t\t\t\tconst type = species.types[0];\r\n\t\t\t\t\tif (species.types[1]) {\r\n\t\t\t\t\t\tconst type2 = species.types[1];\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type2}.png\" alt=\"${type2}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`raw|<ul class=\"utilichart\"><li class=\"result\"><span class=\"col pokemonnamecol\" style=\"white-space: nowrap\">` + species.name + `</span> <span class=\"col typecol\"><img src=\"http://play.pokemonshowdown.com/sprites/types/${type}.png\" alt=\"${type}\" height=\"14\" width=\"32\"></span> <span style=\"float: left ; min-height: 26px\"><span class=\"col abilitycol\">` + abilities[0] + `</span><span class=\"col abilitycol\"></span></span><span style=\"float: left ; min-height: 26px\"><span class=\"col statcol\"><em>HP</em><br>` + baseStats.hp + `</span> <span class=\"col statcol\"><em>Atk</em><br>` + baseStats.atk + `</span> <span class=\"col statcol\"><em>Def</em><br>` + baseStats.def + `</span> <span class=\"col statcol\"><em>SpA</em><br>` + baseStats.spa + `</span> <span class=\"col statcol\"><em>SpD</em><br>` + baseStats.spd + `</span> <span class=\"col statcol\"><em>Spe</em><br>` + baseStats.spe + `</span> </span></li><li style=\"clear: both\"></li></ul>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Stance Change\",\r\n\t\trating: 4,\r\n\t\tnum: 176,\r\n\t},\r\n\r\n\tzenmode: {\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst baseSpecies = pokemon.baseSpecies.baseSpecies;\r\n\t\t\tconst forme = pokemon.species.forme;\r\n\t\t\tif (!['Darmanitan', 'Immanicus'].includes(baseSpecies) || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && !['Zen', 'Galar-Zen'].includes(forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && ['Zen', 'Galar-Zen'].includes(forme)) {\r\n\t\t\t\tpokemon.addVolatile('zenmode'); // in case of base Zen forms\r\n\t\t\t\tpokemon.removeVolatile('zenmode');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (!pokemon.volatiles['zenmode'] || !pokemon.hp) return;\r\n\t\t\tpokemon.transformed = false;\r\n\t\t\tdelete pokemon.volatiles['zenmode'];\r\n\t\t\tif (['Darmanitan', 'Immanicus'].includes(pokemon.species.baseSpecies) && pokemon.species.battleOnly) {\r\n\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string, this.effect, false, '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst speciesId = pokemon.species.id;\r\n\t\t\t\tif (!pokemon.species.name.includes('Galar')) {\r\n\t\t\t\t\tif (speciesId === 'darmanitanzen' || speciesId === 'immanicuszen') return;\r\n\t\t\t\t\tif (speciesId === 'darmanitan') pokemon.formeChange('Darmanitan-Zen');\r\n\t\t\t\t\tif (speciesId === 'immanicus') pokemon.formeChange('Immanicus-Zen');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (speciesId !== 'darmanitangalarzen') pokemon.formeChange('Darmanitan-Galar-Zen');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tif (['Zen', 'Galar-Zen'].includes(pokemon.species.forme)) {\r\n\t\t\t\t\tpokemon.formeChange(pokemon.species.battleOnly as string);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1},\r\n\t\tname: \"Zen Mode\",\r\n\t\trating: 0,\r\n\t\tnum: 161,\r\n\t},\r\n\r\n\trunaway: {\r\n\t\tinherit: true,\r\n\t\tonTrapPokemonPriority: -10,\r\n\t\tonTrapPokemon(pokemon) {\r\n\t\t\tpokemon.trapped = pokemon.maybeTrapped = false;\r\n\t\t},\r\n\t\tshortDesc: \"Cannot be trapped.\",\r\n\t\tflags: {},\r\n\t\tname: \"Run Away\",\r\n\t\trating: 0,\r\n\t\tnum: 50,\r\n\t},\r\n\tcontrary: {\r\n\t\t/*onChangeBoost(boost, target, source, effect) {\r\n\t\t\tif ((effect && effect.id === 'zpower')) return;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (!target.volatiles['sentinoyle']) {\r\n\t\t\t\t\t// Normal Contrary effect when Sentinoyle is not present\r\n\t\t\t\t\tboost[i]! *= -1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// When Sentinoyle is present\r\n\t\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\t\t// Prevent stat decreases\r\n\t\t\t\t\t\tthis.add('-fail', target, 'boost', '[from] volatile: Sentinoylium Effect'); // originally: unboost\r\n\t\t\t\t\t\tboost[i] = 0;\r\n\t\t\t\t\t} else if (boost[i]! > 0) {\r\n\t\t\t\t\t\t// Allow stat increases to be reversed to decreases\r\n\t\t\t\t\t\tboost[i]! *= -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},*/\r\n\t\tonChangeBoost(boost, target, source, effect) {\r\n\t\t\t// Allow Z-Power effects to bypass Contrary\r\n\t\t\tif (effect && effect.id === 'zpower') return;\r\n\t\r\n\t\t\t// Check for Sentinoyle and lzstartersystem\r\n\t\t\tconst hasSentinoyle = target.volatiles['sentinoyle'];\r\n\t\t\tconst hasLZStartersystem = target.volatiles['lzstartersystem'];\r\n\t\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (hasSentinoyle && !hasLZStartersystem) {\r\n\t\t\t\t\t// If Sentinoyle is present and lzstartersystem is not, prevent boosts\r\n\t\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\t\t// Prevent stat decreases\r\n\t\t\t\t\t\tthis.add('-fail', target, 'boost', '[from] volatile: Sentinoylium Effect');\r\n\t\t\t\t\t\tboost[i] = 0; // Set negative boosts to zero\r\n\t\t\t\t\t} else if (boost[i]! > 0) {\r\n\t\t\t\t\t\t// Allow stat increases to be reversed to decreases\r\n\t\t\t\t\t\tboost[i]! *= -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Normal Contrary effect when Sentinoyle is not present or both are present\r\n\t\t\t\t\tboost[i]! *= -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {breakable: 1},\r\n\t\tname: \"Contrary\",\r\n\t\trating: 4.5,\r\n\t\tnum: 126,\r\n\t},\r\n\tdefiant: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered && !target.volatiles['sentinoyle']) {\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t\tif (statsLowered && target.volatiles['sentinoyle'] && target.volatiles['lzstartersystem']) {\r\n\t\t\t\tthis.boost({atk: 2}, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Defiant\",\r\n\t\trating: 3,\r\n\t\tnum: 128,\r\n\t},\r\n\tcompetitive: {\r\n\t\tonAfterEachBoost(boost, target, source, effect) {\r\n\t\t\tif (!source || target.isAlly(source)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet statsLowered = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tstatsLowered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (statsLowered && !target.volatiles['sentinoyle']) {\r\n\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t\tif (statsLowered && target.volatiles['sentinoyle'] && target.volatiles['lzstartersystem']) {\r\n\t\t\t\tthis.boost({spa: 2}, target, target, null, false, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Competitive\",\r\n\t\trating: 2.5,\r\n\t\tnum: 172,\r\n\t},\r\n\t/*healer: {\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tfor (const ally of pokemon.adjacentAllies()) {\r\n\t\t\t\t// Check if the ally has a status condition\r\n\t\t\t\tif (ally.status) {\r\n\t\t\t\t\tconst previousStatus = ally.status; // Store the previous status\r\n\t\t\t\t\tally.setStatus(''); // Clear the status condition\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if the status was successfully cleared\r\n\t\t\t\t\tif (!ally.status) {\r\n\t\t\t\t\t\tthis.heal(ally.baseMaxhp / 4, ally, pokemon); // Heal 25% of max HP\r\n\t\t\t\t\t\tthis.add('-status', ally, '', pokemon); // Notify about the status change\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Healer\",\r\n\t\trating: 0,\r\n\t\tnum: 131,\r\n\t},*/\r\n\t// end\r\n\t\r\n};\r\n"],
  "mappings": "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",
  "names": ["ally"]
}
