{
  "version": 3,
  "sources": ["../../../config/chat-plugins/uno.ts"],
  "sourcesContent": ["/**\r\n * UNO\r\n * Pokemon Showdown - http://pokemonshowdown.com/\r\n *\r\n * This plugin allows rooms to run games of scripted UNO\r\n *\r\n * @license MIT license\r\n */\r\n\r\n'use strict';\r\n\r\ntype Color = 'Green' | 'Yellow' | 'Red' | 'Blue' | 'Black';\r\ninterface Card {\r\n\tvalue: string;\r\n\tcolor: Color;\r\n\tchangedColor?: Color;\r\n\tname: string;\r\n}\r\n\r\nconst maxTime = 60; // seconds\r\n\r\nconst rgbGradients: {[k in Color]: string} = {\r\n\tGreen: \"rgba(0, 122, 0, 1), rgba(0, 185, 0, 0.9)\",\r\n\tYellow: \"rgba(255, 225, 0, 1), rgba(255, 255, 85, 0.9)\",\r\n\tBlue: \"rgba(40, 40, 255, 1), rgba(125, 125, 255, 0.9)\",\r\n\tRed: \"rgba(255, 0, 0, 1), rgba(255, 125, 125, 0.9)\",\r\n\tBlack: \"rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.55)\",\r\n};\r\n\r\nconst textColors: {[k in Color]: string} = {\r\n\tGreen: \"rgb(0, 128, 0)\",\r\n\tYellow: \"rgb(175, 165, 40)\",\r\n\tBlue: \"rgb(75, 75, 255)\",\r\n\tRed: \"rgb(255, 0, 0)\",\r\n\tBlack: 'inherit',\r\n};\r\n\r\nconst textShadow = 'text-shadow: 1px 0px black, -1px 0px black, 0px -1px black, 0px 1px black, 2px -2px black;';\r\n\r\nfunction cardHTML(card: Card, fullsize: boolean) {\r\n\tlet surface = card.value.replace(/[^A-Z0-9+]/g, \"\");\r\n\tconst background = rgbGradients[card.color];\r\n\tif (surface === 'R') surface = '<i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>';\r\n\r\n\treturn `<button class=\"button\" style=\"font-size: 14px; font-weight: bold; color: white; ${textShadow} padding-bottom: 117px; text-align: left; height: 135px; width: ${fullsize ? '72' : '37'}px; border-radius: 10px 2px 2px 3px; color: white; background: ${card.color}; background: -webkit-linear-gradient(${background}); background: -o-linear-gradient(${background}); background: -moz-linear-gradient(${background}); background: linear-gradient(${background})\" name=send value=\"/uno play ${card.name}\" aria-label=\"${card.name}\">${surface}</button>`;\r\n}\r\n\r\nfunction createDeck() {\r\n\tconst colors = ['Red', 'Blue', 'Green', 'Yellow'];\r\n\tconst values = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'Reverse', 'Skip', '+2'];\r\n\r\n\tconst basic: Card[] = [];\r\n\r\n\tfor (const color of colors) {\r\n\t\tbasic.push(...values.map(v => {\r\n\t\t\tconst c: Card = {value: v, color: color as Color, name: color + \" \" + v};\r\n\t\t\treturn c;\r\n\t\t}));\r\n\t}\r\n\r\n\treturn [\r\n\t\t// two copies of the basic stuff (total 96)\r\n\t\t...basic as Card[],\r\n\t\t...basic as Card[],\r\n\t\t// The four 0s\r\n\t\t...[0, 1, 2, 3].map(v => {\r\n\t\t\tconst c: Card = {color: colors[v] as Color, value: '0', name: colors[v] + ' 0'};\r\n\t\t\treturn c;\r\n\t\t}),\r\n\t\t // Wild cards\r\n\t\t...[0, 1, 2, 3].map(v => {\r\n\t\t\tconst c: Card = {color: 'Black', value: 'Wild', name: 'Wild'};\r\n\t\t\treturn c;\r\n\t\t}),\r\n\t\t// Wild +4 cards\r\n\t\t...[0, 1, 2, 3].map(v => {\r\n\t\t\tconst c: Card = {color: 'Black', value: '+4', name: 'Wild +4'};\r\n\t\t\treturn c;\r\n\t\t}),\r\n\t]; // 108 cards\r\n}\r\n\r\nclass UnoGame extends Rooms.RoomGame {\r\n\tplayerTable: {[userid: string]: UnoGamePlayer};\r\n\tplayers: UnoGamePlayer[];\r\n\tplayerCap: number;\r\n\tallowRenames: boolean;\r\n\tmaxTime: number;\r\n\ttimer: NodeJS.Timer | null;\r\n\tautostartTimer: NodeJS.Timer | null;\r\n\tstate: string;\r\n\tcurrentPlayerid: ID;\r\n\tdeck: Card[];\r\n\tdiscards: Card[];\r\n\ttopCard: Card | null;\r\n\tawaitUno: string | null;\r\n\tunoId: ID | null;\r\n\tdirection: number;\r\n\tsuppressMessages: boolean;\r\n\tspectators: {[k: string]: number};\r\n\tisPlusFour: boolean;\r\n\r\n\tconstructor(room: ChatRoom | GameRoom, cap: number, suppressMessages: boolean) {\r\n\t\tsuper(room);\r\n\r\n\t\tthis.playerTable = Object.create(null);\r\n\t\tthis.players = [];\r\n\r\n\t\tif (room.gameNumber) {\r\n\t\t\troom.gameNumber++;\r\n\t\t} else {\r\n\t\t\troom.gameNumber = 1;\r\n\t\t}\r\n\r\n\t\tthis.playerCap = cap;\r\n\t\tthis.allowRenames = true;\r\n\t\tthis.maxTime = maxTime;\r\n\t\tthis.timer = null;\r\n\t\tthis.autostartTimer = null;\r\n\r\n\t\tthis.gameid = 'uno' as ID;\r\n\t\tthis.title = 'UNO';\r\n\r\n\t\tthis.state = 'signups';\r\n\t\tthis.currentPlayerid = '';\r\n\t\tthis.deck = Dex.shuffle(createDeck());\r\n\t\tthis.discards = [];\r\n\t\tthis.topCard = null;\r\n\t\tthis.awaitUno = null;\r\n\t\tthis.unoId = null;\r\n\t\tthis.isPlusFour = false;\r\n\r\n\t\tthis.direction = 1;\r\n\r\n\t\tthis.suppressMessages = suppressMessages || false;\r\n\t\tthis.spectators = Object.create(null);\r\n\r\n\t\tthis.sendToRoom(`|uhtml|uno-${this.room.gameNumber}|<div class=\"broadcast-green\"><p style=\"font-size: 14pt; text-align: center\">A new game of <strong>UNO</strong> is starting!</p><p style=\"font-size: 9pt; text-align: center\"><button name=\"send\" value=\"/uno join\">Join</button><br />Or use <strong>/uno join</strong> to join the game.</p>${(this.suppressMessages ? `<p style=\"font-size: 6pt; text-align: center\">Game messages will be shown to only players.  If you would like to spectate the game, use <strong>/uno spectate</strong></p>` : '')}</div>`, true);\r\n\t}\r\n\r\n\tonUpdateConnection() {}\r\n\r\n\tonConnect(user: User, connection: Connection) {\r\n\t\tif (this.state === 'signups') {\r\n\t\t\tconnection.sendTo(\r\n\t\t\t\tthis.room,\r\n\t\t\t\t`|uhtml|uno-${this.room.gameNumber}|<div class=\"broadcast-green\">` +\r\n\t\t\t\t`<p style=\"font-size: 14pt; text-align: center\">A new game of <strong>UNO</strong> is starting!</p>` +\r\n\t\t\t\t`<p style=\"font-size: 9pt; text-align: center\"><button name=\"send\" value=\"/uno join\">Join</button>` +\r\n\t\t\t\t`<br />Or use <strong>/uno join</strong> to join the game.</p>` +\r\n\t\t\t\t`${this.suppressMessages ?\r\n\t\t\t\t`<p style=\"font-size: 6pt; text-align: center\">Game messages will be shown to only players. ` +\r\n\t\t\t\t`If you would like to spectate the game, use <strong>/uno spectate</strong></p>` : ''}</div>`\r\n\t\t\t);\r\n\t\t} else if (this.onSendHand(user) === false) {\r\n\t\t\tconnection.sendTo(\r\n\t\t\t\tthis.room,\r\n\t\t\t\t`|uhtml|uno-${this.room.gameNumber}|<div class=\"infobox\"><p>A UNO game is currently in progress.</p>` +\r\n\t\t\t\t`${(this.suppressMessages ? `<p style=\"font-size: 6pt\">Game messages will be shown to only players. ` +\r\n\t\t\t\t`If you would like to spectate the game, use <strong>/uno spectate</strong></p>` : '')}</div>`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tonStart() {\r\n\t\tif (this.playerCount < 2) return false;\r\n\t\tif (this.autostartTimer) clearTimeout(this.autostartTimer);\r\n\t\tthis.sendToRoom(`|uhtmlchange|uno-${this.room.gameNumber}|<div class=\"infobox\"><p>The game of UNO has started.</p>${(this.suppressMessages ? `<p style=\"font-size: 6pt\">Game messages will be shown to only players.  If you would like to spectate the game, use <strong>/uno spectate</strong></p>` : '')}</div>`, true);\r\n\t\tthis.state = 'play';\r\n\r\n\t\tthis.onNextPlayer(); // determines the first player\r\n\r\n\t\t// give cards to the players\r\n\t\tfor (const i in this.playerTable) {\r\n\t\t\tthis.playerTable[i].hand.push(...this.drawCard(7));\r\n\t\t}\r\n\r\n\t\t// top card of the deck.\r\n\t\tdo {\r\n\t\t\tthis.topCard = this.drawCard(1)[0];\r\n\t\t\tthis.discards.unshift(this.topCard);\r\n\t\t} while (this.topCard.color === 'Black');\r\n\r\n\t\tthis.sendToRoom(`|raw|The top card is <span style=\"color: ${textColors[this.topCard.color]}\">${this.topCard.name}</span>.`);\r\n\r\n\t\tthis.onRunEffect(this.topCard.value, true);\r\n\t\tthis.nextTurn(true);\r\n\t}\r\n\r\n\tjoinGame(user: User) {\r\n\t\tif (this.state === 'signups' && this.addPlayer(user)) {\r\n\t\t\tthis.sendToRoom(`${user.name} has joined the game of UNO.`);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tleaveGame(user: User) {\r\n\t\tif (!(user.id in this.playerTable)) return false;\r\n\t\tif (this.state === 'signups' && this.removePlayer(user)) {\r\n\t\t\tthis.sendToRoom(`${user.name} has left the game of UNO.`);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Overwrite the default makePlayer so it makes an UnoGamePlayer instead.\r\n\t */\r\n\tmakePlayer(user: User) {\r\n\t\treturn new UnoGamePlayer(user, this);\r\n\t}\r\n\r\n\tonRename(user: User, oldUserid: ID, isJoining: boolean, isForceRenamed: boolean) {\r\n\t\tif (!(oldUserid in this.playerTable) || user.id === oldUserid) return false;\r\n\t\tif (!user.named && !isForceRenamed) {\r\n\t\t\tuser.games.delete(this.roomid);\r\n\t\t\tuser.updateSearch();\r\n\t\t\treturn; // dont set users to their guest accounts.\r\n\t\t}\r\n\t\tthis.playerTable[user.id] = this.playerTable[oldUserid];\r\n\t\t// only run if it's a rename that involves a change of userid\r\n\t\tif (user.id !== oldUserid) delete this.playerTable[oldUserid];\r\n\r\n\t\t// update the user's name information\r\n\t\tthis.playerTable[user.id].name = user.name;\r\n\t\tthis.playerTable[user.id].id = user.id;\r\n\t\tif (this.awaitUno && this.awaitUno === oldUserid) this.awaitUno = user.id;\r\n\r\n\t\tif (this.currentPlayerid === oldUserid) this.currentPlayerid = user.id;\r\n\t}\r\n\r\n\teliminate(userid: ID) {\r\n\t\tif (!(userid in this.playerTable)) return false;\r\n\r\n\t\tconst name = this.playerTable[userid].name;\r\n\r\n\t\tif (this.playerCount === 2) {\r\n\t\t\tthis.removePlayer(this.playerTable[userid]);\r\n\t\t\tthis.onWin(this.playerTable[Object.keys(this.playerTable)[0]]);\r\n\t\t\treturn name;\r\n\t\t}\r\n\r\n\t\t// handle current player...\r\n\t\tif (userid === this.currentPlayerid) {\r\n\t\t\tif (this.state === 'color') {\r\n\t\t\t\tif (!this.topCard) {\r\n\t\t\t\t\t// should never happen\r\n\t\t\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.topCard.changedColor = this.discards[1].changedColor || this.discards[1].color;\r\n\t\t\t\tthis.sendToRoom(`|raw|${Chat.escapeHTML(name)} has not picked a color, the color will stay as <span style=\"color: ${textColors[this.topCard.changedColor]}\">${this.topCard.changedColor}</span>.`);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\t\tthis.nextTurn();\r\n\t\t}\r\n\t\tif (this.awaitUno === userid) this.awaitUno = null;\r\n\r\n\t\t// put that player's cards into the discard pile to prevent cards from being permanently lost\r\n\t\tthis.discards.push(...this.playerTable[userid].hand);\r\n\r\n\t\tthis.removePlayer(this.playerTable[userid]);\r\n\t\treturn name;\r\n\t}\r\n\r\n\tsendToRoom(msg: string, overrideSuppress = false) {\r\n\t\tif (!this.suppressMessages || overrideSuppress) {\r\n\t\t\tthis.room.add(msg).update();\r\n\t\t} else {\r\n\t\t\t// send to the players first\r\n\t\t\tfor (const i in this.playerTable) {\r\n\t\t\t\tthis.playerTable[i].sendRoom(msg);\r\n\t\t\t}\r\n\r\n\t\t\t// send to spectators\r\n\t\t\tfor (const i in this.spectators) {\r\n\t\t\t\tif (i in this.playerTable) continue; // don't double send to users already in the game.\r\n\t\t\t\tconst user = Users.getExact(i);\r\n\t\t\t\tif (user) user.sendTo(this.roomid, msg);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetPlayers(showCards?: boolean): string[] {\r\n\t\tlet playerList = Object.keys(this.playerTable);\r\n\t\tif (!showCards) {\r\n\t\t\treturn playerList.sort().map(id => Chat.escapeHTML(this.playerTable[id].name));\r\n\t\t}\r\n\t\tif (this.direction === -1) playerList = playerList.reverse();\r\n\t\treturn playerList.map(id =>\r\n\t\t\t`${(this.currentPlayerid === id ? '<strong>' : '')}` +\r\n\t\t\t`${Chat.escapeHTML(this.playerTable[id].name)} (${this.playerTable[id].hand.length})` +\r\n\t\t\t`${(this.currentPlayerid === id ? '</strong>' : \"\")}`\r\n\t\t);\r\n\t}\r\n\r\n\tonAwaitUno() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tif (!this.awaitUno) return resolve();\r\n\r\n\t\t\tthis.state = \"uno\";\r\n\t\t\t// the throttle for sending messages is at 600ms for non-authed users,\r\n\t\t\t// wait 750ms before sending the next person's turn.\r\n\t\t\t// this allows games to be fairer, so the next player would not spam the pass command blindly\r\n\t\t\t// to force the player to draw 2 cards.\r\n\t\t\t// this also makes games with uno bots not always turn in the bot's favour.\r\n\t\t\t// without a delayed turn, 3 bots playing will always result in a endless game\r\n\t\t\tsetTimeout(() => resolve(), 750);\r\n\t\t});\r\n\t}\r\n\r\n\tnextTurn(starting?: boolean) {\r\n\t\tvoid this.onAwaitUno()\r\n\t\t\t.then(x => {\r\n\t\t\t\tif (!starting) this.onNextPlayer();\r\n\r\n\t\t\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\t\t\tconst player = this.playerTable[this.currentPlayerid];\r\n\r\n\t\t\t\tthis.sendToRoom(`|c:|${(Math.floor(Date.now() / 1000))}|~|${player.name}'s turn.`);\r\n\t\t\t\tthis.state = 'play';\r\n\t\t\t\tif (player.cardLock) player.cardLock = null;\r\n\t\t\t\tplayer.sendDisplay();\r\n\r\n\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\tthis.sendToRoom(`${player.name} has been automatically disqualified.`);\r\n\t\t\t\t\tthis.eliminate(this.currentPlayerid);\r\n\t\t\t\t}, this.maxTime * 1000);\r\n\t\t\t});\r\n\t}\r\n\r\n\tonNextPlayer() {\r\n\t\t// if none is set\r\n\t\tif (!this.currentPlayerid) {\r\n\t\t\tconst userList = Object.keys(this.playerTable);\r\n\t\t\tthis.currentPlayerid = userList[Math.floor(this.playerCount * Math.random())] as ID;\r\n\t\t}\r\n\r\n\t\tthis.currentPlayerid = this.getNextPlayer();\r\n\t}\r\n\r\n\tgetNextPlayer() {\r\n\t\tconst userList = Object.keys(this.playerTable);\r\n\r\n\t\tlet player: ID = userList[(userList.indexOf(this.currentPlayerid) + this.direction)] as ID;\r\n\r\n\t\tif (!player) {\r\n\t\t\tplayer = toID(this.direction === 1 ? userList[0] : userList[this.playerCount - 1]);\r\n\t\t}\r\n\t\treturn player;\r\n\t}\r\n\r\n\tonDraw(player: UnoGamePlayer) {\r\n\t\tif (this.currentPlayerid !== player.id || this.state !== 'play') return false;\r\n\t\tif (player.cardLock) return true;\r\n\r\n\t\tthis.onCheckUno();\r\n\r\n\t\tthis.sendToRoom(`${player.name} has drawn a card.`);\r\n\r\n\t\tconst card = this.onDrawCard(player, 1);\r\n\t\tplayer.sendDisplay();\r\n\t\tplayer.cardLock = card[0].name;\r\n\t}\r\n\r\n\tonPlay(player: UnoGamePlayer, cardName: string) {\r\n\t\tif (this.currentPlayerid !== player.id || this.state !== 'play') return false;\r\n\r\n\t\tconst card = player.hasCard(cardName);\r\n\t\tif (!card) return \"You do not have that card.\";\r\n\r\n\t\t// check for legal play\r\n\t\tif (!this.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tif (player.cardLock && player.cardLock !== cardName) return `You can only play ${player.cardLock} after drawing.`;\r\n\t\tif (\r\n\t\t\tcard.color !== 'Black' &&\r\n\t\t\tcard.color !== (this.topCard.changedColor || this.topCard.color) &&\r\n\t\t\tcard.value !== this.topCard.value\r\n\t\t) {\r\n\t\t\treturn `You cannot play this card - you can only play: Wild cards, ` +\r\n\t\t\t\t`${(this.topCard.changedColor ? 'and' : '')} ${(this.topCard.changedColor || this.topCard.color)} ` +\r\n\t\t\t\t`cards${this.topCard.changedColor ? \"\" : ` and ${this.topCard.value}'s`}.`;\r\n\t\t}\r\n\t\tif (card.value === '+4' && !player.canPlayWildFour()) {\r\n\t\t\treturn \"You cannot play Wild +4 when you still have a card with the same color as the top card.\";\r\n\t\t}\r\n\r\n\t\tif (this.timer) clearTimeout(this.timer); // reset the autodq timer.\r\n\r\n\t\tthis.onCheckUno();\r\n\r\n\t\t// update the game information.\r\n\t\tthis.topCard = card;\r\n\t\tplayer.removeCard(cardName);\r\n\t\tthis.discards.unshift(card);\r\n\r\n\t\t// update the unoId here, so when the display is sent to the player when the play is made\r\n\t\tif (player.hand.length === 1) {\r\n\t\t\tthis.awaitUno = player.id;\r\n\t\t\tthis.unoId = Math.floor(Math.random() * 100).toString() as ID;\r\n\t\t}\r\n\r\n\t\tplayer.sendDisplay(); // update display without the card in it for purposes such as choosing colors\r\n\r\n\t\tthis.sendToRoom(`|raw|${Chat.escapeHTML(player.name)} has played a <span style=\"color: ${textColors[card.color]}\">${card.name}</span>.`);\r\n\r\n\t\t// handle hand size\r\n\t\tif (!player.hand.length) {\r\n\t\t\tthis.onWin(player);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// continue with effects and next player\r\n\t\tthis.onRunEffect(card.value);\r\n\t\tif (this.state === 'play') this.nextTurn();\r\n\t}\r\n\r\n\tonRunEffect(value: string, initialize?: boolean) {\r\n\t\tconst colorDisplay = `|uhtml|uno-hand|<table style=\"width: 100%; border: 1px solid black\"><tr><td style=\"width: 50%\"><button style=\"width: 100%; background-color: red; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; padding: 5px\" name=send value=\"/uno color Red\">Red</button></td><td style=\"width: 50%\"><button style=\"width: 100%; background-color: blue; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; color: white; padding: 5px\" name=send value=\"/uno color Blue\">Blue</button></td></tr><tr><td style=\"width: 50%\"><button style=\"width: 100%; background-color: green; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; padding: 5px\" name=send value=\"/uno color Green\">Green</button></td><td style=\"width: 50%\"><button style=\"width: 100%; background-color: yellow; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; padding: 5px\" name=send value=\"/uno color Yellow\">Yellow</button></td></tr></table>`;\r\n\r\n\t\tswitch (value) {\r\n\t\tcase 'Reverse':\r\n\t\t\tthis.direction *= -1;\r\n\t\t\tthis.sendToRoom(\"The direction of the game has changed.\");\r\n\t\t\t// in 2 player games, reverse sends the turn back to the player.\r\n\t\t\tif (!initialize && this.playerCount === 2) this.onNextPlayer();\r\n\t\t\tbreak;\r\n\t\tcase 'Skip':\r\n\t\t\tthis.onNextPlayer();\r\n\t\t\tthis.sendToRoom(this.playerTable[this.currentPlayerid].name + \"'s turn has been skipped.\");\r\n\t\t\tbreak;\r\n\t\tcase '+2':\r\n\t\t\tthis.onNextPlayer();\r\n\t\t\tthis.sendToRoom(this.playerTable[this.currentPlayerid].name + \" has been forced to draw 2 cards.\");\r\n\t\t\tthis.onDrawCard(this.playerTable[this.currentPlayerid], 2);\r\n\t\t\tbreak;\r\n\t\tcase '+4':\r\n\t\t\tthis.playerTable[this.currentPlayerid].sendRoom(colorDisplay);\r\n\t\t\tthis.state = 'color';\r\n\t\t\t// apply to the next in line, since the current player still has to choose the color\r\n\t\t\tconst next = this.getNextPlayer();\r\n\t\t\tthis.sendToRoom(this.playerTable[next].name + \" has been forced to draw 4 cards.\");\r\n\t\t\tthis.onDrawCard(this.playerTable[next], 4);\r\n\t\t\tthis.isPlusFour = true;\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendToRoom(`${this.playerTable[this.currentPlayerid].name} has been automatically disqualified.`);\r\n\t\t\t\tthis.eliminate(this.currentPlayerid);\r\n\t\t\t}, this.maxTime * 1000);\r\n\t\t\tbreak;\r\n\t\tcase 'Wild':\r\n\t\t\tthis.playerTable[this.currentPlayerid].sendRoom(colorDisplay);\r\n\t\t\tthis.state = 'color';\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendToRoom(`${this.playerTable[this.currentPlayerid].name} has been automatically disqualified.`);\r\n\t\t\t\tthis.eliminate(this.currentPlayerid);\r\n\t\t\t}, this.maxTime * 1000);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (initialize) this.onNextPlayer();\r\n\t}\r\n\r\n\tonSelectColor(player: UnoGamePlayer, color: Color) {\r\n\t\tif (\r\n\t\t\t!['Red', 'Blue', 'Green', 'Yellow'].includes(color) ||\r\n\t\t\tplayer.id !== this.currentPlayerid ||\r\n\t\t\tthis.state !== 'color'\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!this.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tthis.topCard.changedColor = color;\r\n\t\tthis.sendToRoom(`The color has been changed to ${color}.`);\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\r\n\t\t// send the display of their cards again\r\n\t\tplayer.sendDisplay();\r\n\r\n\t\tif (this.isPlusFour) {\r\n\t\t\tthis.isPlusFour = false;\r\n\t\t\tthis.onNextPlayer(); // handle the skipping here.\r\n\t\t}\r\n\r\n\t\tthis.nextTurn();\r\n\t}\r\n\r\n\tonDrawCard(player: UnoGamePlayer, count: number) {\r\n\t\tif (typeof count === 'string') count = parseInt(count);\r\n\t\tif (!count || isNaN(count) || count < 1) count = 1;\r\n\t\tconst drawnCards = this.drawCard(count);\r\n\r\n\t\tplayer.hand.push(...drawnCards);\r\n\t\tplayer.sendRoom(\r\n\t\t\t`|raw|You have drawn the following card${Chat.plural(drawnCards)}: ` +\r\n\t\t\t`${drawnCards.map(card => `<span style=\"color: ${textColors[card.color]}\">${card.name}</span>`).join(', ')}.`\r\n\t\t);\r\n\t\treturn drawnCards;\r\n\t}\r\n\r\n\tdrawCard(count: number) {\r\n\t\tif (typeof count === 'string') count = parseInt(count);\r\n\t\tif (!count || isNaN(count) || count < 1) count = 1;\r\n\t\tconst drawnCards: Card[] = [];\r\n\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\tif (!this.deck.length) {\r\n\t\t\t\t// shuffle the cards back into the deck, or if there are no discards, add another deck into the game.\r\n\t\t\t\tthis.deck = this.discards.length ? Dex.shuffle(this.discards) : Dex.shuffle(createDeck());\r\n\t\t\t\tthis.discards = []; // clear discard pile\r\n\t\t\t}\r\n\t\t\tdrawnCards.push(this.deck[this.deck.length - 1]);\r\n\t\t\tthis.deck.pop();\r\n\t\t}\r\n\t\treturn drawnCards;\r\n\t}\r\n\r\n\tonUno(player: UnoGamePlayer, unoId: ID) {\r\n\t\t// uno id makes spamming /uno uno impossible\r\n\t\tif (this.unoId !== unoId || player.id !== this.awaitUno) return false;\r\n\t\tthis.sendToRoom(Chat.html`|raw|<strong>UNO!</strong> ${player.name} is down to their last card!`);\r\n\t\tthis.awaitUno = null;\r\n\t\tthis.unoId = null;\r\n\t}\r\n\r\n\tonCheckUno() {\r\n\t\tif (this.awaitUno) {\r\n\t\t\t// if the previous player hasn't hit UNO before the next player plays something, they are forced to draw 2 cards;\r\n\t\t\tif (this.awaitUno !== this.currentPlayerid) {\r\n\t\t\t\tthis.sendToRoom(`${this.playerTable[this.awaitUno].name} forgot to say UNO! and is forced to draw 2 cards.`);\r\n\t\t\t\tthis.onDrawCard(this.playerTable[this.awaitUno], 2);\r\n\t\t\t}\r\n\t\t\tthis.awaitUno = null;\r\n\t\t\tthis.unoId = null;\r\n\t\t}\r\n\t}\r\n\r\n\tonSendHand(user: User) {\r\n\t\tif (!(user.id in this.playerTable) || this.state === 'signups') return false;\r\n\r\n\t\tthis.playerTable[user.id].sendDisplay();\r\n\t}\r\n\r\n\tonWin(player: UnoGamePlayer) {\r\n\t\tthis.sendToRoom(\r\n\t\t\tChat.html`|raw|<div class=\"broadcast-green\">Congratulations to ${player.name} for winning the game of UNO!</div>`,\r\n\t\t\ttrue\r\n\t\t);\r\n\t\tthis.destroy();\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\tif (this.autostartTimer) clearTimeout(this.autostartTimer);\r\n\t\tthis.sendToRoom(`|uhtmlchange|uno-${this.room.gameNumber}|<div class=\"infobox\">The game of UNO has ended.</div>`, true);\r\n\r\n\t\t// deallocate games for each player.\r\n\t\tfor (const i in this.playerTable) {\r\n\t\t\tthis.playerTable[i].destroy();\r\n\t\t}\r\n\t\tdelete this.room.game;\r\n\t}\r\n}\r\n\r\nclass UnoGamePlayer extends Rooms.RoomGamePlayer {\r\n\thand: Card[];\r\n\tgame: UnoGame;\r\n\tcardLock: string | null;\r\n\r\n\tconstructor(user: User, game: UnoGame) {\r\n\t\tsuper(user, game);\r\n\t\tthis.hand = [];\r\n\t\tthis.game = game;\r\n\t\tthis.cardLock = null;\r\n\t}\r\n\r\n\tcanPlayWildFour() {\r\n\t\tif (!this.game.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tconst color = (this.game.topCard.changedColor || this.game.topCard.color);\r\n\r\n\t\tif (this.hand.some(c => c.color === color)) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\thasCard(cardName: string) {\r\n\t\treturn this.hand.find(card => card.name === cardName);\r\n\t}\r\n\r\n\tremoveCard(cardName: string) {\r\n\t\tfor (const [i, card] of this.hand.entries()) {\r\n\t\t\tif (card.name === cardName) {\r\n\t\t\t\tthis.hand.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbuildHand() {\r\n\t\treturn this.hand.sort((a, b) => a.color.localeCompare(b.color) || a.value.localeCompare(b.value))\r\n\t\t\t.map((c, i) => cardHTML(c, i === this.hand.length - 1));\r\n\t}\r\n\r\n\tsendDisplay() {\r\n\t\tconst hand = this.buildHand().join('');\r\n\t\tconst players = `<p><strong>Players (${this.game.playerCount}):</strong></p>${this.game.getPlayers(true).join('<br />')}`;\r\n\t\tconst draw = '<button class=\"button\" style=\"width: 45%; background: rgba(0, 0, 255, 0.05)\" name=send value=\"/uno draw\">Draw a card!</button>';\r\n\t\tconst pass = '<button class=\"button\" style=\" width: 45%; background: rgba(255, 0, 0, 0.05)\" name=send value=\"/uno pass\">Pass!</button>';\r\n\t\tconst uno = `<button class=\"button\" style=\" width: 90%; background: rgba(0, 255, 0, 0.05); height: 30px; margin-top: 2px;\" name=send value=\"/uno uno ${this.game.unoId || '0'}\">UNO!</button>`;\r\n\r\n\t\tif (!this.game.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tconst top = `<strong>Top Card: <span style=\"color: ${textColors[this.game.topCard.changedColor || this.game.topCard.color]}\">${this.game.topCard.name}</span></strong>`;\r\n\r\n\t\t// clear previous display and show new display\r\n\t\tthis.sendRoom(\"|uhtmlchange|uno-hand|\");\r\n\t\tthis.sendRoom(\r\n\t\t\t`|uhtml|uno-hand|<div style=\"border: 1px solid skyblue; padding: 0 0 5px 0\"><table style=\"width: 100%; table-layout: fixed; border-radius: 3px\"><tr><td colspan=4 rowspan=2 style=\"padding: 5px\"><div style=\"overflow-x: auto; white-space: nowrap; width: 100%\">${hand}</div></td>${this.game.currentPlayerid === this.id ? `<td colspan=2 style=\"padding: 5px 5px 0 5px\">${top}</td></tr>` : \"\"}` +\r\n\t\t\t`<tr><td colspan=2 style=\"vertical-align: top; padding: 0px 5px 5px 5px\"><div style=\"overflow-y: scroll\">${players}</div></td></tr></table>` +\r\n\t\t\t`${this.game.currentPlayerid === this.id ? `<div style=\"text-align: center\">${draw}${pass}<br />${uno}</div>` : \"\"}</div>`\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const commands: ChatCommands = {\r\n\tuno: {\r\n\t\t// roomowner commands\r\n\t\toff: 'disable',\r\n\t\tdisable(target, room, user) {\r\n\t\t\tif (!this.can('gamemanagement', null, room)) return;\r\n\t\t\tif (room.unoDisabled) {\r\n\t\t\t\treturn this.errorReply(\"UNO is already disabled in this room.\");\r\n\t\t\t}\r\n\t\t\troom.unoDisabled = true;\r\n\t\t\tif (room.chatRoomData) {\r\n\t\t\t\troom.chatRoomData.unoDisabled = true;\r\n\t\t\t\tRooms.global.writeChatRoomData();\r\n\t\t\t}\r\n\t\t\treturn this.sendReply(\"UNO has been disabled for this room.\");\r\n\t\t},\r\n\r\n\t\ton: 'enable',\r\n\t\tenable(target, room, user) {\r\n\t\t\tif (!this.can('gamemanagement', null, room)) return;\r\n\t\t\tif (!room.unoDisabled) {\r\n\t\t\t\treturn this.errorReply(\"UNO is already enabled in this room.\");\r\n\t\t\t}\r\n\t\t\tdelete room.unoDisabled;\r\n\t\t\tif (room.chatRoomData) {\r\n\t\t\t\tdelete room.chatRoomData.unoDisabled;\r\n\t\t\t\tRooms.global.writeChatRoomData();\r\n\t\t\t}\r\n\t\t\treturn this.sendReply(\"UNO has been enabled for this room.\");\r\n\t\t},\r\n\r\n\t\t// moderation commands\r\n\t\tnew: 'create',\r\n\t\tmake: 'create',\r\n\t\tcreatepublic: 'create',\r\n\t\tmakepublic: 'create',\r\n\t\tcreateprivate: 'create',\r\n\t\tmakeprivate: 'create',\r\n\t\tcreate(target, room, user, connection, cmd) {\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\t\t\tif (room.unoDisabled) return this.errorReply(\"UNO is currently disabled for this room.\");\r\n\t\t\tif (room.game) return this.errorReply(\"There is already a game in progress in this room.\");\r\n\r\n\t\t\tconst suppressMessages = cmd.includes('private') || !(cmd.includes('public') || room.roomid === 'gamecorner');\r\n\r\n\t\t\tlet cap = parseInt(target);\r\n\t\t\tif (isNaN(cap)) cap = 6;\r\n\t\t\tif (cap < 2) cap = 2;\r\n\t\t\troom.game = new UnoGame(room, cap, suppressMessages);\r\n\t\t\tthis.privateModAction(`(A game of UNO was created by ${user.name}.)`);\r\n\t\t\tthis.modlog('UNO CREATE');\r\n\t\t},\r\n\r\n\t\tstart(target, room, user) {\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno' || game.state !== 'signups') {\r\n\t\t\t\treturn this.errorReply(\"There is no UNO game in signups phase in this room.\");\r\n\t\t\t}\r\n\t\t\tif (game.onStart()) {\r\n\t\t\t\tthis.privateModAction(`(The game of UNO was started by ${user.name}.)`);\r\n\t\t\t\tthis.modlog('UNO START');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstop: 'end',\r\n\t\tend(target, room, user) {\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\t\t\tif (!room.game || room.game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room.\");\r\n\t\t\troom.game.destroy();\r\n\t\t\troom.add(\"The game of UNO was forcibly ended.\").update();\r\n\t\t\tthis.privateModAction(`(The game of UNO was ended by ${user.name}.)`);\r\n\t\t\tthis.modlog('UNO END');\r\n\t\t},\r\n\r\n\t\ttimer(target, room, user) {\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room.\");\r\n\t\t\tconst amount = parseInt(target);\r\n\t\t\tif (!amount || amount < 5 || amount > 300) return this.errorReply(\"The amount must be a number between 5 and 300.\");\r\n\r\n\t\t\tgame.maxTime = amount;\r\n\t\t\tif (game.timer) clearTimeout(game.timer);\r\n\t\t\tgame.timer = setTimeout(() => {\r\n\t\t\t\tgame.eliminate(game.currentPlayerid);\r\n\t\t\t}, amount * 1000);\r\n\t\t\tthis.addModAction(`${user.name} has set the UNO automatic disqualification timer to ${amount} seconds.`);\r\n\t\t\tthis.modlog('UNO TIMER', null, `${amount} seconds`);\r\n\t\t},\r\n\r\n\t\tautostart(target, room, user) {\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tif (toID(target) === 'off') {\r\n\t\t\t\tif (!game.autostartTimer) return this.errorReply(\"There is no autostart timer running on.\");\r\n\t\t\t\tthis.addModAction(`${user.name} has turned off the UNO autostart timer.`);\r\n\t\t\t\tclearTimeout(game.autostartTimer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst amount = parseInt(target);\r\n\t\t\tif (!amount || amount < 30 || amount > 600) {\r\n\t\t\t\treturn this.errorReply(\"The amount must be a number between 30 and 600 seconds.\");\r\n\t\t\t}\r\n\t\t\tif (game.state !== 'signups') return this.errorReply(\"The game of UNO has already started.\");\r\n\t\t\tif (game.autostartTimer) clearTimeout(game.autostartTimer);\r\n\t\t\tgame.autostartTimer = setTimeout(() => {\r\n\t\t\t\tgame.onStart();\r\n\t\t\t}, amount * 1000);\r\n\t\t\tthis.addModAction(`${user.name} has set the UNO autostart timer to ${amount} seconds.`);\r\n\t\t},\r\n\r\n\t\tdq: 'disqualify',\r\n\t\tdisqualify(target, room, user) {\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\r\n\t\t\tconst disqualified = game.eliminate(toID(target));\r\n\t\t\tif (disqualified === false) return this.errorReply(`Unable to disqualify ${target}.`);\r\n\t\t\tthis.privateModAction(`(${user.name} has disqualified ${disqualified} from the UNO game.)`);\r\n\t\t\tthis.modlog('UNO DQ', toID(target));\r\n\t\t\troom.add(`${target} has been disqualified from the UNO game.`).update();\r\n\t\t},\r\n\r\n\t\t// player/user commands\r\n\t\tj: 'unojoin',\r\n\t\t// TypeScript doesn't like 'join' being defined as a function\r\n\t\tjoin: 'unojoin',\r\n\t\tunojoin(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tif (!this.canTalk()) return false;\r\n\t\t\tif (!game.joinGame(user)) return this.errorReply(\"Unable to join the game.\");\r\n\r\n\t\t\treturn this.sendReply(\"You have joined the game of UNO.\");\r\n\t\t},\r\n\r\n\t\tl: 'leave',\r\n\t\tleave(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tif (!game.leaveGame(user)) return this.errorReply(\"Unable to leave the game.\");\r\n\t\t\treturn this.sendReply(\"You have left the game of UNO.\");\r\n\t\t},\r\n\r\n\t\tplay(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tconst player: UnoGamePlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) return this.errorReply(`You are not in the game of UNO.`);\r\n\t\t\tconst error = game.onPlay(player, target);\r\n\t\t\tif (error) this.errorReply(error);\r\n\t\t},\r\n\r\n\t\tdraw(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tconst player: UnoGamePlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) return this.errorReply(`You are not in the game of UNO.`);\r\n\t\t\tconst error = game.onDraw(player);\r\n\t\t\tif (error) return this.errorReply(\"You have already drawn a card this turn.\");\r\n\t\t},\r\n\r\n\t\tpass(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tif (game.currentPlayerid !== user.id) return this.errorReply(\"It is currently not your turn.\");\r\n\t\t\tconst player: UnoGamePlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) return this.errorReply(`You are not in the game of UNO.`);\r\n\t\t\tif (!player.cardLock) return this.errorReply(\"You cannot pass until you draw a card.\");\r\n\t\t\tif (game.state === 'color') return this.errorReply(\"You cannot pass until you choose a color.\");\r\n\r\n\t\t\tgame.sendToRoom(`${user.name} has passed.`);\r\n\t\t\tgame.nextTurn();\r\n\t\t},\r\n\r\n\t\tcolor(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return false;\r\n\t\t\tconst player: UnoGamePlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) return this.errorReply(`You are not in the game of UNO.`);\r\n\t\t\tlet color: Color;\r\n\t\t\tif (target === 'Red' || target === 'Green' || target === 'Blue' || target === 'Yellow' || target === 'Black') {\r\n\t\t\t\tcolor = target;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.errorReply(`\"${target}\" is not a valid color.`);\r\n\t\t\t}\r\n\t\t\tgame.onSelectColor(player, color);\r\n\t\t},\r\n\r\n\t\tuno(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return false;\r\n\t\t\tconst player: UnoGamePlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) return this.errorReply(`You are not in the game of UNO.`);\r\n\t\t\tgame.onUno(player, toID(target));\r\n\t\t},\r\n\r\n\t\t// information commands\r\n\t\t'': 'hand',\r\n\t\thand(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.parse(\"/help uno\");\r\n\t\t\tgame.onSendHand(user);\r\n\t\t},\r\n\r\n\t\tplayers: 'getusers',\r\n\t\tusers: 'getusers',\r\n\t\tgetplayers: 'getusers',\r\n\t\tgetusers(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\t\t\tthis.sendReplyBox(`<strong>Players (${game.playerCount})</strong>:<br />${game.getPlayers().join(', ')}`);\r\n\t\t},\r\n\r\n\t\thelp(target, room, user) {\r\n\t\t\tthis.parse('/help uno');\r\n\t\t},\r\n\r\n\t\t// suppression commands\r\n\t\tsuppress(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tif (!this.can('minigame', null, room)) return;\r\n\r\n\t\t\ttarget = toID(target);\r\n\t\t\tconst state = target === 'on' ? true : target === 'off' ? false : undefined;\r\n\r\n\t\t\tif (state === undefined) {\r\n\t\t\t\treturn this.sendReply(`Suppression of UNO game messages is currently ${(game.suppressMessages ? 'on' : 'off')}.`);\r\n\t\t\t}\r\n\t\t\tif (state === game.suppressMessages) {\r\n\t\t\t\treturn this.errorReply(`Suppression of UNO game messages is already ${(game.suppressMessages ? 'on' : 'off')}.`);\r\n\t\t\t}\r\n\r\n\t\t\tgame.suppressMessages = state;\r\n\r\n\t\t\tthis.addModAction(`${user.name} has turned ${(state ? 'on' : 'off')} suppression of UNO game messages.`);\r\n\t\t\tthis.modlog('UNO SUPRESS', null, (state ? 'ON' : 'OFF'));\r\n\t\t},\r\n\r\n\t\tspectate(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\r\n\t\t\tif (!game.suppressMessages) return this.errorReply(\"The current UNO game is not suppressing messages.\");\r\n\t\t\tif (user.id in game.spectators) return this.errorReply(\"You are already spectating this game.\");\r\n\r\n\t\t\tgame.spectators[user.id] = 1;\r\n\t\t\tthis.sendReply(\"You are now spectating this private UNO game.\");\r\n\t\t},\r\n\r\n\t\tunspectate(target, room, user) {\r\n\t\t\tconst game = room.game as UnoGame;\r\n\t\t\tif (!game || game.gameid !== 'uno') return this.errorReply(\"There is no UNO game going on in this room right now.\");\r\n\r\n\t\t\tif (!game.suppressMessages) return this.errorReply(\"The current UNO game is not suppressing messages.\");\r\n\t\t\tif (!(user.id in game.spectators)) return this.errorReply(\"You are currently not spectating this game.\");\r\n\r\n\t\t\tdelete game.spectators[user.id];\r\n\t\t\tthis.sendReply(\"You are no longer spectating this private UNO game.\");\r\n\t\t},\r\n\t},\r\n\r\n\tunohelp: [\r\n\t\t`/uno create [player cap] - creates a new UNO game with an optional player cap (default player cap at 6). Use the command [createpublic] to force a public game or [createprivate] to force a private game. Requires: % @ # & ~`,\r\n\t\t`/uno timer [amount] - sets an auto disqualification timer for [amount] seconds. Requires: % @ # & ~`,\r\n\t\t`/uno autostart [amount] - sets an auto starting timer for [amount] seconds. Requires: % @ # & ~`,\r\n\t\t`/uno end - ends the current game of UNO. Requires: % @ # & ~`,\r\n\t\t`/uno start - starts the current game of UNO. Requires: % @ # & ~`,\r\n\t\t`/uno disqualify [player] - disqualifies the player from the game. Requires: % @ # & ~`,\r\n\t\t`/uno hand - displays your own hand.`,\r\n\t\t`/uno getusers - displays the players still in the game.`,\r\n\t\t`/uno [spectate|unspectate] - spectate / unspectate the current private UNO game.`,\r\n\t\t`/uno suppress [on|off] - Toggles suppression of game messages.`,\r\n\t],\r\n};\r\n\r\nexport const roomSettings: SettingsHandler = room => ({\r\n\tlabel: \"UNO\",\r\n\tpermission: 'editroom',\r\n\toptions: [\r\n\t\t[`disabled`, room.unoDisabled || 'uno disable'],\r\n\t\t[`enabled`, !room.unoDisabled || 'uno enable'],\r\n\t],\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
