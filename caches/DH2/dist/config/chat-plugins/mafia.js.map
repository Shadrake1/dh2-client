{
  "version": 3,
  "sources": ["../../../config/chat-plugins/mafia.ts"],
  "sourcesContent": ["'use strict';\r\n\r\ninterface MafiaLogTable {\r\n\t[date: string]: {[userid: string]: number};\r\n}\r\ntype MafiaLogSection = 'leaderboard' | 'mvps' | 'hosts' | 'plays' | 'leavers';\r\ntype MafiaLog = {[section in MafiaLogSection]: MafiaLogTable};\r\n\r\ninterface MafiaHostBans {\r\n\t[userid: string]: number;\r\n}\r\n\r\ninterface MafiaRole {\r\n\tname: string;\r\n\tsafeName: string;\r\n\tid: string;\r\n\tmemo: string[];\r\n\talignment: string;\r\n\timage: string;\r\n}\r\n\r\ninterface MafiaLynch {\r\n\t// number of people on this lynch\r\n\tcount: number;\r\n\t// number of votes, accounting for doublevoter etc\r\n\ttrueCount: number;\r\n\tlastLynch: number;\r\n\tdir: 'up' | 'down';\r\n\tlynchers: ID[];\r\n}\r\n\r\ninterface MafiaIDEAData {\r\n\tname: string;\r\n\t// do we trust the roles to be all proper\r\n\tuntrusted: true | null;\r\n\troles: string[];\r\n\t// eg, GestI has 3 choices\r\n\tchoices: number;\r\n\t// eg, GestI has 2 things to pick, role and alignment\r\n\tpicks: string[];\r\n}\r\ninterface MafiaIDEAModule {\r\n\tdata: MafiaIDEAData | null;\r\n\ttimer: NodeJS.Timer | null;\r\n\tdiscardsHidden: boolean;\r\n\tdiscardsHTML: string;\r\n\t// users that haven't picked a role yet\r\n\twaitingPick: string[];\r\n}\r\ninterface MafiaIDEAPlayerData {\r\n\tchoices: string[];\r\n\toriginalChoices: string[];\r\n\tpicks: {[choice: string]: string | null};\r\n}\r\n\r\ntype MafiaTheme = import('./mafia-data').MafiaTheme;\r\n\r\nimport {FS} from '../../lib/fs';\r\n\r\nconst LOGS_FILE = 'config/chat-plugins/mafia-logs.json';\r\nconst BANS_FILE = 'config/chat-plugins/mafia-bans.json';\r\n\r\nimport MafiaData = require('../../server/chat-plugins/mafia-data.js');\r\n\r\nlet logs: MafiaLog = {leaderboard: {}, mvps: {}, hosts: {}, plays: {}, leavers: {}};\r\n\r\nlet hostBans: MafiaHostBans = Object.create(null);\r\n\r\nconst hostQueue: ID[] = [];\r\n\r\nconst IDEA_TIMER = 90 * 1000;\r\n\r\nfunction readFile(path: string) {\r\n\ttry {\r\n\t\tconst json = FS(path).readIfExistsSync();\r\n\t\tif (!json) {\r\n\t\t\twriteFile(path, {});\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn Object.assign(Object.create(null), JSON.parse(json));\r\n\t} catch (e) {\r\n\t\tif (e.code !== 'ENOENT') throw e;\r\n\t}\r\n}\r\nfunction writeFile(path: string, data: AnyObject) {\r\n\tFS(path).writeUpdate(() => (\r\n\t\tJSON.stringify(data)\r\n\t));\r\n}\r\n\r\n// Load logs\r\nlogs = readFile(LOGS_FILE);\r\nif (!logs) logs = {leaderboard: {}, mvps: {}, hosts: {}, plays: {}, leavers: {}};\r\n\r\nconst tables: MafiaLogSection[] = ['leaderboard', 'mvps', 'hosts', 'plays', 'leavers'];\r\nfor (const section of tables) {\r\n\t// Check to see if we need to eliminate an old month's data.\r\n\tconst month = new Date().toLocaleString(\"en-us\", {month: \"numeric\", year: \"numeric\"});\r\n\tif (!logs[section]) logs[section] = {};\r\n\tif (!logs[section][month]) logs[section][month] = {};\r\n\tif (Object.keys(logs[section]).length >= 3) {\r\n\t\t// eliminate the oldest month(s)\r\n\t\tconst keys = Object.keys(logs[section]).sort((aKey, bKey) => {\r\n\t\t\tconst a = aKey.split('/');\r\n\t\t\tconst b = bKey.split('/');\r\n\t\t\tif (a[1] !== b[1]) {\r\n\t\t\t\t// year\r\n\t\t\t\tif (parseInt(a[1]) < parseInt(b[1])) return -1;\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\t// month\r\n\t\t\tif (parseInt(a[0]) < parseInt(b[0])) return -1;\r\n\t\t\treturn 1;\r\n\t\t});\r\n\t\twhile (keys.length > 2) {\r\n\t\t\tconst curKey = keys.shift();\r\n\t\t\tif (!curKey) break; // should never happen\r\n\t\t\tdelete logs[section][curKey];\r\n\t\t}\r\n\t}\r\n}\r\nwriteFile(LOGS_FILE, logs);\r\n\r\n// Load bans\r\nhostBans = readFile(BANS_FILE);\r\nif (!hostBans) hostBans = Object.create(null);\r\n\r\nfor (const userid in hostBans) {\r\n\tif (hostBans[userid] < Date.now()) {\r\n\t\tdelete hostBans[userid];\r\n\t}\r\n}\r\nwriteFile(BANS_FILE, hostBans);\r\n\r\nfunction isHostBanned(userid: ID) {\r\n\tif (!(userid in hostBans)) return false;\r\n\tif (hostBans[userid] < Date.now()) {\r\n\t\tdelete hostBans[userid];\r\n\t\twriteFile(BANS_FILE, hostBans);\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nclass MafiaPlayer extends Rooms.RoomGamePlayer {\r\n\tsafeName: string;\r\n\trole: MafiaRole | null;\r\n\tlynching: ID;\r\n\tlastLynch: number;\r\n\ttreestump: boolean;\r\n\trestless: boolean;\r\n\tsilenced: boolean;\r\n\tIDEA: MafiaIDEAPlayerData | null;\r\n\tconstructor(user: User, game: MafiaTracker) {\r\n\t\tsuper(user, game);\r\n\t\tthis.safeName = Chat.escapeHTML(this.name);\r\n\t\tthis.role = null;\r\n\t\tthis.lynching = '';\r\n\t\tthis.lastLynch = 0;\r\n\t\tthis.treestump = false;\r\n\t\tthis.restless = false;\r\n\t\tthis.silenced = false;\r\n\t\tthis.IDEA = null;\r\n\t}\r\n\r\n\tgetRole(button = false) {\r\n\t\tif (!this.role) return;\r\n\t\tlet color = MafiaData.alignments[this.role.alignment].color;\r\n\t\tif (button && MafiaData.alignments[this.role.alignment].buttonColor) {\r\n\t\t\tcolor = MafiaData.alignments[this.role.alignment].buttonColor;\r\n\t\t}\r\n\t\treturn `<span style=\"font-weight:bold;color:${color}\">${this.role.safeName}</span>`;\r\n\t}\r\n\r\n\tupdateHtmlRoom() {\r\n\t\tconst user = Users.get(this.id);\r\n\t\tif (!user || !user.connected) return;\r\n\t\tif (this.game.ended) return user.send(`>view-mafia-${this.game.room.roomid}\\n|deinit`);\r\n\t\tfor (const conn of user.connections) {\r\n\t\t\tvoid Chat.resolvePage(`view-mafia-${this.game.room.roomid}`, user, conn);\r\n\t\t}\r\n\t}\r\n\tupdateHtmlLynches() {\r\n\t\tconst user = Users.get(this.id);\r\n\t\tif (!user || !user.connected) return;\r\n\t\tconst lynches = (this.game as MafiaTracker).lynchBoxFor(this.id);\r\n\t\tuser.send(`>view-mafia-${this.game.room.roomid}\\n|selectorhtml|#mafia-lynches|` + lynches);\r\n\t}\r\n}\r\n\r\nclass MafiaTracker extends Rooms.RoomGame {\r\n\tstarted: boolean;\r\n\ttheme: MafiaTheme | null;\r\n\thostid: ID;\r\n\thost: string;\r\n\tcohosts: ID[];\r\n\tplayerTable: {[userid: string]: MafiaPlayer};\r\n\tdead: {[userid: string]: MafiaPlayer};\r\n\r\n\tsubs: ID[];\r\n\tautoSub: boolean;\r\n\trequestedSub: ID[];\r\n\thostRequestedSub: ID[];\r\n\tplayed: ID[];\r\n\r\n\thammerCount: number;\r\n\tlynches: {[userid: string]: MafiaLynch};\r\n\tlynchModifiers: {[userid: string]: number};\r\n\thammerModifiers: {[userid: string]: number};\r\n\thasPlurality: ID | null;\r\n\r\n\tenableNL: boolean;\r\n\tforceLynch: boolean;\r\n\tclosedSetup: boolean;\r\n\tnoReveal: boolean;\r\n\tselfEnabled: boolean | 'hammer';\r\n\r\n\toriginalRoles: MafiaRole[];\r\n\toriginalRoleString: string;\r\n\troles: MafiaRole[];\r\n\troleString: string;\r\n\r\n\tphase: 'signups' | 'locked' | 'IDEApicking' | 'IDEAlocked' | 'day' | 'night';\r\n\tdayNum: number;\r\n\r\n\ttimer: NodeJS.Timer | null;\r\n\tdlAt: number;\r\n\r\n\tIDEA: MafiaIDEAModule;\r\n\tconstructor(room: ChatRoom, host: User) {\r\n\t\tsuper(room);\r\n\r\n\t\tthis.gameid = 'mafia' as ID;\r\n\t\tthis.title = 'Mafia';\r\n\t\tthis.playerCap = 20;\r\n\t\tthis.allowRenames = false;\r\n\t\tthis.started = false;\r\n\t\tthis.ended = false;\r\n\r\n\t\tthis.theme = null;\r\n\r\n\t\tthis.hostid = host.id;\r\n\t\tthis.host = Chat.escapeHTML(host.name);\r\n\t\tthis.cohosts = [];\r\n\r\n\t\tthis.playerTable = Object.create(null);\r\n\t\tthis.dead = Object.create(null);\r\n\t\tthis.subs = [];\r\n\t\tthis.autoSub = true;\r\n\t\tthis.requestedSub = [];\r\n\t\tthis.hostRequestedSub = [];\r\n\t\tthis.played = [];\r\n\r\n\t\tthis.hammerCount = 0;\r\n\t\tthis.lynches = Object.create(null);\r\n\t\tthis.lynchModifiers = Object.create(null);\r\n\t\tthis.hammerModifiers = Object.create(null);\r\n\t\tthis.hasPlurality = null;\r\n\r\n\t\tthis.enableNL = true;\r\n\t\tthis.forceLynch = false;\r\n\t\tthis.closedSetup = false;\r\n\t\tthis.noReveal = false;\r\n\t\tthis.selfEnabled = false;\r\n\r\n\t\tthis.originalRoles = [];\r\n\t\tthis.originalRoleString = '';\r\n\t\tthis.roles = [];\r\n\t\tthis.roleString = '';\r\n\r\n\t\tthis.phase = \"signups\";\r\n\t\tthis.dayNum = 0;\r\n\t\tthis.timer = null;\r\n\t\tthis.dlAt = 0;\r\n\r\n\t\tthis.IDEA = {\r\n\t\t\tdata: null,\r\n\t\t\ttimer: null,\r\n\t\t\tdiscardsHidden: false,\r\n\t\t\tdiscardsHTML: '',\r\n\t\t\twaitingPick: [],\r\n\t\t};\r\n\r\n\t\tthis.sendHTML(this.roomWindow());\r\n\t}\r\n\r\n\tjoin(user: User) {\r\n\t\tif (this.phase !== 'signups') return user.sendTo(this.room, `|error|The game of ${this.title} has already started.`);\r\n\t\tconst canJoin = this.canJoin(user, true);\r\n\t\tif (canJoin) return user.sendTo(this.room, `|error|${canJoin}`);\r\n\t\tif (this.playerCount >= this.playerCap) return user.sendTo(this.room, `|error|The game of ${this.title} is full.`);\r\n\t\tif (!this.addPlayer(user)) return user.sendTo(this.room, `|error|You have already joined the game of ${this.title}.`);\r\n\t\tif (this.subs.includes(user.id)) this.subs.splice(this.subs.indexOf(user.id), 1);\r\n\t\tthis.playerTable[user.id].updateHtmlRoom();\r\n\t\tthis.sendRoom(`${this.playerTable[user.id].name} has joined the game.`);\r\n\t}\r\n\r\n\tleave(user: User) {\r\n\t\tif (!(user.id in this.playerTable)) return user.sendTo(this.room, `|error|You have not joined the game of ${this.title}.`);\r\n\t\tif (this.phase !== 'signups') return user.sendTo(this.room, `|error|The game of ${this.title} has already started.`);\r\n\t\tthis.playerTable[user.id].destroy();\r\n\t\tdelete this.playerTable[user.id];\r\n\t\tthis.playerCount--;\r\n\t\tlet subIndex = this.requestedSub.indexOf(user.id);\r\n\t\tif (subIndex !== -1) this.requestedSub.splice(subIndex, 1);\r\n\t\tsubIndex = this.hostRequestedSub.indexOf(user.id);\r\n\t\tif (subIndex !== -1) this.hostRequestedSub.splice(subIndex, 1);\r\n\t\tthis.sendRoom(`${user.name} has left the game.`);\r\n\t\tfor (const conn of user.connections) {\r\n\t\t\tvoid Chat.resolvePage(`view-mafia-${this.room.roomid}`, user, conn);\r\n\t\t}\r\n\t}\r\n\r\n\tmakePlayer(user: User) {\r\n\t\treturn new MafiaPlayer(user, this);\r\n\t}\r\n\r\n\tsetRoles(user: User, roleString: string, force = false, reset = false) {\r\n\t\tlet roles = roleString.split(',').map(x => x.trim());\r\n\t\tif (roles.length === 1) {\r\n\t\t\t// Attempt to set roles from a theme\r\n\t\t\tconst themeName = toID(roles[0]);\r\n\t\t\tif (themeName in MafiaData.themes) {\r\n\t\t\t\t// setting a proper theme\r\n\t\t\t\tlet theme = MafiaData.themes[themeName];\r\n\t\t\t\tif (typeof theme === 'string') theme = MafiaData.themes[theme];\r\n\t\t\t\tif (typeof theme === 'object') {\r\n\t\t\t\t\tif (!theme[this.playerCount]) return user.sendTo(this.room, `|error|The theme \"${theme.name}\" does not have a role list for ${this.playerCount} players.`);\r\n\t\t\t\t\tconst themeRoles: string = theme[this.playerCount].slice();\r\n\t\t\t\t\troles = themeRoles.split(',').map(x => x.trim());\r\n\t\t\t\t\tthis.theme = theme;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.sendRoom(`Invalid alias in mafia-data themes: ${roles[0]}`);\r\n\t\t\t\t}\r\n\t\t\t} else if (themeName in MafiaData.IDEAs) {\r\n\t\t\t\t// setting an IDEA's rolelist as a theme, a la Great Idea\r\n\t\t\t\tlet IDEA = MafiaData.IDEAs[themeName];\r\n\t\t\t\tif (typeof IDEA === 'string') IDEA = MafiaData.IDEAs[IDEA];\r\n\t\t\t\tif (typeof IDEA === 'object') {\r\n\t\t\t\t\troles = IDEA.roles.slice();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.sendRoom(`Invalid alias in mafia-data IDEAs: ${roles[0]}`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.theme = null;\r\n\t\t\t} else {\r\n\t\t\t\treturn user.sendTo(this.room, `|error|${roles[0]} is not a valid theme or IDEA.`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.theme = null;\r\n\t\t}\r\n\t\tif (roles.length < this.playerCount) {\r\n\t\t\treturn user.sendTo(this.room, `|error|You have not provided enough roles for the players.`);\r\n\t\t} else if (roles.length > this.playerCount) {\r\n\t\t\tuser.sendTo(this.room, `|error|You have provided too many roles, ${roles.length - this.playerCount} ${Chat.plural(roles.length - this.playerCount, 'roles', 'role')} will not be assigned.`);\r\n\t\t}\r\n\r\n\t\tif (force) {\r\n\t\t\tthis.originalRoles = roles.map(r => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: r,\r\n\t\t\t\t\tsafeName: Chat.escapeHTML(r),\r\n\t\t\t\t\tid: toID(r),\r\n\t\t\t\t\talignment: 'solo',\r\n\t\t\t\t\timage: '',\r\n\t\t\t\t\tmemo: [`To learn more about your role, PM the host (${this.host}).`],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tthis.originalRoles.sort((a, b) => a.alignment.localeCompare(b.alignment) || a.name.localeCompare(b.name));\r\n\t\t\tthis.roles = this.originalRoles.slice();\r\n\t\t\tthis.originalRoleString = this.originalRoles.slice().map(r => `<span style=\"font-weight:bold;color:${MafiaData.alignments[r.alignment].color || '#FFF'}\">${r.safeName}</span>`).join(', ');\r\n\t\t\tthis.roleString = this.originalRoleString;\r\n\t\t\treturn this.sendRoom(`The roles have been set.`);\r\n\t\t}\r\n\r\n\t\tconst newRoles: MafiaRole[] = [];\r\n\t\tlet problems: string[] = [];\r\n\t\tconst alignments: string[] = [];\r\n\t\tconst cache: {[k: string]: MafiaRole} = Object.create(null);\r\n\t\tfor (const roleName of roles) {\r\n\t\t\tconst roleId = roleName.toLowerCase().replace(/[^\\w\\d\\s]/g, '');\r\n\t\t\tif (roleId in cache) {\r\n\t\t\t\tnewRoles.push(Object.assign(Object.create(null), cache[roleId]));\r\n\t\t\t} else {\r\n\t\t\t\tconst role = MafiaTracker.parseRole(roleName);\r\n\t\t\t\tif (role.problems.length) problems = problems.concat(role.problems);\r\n\t\t\t\tif (alignments.indexOf(role.role.alignment) === -1) alignments.push(role.role.alignment);\r\n\t\t\t\tcache[roleId] = role.role;\r\n\t\t\t\tnewRoles.push(role.role);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (alignments.length < 2 && alignments[0] !== 'solo') problems.push(`There must be at least 2 different alignments in a game!`);\r\n\t\tif (problems.length) {\r\n\t\t\tfor (const problem of problems) {\r\n\t\t\t\tuser.sendTo(this.room, `|error|${problem}`);\r\n\t\t\t}\r\n\t\t\treturn user.sendTo(this.room, `|error|To forcibly set the roles, use /mafia force${reset ? \"re\" : \"\"}setroles`);\r\n\t\t}\r\n\r\n\t\tthis.IDEA.data = null;\r\n\r\n\t\tthis.originalRoles = newRoles;\r\n\t\tthis.originalRoles.sort((a, b) => a.alignment.localeCompare(b.alignment) || a.name.localeCompare(b.name));\r\n\t\tthis.roles = this.originalRoles.slice();\r\n\t\tthis.originalRoleString = this.originalRoles.slice().map(r => `<span style=\"font-weight:bold;color:${MafiaData.alignments[r.alignment].color || '#FFF'}\">${r.safeName}</span>`).join(', ');\r\n\t\tthis.roleString = this.originalRoleString;\r\n\t\tif (!reset) this.phase = 'locked';\r\n\t\tthis.updatePlayers();\r\n\t\tthis.sendRoom(`The roles have been ${reset ? 're' : ''}set.`);\r\n\t\tif (reset) this.distributeRoles();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a single role into an object\r\n\t */\r\n\tstatic parseRole(roleString: string) {\r\n\t\tconst name = roleString.split(' ').map(p => toID(p) === 'solo' ? '' : p).join(' ');\r\n\t\tconst role = {\r\n\t\t\tname,\r\n\t\t\tsafeName: Chat.escapeHTML(name),\r\n\t\t\tid: toID(name),\r\n\t\t\timage: '',\r\n\t\t\tmemo: ['During the Day, you may vote for whomever you want lynched.'],\r\n\t\t\talignment: '',\r\n\t\t};\r\n\t\troleString = roleString.replace(/\\s*\\(.*?\\)\\s*/g, ' ');\r\n\t\tconst target = roleString.toLowerCase().replace(/[^\\w\\d\\s]/g, '').split(' ');\r\n\t\tconst problems = [];\r\n\t\tfor (let key in MafiaData.roles) {\r\n\t\t\tif (key.includes('_')) {\r\n\t\t\t\tconst roleKey = target.slice().map(toID).join('_');\r\n\t\t\t\tif (roleKey.includes(key)) {\r\n\t\t\t\t\tconst originalKey = key;\r\n\t\t\t\t\tif (typeof MafiaData.roles[key] === 'string') key = MafiaData.roles[key];\r\n\t\t\t\t\tif (!role.image && MafiaData.roles[key].image) role.image = MafiaData.roles[key].image;\r\n\t\t\t\t\tif (MafiaData.roles[key].alignment) {\r\n\t\t\t\t\t\tif (role.alignment && role.alignment !== MafiaData.roles[key].alignment) {\r\n\t\t\t\t\t\t\t// A role cant have multiple alignments\r\n\t\t\t\t\t\t\tproblems.push(`The role \"${role.name}\" has multiple possible alignments (${MafiaData.roles[key].alignment} or ${role.alignment})`);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trole.alignment = MafiaData.roles[key].alignment;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (MafiaData.roles[key].memo) role.memo = role.memo.concat(MafiaData.roles[key].memo);\r\n\t\t\t\t\tconst index = roleKey.split('_').indexOf(originalKey.split('_')[0]);\r\n\t\t\t\t\ttarget.splice(index, originalKey.split('_').length);\r\n\t\t\t\t}\r\n\t\t\t} else if (target.includes(key)) {\r\n\t\t\t\tconst index = target.indexOf(key);\r\n\t\t\t\tif (typeof MafiaData.roles[key] === 'string') key = MafiaData.roles[key];\r\n\t\t\t\tif (!role.image && MafiaData.roles[key].image) role.image = MafiaData.roles[key].image;\r\n\t\t\t\tif (MafiaData.roles[key].memo) role.memo = role.memo.concat(MafiaData.roles[key].memo);\r\n\t\t\t\ttarget.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Add modifiers\r\n\t\tfor (let key in MafiaData.modifiers) {\r\n\t\t\tif (key.includes('_')) {\r\n\t\t\t\tconst roleKey = target.slice().map(toID).join('_');\r\n\t\t\t\tif (roleKey.includes(key)) {\r\n\t\t\t\t\tif (typeof MafiaData.modifiers[key] === 'string') key = MafiaData.modifiers[key];\r\n\t\t\t\t\tif (!role.image && MafiaData.modifiers[key].image) role.image = MafiaData.modifiers[key].image;\r\n\t\t\t\t\tif (MafiaData.modifiers[key].memo) role.memo = role.memo.concat(MafiaData.modifiers[key].memo);\r\n\t\t\t\t\tconst index = roleKey.split('_').indexOf(key.split('_')[0]);\r\n\t\t\t\t\ttarget.splice(index, key.split('_').length);\r\n\t\t\t\t}\r\n\t\t\t} else if (key === 'xshot') {\r\n\t\t\t\t// Special case for X-Shot modifier\r\n\t\t\t\tfor (let [i, xModifier] of target.entries()) {\r\n\t\t\t\t\tif (toID(xModifier).endsWith('shot')) {\r\n\t\t\t\t\t\tconst num = parseInt(toID(xModifier).substring(0, toID(xModifier).length - 4));\r\n\t\t\t\t\t\tif (isNaN(num)) continue;\r\n\t\t\t\t\t\tlet memo: string[] = MafiaData.modifiers.xshot.memo.slice();\r\n\t\t\t\t\t\tmemo = memo.map(m => m.replace(/X/g, num.toString()));\r\n\t\t\t\t\t\trole.memo = role.memo.concat(memo);\r\n\t\t\t\t\t\ttarget.splice(i, 1);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (target.includes(key)) {\r\n\t\t\t\tconst index = target.indexOf(key);\r\n\t\t\t\tif (typeof MafiaData.modifiers[key] === 'string') key = MafiaData.modifiers[key];\r\n\t\t\t\tif (!role.image && MafiaData.modifiers[key].image) role.image = MafiaData.modifiers[key].image;\r\n\t\t\t\tif (MafiaData.modifiers[key].memo) role.memo = role.memo.concat(MafiaData.modifiers[key].memo);\r\n\t\t\t\ttarget.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Determine the role's alignment\r\n\t\tfor (let [j, targetId] of target.entries()) {\r\n\t\t\tlet id = toID(targetId);\r\n\t\t\tif (MafiaData.alignments[id]) {\r\n\t\t\t\tif (typeof MafiaData.alignments[id] === 'string') id = MafiaData.alignments[id];\r\n\t\t\t\tif (role.alignment && role.alignment !== MafiaData.alignments[id].id) {\r\n\t\t\t\t\t// A role cant have multiple alignments\r\n\t\t\t\t\tproblems.push(`The role \"${role.name}\" has multiple possible alignments (${MafiaData.alignments[id].id} or ${role.alignment})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\trole.alignment = MafiaData.alignments[id].id;\r\n\t\t\t\trole.memo = role.memo.concat(MafiaData.alignments[id].memo);\r\n\t\t\t\tif (!role.image && MafiaData.alignments[id].image) role.image = MafiaData.alignments[id].image;\r\n\t\t\t\ttarget.splice(j, 1);\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!role.alignment) {\r\n\t\t\t// Default to town\r\n\t\t\trole.alignment = 'town';\r\n\t\t\trole.memo = role.memo.concat(MafiaData.alignments.town.memo);\r\n\t\t}\r\n\t\t// Handle anything that is unknown\r\n\t\tif (target.length) {\r\n\t\t\trole.memo.push(`To learn more about your role, PM the host.`);\r\n\t\t}\r\n\t\treturn {role, problems};\r\n\t}\r\n\r\n\tstart(user: User, night = false) {\r\n\t\tif (!user) return;\r\n\t\tif (this.phase !== 'locked' && this.phase !== 'IDEAlocked') {\r\n\t\t\tif (this.phase === 'signups') return user.sendTo(this.room, `You need to close the signups first.`);\r\n\t\t\tif (this.phase === 'IDEApicking') return user.sendTo(this.room, `You must wait for IDEA picks to finish before starting.`);\r\n\t\t\treturn user.sendTo(this.room, `The game is already started!`);\r\n\t\t}\r\n\t\tif (this.playerCount < 2) return user.sendTo(this.room, `You need at least 2 players to start.`);\r\n\t\tif (this.phase === 'IDEAlocked') {\r\n\t\t\tfor (const p in this.playerTable) {\r\n\t\t\t\tif (!this.playerTable[p].role) return user.sendTo(this.room, `|error|Not all players have a role.`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!Object.keys(this.roles).length) return user.sendTo(this.room, `You need to set the roles before starting.`);\r\n\t\t\tif (Object.keys(this.roles).length < this.playerCount) return user.sendTo(this.room, `You have not provided enough roles for the players.`);\r\n\t\t}\r\n\t\tthis.started = true;\r\n\t\tthis.sendDeclare(`The game of ${this.title} is starting!`);\r\n\t\t// MafiaTracker#played gets set in distributeRoles\r\n\t\tthis.distributeRoles();\r\n\t\tif (night) {\r\n\t\t\tthis.night(false, true);\r\n\t\t} else {\r\n\t\t\tthis.day(null, true);\r\n\t\t}\r\n\t\tif (this.IDEA.data && !this.IDEA.discardsHidden) this.room.add(`|html|<div class=\"infobox\"><details><summary>IDEA discards:</summary>${this.IDEA.discardsHTML}</details></div>`).update();\r\n\t}\r\n\r\n\tdistributeRoles() {\r\n\t\tconst roles = Dex.shuffle(this.roles.slice());\r\n\t\tif (roles.length) {\r\n\t\t\tfor (const p in this.playerTable) {\r\n\t\t\t\tconst role = roles.shift()!;\r\n\t\t\t\tthis.playerTable[p].role = role;\r\n\t\t\t\tconst u = Users.get(p);\r\n\t\t\t\tif (u && u.connected) u.send(`>${this.room.roomid}\\n|notify|Your role is ${role.safeName}. For more details of your role, check your Role PM.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dead = {};\r\n\t\tthis.played = [this.hostid, ...this.cohosts, ...(Object.keys(this.playerTable) as ID[])];\r\n\t\tthis.sendDeclare(`The roles have been distributed.`);\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\r\n\tgetPartners(alignment: string, player: MafiaPlayer) {\r\n\t\tif (!player || !player.role || ['town', 'solo', 'traitor'].includes(player.role.alignment)) return \"\";\r\n\t\tconst partners = [];\r\n\t\tfor (const p in this.playerTable) {\r\n\t\t\tif (p === player.id) continue;\r\n\t\t\tconst role = this.playerTable[p].role;\r\n\t\t\tif (role && role.alignment === player.role.alignment) partners.push(this.playerTable[p].name);\r\n\t\t}\r\n\t\treturn partners.join(\", \");\r\n\t}\r\n\r\n\tday(extension: number | null = null, initial = false) {\r\n\t\tif (this.phase !== 'night' && !initial) return;\r\n\t\tif (this.timer) this.setDeadline(0);\r\n\t\tif (extension === null) {\r\n\t\t\tif (!isNaN(this.hammerCount)) this.hammerCount = Math.floor(Object.keys(this.playerTable).length / 2) + 1;\r\n\t\t\tthis.clearLynches();\r\n\t\t}\r\n\t\tthis.phase = 'day';\r\n\t\tif (extension !== null && !initial) {\r\n\t\t\t// Day stays same\r\n\t\t\tthis.setDeadline(extension);\r\n\t\t} else {\r\n\t\t\tthis.dayNum++;\r\n\t\t}\r\n\t\tif (isNaN(this.hammerCount)) {\r\n\t\t\tthis.sendDeclare(`Day ${this.dayNum}. Hammering is disabled.`);\r\n\t\t} else {\r\n\t\t\tthis.sendDeclare(`Day ${this.dayNum}. The hammer count is set at ${this.hammerCount}`);\r\n\t\t}\r\n\t\tthis.sendPlayerList();\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\r\n\tnight(early = false, initial = false) {\r\n\t\tif (this.phase !== 'day' && !initial) return;\r\n\t\tif (this.timer) this.setDeadline(0, true);\r\n\t\tthis.phase = 'night';\r\n\t\tfor (const hostid of [...this.cohosts, this.hostid]) {\r\n\t\t\tconst host = Users.get(hostid);\r\n\t\t\tif (host && host.connected) host.send(`>${this.room.roomid}\\n|notify|It's night in your game of Mafia!`);\r\n\t\t}\r\n\t\tthis.sendDeclare(`Night ${this.dayNum}. PM the host your action, or idle.`);\r\n\t\tconst hasPlurality = this.getPlurality();\r\n\t\tif (!early && hasPlurality) this.sendRoom(`Plurality is on ${this.playerTable[hasPlurality] ? this.playerTable[hasPlurality].name : 'No Lynch'}`);\r\n\t\tif (!early && !initial) this.sendRoom(`|raw|<div class=\"infobox\">${this.lynchBox()}</div>`);\r\n\t\tif (initial && !isNaN(this.hammerCount)) this.hammerCount = Math.floor(Object.keys(this.playerTable).length / 2) + 1;\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\r\n\tlynch(userid: ID, target: ID) {\r\n\t\tif (this.phase !== 'day') return this.sendUser(userid, `|error|You can only lynch during the day.`);\r\n\t\tlet player = this.playerTable[userid];\r\n\t\tif (!player && this.dead[userid] && this.dead[userid].restless) player = this.dead[userid];\r\n\t\tif (!player) return;\r\n\t\tif (!(target in this.playerTable) && target !== 'nolynch') return this.sendUser(userid, `|error|${target} is not a valid player.`);\r\n\t\tif (!this.enableNL && target === 'nolynch') return this.sendUser(userid, `|error|No Lynch is not allowed.`);\r\n\t\tif (target === player.id && !this.selfEnabled) return this.sendUser(userid, `|error|Self lynching is not allowed.`);\r\n\t\tif (target === player.id &&\r\n\t\t\t(this.hammerCount - 1 > (this.lynches[target] ? this.lynches[target].count : 0)) &&\r\n\t\t\tthis.selfEnabled === 'hammer') {\r\n\t\t\treturn this.sendUser(userid, `|error|You may only lynch yourself when you placing the hammer vote.`);\r\n\t\t}\r\n\t\tif (player.lastLynch + 2000 >= Date.now()) return this.sendUser(userid, `|error|You must wait another ${Chat.toDurationString((player.lastLynch + 2000) - Date.now()) || '1 second'} before you can change your lynch.`);\r\n\t\tconst previousLynch = player.lynching;\r\n\t\tif (previousLynch) this.unlynch(userid, true);\r\n\t\tlet lynch = this.lynches[target];\r\n\t\tif (!lynch) {\r\n\t\t\tthis.lynches[target]\r\n\t\t\t\t= {count: 1, trueCount: this.getLynchValue(userid), lastLynch: Date.now(), dir: 'up', lynchers: [userid]};\r\n\t\t\tlynch = this.lynches[target];\r\n\t\t} else {\r\n\t\t\tlynch.count++;\r\n\t\t\tlynch.trueCount += this.getLynchValue(userid);\r\n\t\t\tlynch.lastLynch = Date.now();\r\n\t\t\tlynch.dir = 'up';\r\n\t\t\tlynch.lynchers.push(userid);\r\n\t\t}\r\n\t\tplayer.lynching = target;\r\n\t\tconst name = player.lynching === 'nolynch' ? 'No Lynch' : this.playerTable[player.lynching].name;\r\n\t\tconst targetUser = Users.get(userid);\r\n\t\tif (previousLynch) {\r\n\t\t\tthis.sendTimestamp(`${(targetUser ? targetUser.name : userid)} has shifted their lynch from ${previousLynch === 'nolynch' ? 'No Lynch' : this.playerTable[previousLynch].name} to ${name}`);\r\n\t\t} else {\r\n\t\t\tthis.sendTimestamp(name === 'No Lynch' ? `${(targetUser ? targetUser.name : userid)} has abstained from lynching.` : `${(targetUser ? targetUser.name : userid)} has lynched ${name}.`);\r\n\t\t}\r\n\t\tplayer.lastLynch = Date.now();\r\n\t\tif (this.getHammerValue(target) <= lynch.trueCount) {\r\n\t\t\t// HAMMER\r\n\t\t\tthis.sendDeclare(`Hammer! ${target === 'nolynch' ? 'Nobody' : Chat.escapeHTML(name)} was lynched!`);\r\n\t\t\tthis.sendRoom(`|raw|<div class=\"infobox\">${this.lynchBox()}</div>`);\r\n\t\t\tif (target !== 'nolynch') this.eliminate(this.playerTable[target], 'kill');\r\n\t\t\tthis.night(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.hasPlurality = null;\r\n\t\tthis.updatePlayersLynches();\r\n\t}\r\n\r\n\tunlynch(userid: ID, force = false) {\r\n\t\tif (this.phase !== 'day' && !force) return this.sendUser(userid, `|error|You can only lynch during the day.`);\r\n\t\tlet player = this.playerTable[userid];\r\n\r\n\t\t// autoselflynch blocking doesn't apply to restless spirits\r\n\t\tif (player && this.forceLynch && !force) return this.sendUser(userid, `|error|You can only shift your lynch, not unlynch.`);\r\n\r\n\t\tif (!player && this.dead[userid] && this.dead[userid].restless) player = this.dead[userid];\r\n\t\tif (!player || !player.lynching) return this.sendUser(userid, `|error|You are not lynching anyone.`);\r\n\t\tif (player.lastLynch + 2000 >= Date.now() && !force) return this.sendUser(userid, `|error|You must wait another ${Chat.toDurationString((player.lastLynch + 2000) - Date.now()) || '1 second'} before you can change your lynch.`);\r\n\t\tconst lynch = this.lynches[player.lynching];\r\n\t\tlynch.count--;\r\n\t\tlynch.trueCount -= this.getLynchValue(userid);\r\n\t\tif (lynch.count <= 0) {\r\n\t\t\tdelete this.lynches[player.lynching];\r\n\t\t} else {\r\n\t\t\tlynch.lastLynch = Date.now();\r\n\t\t\tlynch.dir = 'down';\r\n\t\t\tlynch.lynchers.splice(lynch.lynchers.indexOf(userid), 1);\r\n\t\t}\r\n\t\tconst targetUser = Users.get(userid);\r\n\t\tif (!force) this.sendTimestamp(player.lynching === 'nolynch' ? `${(targetUser ? targetUser.name : userid)} is no longer abstaining from lynching.` : `${(targetUser ? targetUser.name : userid)} has unlynched ${this.playerTable[player.lynching].name}.`);\r\n\t\tplayer.lynching = '';\r\n\t\tplayer.lastLynch = Date.now();\r\n\t\tthis.hasPlurality = null;\r\n\t\tthis.updatePlayersLynches();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns HTML code that contains information on the current lynch vote.\r\n\t */\r\n\tlynchBox() {\r\n\t\tif (!this.started) return `<strong>The game has not started yet.</strong>`;\r\n\t\tlet buf = `<strong>Lynches (Hammer: ${this.hammerCount || \"Disabled\"})</strong><br />`;\r\n\t\tconst plur = this.getPlurality();\r\n\t\tconst list = Object.keys(this.lynches).sort((a, b) => {\r\n\t\t\tif (a === plur) return -1;\r\n\t\t\tif (b === plur) return 1;\r\n\t\t\treturn this.lynches[b].count - this.lynches[a].count;\r\n\t\t});\r\n\t\tfor (const key of list) {\r\n\t\t\tbuf += `${this.lynches[key].count}${plur === key ? '*' : ''} ${this.playerTable[key] ? this.playerTable[key].safeName : 'No Lynch'} (${this.lynches[key].lynchers.map(a => this.playerTable[a] ? this.playerTable[a].safeName : a).join(', ')})<br />`;\r\n\t\t}\r\n\t\treturn buf;\r\n\t}\r\n\tlynchBoxFor(userid: ID) {\r\n\t\tlet buf = '';\r\n\t\tbuf += `<h3>Lynches (Hammer: ${this.hammerCount || 'Disabled'}) <button class=\"button\" name=\"send\" value=\"/mafia refreshlynches ${this.roomid}\"><i class=\"fa fa-refresh\"></i> Refresh</button></h3>`;\r\n\t\tconst plur = this.getPlurality();\r\n\t\tfor (const key of Object.keys(this.playerTable).concat((this.enableNL ? ['nolynch'] : [])) as ID[]) {\r\n\t\t\tif (this.lynches[key]) {\r\n\t\t\t\tbuf += `<p style=\"font-weight:bold\">${this.lynches[key].count}${plur === key ? '*' : ''} ${this.playerTable[key] ? this.playerTable[key].safeName : 'No Lynch'} (${this.lynches[key].lynchers.map(a => this.playerTable[a] ? this.playerTable[a].safeName : a).join(', ')}) `;\r\n\t\t\t} else {\r\n\t\t\t\tbuf += `<p style=\"font-weight:bold\">0 ${this.playerTable[key] ? this.playerTable[key].safeName : 'No Lynch'} `;\r\n\t\t\t}\r\n\t\t\tconst isPlayer = (this.playerTable[userid]);\r\n\t\t\tconst isSpirit = (this.dead[userid] && this.dead[userid].restless);\r\n\t\t\tif (isPlayer || isSpirit) {\r\n\t\t\t\tif (isPlayer && this.playerTable[userid].lynching === key || isSpirit && this.dead[userid].lynching === key) {\r\n\t\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia unlynch ${this.roomid}\">Unlynch ${this.playerTable[key] ? this.playerTable[key].safeName : 'No Lynch'}</button>`;\r\n\t\t\t\t} else if ((this.selfEnabled && !isSpirit) || userid !== key) {\r\n\t\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia lynch ${this.roomid}, ${key}\">Lynch ${this.playerTable[key] ? this.playerTable[key].safeName : 'No Lynch'}</button>`;\r\n\t\t\t\t}\r\n\t\t\t} else if (userid === this.hostid || this.cohosts.includes(userid)) {\r\n\t\t\t\tconst lynch = this.lynches[key];\r\n\t\t\t\tif (lynch && lynch.count !== lynch.trueCount) buf += `(${lynch.trueCount})`;\r\n\t\t\t\tif (this.hammerModifiers[key]) buf += `(${this.getHammerValue(key)} to hammer)`;\r\n\t\t\t}\r\n\t\t\tbuf += `</p>`;\r\n\t\t}\r\n\t\treturn buf;\r\n\t}\r\n\tapplyLynchModifier(user: User, target: ID, mod: number) {\r\n\t\tconst targetPlayer = this.playerTable[target] || this.dead[target];\r\n\t\tif (!targetPlayer) return this.sendUser(user, `|error|${target} is not in the game of mafia.`);\r\n\t\tif (target in this.dead && !targetPlayer.restless) return this.sendUser(user, `|error|${target} is not alive or a restless spirit, and therefore cannot lynch.`);\r\n\t\tconst oldMod = this.lynchModifiers[target];\r\n\t\tif (mod === oldMod || ((isNaN(mod) || mod === 1) && oldMod === undefined)) {\r\n\t\t\tif (isNaN(mod) || mod === 1) return this.sendUser(user, `|error|${target} already has no lynch modifier.`);\r\n\t\t\treturn this.sendUser(user, `|error|${target} already has a lynch modifier of ${mod}`);\r\n\t\t}\r\n\t\tconst newMod = isNaN(mod) ? 1 : mod;\r\n\t\tif (targetPlayer.lynching) {\r\n\t\t\tthis.lynches[targetPlayer.lynching].trueCount += oldMod - newMod;\r\n\t\t\tif (this.getHammerValue(targetPlayer.lynching) <= this.lynches[targetPlayer.lynching].trueCount) {\r\n\t\t\t\tthis.sendRoom(`${targetPlayer.lynching} has been lynched due to a modifier change! They have not been eliminated.`);\r\n\t\t\t\tthis.night(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (newMod === 1) {\r\n\t\t\tdelete this.lynchModifiers[target];\r\n\t\t\treturn this.sendUser(user, `${targetPlayer.name} has had their lynch modifier removed.`);\r\n\t\t} else {\r\n\t\t\tthis.lynchModifiers[target] = newMod;\r\n\t\t\treturn this.sendUser(user, `${targetPlayer.name} has been given a lynch modifier of ${newMod}`);\r\n\t\t}\r\n\t}\r\n\tapplyHammerModifier(user: User, target: ID, mod: number) {\r\n\t\tif (!(target in this.playerTable || target === 'nolynch')) return this.sendUser(user, `|error|${target} is not in the game of mafia.`);\r\n\t\tconst oldMod = this.hammerModifiers[target];\r\n\t\tif (mod === oldMod || ((isNaN(mod) || mod === 0) && oldMod === undefined)) {\r\n\t\t\tif (isNaN(mod) || mod === 0) return this.sendUser(user, `|error|${target} already has no hammer modifier.`);\r\n\t\t\treturn this.sendUser(user, `|error|${target} already has a hammer modifier of ${mod}`);\r\n\t\t}\r\n\t\tconst newMod = isNaN(mod) ? 0 : mod;\r\n\t\tif (this.lynches[target]) {\r\n\t\t\t// do this manually since we havent actually changed the value yet\r\n\t\t\tif (this.hammerCount + newMod <= this.lynches[target].trueCount) {\r\n\t\t\t\t// make sure these strings are the same\r\n\t\t\t\tthis.sendRoom(`${target} has been lynched due to a modifier change! They have not been eliminated.`);\r\n\t\t\t\tthis.night(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (newMod === 0) {\r\n\t\t\tdelete this.hammerModifiers[target];\r\n\t\t\treturn this.sendUser(user, `${target} has had their hammer modifier removed.`);\r\n\t\t} else {\r\n\t\t\tthis.hammerModifiers[target] = newMod;\r\n\t\t\treturn this.sendUser(user, `${target} has been given a hammer modifier of ${newMod}`);\r\n\t\t}\r\n\t}\r\n\tclearLynchModifiers(user: User) {\r\n\t\tfor (const player of [...Object.keys(this.playerTable), ...Object.keys(this.dead)] as ID[]) {\r\n\t\t\tif (this.lynchModifiers[player]) this.applyLynchModifier(user, player, 1);\r\n\t\t}\r\n\t}\r\n\tclearHammerModifiers(user: User) {\r\n\t\tfor (const player of ['nolynch', ...Object.keys(this.playerTable)] as ID[]) {\r\n\t\t\tif (this.hammerModifiers[player]) this.applyHammerModifier(user, player, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tgetLynchValue(userid: ID) {\r\n\t\tconst mod = this.lynchModifiers[userid];\r\n\t\treturn (mod === undefined ? 1 : mod);\r\n\t}\r\n\tgetHammerValue(userid: ID) {\r\n\t\tconst mod = this.hammerModifiers[userid];\r\n\t\treturn (mod === undefined ? this.hammerCount : this.hammerCount + mod);\r\n\t}\r\n\tresetHammer() {\r\n\t\tthis.setHammer(Math.floor(Object.keys(this.playerTable).length / 2) + 1);\r\n\t}\r\n\r\n\tsetHammer(count: number) {\r\n\t\tthis.hammerCount = count;\r\n\t\tif (isNaN(count)) {\r\n\t\t\tthis.sendDeclare(`Hammering has been disabled, and lynches have been reset.`);\r\n\t\t} else {\r\n\t\t\tthis.sendDeclare(`The hammer count has been set at ${this.hammerCount}, and lynches have been reset.`);\r\n\t\t}\r\n\t\tthis.clearLynches();\r\n\t}\r\n\r\n\tshiftHammer(count: number) {\r\n\t\tthis.hammerCount = count;\r\n\t\tif (isNaN(count)) {\r\n\t\t\tthis.sendDeclare(`Hammering has been disabled. Lynches have not been reset.`);\r\n\t\t} else {\r\n\t\t\tthis.sendDeclare(`The hammer count has been shifted to ${this.hammerCount}. Lynches have not been reset.`);\r\n\t\t}\r\n\t\tconst hammered = [];\r\n\t\tfor (const lynch in this.lynches) {\r\n\t\t\tif (this.lynches[lynch].trueCount >= this.getHammerValue(lynch as ID)) {\r\n\t\t\t\thammered.push(lynch === 'nolynch' ? 'Nobody' : lynch);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hammered.length) {\r\n\t\t\tthis.sendDeclare(`${Chat.count(hammered, \"players have\")} been hammered: ${hammered.join(', ')}. They have not been removed from the game.`);\r\n\t\t\tthis.night(true);\r\n\t\t}\r\n\t}\r\n\r\n\tgetPlurality() {\r\n\t\tif (this.hasPlurality) return this.hasPlurality;\r\n\t\tif (!Object.keys(this.lynches).length) return null;\r\n\t\tlet max = 0;\r\n\t\tlet topLynches: ID[] = [];\r\n\t\tfor (const key in this.lynches) {\r\n\t\t\tif (this.lynches[key].count > max) {\r\n\t\t\t\tmax = this.lynches[key].count;\r\n\t\t\t\ttopLynches = [key as ID];\r\n\t\t\t} else if (this.lynches[key].count === max) {\r\n\t\t\t\ttopLynches.push(key as ID);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (topLynches.length <= 1) {\r\n\t\t\tthis.hasPlurality = topLynches[0];\r\n\t\t\treturn this.hasPlurality;\r\n\t\t}\r\n\t\ttopLynches = topLynches.sort((key1, key2) => {\r\n\t\t\tconst l1 = this.lynches[key1];\r\n\t\t\tconst l2 = this.lynches[key2];\r\n\t\t\tif (l1.dir !== l2.dir) {\r\n\t\t\t\treturn (l1.dir === 'down' ? -1 : 1);\r\n\t\t\t} else {\r\n\t\t\t\tif (l1.dir === 'up') return (l1.lastLynch < l2.lastLynch ? -1 : 1);\r\n\t\t\t\treturn (l1.lastLynch > l2.lastLynch ? -1 : 1);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.hasPlurality = topLynches[0];\r\n\t\treturn this.hasPlurality;\r\n\t}\r\n\r\n\teliminate(player: MafiaPlayer, ability = 'kill') {\r\n\t\tif (!(player.id in this.playerTable)) return;\r\n\t\tif (!this.started) {\r\n\t\t\t// Game has not started, simply kick the player\r\n\t\t\tthis.sendDeclare(`${player.safeName} was kicked from the game!`);\r\n\t\t\tif (this.hostRequestedSub.includes(player.id)) {\r\n\t\t\t\tthis.hostRequestedSub.splice(this.hostRequestedSub.indexOf(player.id), 1);\r\n\t\t\t}\r\n\t\t\tif (this.requestedSub.includes(player.id)) {\r\n\t\t\t\tthis.requestedSub.splice(this.requestedSub.indexOf(player.id), 1);\r\n\t\t\t}\r\n\t\t\tdelete this.playerTable[player.id];\r\n\t\t\tthis.playerCount--;\r\n\t\t\tplayer.updateHtmlRoom();\r\n\t\t\tplayer.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.dead[player.id] = player;\r\n\t\tlet msg = `${player.safeName}`;\r\n\t\tswitch (ability) {\r\n\t\tcase 'treestump':\r\n\t\t\tthis.dead[player.id].treestump = true;\r\n\t\t\tmsg += ` has been treestumped`;\r\n\t\t\tbreak;\r\n\t\tcase 'spirit':\r\n\t\t\tthis.dead[player.id].restless = true;\r\n\t\t\tmsg += ` became a restless spirit`;\r\n\t\t\tbreak;\r\n\t\tcase 'spiritstump':\r\n\t\t\tthis.dead[player.id].treestump = true;\r\n\t\t\tthis.dead[player.id].restless = true;\r\n\t\t\tmsg += ` became a restless treestump`;\r\n\t\t\tbreak;\r\n\t\tcase 'kick':\r\n\t\t\tmsg += ` was kicked from the game`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tmsg += ` was eliminated`;\r\n\t\t}\r\n\t\tif (player.lynching) this.unlynch(player.id, true);\r\n\t\tthis.sendDeclare(`${msg}! ${!this.noReveal && toID(ability) === 'kill' ? `${player.safeName}'s role was ${player.getRole()}.` : ''}`);\r\n\t\tconst targetRole = player.role;\r\n\t\tif (targetRole) {\r\n\t\t\tfor (const [roleIndex, role] of this.roles.entries()) {\r\n\t\t\t\tif (role.id === targetRole.id) {\r\n\t\t\t\t\tthis.roles.splice(roleIndex, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.clearLynches(player.id);\r\n\t\tdelete this.playerTable[player.id];\r\n\t\tlet subIndex = this.requestedSub.indexOf(player.id);\r\n\t\tif (subIndex !== -1) this.requestedSub.splice(subIndex, 1);\r\n\t\tsubIndex = this.hostRequestedSub.indexOf(player.id);\r\n\t\tif (subIndex !== -1) this.hostRequestedSub.splice(subIndex, 1);\r\n\r\n\t\tthis.playerCount--;\r\n\t\tthis.updateRoleString();\r\n\t\tthis.updatePlayers();\r\n\t\tplayer.updateHtmlRoom();\r\n\t}\r\n\r\n\trevive(user: User, toRevive: string, force = false) {\r\n\t\tif (this.phase === 'IDEApicking') return user.sendTo(this.room, `|error|You cannot add or remove players while IDEA roles are being picked.`);\r\n\t\tif (toRevive in this.playerTable) {\r\n\t\t\tuser.sendTo(this.room, `|error|The user ${toRevive} is already a living player.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (toRevive in this.dead) {\r\n\t\t\tconst deadPlayer = this.dead[toRevive];\r\n\t\t\tif (deadPlayer.treestump) deadPlayer.treestump = false;\r\n\t\t\tif (deadPlayer.restless) deadPlayer.restless = false;\r\n\t\t\tthis.sendDeclare(`${deadPlayer.safeName} was revived!`);\r\n\t\t\tthis.playerTable[deadPlayer.id] = deadPlayer;\r\n\t\t\tconst targetRole = deadPlayer.role;\r\n\t\t\tif (targetRole) {\r\n\t\t\t\tthis.roles.push(targetRole);\r\n\t\t\t} else {\r\n\t\t\t\t// Should never happen\r\n\t\t\t\tdeadPlayer.role = {\r\n\t\t\t\t\tname: `Unknown`,\r\n\t\t\t\t\tsafeName: `Unknown`,\r\n\t\t\t\t\tid: `unknown`,\r\n\t\t\t\t\talignment: 'solo',\r\n\t\t\t\t\timage: '',\r\n\t\t\t\t\tmemo: [`You were revived, but had no role. Please let a Mafia Room Owner know this happened. To learn about your role, PM the host (${this.host}).`],\r\n\t\t\t\t};\r\n\t\t\t\tthis.roles.push(deadPlayer.role);\r\n\t\t\t}\r\n\t\t\tthis.roles.sort((a, b) => a.alignment.localeCompare(b.alignment) || a.name.localeCompare(b.name));\r\n\t\t\tdelete this.dead[deadPlayer.id];\r\n\t\t} else {\r\n\t\t\tconst targetUser = Users.get(toRevive);\r\n\t\t\tif (!targetUser) return;\r\n\t\t\tconst canJoin = this.canJoin(targetUser, false, force);\r\n\t\t\tif (canJoin) {\r\n\t\t\t\tuser.sendTo(this.room, `|error|${canJoin}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst player = this.makePlayer(targetUser);\r\n\t\t\tif (this.started) {\r\n\t\t\t\tplayer.role = {\r\n\t\t\t\t\tname: `Unknown`,\r\n\t\t\t\t\tsafeName: `Unknown`,\r\n\t\t\t\t\tid: `unknown`,\r\n\t\t\t\t\talignment: 'solo',\r\n\t\t\t\t\timage: '',\r\n\t\t\t\t\tmemo: [`You were added to the game after it had started. To learn about your role, PM the host (${this.host}).`],\r\n\t\t\t\t};\r\n\t\t\t\tthis.roles.push(player.role);\r\n\t\t\t} else {\r\n\t\t\t\tthis.originalRoles = [];\r\n\t\t\t\tthis.originalRoleString = '';\r\n\t\t\t\tthis.roles = [];\r\n\t\t\t\tthis.roleString = '';\r\n\t\t\t}\r\n\t\t\tif (this.subs.includes(targetUser.id)) this.subs.splice(this.subs.indexOf(targetUser.id), 1);\r\n\t\t\tthis.played.push(targetUser.id);\r\n\t\t\tthis.playerTable[targetUser.id] = player;\r\n\t\t\tthis.sendDeclare(Chat.html`${targetUser.name} has been added to the game by ${user.name}!`);\r\n\t\t}\r\n\t\tthis.playerCount++;\r\n\t\tthis.updateRoleString();\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\r\n\tsetDeadline(minutes: number, silent = false) {\r\n\t\tif (isNaN(minutes)) return;\r\n\t\tif (!minutes) {\r\n\t\t\tif (!this.timer) return;\r\n\t\t\tclearTimeout(this.timer);\r\n\t\t\tthis.timer = null;\r\n\t\t\tthis.dlAt = 0;\r\n\t\t\tif (!silent) this.sendTimestamp(`**The deadline has been cleared.**`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (minutes < 1 || minutes > 20) return;\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\tthis.dlAt = Date.now() + (minutes * 60000);\r\n\t\tif (minutes > 3) {\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendTimestamp(`**3 minutes left!**`);\r\n\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\tthis.sendTimestamp(`**1 minute left!**`);\r\n\t\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\t\tthis.sendTimestamp(`**Time is up!**`);\r\n\t\t\t\t\t\tthis.night();\r\n\t\t\t\t\t}, 60000);\r\n\t\t\t\t}, 2 * 60000);\r\n\t\t\t}, (minutes - 3) * 60000);\r\n\t\t} else if (minutes > 1) {\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendTimestamp(`**1 minute left!**`);\r\n\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\tthis.sendTimestamp(`**Time is up!**`);\r\n\t\t\t\t\tif (this.phase === 'day') this.night();\r\n\t\t\t\t}, 60000);\r\n\t\t\t}, (minutes - 1) * 60000);\r\n\t\t} else {\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendTimestamp(`**Time is up!**`);\r\n\t\t\t\tif (this.phase === 'day') this.night();\r\n\t\t\t}, minutes * 60000);\r\n\t\t}\r\n\t\tthis.sendTimestamp(`**The deadline has been set for ${minutes} minute${minutes === 1 ? '' : 's'}.**`);\r\n\t}\r\n\r\n\tsub(player: string, replacement: string) {\r\n\t\tconst oldPlayer = this.playerTable[player];\r\n\t\tif (!oldPlayer) return; // should never happen\r\n\r\n\t\tconst newUser = Users.get(replacement);\r\n\t\tif (!newUser) return; // should never happen\r\n\t\tconst newPlayer = this.makePlayer(newUser);\r\n\t\tnewPlayer.role = oldPlayer.role;\r\n\t\tnewPlayer.IDEA = oldPlayer.IDEA;\r\n\t\tif (oldPlayer.lynching) {\r\n\t\t\t// Dont change plurality\r\n\t\t\tconst lynch = this.lynches[oldPlayer.lynching];\r\n\t\t\tlynch.lynchers.splice(lynch.lynchers.indexOf(oldPlayer.id), 1);\r\n\t\t\tlynch.lynchers.push(newPlayer.id);\r\n\t\t\tnewPlayer.lynching = oldPlayer.lynching;\r\n\t\t\toldPlayer.lynching = '';\r\n\t\t}\r\n\t\tthis.playerTable[newPlayer.id] = newPlayer;\r\n\t\t// Transfer lynches on the old player to the new one\r\n\t\tif (this.lynches[oldPlayer.id]) {\r\n\t\t\tthis.lynches[newPlayer.id] = this.lynches[oldPlayer.id];\r\n\t\t\tdelete this.lynches[oldPlayer.id];\r\n\t\t\tfor (const p in this.playerTable) {\r\n\t\t\t\tif (this.playerTable[p].lynching === oldPlayer.id) this.playerTable[p].lynching = newPlayer.id;\r\n\t\t\t}\r\n\t\t\tfor (const p in this.dead) {\r\n\t\t\t\tif (this.dead[p].restless && this.dead[p].lynching === oldPlayer.id) this.dead[p].lynching = newPlayer.id;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (newUser && newUser.connected) {\r\n\t\t\tfor (const conn of newUser.connections) {\r\n\t\t\t\tvoid Chat.resolvePage(`view-mafia-${this.room.roomid}`, newUser, conn);\r\n\t\t\t}\r\n\t\t\tnewUser.send(`>${this.room.roomid}\\n|notify|You have been substituted in the mafia game for ${oldPlayer.safeName}.`);\r\n\t\t}\r\n\t\tif (this.started) this.played.push(newPlayer.id);\r\n\t\tthis.sendDeclare(`${oldPlayer.safeName} has been subbed out. ${newPlayer.safeName} has joined the game.`);\r\n\t\tthis.updatePlayers();\r\n\r\n\t\tdelete this.playerTable[oldPlayer.id];\r\n\t\toldPlayer.destroy();\r\n\r\n\t\tif (this.room.roomid === 'mafia' && this.started) {\r\n\t\t\tconst month = new Date().toLocaleString(\"en-us\", {month: \"numeric\", year: \"numeric\"});\r\n\t\t\tif (!logs.leavers[month]) logs.leavers[month] = {};\r\n\t\t\tif (!logs.leavers[month][player]) logs.leavers[month][player] = 0;\r\n\t\t\tlogs.leavers[month][player]++;\r\n\t\t\twriteFile(LOGS_FILE, logs);\r\n\t\t}\r\n\t}\r\n\r\n\tnextSub(userid: ID | null = null) {\r\n\t\tif (!this.subs.length ||\r\n\t\t\t(!this.hostRequestedSub.length && ((!this.requestedSub.length || !this.autoSub)) && !userid)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst nextSub = this.subs.shift();\r\n\t\tif (!nextSub) return;\r\n\t\tconst sub = Users.get(nextSub, true);\r\n\t\tif (!sub || !sub.connected || !sub.named || !this.room.users[sub.id]) return; // should never happen, just to be safe\r\n\t\tconst toSubOut = userid || this.hostRequestedSub.shift() || this.requestedSub.shift();\r\n\t\tif (!toSubOut) {\r\n\t\t\t// Should never happen\r\n\t\t\tthis.subs.unshift(nextSub);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.hostRequestedSub.includes(toSubOut)) {\r\n\t\t\tthis.hostRequestedSub.splice(this.hostRequestedSub.indexOf(toSubOut), 1);\r\n\t\t}\r\n\t\tif (this.requestedSub.includes(toSubOut)) {\r\n\t\t\tthis.requestedSub.splice(this.requestedSub.indexOf(toSubOut), 1);\r\n\t\t}\r\n\t\tthis.sub(toSubOut, sub.id);\r\n\t}\r\n\r\n\tcustomIdeaInit(user: User, choices: number, picks: string[], rolesString: string) {\r\n\t\tthis.originalRoles = [];\r\n\t\tthis.originalRoleString = '';\r\n\t\tthis.roles = [];\r\n\t\tthis.roleString = '';\r\n\r\n\t\tconst roles = Chat.stripHTML(rolesString);\r\n\t\tlet roleList = roles.split('\\n');\r\n\t\tif (roleList.length === 1) {\r\n\t\t\troleList = roles.split(',').map(r => r.trim());\r\n\t\t}\r\n\r\n\t\tthis.IDEA.data = {\r\n\t\t\tname: `${this.host}'s custom IDEA`, // already escaped\r\n\t\t\tuntrusted: true,\r\n\t\t\troles: roleList,\r\n\t\t\tpicks,\r\n\t\t\tchoices,\r\n\t\t};\r\n\t\treturn this.ideaDistributeRoles(user);\r\n\t}\r\n\tideaInit(user: User, moduleName: string) {\r\n\t\tthis.originalRoles = [];\r\n\t\tthis.originalRoleString = '';\r\n\t\tthis.roles = [];\r\n\t\tthis.roleString = '';\r\n\r\n\t\tthis.IDEA.data = MafiaData.IDEAs[moduleName];\r\n\t\tif (typeof this.IDEA.data === 'string') this.IDEA.data = MafiaData.IDEAs[this.IDEA.data];\r\n\t\tif (!this.IDEA.data) return user.sendTo(this.room, `|error|${moduleName} is not a valid IDEA.`);\r\n\t\tif (typeof this.IDEA.data !== 'object') return this.sendRoom(`Invalid alias for IDEA ${moduleName}. Please report this to a mod.`);\r\n\t\treturn this.ideaDistributeRoles(user);\r\n\t}\r\n\r\n\tideaDistributeRoles(user: User) {\r\n\t\tif (!this.IDEA.data) return user.sendTo(this.room, `|error|No IDEA module loaded`);\r\n\t\tif (this.phase !== 'locked' && this.phase !== 'IDEAlocked') return user.sendTo(this.room, `|error|The game must be in a locked state to distribute IDEA roles.`);\r\n\r\n\t\tconst neededRoles = this.IDEA.data.choices * this.playerCount;\r\n\t\tif (neededRoles > this.IDEA.data.roles.length) return user.sendTo(this.room, `|error|Not enough roles in the IDEA module.`);\r\n\r\n\t\tconst roles = [];\r\n\t\tconst selectedIndexes = [];\r\n\t\tfor (let i = 0; i < neededRoles; i++) {\r\n\t\t\tlet randomIndex;\r\n\t\t\tdo {\r\n\t\t\t\trandomIndex = Math.floor(Math.random() * this.IDEA.data.roles.length);\r\n\t\t\t} while (selectedIndexes.indexOf(randomIndex) !== -1);\r\n\t\t\troles.push(this.IDEA.data.roles[randomIndex]);\r\n\t\t\tselectedIndexes.push(randomIndex);\r\n\t\t}\r\n\t\tDex.shuffle(roles);\r\n\t\tthis.IDEA.waitingPick = [];\r\n\t\tfor (const p in this.playerTable) {\r\n\t\t\tconst player = this.playerTable[p];\r\n\t\t\tplayer.role = null;\r\n\t\t\tplayer.IDEA = {\r\n\t\t\t\tchoices: roles.splice(0, this.IDEA.data.choices),\r\n\t\t\t\toriginalChoices: [], // MAKE SURE TO SET THIS\r\n\t\t\t\tpicks: {},\r\n\t\t\t};\r\n\t\t\tplayer.IDEA.originalChoices = player.IDEA.choices.slice();\r\n\t\t\tfor (const pick of this.IDEA.data.picks) {\r\n\t\t\t\tplayer.IDEA.picks[pick] = null;\r\n\t\t\t\tthis.IDEA.waitingPick.push(p);\r\n\t\t\t}\r\n\t\t\tconst u = Users.get(p);\r\n\t\t\tif (u && u.connected) u.send(`>${this.room.roomid}\\n|notify|Pick your role in the IDEA module.`);\r\n\t\t}\r\n\r\n\t\tthis.phase = 'IDEApicking';\r\n\t\tthis.updatePlayers();\r\n\r\n\t\tthis.sendDeclare(`${this.IDEA.data.name} roles have been distributed. You will have ${IDEA_TIMER / 1000} seconds to make your picks.`);\r\n\t\tthis.IDEA.timer = setTimeout(() => { this.ideaFinalizePicks(); }, IDEA_TIMER);\r\n\r\n\t\treturn ``;\r\n\t}\r\n\r\n\tideaPick(user: User, selection: string[]) {\r\n\t\tlet buf = '';\r\n\t\tif (this.phase !== 'IDEApicking') return 'The game is not in the IDEA picking phase.';\r\n\t\tif (!this.IDEA || !this.IDEA.data) return this.sendRoom(`Trying to pick an IDEA role with no module running, target: ${JSON.stringify(selection)}. Please report this to a mod.`);\r\n\t\tconst player = this.playerTable[user.id];\r\n\t\tif (!player.IDEA) return this.sendRoom(`Trying to pick an IDEA role with no player IDEA object, user: ${user.id}. Please report this to a mod.`);\r\n\t\tselection = selection.map(toID) as ID[];\r\n\t\tif (selection.length === 1 && this.IDEA.data.picks.length === 1) selection = [this.IDEA.data.picks[0], selection[0]];\r\n\t\tif (selection.length !== 2) return user.sendTo(this.room, `|error|Invalid selection.`);\r\n\r\n\t\t// input is formatted as ['selection', 'role']\r\n\t\t// eg: ['role', 'bloodhound']\r\n\t\t// ['alignment', 'alien']\r\n\t\t// ['selection', ''] deselects\r\n\t\tif (selection[1]) {\r\n\t\t\tconst roleIndex = player.IDEA.choices.map(toID).indexOf(selection[1] as ID);\r\n\t\t\tif (roleIndex === -1) return user.sendTo(this.room, `|error|${selection[1]} is not an available role, perhaps it is already selected?`);\r\n\t\t\tselection[1] = player.IDEA.choices.splice(roleIndex, 1)[0];\r\n\t\t} else {\r\n\t\t\tselection[1] = '';\r\n\t\t}\r\n\t\tconst selected = player.IDEA.picks[selection[0]];\r\n\t\tif (selected) {\r\n\t\t\tbuf += `You have deselected ${selected}. `;\r\n\t\t\tplayer.IDEA.choices.push(selected);\r\n\t\t}\r\n\r\n\t\tif (player.IDEA.picks[selection[0]] && !selection[1]) {\r\n\t\t\tthis.IDEA.waitingPick.push(player.id);\r\n\t\t} else if (!player.IDEA.picks[selection[0]] && selection[1]) {\r\n\t\t\tthis.IDEA.waitingPick.splice(this.IDEA.waitingPick.indexOf(player.id), 1);\r\n\t\t}\r\n\r\n\t\tplayer.IDEA.picks[selection[0]] = selection[1];\r\n\t\tif (selection[1]) buf += `You have selected ${selection[0]}: ${selection[1]}.`;\r\n\t\tplayer.updateHtmlRoom();\r\n\t\tif (!this.IDEA.waitingPick.length) {\r\n\t\t\tif (this.IDEA.timer) clearTimeout(this.IDEA.timer);\r\n\t\t\tthis.ideaFinalizePicks();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn user.sendTo(this.room, buf);\r\n\t}\r\n\r\n\tideaFinalizePicks() {\r\n\t\tif (!this.IDEA || !this.IDEA.data) return this.sendRoom(`Tried to finalize IDEA picks with no IDEA module running, please report this to a mod.`);\r\n\t\tconst randed = [];\r\n\t\tfor (const p in this.playerTable) {\r\n\t\t\tconst player = this.playerTable[p];\r\n\t\t\tif (!player.IDEA) return this.sendRoom(`Trying to pick an IDEA role with no player IDEA object, user: ${player.id}. Please report this to a mod.`);\r\n\t\t\tlet randPicked = false;\r\n\t\t\tconst role = [];\r\n\t\t\tfor (const choice of this.IDEA.data.picks) {\r\n\t\t\t\tif (!player.IDEA.picks[choice]) {\r\n\t\t\t\t\trandPicked = true;\r\n\t\t\t\t\tconst randomChoice = player.IDEA.choices.shift();\r\n\t\t\t\t\tif (randomChoice) {\r\n\t\t\t\t\t\tplayer.IDEA.picks[choice] = randomChoice;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(`No roles left to randomly assign from IDEA module choices.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.sendUser(player.id, `You were randomly assigned ${choice}: ${randomChoice}`);\r\n\t\t\t\t}\r\n\t\t\t\trole.push(`${choice}: ${player.IDEA.picks[choice]}`);\r\n\t\t\t}\r\n\t\t\tif (randPicked) randed.push(p);\r\n\t\t\t// if there's only one option, it's their role, parse it properly\r\n\t\t\tlet roleName = '';\r\n\t\t\tif (this.IDEA.data.picks.length === 1) {\r\n\t\t\t\tconst pick = player.IDEA.picks[this.IDEA.data.picks[0]];\r\n\t\t\t\tif (!pick) throw new Error('Pick not found when parsing role selected in IDEA module.');\r\n\t\t\t\tconst parsedRole = MafiaTracker.parseRole(pick);\r\n\t\t\t\tplayer.role = parsedRole.role;\r\n\t\t\t\tif (parsedRole.problems.length && !this.IDEA.data.untrusted) this.sendRoom(`Problems found when parsing IDEA role ${player.IDEA.picks[this.IDEA.data.picks[0]]}. Please report this to a mod.`);\r\n\t\t\t} else {\r\n\t\t\t\troleName = role.join('; ');\r\n\t\t\t\tplayer.role = {\r\n\t\t\t\t\tname: roleName,\r\n\t\t\t\t\tsafeName: Chat.escapeHTML(roleName),\r\n\t\t\t\t\tid: toID(roleName),\r\n\t\t\t\t\talignment: 'solo',\r\n\t\t\t\t\tmemo: [`(Your role was set from an IDEA.)`],\r\n\t\t\t\t\timage: '',\r\n\t\t\t\t};\r\n\t\t\t\t// hardcoding this because it makes GestI so much nicer\r\n\t\t\t\tif (!this.IDEA.data.untrusted) {\r\n\t\t\t\t\tfor (const pick of role) {\r\n\t\t\t\t\t\tif (pick.substr(0, 10) === 'alignment:') {\r\n\t\t\t\t\t\t\tconst parsedRole = MafiaTracker.parseRole(pick.substr(9));\r\n\t\t\t\t\t\t\tif (parsedRole.problems.length) this.sendRoom(`Problems found when parsing IDEA role ${pick}. Please report this to a mod.`);\r\n\t\t\t\t\t\t\tplayer.role.alignment = parsedRole.role.alignment;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.IDEA.discardsHTML = `<b>Discards:</b><br />`;\r\n\t\tfor (const p of Object.keys(this.playerTable).sort()) {\r\n\t\t\tconst IDEA = this.playerTable[p].IDEA;\r\n\t\t\tif (!IDEA) return this.sendRoom(`No IDEA data for player ${p} when finalising IDEAs. Please report this to a mod.`);\r\n\t\t\tthis.IDEA.discardsHTML += `<b>${this.playerTable[p].safeName}:</b> ${IDEA.choices.join(', ')}<br />`;\r\n\t\t}\r\n\r\n\t\tthis.phase = 'IDEAlocked';\r\n\t\tif (randed.length) {\r\n\t\t\tthis.sendDeclare(`${randed.join(', ')} did not pick a role in time and were randomly assigned one.`);\r\n\t\t}\r\n\t\tthis.sendDeclare(`IDEA picks are locked!`);\r\n\t\tthis.sendRoom(`To start, use /mafia start, or to reroll use /mafia ideareroll`);\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\r\n\tsendPlayerList() {\r\n\t\tthis.room.add(`|c:|${(Math.floor(Date.now() / 1000))}|~|**Players (${this.playerCount})**: ${Object.keys(this.playerTable).map(p => this.playerTable[p].name).join(', ')}`).update();\r\n\t}\r\n\r\n\tupdatePlayers() {\r\n\t\tfor (const p in this.playerTable) {\r\n\t\t\tthis.playerTable[p].updateHtmlRoom();\r\n\t\t}\r\n\t\tfor (const p in this.dead) {\r\n\t\t\tif (this.dead[p].restless || this.dead[p].treestump) this.dead[p].updateHtmlRoom();\r\n\t\t}\r\n\t\t// Now do the host\r\n\t\tthis.updateHost();\r\n\t}\r\n\r\n\tupdatePlayersLynches() {\r\n\t\tfor (const p in this.playerTable) {\r\n\t\t\tthis.playerTable[p].updateHtmlLynches();\r\n\t\t}\r\n\t\tfor (const p in this.dead) {\r\n\t\t\tif (this.dead[p].restless || this.dead[p].treestump) this.dead[p].updateHtmlLynches();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateHost() {\r\n\t\tfor (const hostid of [...this.cohosts, this.hostid]) {\r\n\t\t\tconst host = Users.get(hostid);\r\n\t\t\tif (!host || !host.connected) return;\r\n\t\t\tfor (const conn of host.connections) {\r\n\t\t\t\tvoid Chat.resolvePage(`view-mafia-${this.room.roomid}`, host, conn);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateRoleString() {\r\n\t\tthis.roleString = this.roles.slice().map(r => `<span style=\"font-weight:bold;color:${MafiaData.alignments[r.alignment].color || '#FFF'}\">${r.safeName}</span>`).join(', ');\r\n\t}\r\n\r\n\tsendRoom(message: string) {\r\n\t\tthis.room.add(message).update();\r\n\t}\r\n\tsendHTML(message: string) {\r\n\t\tthis.room.add(`|uhtml|mafia|${message}`).update();\r\n\t}\r\n\tsendDeclare(message: string) {\r\n\t\tthis.room.add(`|raw|<div class=\"broadcast-blue\">${message}</div>`).update();\r\n\t}\r\n\tsendStrong(message: string) {\r\n\t\tthis.room.add(`|raw|<strong>${message}</strong>`).update();\r\n\t}\r\n\tsendTimestamp(message: string) {\r\n\t\tthis.room.add(`|c:|${(Math.floor(Date.now() / 1000))}|~|${message}`).update();\r\n\t}\r\n\r\n\troomWindow() {\r\n\t\tif (this.ended) return `<div class=\"infobox\">The game of ${this.title} has ended.</div>`;\r\n\t\tlet output = `<div class=\"broadcast-blue\">`;\r\n\t\tif (this.phase === 'signups') {\r\n\t\t\toutput += `<h2 style=\"text-align: center\">A game of ${this.title} was created</h2><p style=\"text-align: center\"><button class=\"button\" name=\"send\" value=\"/mafia join\">Join the game</button> <button class=\"button\" name=\"send\" value=\"/join view-mafia-${this.room.roomid}\">Spectate the game</button> <button class=\"button\" name=\"send\" value=\"/help mafia\">Mafia Commands</button></p>`;\r\n\t\t} else {\r\n\t\t\toutput += `<p style=\"font-weight: bold\">A game of ${this.title} is in progress.</p><p><button class=\"button\" name=\"send\" value=\"/mafia sub ${this.room.roomid}, in\">Become a substitute</button> <button class=\"button\" name=\"send\" value=\"/join view-mafia-${this.room.roomid}\">Spectate the game</button> <button class=\"button\" name=\"send\" value=\"/help mafia\">Mafia Commands</button></p>`;\r\n\t\t}\r\n\t\toutput += `</div>`;\r\n\t\treturn output;\r\n\t}\r\n\r\n\tcanJoin(user: User, self = false, force = false) {\r\n\t\tif (!user || !user.connected) return `User not found.`;\r\n\t\tconst targetString = self ? `You are` : `${user.id} is`;\r\n\t\tif (!this.room.users[user.id]) return `${targetString} not in the room.`;\r\n\t\tif (this.playerTable[user.id]) return `${targetString} already in the game.`;\r\n\t\tif (this.hostid === user.id) return `${targetString} the host.`;\r\n\t\tif (this.cohosts.includes(user.id)) return `${targetString} a cohost.`;\r\n\t\tif (!force) {\r\n\t\t\tfor (const alt of user.getAltUsers(true)) {\r\n\t\t\t\tif (this.playerTable[alt.id] || this.played.includes(alt.id)) return `${self ? `You already have` : `${user.id} already has`} an alt in the game.`;\r\n\t\t\t\tif (this.hostid === alt.id || this.cohosts.includes(alt.id)) return `${self ? `You have` : `${user.id} has`} an alt as a game host.`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tsendUser(user: User | string | null, message: string) {\r\n\t\tconst userObject = (typeof user === 'string' ? Users.get(user) : user);\r\n\t\tif (!userObject || !userObject.connected) return;\r\n\t\tuserObject.sendTo(this.room, message);\r\n\t}\r\n\r\n\tsetSelfLynch(user: User, setting: boolean | 'hammer') {\r\n\t\tconst from = this.selfEnabled;\r\n\t\tif (from === setting) return user.sendTo(this.room, `|error|Selflynching is already ${setting ? `set to Self${setting === 'hammer' ? 'hammering' : 'lynching'}` : 'disabled'}.`);\r\n\t\tif (from) {\r\n\t\t\tthis.sendDeclare(`Self${from === 'hammer' ? 'hammering' : 'lynching'} has been ${setting ? `changed to Self${setting === 'hammer' ? 'hammering' : 'lynching'}` : 'disabled'}.`);\r\n\t\t} else {\r\n\t\t\tthis.sendDeclare(`Self${setting === 'hammer' ? 'hammering' : 'lynching'} has been ${setting ? 'enabled' : 'disabled'}.`);\r\n\t\t}\r\n\t\tthis.selfEnabled = setting;\r\n\t\tif (!setting) {\r\n\t\t\tfor (const player of Object.values(this.playerTable)) {\r\n\t\t\t\tif (player.lynching === player.id) this.unlynch(player.id, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\tsetNoLynch(user: User, setting: boolean) {\r\n\t\tif (this.enableNL === setting) return user.sendTo(this.room, `|error|No Lynch is already ${setting ? 'enabled' : 'disabled'}.`);\r\n\t\tthis.enableNL = setting;\r\n\t\tthis.sendDeclare(`No Lynch has been ${setting ? 'enabled' : 'disabled'}.`);\r\n\t\tif (!setting) this.clearLynches('nolynch');\r\n\t\tthis.updatePlayers();\r\n\t}\r\n\tclearLynches(target = '') {\r\n\t\tif (target) delete this.lynches[target];\r\n\r\n\t\tif (!target) this.lynches = Object.create(null);\r\n\r\n\t\tfor (const player of Object.values(this.playerTable)) {\r\n\t\t\tif (this.forceLynch) {\r\n\t\t\t\tif (!target || (player.lynching === target)) {\r\n\t\t\t\t\tplayer.lynching = player.id;\r\n\t\t\t\t\tthis.lynches[player.id]\r\n\t\t\t\t\t\t= {count: 1, trueCount: this.getLynchValue(player.id), lastLynch: Date.now(), dir: 'up', lynchers: [player.id]};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!target || (player.lynching === target)) player.lynching = '';\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const player of Object.values(this.dead)) {\r\n\t\t\tif (player.restless && (!target || player.lynching === target)) player.lynching = '';\r\n\t\t}\r\n\t\tthis.hasPlurality = null;\r\n\t}\r\n\r\n\tonChatMessage(message: string, user: User) {\r\n\t\tconst subIndex = this.hostRequestedSub.indexOf(user.id);\r\n\t\tif (subIndex !== -1) {\r\n\t\t\tthis.hostRequestedSub.splice(subIndex, 1);\r\n\t\t\tfor (const hostid of [...this.cohosts, this.hostid]) {\r\n\t\t\t\tthis.sendUser(hostid, `${user.id} has spoken and been removed from the host sublist.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Silenced check bypasses staff\r\n\t\tconst player = this.playerTable[user.id] || this.dead[user.id];\r\n\t\tif (player && player.silenced) {\r\n\t\t\treturn `You are silenced and cannot speak.${user.can('mute', null, this.room) ? \" You can remove this with /mafia unsilence.\" : ''}`;\r\n\t\t}\r\n\r\n\t\tif (user.isStaff ||\r\n\t\t\t(this.room.auth && this.room.auth[user.id] && this.room.auth[user.id] !== '+') ||\r\n\t\t\tthis.hostid === user.id || this.cohosts.includes(user.id) ||\r\n\t\t\t!this.started) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!this.playerTable[user.id] && (!this.dead[user.id] || !this.dead[user.id].treestump)) return `You cannot talk while a game of ${this.title} is going on.`;\r\n\t\tif (this.phase === 'night') return `You cannot talk at night.`;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tonConnect(user: User) {\r\n\t\tuser.sendTo(this.room, `|uhtml|mafia|${this.roomWindow()}`);\r\n\t}\r\n\r\n\tonJoin(user: User) {\r\n\t\tif (user.id in this.playerTable) {\r\n\t\t\treturn this.playerTable[user.id].updateHtmlRoom();\r\n\t\t}\r\n\t\tif (user.id === this.hostid) return this.updateHost();\r\n\t}\r\n\r\n\tonLeave(user: User, oldUserid: ID) {\r\n\t\tconst userid = oldUserid || user.getLastId();\r\n\t\tif (this.subs.includes(userid)) this.subs.splice(this.subs.indexOf(userid), 1);\r\n\t}\r\n\r\n\tremoveBannedUser(user: User) {\r\n\t\t// Player was banned, attempt to sub now\r\n\t\t// If we can't sub now, make subbing them out the top priority\r\n\t\tif (!(user.id in this.playerTable)) return;\r\n\t\tthis.requestedSub.unshift(user.id);\r\n\t\tthis.nextSub();\r\n\t}\r\n\r\n\tforfeit(user: User) {\r\n\t\t// Add the player to the sub list.\r\n\t\tif (!(user.id in this.playerTable)) return;\r\n\t\tthis.requestedSub.push(user.id);\r\n\t\tthis.nextSub();\r\n\t}\r\n\r\n\tend() {\r\n\t\tthis.ended = true;\r\n\t\tthis.sendHTML(this.roomWindow());\r\n\t\tthis.updatePlayers();\r\n\t\tif (this.room.roomid === 'mafia' && this.started) {\r\n\t\t\t// Intead of using this.played, which shows players who have subbed out as well\r\n\t\t\t// We check who played through to the end when recording playlogs\r\n\t\t\tconst played = Object.keys(this.playerTable).concat(Object.keys(this.dead));\r\n\t\t\tconst month = new Date().toLocaleString(\"en-us\", {month: \"numeric\", year: \"numeric\"});\r\n\t\t\tif (!logs.plays[month]) logs.plays[month] = {};\r\n\t\t\tfor (const player of played) {\r\n\t\t\t\tif (!logs.plays[month][player]) logs.plays[month][player] = 0;\r\n\t\t\t\tlogs.plays[month][player]++;\r\n\t\t\t}\r\n\t\t\tif (!logs.hosts[month]) logs.hosts[month] = {};\r\n\t\t\tfor (const hostid of [...this.cohosts, this.hostid]) {\r\n\t\t\t\tif (!logs.hosts[month][hostid]) logs.hosts[month][hostid] = 0;\r\n\t\t\t\tlogs.hosts[month][hostid]++;\r\n\t\t\t}\r\n\t\t\twriteFile(LOGS_FILE, logs);\r\n\t\t}\r\n\t\tif (this.timer) {\r\n\t\t\tclearTimeout(this.timer);\r\n\t\t\tthis.timer = null;\r\n\t\t}\r\n\t\tthis.destroy();\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\t// Slightly modified to handle dead players\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\tif (this.IDEA.timer) clearTimeout(this.IDEA.timer);\r\n\t\tthis.room.game = null;\r\n\t\t// @ts-ignore readonly\r\n\t\tthis.room = null;\r\n\t\tfor (const i in this.playerTable) {\r\n\t\t\tthis.playerTable[i].destroy();\r\n\t\t}\r\n\t\tfor (const i in this.dead) {\r\n\t\t\tthis.dead[i].destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const pages: PageTable = {\r\n\tmafia(query, user) {\r\n\t\tif (!user.named) return Rooms.RETRY_AFTER_LOGIN;\r\n\t\tif (!query.length) return this.close();\r\n\t\tlet roomid = query.shift();\r\n\t\tif (roomid === 'groupchat') roomid += `-${query.shift()}-${query.shift()}`;\r\n\t\tconst room = Rooms.get(roomid);\r\n\t\tif (!room || !room.users[user.id] || !room.game || room.game.gameid !== 'mafia' || room.game.ended) {\r\n\t\t\treturn this.close();\r\n\t\t}\r\n\t\tconst game = room.game as MafiaTracker;\r\n\t\tconst isPlayer = user.id in game.playerTable;\r\n\t\tconst isHost = user.id === game.hostid || game.cohosts.includes(user.id);\r\n\t\tthis.title = game.title;\r\n\t\tlet buf = `<div class=\"pad broadcast-blue\">`;\r\n\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/join view-mafia-${room.roomid}\" style=\"float:left\"><i class=\"fa fa-refresh\"></i> Refresh</button>`;\r\n\t\tbuf += `<br/><br/><h1 style=\"text-align:center;\">${game.title}</h1><h3>Host: ${game.host}</h3>`;\r\n\t\tbuf += `<p style=\"font-weight:bold;\">Players (${game.playerCount}): ${Object.keys(game.playerTable).sort().map(p => game.playerTable[p].safeName).join(', ')}</p>`;\r\n\t\tif (!isHost && game.started && Object.keys(game.dead).length > 0) {\r\n\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">Dead Players</summary>`;\r\n\t\t\tfor (const d in game.dead) {\r\n\t\t\t\tconst dead = game.dead[d];\r\n\t\t\t\tbuf += `<p style=\"font-weight:bold;\">${dead.safeName} ${dead.role && !game.noReveal ? '(' + dead.getRole() + ')' : ''}`;\r\n\t\t\t\tif (dead.treestump) buf += ` (is a Treestump)`;\r\n\t\t\t\tif (dead.restless) buf += ` (is a Restless Spirit)`;\r\n\t\t\t\tbuf += `</p>`;\r\n\t\t\t}\r\n\t\t\tbuf += `</details></p>`;\r\n\t\t}\r\n\t\tbuf += `<hr/>`;\r\n\t\tif (isPlayer && game.phase === 'IDEApicking') {\r\n\t\t\tbuf += `<p><b>IDEA information:</b><br />`;\r\n\t\t\tconst IDEA = game.playerTable[user.id].IDEA;\r\n\t\t\tif (!IDEA) return game.sendRoom(`IDEA picking phase but no IDEA object for user: ${user.id}. Please report this to a mod.`);\r\n\t\t\tfor (const key in IDEA.picks) {\r\n\t\t\t\tconst pick = IDEA.picks[key];\r\n\t\t\t\tbuf += `<b>${key}:</b> `;\r\n\t\t\t\tif (!pick) {\r\n\t\t\t\t\tbuf += `<button class=\"button disabled\" style=\"font-weight:bold; color:#575757; font-weight:bold; background-color:#d3d3d3;\">clear</button>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia ideakey ${roomid}, ${key},\">clear</button>`;\r\n\t\t\t\t}\r\n\t\t\t\tconst selectedIndex = pick ? IDEA.originalChoices.indexOf(pick) : -1;\r\n\t\t\t\tfor (let i = 0; i < IDEA.originalChoices.length; i++) {\r\n\t\t\t\t\tconst choice = IDEA.originalChoices[i];\r\n\t\t\t\t\tif (i === selectedIndex) {\r\n\t\t\t\t\t\tbuf += `<button class=\"button disabled\" style=\"font-weight:bold; color:#575757; font-weight:bold; background-color:#d3d3d3;\">${choice}</button>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia ideapick ${roomid}, ${key}, ${toID(choice)}\">${choice}</button>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbuf += `<br />`;\r\n\t\t\t}\r\n\t\t\tbuf += `</p>`;\r\n\t\t\tbuf += `<p><details><summary class=\"button\" style=\"display:inline-block\"><b>Role details:</b></summary><p>`;\r\n\t\t\tfor (const role of IDEA.originalChoices) {\r\n\t\t\t\tconst roleObject = MafiaTracker.parseRole(role).role;\r\n\t\t\t\tbuf += `<details><summary>${role}</summary>`;\r\n\t\t\t\tbuf += `<table><tr><td style=\"text-align:center;\"><td style=\"text-align:left;width:100%\"><ul>${roleObject.memo.map(m => `<li>${m}</li>`).join('')}</ul></td></tr></table>`;\r\n\t\t\t\tbuf += `</details>`;\r\n\t\t\t}\r\n\t\t\tbuf += `</p></details></p>`;\r\n\t\t}\r\n\t\tif (game.IDEA.data) {\r\n\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">${game.IDEA.data.name} information</summary>`;\r\n\t\t\tif (game.IDEA.discardsHTML && (!game.IDEA.discardsHidden || isHost)) buf += `<details><summary class=\"button\" style=\"text-align:left; display:inline-block\">Discards:</summary><p>${game.IDEA.discardsHTML}</p></details>`;\r\n\t\t\tbuf += `<details><summary class=\"button\" style=\"text-align:left; display:inline-block\">Role list</summary><p>${game.IDEA.data.roles.join('<br />')}</p></details>`;\r\n\t\t\tbuf += `</details></p>`;\r\n\t\t} else {\r\n\t\t\tif (!game.closedSetup) {\r\n\t\t\t\tif (game.theme) {\r\n\t\t\t\t\tbuf += `<p><span style=\"font-weight:bold;\">Theme</span>: ${game.theme.name}</p>`;\r\n\t\t\t\t\tbuf += `<p>${game.theme.desc}</p>`;\r\n\t\t\t\t}\r\n\t\t\t\tif (game.noReveal) {\r\n\t\t\t\t\tbuf += `<p><span style=\"font-weight:bold;\">Original Rolelist</span>: ${game.originalRoleString}</p>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += `<p><span style=\"font-weight:bold;\">Rolelist</span>: ${game.roleString}</p>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isPlayer) {\r\n\t\t\tconst role = game.playerTable[user.id].role;\r\n\t\t\tif (role) {\r\n\t\t\t\tbuf += `<h3>${game.playerTable[user.id].safeName}, you are a ${game.playerTable[user.id].getRole()}</h3>`;\r\n\t\t\t\tif (!['town', 'solo'].includes(role.alignment)) buf += `<p><span style=\"font-weight:bold\">Partners</span>: ${game.getPartners(role.alignment, game.playerTable[user.id])}</p>`;\r\n\t\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">Role Details</summary>`;\r\n\t\t\t\tbuf += `<table><tr><td style=\"text-align:center;\">${role.image || `<img width=\"75\" height=\"75\" src=\"//${Config.routes.client}/fx/mafia-villager.png\"/>`}</td><td style=\"text-align:left;width:100%\"><ul>${role.memo.map(m => `<li>${m}</li>`).join('')}</ul></td></tr></table>`;\r\n\t\t\t\tbuf += `</details></p>`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (game.phase === \"day\") {\r\n\t\t\tbuf += `<span id=\"mafia-lynches\">`;\r\n\t\t\tbuf += game.lynchBoxFor(user.id);\r\n\t\t\tbuf += `</span>`;\r\n\t\t} else if (game.phase === \"night\" && isPlayer) {\r\n\t\t\tbuf += `<p style=\"font-weight:bold;\">PM the host (${game.host}) the action you want to use tonight, and who you want to use it on. Or PM the host \"idle\".</p>`;\r\n\t\t}\r\n\t\tif (isHost) {\r\n\t\t\tbuf += `<h3>Host options</h3>`;\r\n\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">General Options</summary>`;\r\n\t\t\tbuf += `<h3>General Options</h3>`;\r\n\t\t\tif (!game.started) {\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia closedsetup ${room.roomid}, ${game.closedSetup ? 'off' : 'on'}\">${game.closedSetup ? 'Disable' : 'Enable'} Closed Setup</button>`;\r\n\t\t\t\tif (game.phase === 'locked' || game.phase === 'IDEAlocked') {\r\n\t\t\t\t\tbuf += ` <button class=\"button\" name=\"send\" value=\"/mafia start ${room.roomid}\">Start Game</button>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += ` <button class=\"button\" name=\"send\" value=\"/mafia close ${room.roomid}\">Close Signups</button>`;\r\n\t\t\t\t}\r\n\t\t\t} else if (game.phase === 'day') {\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia night ${room.roomid}\">Go to Night ${game.dayNum}</button>`;\r\n\t\t\t} else if (game.phase === 'night') {\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia day ${room.roomid}\">Go to Day ${game.dayNum + 1}</button> <button class=\"button\" name=\"send\" value=\"/mafia extend ${room.roomid}\">Return to Day ${game.dayNum}</button>`;\r\n\t\t\t}\r\n\t\t\tbuf += ` <button class=\"button\" name=\"send\" value=\"/mafia selflynch ${room.roomid}, ${game.selfEnabled === true ? 'off' : 'on'}\">${game.selfEnabled === true ? 'Disable' : 'Enable'} self lynching</button> `;\r\n\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia ${game.enableNL ? 'disable' : 'enable'}nl ${room.roomid}\">${game.enableNL ? 'Disable' : 'Enable'} No Lynch</button> `;\r\n\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia reveal ${room.roomid}, ${game.noReveal ? 'on' : 'off'}\">${game.noReveal ? 'Enable' : 'Disable'} revealing of roles</button> `;\r\n\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia autosub ${room.roomid}, ${game.autoSub ? 'off' : 'on'}\">${game.autoSub ? \"Disable\" : \"Enable\"} automatic subbing of players</button> `;\r\n\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia end ${room.roomid}\">End Game</button>`;\r\n\t\t\tbuf += `<p>To set a deadline, use <strong>/mafia deadline [minutes]</strong>.<br />To clear the deadline use <strong>/mafia deadline off</strong>.</p><hr/></details></p>`;\r\n\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">Player Options</summary>`;\r\n\t\t\tbuf += `<h3>Player Options</h3>`;\r\n\t\t\tfor (const p in game.playerTable) {\r\n\t\t\t\tconst player = game.playerTable[p];\r\n\t\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\"><span style=\"font-weight:bold;\">`;\r\n\t\t\t\tbuf += `${player.safeName} (${player.role ? player.getRole(true) : ''})`;\r\n\t\t\t\tbuf += game.lynchModifiers[p] !== undefined ? `(lynches worth ${game.getLynchValue(p as ID)})` : '';\r\n\t\t\t\tbuf += player.silenced ? '(silenced)' : '';\r\n\t\t\t\tbuf += `</summary>`;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia kill ${room.roomid}, ${player.id}\">Kill</button> `;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia treestump ${room.roomid}, ${player.id}\">Make a Treestump (Kill)</button> `;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia spirit ${room.roomid}, ${player.id}\">Make a Restless Spirit (Kill)</button> `;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia spiritstump ${room.roomid}, ${player.id}\">Make a Restless Treestump (Kill)</button> `;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia sub ${room.roomid}, next, ${player.id}\">Force sub</button></span></details></p>`;\r\n\t\t\t}\r\n\t\t\tfor (const d in game.dead) {\r\n\t\t\t\tconst dead = game.dead[d];\r\n\t\t\t\tbuf += `<p style=\"font-weight:bold;\">${dead.safeName} (${dead.role ? dead.getRole() : ''})`;\r\n\t\t\t\tif (dead.treestump) buf += ` (is a Treestump)`;\r\n\t\t\t\tif (dead.restless) buf += ` (is a Restless Spirit)`;\r\n\t\t\t\tif (game.lynchModifiers[d] !== undefined) buf += ` (lynches worth ${game.getLynchValue(d as ID)})`;\r\n\t\t\t\tbuf += `: <button class=\"button\" name=\"send\" value=\"/mafia revive ${room.roomid}, ${dead.id}\">Revive</button></p>`;\r\n\t\t\t}\r\n\t\t\tbuf += `<hr/></details></p>`;\r\n\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">How to setup roles</summary>`;\r\n\t\t\tbuf += `<h3>Setting the roles</h3>`;\r\n\t\t\tbuf += `<p>To set the roles, use /mafia setroles [comma seperated list of roles] OR /mafia setroles [theme] in ${room.title}.</p>`;\r\n\t\t\tbuf += `<p>If you set the roles from a theme, the role parser will get all the correct roles for you. (Not all themes are supported).</p>`;\r\n\t\t\tbuf += `<p>The following key words determine a role's alignment (If none are found, the default alignment is town):</p>`;\r\n\t\t\tbuf += `<p style=\"font-weight:bold\">${Object.keys(MafiaData.alignments).map(a => `<span style=\"color:${MafiaData.alignments[a].color || '#FFF'}\">${MafiaData.alignments[a].name}</span>`).join(', ')}</p>`;\r\n\t\t\tbuf += `<p>Please note that anything inside (parentheses) is ignored by the role parser.</p>`;\r\n\t\t\tbuf += `<p>If you have roles that have conflicting alignments or base roles, you can use /mafia forcesetroles [comma seperated list of roles] to forcibly set the roles.</p>`;\r\n\t\t\tbuf += `<p>Please note that you will have to PM all the players their alignment, partners (if any), and other information about their role because the server will not provide it.</p>`;\r\n\t\t\tbuf += `<hr/></details></p>`;\r\n\t\t\tbuf += `<p style=\"font-weight:bold;\">Players who will be subbed unless they talk: ${game.hostRequestedSub.join(', ')}</p>`;\r\n\t\t\tbuf += `<p style=\"font-weight:bold;\">Players who are requesting a sub: ${game.requestedSub.join(', ')}</p>`;\r\n\t\t}\r\n\t\tbuf += `<p style=\"font-weight:bold;\">Sub List: ${game.subs.join(', ')}</p>`;\r\n\t\tif (!isHost) {\r\n\t\t\tif (game.phase === 'signups') {\r\n\t\t\t\tif (isPlayer) {\r\n\t\t\t\t\tbuf += `<p><button class=\"button\" name=\"send\" value=\"/mafia leave ${room.roomid}\">Leave game</button></p>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += `<p><button class=\"button\" name=\"send\" value=\"/mafia join ${room.roomid}\">Join game</button></p>`;\r\n\t\t\t\t}\r\n\t\t\t} else if ((!isPlayer && game.subs.includes(user.id)) || (isPlayer && !game.requestedSub.includes(user.id))) {\r\n\t\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">${isPlayer ? 'Request to be subbed out' : 'Cancel sub request'}</summary>`;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia sub ${room.roomid}, out\">${isPlayer ? 'Confirm request to be subbed out' : 'Confirm cancelation of sub request'}</button></details></p>`;\r\n\t\t\t} else {\r\n\t\t\t\tbuf += `<p><details><summary class=\"button\" style=\"text-align:left; display:inline-block\">${isPlayer ? 'Cancel sub request' : 'Join the game as a sub'}</summary>`;\r\n\t\t\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/mafia sub ${room.roomid}, in\">${isPlayer ? 'Confirm cancelation of sub request' : 'Confirm that you want to join the game'}</button></details></p>`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuf += `</div>`;\r\n\t\treturn buf;\r\n\t},\r\n\tmafialadder(query, user) {\r\n\t\tif (!user.named) return Rooms.RETRY_AFTER_LOGIN;\r\n\t\tif (!query.length || !Rooms.get('mafia')) return this.close();\r\n\t\tconst headers: {[k: string]: {title: string, type: string, section: MafiaLogSection}} = {\r\n\t\t\tleaderboard: {title: 'Leaderboard', type: 'Points', section: 'leaderboard'},\r\n\t\t\tmvpladder: {title: 'MVP Ladder', type: 'MVPs', section: 'mvps'},\r\n\t\t\thostlogs: {title: 'Host Logs', type: 'Hosts', section: 'hosts'},\r\n\t\t\tplaylogs: {title: 'Play Logs', type: 'Plays', section: 'plays'},\r\n\t\t\tleaverlogs: {title: 'Leaver Logs', type: 'Leavers', section: 'leavers'},\r\n\t\t};\r\n\t\tconst date = new Date();\r\n\t\tif (query[1] === 'prev') date.setMonth(date.getMonth() - 1);\r\n\t\tconst month = date.toLocaleString(\"en-us\", {month: \"numeric\", year: \"numeric\"});\r\n\t\tconst ladder = headers[query[0]];\r\n\t\tif (!ladder) return this.close();\r\n\t\tconst mafiaRoom = Rooms.get('mafia') as ChatRoom | undefined;\r\n\t\tif (['hosts', 'plays', 'leavers'].includes(ladder.section) && !this.can('mute', null, mafiaRoom)) return;\r\n\t\tthis.title = `Mafia ${ladder.title} (${date.toLocaleString(\"en-us\", {month: 'long'})} ${date.getFullYear()})`;\r\n\t\tlet buf = `<div class=\"pad ladder\">`;\r\n\t\tbuf += `${query[1] === 'prev' ? '' : `<button class=\"button\" name=\"send\" value=\"/join view-mafialadder-${query[0]}\" style=\"float:left\"><i class=\"fa fa-refresh\"></i> Refresh</button> <button class=\"button\" name=\"send\" value=\"/join view-mafialadder-${query[0]}-prev\" style=\"float:left\">View last month's ${ladder.title}</button>`}`;\r\n\t\tbuf += `<br /><br />`;\r\n\t\tconst section = ladder.section;\r\n\t\tif (!logs[section][month] || !Object.keys(logs[section][month]).length) {\r\n\t\t\tbuf += `${ladder.title} for ${date.toLocaleString(\"en-us\", {month: 'long'})} ${date.getFullYear()} not found.</div>`;\r\n\t\t\treturn buf;\r\n\t\t}\r\n\t\tconst keys = Object.keys(logs[section][month]).sort((keyA, keyB) => {\r\n\t\t\tconst a = logs[section][month][keyA];\r\n\t\t\tconst b = logs[section][month][keyB];\r\n\t\t\treturn b - a;\r\n\t\t});\r\n\t\tbuf += `<table style=\"margin-left: auto; margin-right: auto\"><tbody><tr><th colspan=\"2\"><h2 style=\"margin: 5px auto\">Mafia ${ladder.title} for ${date.toLocaleString(\"en-us\", {month: 'long'})} ${date.getFullYear()}</h1></th></tr>`;\r\n\t\tbuf += `<tr><th>User</th><th>${ladder.type}</th></tr>`;\r\n\t\tfor (const key of keys) {\r\n\t\t\tbuf += `<tr><td>${key}</td><td>${logs[section][month][key]}</td></tr>`;\r\n\t\t}\r\n\t\treturn buf + `</table></div>`;\r\n\t},\r\n};\r\n\r\nexport const commands: ChatCommands = {\r\n\tmafia: {\r\n\t\t''(target, room, user) {\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game && game.gameid === 'mafia') {\r\n\t\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\t\treturn this.sendReply(`|html|${game.roomWindow()}`);\r\n\t\t\t}\r\n\t\t\treturn this.parse('/help mafia');\r\n\t\t},\r\n\r\n\t\tforcehost: 'host',\r\n\t\tnexthost: 'host',\r\n\t\thost(target, room, user, connection, cmd) {\r\n\t\t\tif (room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (!this.canTalk()) return;\r\n\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\tif (room.game) return this.errorReply(`There is already a game of ${room.game.title} in progress in this room.`);\r\n\t\t\tif (!user.can('broadcast', null, room)) return this.errorReply(`/mafia ${cmd} - Access denied.`);\r\n\r\n\t\t\tlet nextHost = false;\r\n\t\t\tif (room.roomid === 'mafia') {\r\n\t\t\t\tif (cmd === 'nexthost') {\r\n\t\t\t\t\tnextHost = true;\r\n\t\t\t\t\tif (!hostQueue.length) return this.errorReply(`Nobody is on the host queue.`);\r\n\t\t\t\t\tconst skipped = [];\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\t// @ts-ignore guaranteed\r\n\t\t\t\t\t\tthis.splitTarget(hostQueue.shift(), true);\r\n\t\t\t\t\t\tif (!this.targetUser || !this.targetUser.connected ||\r\n\t\t\t\t\t\t\t!room.users[this.targetUser.id] || isHostBanned(this.targetUser.id)) {\r\n\t\t\t\t\t\t\tskipped.push(this.targetUsername);\r\n\t\t\t\t\t\t\tthis.targetUser = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while (!this.targetUser && hostQueue.length);\r\n\t\t\t\t\tif (skipped.length) this.sendReply(`${skipped.join(', ')} ${Chat.plural(skipped.length, 'were', 'was')} not online, not in the room, or are host banned and were removed from the host queue.`);\r\n\t\t\t\t\tif (!this.targetUser) return this.errorReply(`Nobody on the host queue could be hosted.`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (cmd !== 'forcehost' && hostQueue.length && toID(target) !== hostQueue[0]) return this.errorReply(`${target} is not next on the host queue. To host them now anyways, use /mafia forcehost ${target}`);\r\n\t\t\t\t\tthis.splitTarget(target, true);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.splitTarget(target, true);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.targetUser || !this.targetUser.connected) return this.errorReply(`The user \"${this.targetUsername}\" was not found.`);\r\n\t\t\tif (!nextHost && this.targetUser.id !== user.id && !this.can('mute', null, room)) return false;\r\n\t\t\tif (!room.users[this.targetUser.id]) return this.errorReply(`${this.targetUser.name} is not in this room, and cannot be hosted.`);\r\n\t\t\tif (room.roomid === 'mafia' && isHostBanned(this.targetUser.id)) return this.errorReply(`${this.targetUser.name} is banned from hosting games.`);\r\n\r\n\t\t\tconst targetUser = this.targetUser;\r\n\r\n\t\t\troom.game = new MafiaTracker(room, targetUser);\r\n\r\n\t\t\tfor (const conn of targetUser.connections) {\r\n\t\t\t\tvoid Chat.resolvePage(`view-mafia-${room.roomid}`, targetUser, conn);\r\n\t\t\t}\r\n\t\t\troom.addByUser(user, `${targetUser.name} was appointed the mafia host by ${user.name}.`);\r\n\t\t\tif (room.roomid === 'mafia') {\r\n\t\t\t\tconst queueIndex = hostQueue.indexOf(targetUser.id);\r\n\t\t\t\tif (queueIndex > -1) hostQueue.splice(queueIndex, 1);\r\n\t\t\t\troom.add(`|c:|${(Math.floor(Date.now() / 1000))}|~|**Mafiasignup!**`).update();\r\n\t\t\t}\r\n\t\t\tthis.modlog('MAFIAHOST', targetUser, null, {noalts: true, noip: true});\r\n\t\t},\r\n\t\thosthelp: [\r\n\t\t\t`/mafia host [user] - Create a game of Mafia with [user] as the host. Requires + % @ # & ~, voices can only host themselves`,\r\n\t\t],\r\n\r\n\t\tq: 'queue',\r\n\t\tqueue(target, room, user) {\r\n\t\t\tif (room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (room.roomid !== 'mafia') return this.errorReply(`This command can only be used in the Mafia room.`);\r\n\t\t\tconst args = target.split(',').map(toID);\r\n\t\t\tif (['forceadd', 'add', 'remove', 'del', 'delete'].includes(args[0])) {\r\n\t\t\t\tconst permission = (user.id === args[1]) ? 'broadcast' : 'mute';\r\n\t\t\t\tif (['forceadd', 'add'].includes(args[0]) && !this.can(permission, null, room)) return;\r\n\t\t\t\tif (['remove', 'del', 'delete'].includes(args[0]) && user.id !== args[1] && !this.can('mute', null, room)) return;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this.runBroadcast()) return false;\r\n\t\t\t}\r\n\t\t\tswitch (args[0]) {\r\n\t\t\tcase 'forceadd':\r\n\t\t\tcase 'add':\r\n\t\t\t\tif (!this.canTalk()) return;\r\n\t\t\t\tconst targetUser = Users.get(args[1]);\r\n\t\t\t\tif ((!targetUser || !targetUser.connected) && args[0] !== 'forceadd') return this.errorReply(`User ${args[1]} not found. To forcefully add the user to the queue, use /mafia queue forceadd, ${args[1]}`);\r\n\t\t\t\tif (hostQueue.includes(args[1])) return this.errorReply(`User ${args[1]} is already on the host queue.`);\r\n\t\t\t\tif (isHostBanned(args[1])) return this.errorReply(`User ${args[1]} is banned from hosting games.`);\r\n\t\t\t\thostQueue.push(args[1]);\r\n\t\t\t\troom.add(`User ${args[1]} has been added to the host queue by ${user.name}.`).update();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'del':\r\n\t\t\tcase 'delete':\r\n\t\t\tcase 'remove':\r\n\t\t\t\tconst index = hostQueue.indexOf(args[1]);\r\n\t\t\t\tif (index === -1) return this.errorReply(`User ${args[1]} is not on the host queue.`);\r\n\t\t\t\thostQueue.splice(index, 1);\r\n\t\t\t\troom.add(`User ${args[1]} has been removed from the host queue by ${user.name}.`).update();\r\n\t\t\t\tbreak;\r\n\t\t\tcase '':\r\n\t\t\tcase 'show':\r\n\t\t\tcase 'view':\r\n\t\t\t\tthis.sendReplyBox(`<strong>Host Queue:</strong> ${hostQueue.join(', ')}`);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.parse('/help mafia queue');\r\n\t\t\t}\r\n\t\t},\r\n\t\tqueuehelp: [\r\n\t\t\t`/mafia queue - Shows the upcoming users who are going to host.`,\r\n\t\t\t`/mafia queue add, (user) - Adds the user to the hosting queue. Requires: + % @ # & ~`,\r\n\t\t\t`/mafia queue remove, (user) - Removes the user from the hosting queue. Requires: + % @ # & ~`,\r\n\t\t],\r\n\r\n\t\tqadd: 'queueadd',\r\n\t\tqforceadd: 'queueadd',\r\n\t\tqueueforceadd: 'queueadd',\r\n\t\tqueueadd(target, room, user, connection, cmd) {\r\n\t\t\tthis.parse(`/mafia queue ${cmd.includes('force') ? `forceadd` : `add`}, ${target}`);\r\n\t\t},\r\n\r\n\t\tqdel: 'queueremove',\r\n\t\tqdelete: 'queueremove',\r\n\t\tqremove: 'queueremove',\r\n\t\tqueueremove(target, room, user) {\r\n\t\t\tthis.parse(`/mafia queue remove, ${target}`);\r\n\t\t},\r\n\r\n\t\t'!join': true,\r\n\t\tjoin(target, room, user) {\r\n\t\t\tlet targetRoom = Rooms.get(target);\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\r\n\t\t\tif (!this.canTalk(null, targetRoom)) return;\r\n\t\t\tgame.join(user);\r\n\t\t},\r\n\t\tjoinhelp: [`/mafia join - Join the game.`],\r\n\r\n\t\t'!leave': true,\r\n\t\tleave(target, room, user) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tgame.leave(user);\r\n\t\t},\r\n\t\tleavehelp: [`/mafia leave - Leave the game. Can only be done while signups are open.`],\r\n\r\n\t\tplayercap(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (game.phase !== 'signups') return this.errorReply(`Signups are already closed.`);\r\n\t\t\tif (toID(target) === 'none') target = '20';\r\n\t\t\tconst num = parseInt(target);\r\n\t\t\tif (isNaN(num) || num > 20 || num < 2) return this.parse('/help mafia playercap');\r\n\t\t\tif (num < game.playerCount) return this.errorReply(`Player cap has to be equal or more than the amount of players in game.`);\r\n\t\t\tif (num === game.playerCap) return this.errorReply(`Player cap is already set at ${game.playerCap}.`);\r\n\t\t\tgame.playerCap = num;\r\n\t\t\tgame.sendDeclare(`Player cap has been set to ${game.playerCap}`);\r\n\t\t},\r\n\t\tplayercaphelp: [`/mafia playercap [cap|none]- Limit the number of players being able to join the game. Player cap cannot be more than 20 or less than 2. Requires: host % @ # & ~`],\r\n\r\n\t\t'!close': true,\r\n\t\tclose(target, room, user) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (game.phase !== 'signups') return user.sendTo(targetRoom, `|error|Signups are already closed.`);\r\n\t\t\tif (game.playerCount < 2) return user.sendTo(targetRoom, `|error|You need at least 2 players to start.`);\r\n\t\t\tgame.phase = 'locked';\r\n\t\t\tgame.sendDeclare(game.roomWindow());\r\n\t\t\tgame.updatePlayers();\r\n\t\t},\r\n\t\tclosehelp: [`/mafia close - Closes signups for the current game. Requires: host % @ # & ~`],\r\n\r\n\t\t'!closedsetup': true,\r\n\t\tcs: 'closedsetup',\r\n\t\tclosedsetup(target, room, user) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tconst action = toID(args.join(''));\r\n\t\t\tif (!['on', 'off'].includes(action)) return this.parse('/help mafia closedsetup');\r\n\t\t\tif (game.started) return user.sendTo(targetRoom, `|error|You can't ${action === 'on' ? 'enable' : 'disable'} closed setup because the game has already started.`);\r\n\t\t\tif ((action === 'on' && game.closedSetup) || (action === 'off' && !game.closedSetup)) return user.sendTo(targetRoom, `|error|Closed setup is already ${game.closedSetup ? 'enabled' : 'disabled'}.`);\r\n\t\t\tgame.closedSetup = action === 'on';\r\n\t\t\tgame.updateHost();\r\n\t\t},\r\n\t\tclosedsetuphelp: [`/mafia closedsetup [on|off] - Sets if the game is a closed setup. Closed setups don't show the role list to players. Requires host % @ # & ~`],\r\n\r\n\t\t'!reveal': true,\r\n\t\treveal(target, room, user) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tconst action = toID(args.join(''));\r\n\t\t\tif (!['on', 'off'].includes(action)) return this.parse('/help mafia reveal');\r\n\t\t\tif ((action === 'off' && game.noReveal) || (action === 'on' && !game.noReveal)) return user.sendTo(targetRoom, `|error|Revealing of roles is already ${game.noReveal ? 'disabled' : 'enabled'}.`);\r\n\t\t\tgame.noReveal = action === 'off';\r\n\t\t\tgame.sendDeclare(`Revealing of roles has been ${action === 'off' ? 'disabled' : 'enabled'}.`);\r\n\t\t\tgame.updatePlayers();\r\n\t\t},\r\n\t\trevealhelp: [`/mafia reveal [on|off] - Sets if roles reveal on death or not. Requires host % @ # & ~`],\r\n\r\n\t\tresetroles: 'setroles',\r\n\t\tforceresetroles: 'setroles',\r\n\t\tforcesetroles: 'setroles',\r\n\t\tsetroles(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tconst reset = cmd.includes('reset');\r\n\t\t\tif (reset) {\r\n\t\t\t\tif (game.phase !== 'day' && game.phase !== 'night') return this.errorReply(`The game has not started yet.`);\r\n\t\t\t} else {\r\n\t\t\t\tif (game.phase !== 'locked' && game.phase !== 'IDEAlocked') return this.errorReply(game.phase === 'signups' ? `You need to close signups first.` : `The game has already started.`);\r\n\t\t\t}\r\n\t\t\tif (!target) return this.parse('/help mafia setroles');\r\n\r\n\t\t\tgame.setRoles(user, target, cmd.includes('force'), reset);\r\n\t\t},\r\n\t\tsetroleshelp: [\r\n\t\t\t`/mafia setroles [comma separated roles] - Set the roles for a game of mafia. You need to provide one role per player.`,\r\n\t\t\t`/mafia forcesetroles [comma separated roles] - Forcibly set the roles for a game of mafia. No role PM information or alignment will be set.`,\r\n\t\t\t`/mafia resetroles [comma separated roles] - Reset the roles in an ongoing game.`,\r\n\t\t],\r\n\r\n\t\tidea(target, room, user) {\r\n\t\t\tif (!room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (!this.can('broadcast', null, room)) return;\r\n\t\t\tif (!user.can('mute', null, room) && game.hostid !== user.id && !game.cohosts.includes(user.id)) {\r\n\t\t\t\treturn this.errorReply(`/mafia idea - Access denied.`);\r\n\t\t\t}\r\n\t\t\tif (game.started) return this.errorReply(`You cannot start an IDEA after the game has started.`);\r\n\t\t\tif (game.phase !== 'locked' && game.phase !== 'IDEAlocked') return this.errorReply(`You need to close the signups first.`);\r\n\t\t\tgame.ideaInit(user, toID(target));\r\n\t\t},\r\n\t\tideahelp: [\r\n\t\t\t`/mafia idea [idea] - starts the IDEA module [idea]. Requires + % @ # & ~, voices can only start for themselves`,\r\n\t\t\t`/mafia ideareroll - rerolls the IDEA module. Requires host % @ # & ~`,\r\n\t\t\t`/mafia ideapick [selection], [role] - selects a role`,\r\n\t\t\t`/mafia ideadiscards - shows the discarded roles`,\r\n\t\t],\r\n\r\n\t\tcustomidea(target, room, user) {\r\n\t\t\tif (!this.can('mute', null, room)) return;\r\n\t\t\tif (!room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.started) return this.errorReply(`You cannot start an IDEA after the game has started.`);\r\n\t\t\tif (game.phase !== 'locked' && game.phase !== 'IDEAlocked') return this.errorReply(`You need to close the signups first.`);\r\n\t\t\tconst [options, roles] = Chat.splitFirst(target, '\\n');\r\n\t\t\tif (!options || !roles) return this.parse('/help mafia idea');\r\n\t\t\tconst [choicesStr, ...picks] = options.split(',').map(x => x.trim());\r\n\t\t\tconst choices = parseInt(choicesStr);\r\n\t\t\tif (!choices || choices <= picks.length) return this.errorReply(`You need to have more choices than picks.`);\r\n\t\t\tif (picks.some((value, index, arr) => arr.indexOf(value, index + 1) > 0)) return this.errorReply(`Your picks must be unique.`);\r\n\t\t\tgame.customIdeaInit(user, choices, picks, roles);\r\n\t\t},\r\n\t\tcustomideahelp: [\r\n\t\t\t`/mafia customidea choices, picks (new line here, shift+enter)`,\r\n\t\t\t`(comma or newline separated rolelist) - Starts an IDEA module with custom roles. Requires % @ # & ~`,\r\n\t\t],\r\n\t\t'!ideapick': true,\r\n\t\tideapick(target, room, user) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') {\r\n\t\t\t\treturn user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\t}\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (!(user.id in game.playerTable)) {\r\n\t\t\t\treturn user.sendTo(targetRoom, '|error|You are not a player in the game.');\r\n\t\t\t}\r\n\t\t\tif (game.phase !== 'IDEApicking') {\r\n\t\t\t\treturn user.sendTo(targetRoom, `|error|The game is not in the IDEA picking phase.`);\r\n\t\t\t}\r\n\t\t\tgame.ideaPick(user, args);\r\n\t\t},\r\n\r\n\t\t'!ideareroll': true,\r\n\t\tideareroll(target, room, user) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tgame.ideaDistributeRoles(user);\r\n\t\t},\r\n\t\tidearerollhelp: [`/mafia ideareroll - rerolls the roles for the current IDEA module. Requires host % @ # & ~`],\r\n\r\n\t\tdiscards: 'ideadiscards',\r\n\t\tideadiscards(target, room, user) {\r\n\t\t\tif (!room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (!game.IDEA.data) return this.errorReply(`There is no IDEA module in the mafia game.`);\r\n\t\t\tif (target) {\r\n\t\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\t\tif (this.meansNo(target)) {\r\n\t\t\t\t\tif (game.IDEA.discardsHidden) return this.errorReply(`IDEA discards are already hidden.`);\r\n\t\t\t\t\tgame.IDEA.discardsHidden = true;\r\n\t\t\t\t} else if (this.meansYes(target)) {\r\n\t\t\t\t\tif (!game.IDEA.discardsHidden) return this.errorReply(`IDEA discards are already visible.`);\r\n\t\t\t\t\tgame.IDEA.discardsHidden = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.parse('/help mafia ideadiscards');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.sendReply(`IDEA discards are now ${game.IDEA.discardsHidden ? 'hidden' : 'visible'}.`);\r\n\t\t\t}\r\n\t\t\tif (game.IDEA.discardsHidden) return this.errorReply(`Discards are not visible.`);\r\n\t\t\tif (!game.IDEA.discardsHTML) return this.errorReply(`The IDEA module does not have finalised discards yet.`);\r\n\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\tthis.sendReplyBox(`<details><summary>IDEA discards:</summary>${game.IDEA.discardsHTML}</details>`);\r\n\t\t},\r\n\t\tideadiscardshelp: [\r\n\t\t\t`/mafia ideadiscards - shows the discarded roles`,\r\n\t\t\t`/mafia ideadiscards off - hides discards from the players. Requires host % @ # & ~`,\r\n\t\t\t`/mafia ideadiscards on - shows discards to the players. Requires host % @ # & ~`,\r\n\t\t],\r\n\r\n\t\t'!start': true,\r\n\t\tnightstart: 'start',\r\n\t\tstart(target, room, user, connection, cmd) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\ttarget = '';\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.parse(`/mafia close`);\r\n\t\t\t\tthis.parse(`/mafia setroles ${target}`);\r\n\t\t\t\tthis.parse(`/mafia ${cmd}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tgame.start(user, cmd === 'nightstart');\r\n\t\t},\r\n\t\tstarthelp: [`/mafia start - Start the game of mafia. Signups must be closed. Requires host % @ # & ~`],\r\n\r\n\t\t'!day': true,\r\n\t\textend: 'day',\r\n\t\tnight: 'day',\r\n\t\tday(target, room, user, connection, cmd) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (cmd === 'night') {\r\n\t\t\t\tgame.night();\r\n\t\t\t} else {\r\n\t\t\t\tlet extension = parseInt(toID(args.join('')));\r\n\t\t\t\tif (isNaN(extension)) {\r\n\t\t\t\t\textension = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (extension < 1) extension = 1;\r\n\t\t\t\t\tif (extension > 10) extension = 10;\r\n\t\t\t\t}\r\n\t\t\t\tgame.day((cmd === 'extend' ? extension : null));\r\n\t\t\t}\r\n\t\t},\r\n\t\tdayhelp: [\r\n\t\t\t`/mafia day - Move to the next game day. Requires host % @ # & ~`,\r\n\t\t\t`/mafia night - Move to the next game night. Requires host % @ # & ~`,\r\n\t\t\t`/mafia extend (minutes) - Return to the previous game day. If (minutes) is provided, set the deadline for (minutes) minutes. Requires host % @ # & ~`,\r\n\t\t],\r\n\r\n\t\t'!lynch': true,\r\n\t\tl: 'lynch',\r\n\t\tlynch(target, room, user) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (!this.canTalk(null, targetRoom)) return;\r\n\t\t\tif (!(user.id in game.playerTable) &&\r\n\t\t\t\t(!(user.id in game.dead) || !game.dead[user.id].restless)) {\r\n\t\t\t\treturn user.sendTo(targetRoom, `|error|You are not in the game of ${game.title}.`);\r\n\t\t\t}\r\n\t\t\tgame.lynch(user.id, toID(args.join('')));\r\n\t\t},\r\n\t\tlynchhelp: [`/mafia lynch [player|nolynch] - Vote to lynch the specified player or to not lynch anyone.`],\r\n\r\n\t\t'!unlynch': true,\r\n\t\tul: 'unlynch',\r\n\t\tunl: 'unlynch',\r\n\t\tunnolynch: 'unlynch',\r\n\t\tunlynch(target, room, user) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (!this.canTalk(null, targetRoom)) return;\r\n\t\t\tif (!(user.id in game.playerTable) &&\r\n\t\t\t\t(!(user.id in game.dead) || !game.dead[user.id].restless)) {\r\n\t\t\t\treturn user.sendTo(targetRoom, `|error|You are not in the game of ${targetRoom.game.title}.`);\r\n\t\t\t}\r\n\t\t\tgame.unlynch(user.id);\r\n\t\t},\r\n\t\tunlynchhelp: [`/mafia unlynch - Withdraw your lynch vote. Fails if you're not voting to lynch anyone`],\r\n\r\n\t\tnl: 'nolynch',\r\n\t\tnolynch() {\r\n\t\t\tthis.parse('/mafia lynch nolynch');\r\n\t\t},\r\n\r\n\t\t'!selflynch': true,\r\n\t\tenableself: 'selflynch',\r\n\t\tselflynch(target, room, user, connection, cmd) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tconst action = toID(args.shift());\r\n\t\t\tif (!action) return this.parse(`/help mafia selflynch`);\r\n\t\t\tif (this.meansYes(action)) {\r\n\t\t\t\tgame.setSelfLynch(user, true);\r\n\t\t\t} else if (this.meansNo(action)) {\r\n\t\t\t\tgame.setSelfLynch(user, false);\r\n\t\t\t} else if (action === 'hammer') {\r\n\t\t\t\tgame.setSelfLynch(user, 'hammer');\r\n\t\t\t} else {\r\n\t\t\t\treturn this.parse(`/help mafia selflynch`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselflynchhelp: [`/mafia selflynch [on|hammer|off] - Allows players to self lynch themselves either at hammer or anytime. Requires host % @ # & ~`],\r\n\r\n\t\t'!kill': true,\r\n\t\ttreestump: 'kill',\r\n\t\tspirit: 'kill',\r\n\t\tspiritstump: 'kill',\r\n\t\tkick: 'kill',\r\n\t\tkill(target, room, user, connection, cmd) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tconst player = game.playerTable[toID(args.join(''))];\r\n\t\t\tif (!player) return user.sendTo(targetRoom, `|error|\"${args.join(',')}\" is not a living player.`);\r\n\t\t\tif (game.phase === 'IDEApicking') return this.errorReply(`You cannot add or remove players while IDEA roles are being picked.`); // needs to be here since eliminate doesn't pass the user\r\n\t\t\tgame.eliminate(player, cmd);\r\n\t\t},\r\n\t\tkillhelp: [\r\n\t\t\t`/mafia kill [player] - Kill a player, eliminating them from the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia treestump [player] - Kills a player, but allows them to talk during the day still.`,\r\n\t\t\t`/mafia spirit [player] - Kills a player, but allows them to vote on the lynch still.`,\r\n\t\t\t`/mafia spiritstump [player] Kills a player, but allows them to talk during the day, and vote on the lynch.`,\r\n\t\t],\r\n\r\n\t\t'!revive': true,\r\n\t\tforceadd: 'revive',\r\n\t\tadd: 'revive',\r\n\t\trevive(target, room, user, connection, cmd) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (!toID(args.join(''))) return this.parse('/help mafia revive');\r\n\t\t\tfor (const targetUser of args) {\r\n\t\t\t\tgame.revive(user, toID(targetUser), cmd === 'forceadd');\r\n\t\t\t}\r\n\t\t},\r\n\t\trevivehelp: [`/mafia revive [player] - Revive a player who died or add a new player to the game. Requires host % @ # & ~`],\r\n\r\n\t\tdl: 'deadline',\r\n\t\tdeadline(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\ttarget = toID(target);\r\n\t\t\tif (target && game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (target === 'off') {\r\n\t\t\t\treturn game.setDeadline(0);\r\n\t\t\t} else {\r\n\t\t\t\tconst num = parseInt(target);\r\n\t\t\t\tif (isNaN(num)) {\r\n\t\t\t\t\t// hack to let hosts broadcast\r\n\t\t\t\t\tif (game.hostid === user.id || game.cohosts.includes(user.id)) {\r\n\t\t\t\t\t\tthis.broadcastMessage = this.message.toLowerCase().replace(/[^a-z0-9\\s!,]/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.runBroadcast()) return false;\r\n\r\n\t\t\t\t\tif ((game.dlAt - Date.now()) > 0) {\r\n\t\t\t\t\t\treturn this.sendReply(`|raw|<strong>The deadline is in ${Chat.toDurationString(game.dlAt - Date.now()) || '0 seconds'}.</strong>`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.parse(`/help mafia deadline`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (num < 1 || num > 20) return this.errorReply(`The deadline must be between 1 and 20 minutes.`);\r\n\t\t\t\treturn game.setDeadline(num);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeadlinehelp: [`/mafia deadline [minutes|off] - Sets or removes the deadline for the game. Cannot be more than 20 minutes.`],\r\n\r\n\t\tapplylynchmodifier: 'applyhammermodifier',\r\n\t\tapplyhammermodifier(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (!game.started) return this.errorReply(`The game has not started yet.`);\r\n\t\t\tconst [player, mod] = target.split(',');\r\n\t\t\tif (cmd === 'applyhammermodifier') {\r\n\t\t\t\tgame.applyHammerModifier(user, toID(player), parseInt(mod));\r\n\t\t\t} else {\r\n\t\t\t\tgame.applyLynchModifier(user, toID(player), parseInt(mod));\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearlynchmodifiers: 'clearhammermodifiers',\r\n\t\tclearhammermodifiers(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (!game.started) return this.errorReply(`The game has not started yet.`);\r\n\t\t\tif (cmd === 'clearhammermodifiers') {\r\n\t\t\t\tgame.clearHammerModifiers(user);\r\n\t\t\t} else {\r\n\t\t\t\tgame.clearLynchModifiers(user);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thate: 'love',\r\n\t\tunhate: 'love',\r\n\t\tunlove: 'love',\r\n\t\tremovehammermodifier: 'love',\r\n\t\tlove(target, room, user, connection, cmd) {\r\n\t\t\tlet mod;\r\n\t\t\tswitch (cmd) {\r\n\t\t\tcase 'hate':\r\n\t\t\t\tmod = -1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'love':\r\n\t\t\t\tmod = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unhate': case 'unlove': case 'removehammermodifier':\r\n\t\t\t\tmod = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.parse(`/mafia applyhammermodifier ${target}, ${mod}`);\r\n\t\t},\r\n\t\tdoublevoter: 'mayor',\r\n\t\tvoteless: 'mayor',\r\n\t\tunvoteless: 'mayor',\r\n\t\tunmayor: 'mayor',\r\n\t\tremovelynchmodifier: 'mayor',\r\n\t\tmayor(target, room, user, connection, cmd) {\r\n\t\t\tlet mod;\r\n\t\t\tswitch (cmd) {\r\n\t\t\tcase 'doublevoter': case 'mayor':\r\n\t\t\t\tmod = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'voteless':\r\n\t\t\t\tmod = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unvoteless': case 'unmayor': case 'removelynchmodifier':\r\n\t\t\t\tmod = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.parse(`/mafia applylynchmodifier ${target}, ${mod}`);\r\n\t\t},\r\n\r\n\t\tunsilence: 'silence',\r\n\t\tsilence(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (!game.started) return this.errorReply(`The game has not started yet.`);\r\n\r\n\t\t\ttarget = toID(target);\r\n\t\t\tconst targetPlayer = game.playerTable[target] || game.dead[target];\r\n\t\t\tconst silence = cmd === 'silence';\r\n\t\t\tif (!targetPlayer) return this.errorReply(`${target} is not in the game of mafia.`);\r\n\t\t\tif (silence === targetPlayer.silenced) return this.errorReply(`${targetPlayer.name} is already ${!silence ? 'not' : ''} silenced`);\r\n\t\t\ttargetPlayer.silenced = silence;\r\n\t\t\tthis.sendReply(`${targetPlayer.name} has been ${!silence ? 'un' : ''}silenced.`);\r\n\t\t},\r\n\t\tsilencehelp: [\r\n\t\t\t`/mafia silence [player] - Silences [player], preventing them from talking at all. Requires host % @ # & ~`,\r\n\t\t\t`/mafia unsilence [player] - Removes a silence on [player], allowing them to talk again. Requires host % @ # & ~`,\r\n\t\t],\r\n\r\n\t\tshifthammer: 'hammer',\r\n\t\tresethammer: 'hammer',\r\n\t\thammer(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (!game.started) return this.errorReply(`The game has not started yet.`);\r\n\t\t\tconst hammer = parseInt(target);\r\n\t\t\tif (toID(cmd) !== `resethammer` && ((isNaN(hammer) && !this.meansNo(target)) || hammer < 1)) return this.errorReply(`${target} is not a valid hammer count.`);\r\n\t\t\tswitch (cmd.toLowerCase()) {\r\n\t\t\tcase 'shifthammer':\r\n\t\t\t\tgame.shiftHammer(hammer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hammer':\r\n\t\t\t\tgame.setHammer(hammer);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tgame.resetHammer();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\thammerhelp: [\r\n\t\t\t`/mafia hammer [hammer] - sets the hammer count to [hammer] and resets lynches`,\r\n\t\t\t`/mafia hammer off - disables hammering`,\r\n\t\t\t`/mafia shifthammer [hammer] - sets the hammer count to [hammer] without resetting lynches`,\r\n\t\t\t`/mafia resethammer - sets the hammer to the default, resetting lynches`,\r\n\t\t],\r\n\r\n\t\t'!enablenl': true,\r\n\t\tdisablenl: 'enablenl',\r\n\t\tenablenl(target, room, user, connection, cmd) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (cmd === 'enablenl') {\r\n\t\t\t\tgame.setNoLynch(user, true);\r\n\t\t\t} else {\r\n\t\t\t\tgame.setNoLynch(user, false);\r\n\t\t\t}\r\n\t\t},\r\n\t\tenablenlhelp: [`/mafia [enablenl|disablenl] - Allows or disallows players abstain from lynching. Requires host % @ # & ~`],\r\n\r\n\t\tforcelynch(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\ttarget = toID(target);\r\n\t\t\tif (this.meansYes(target)) {\r\n\t\t\t\tif (game.forceLynch) return this.errorReply(`Forcelynching is already enabled.`);\r\n\t\t\t\tgame.forceLynch = true;\r\n\t\t\t\tif (game.started) game.resetHammer();\r\n\t\t\t\tgame.sendDeclare(`Forcelynching has been enabled. Your lynch will start on yourself, and you cannot unlynch!`);\r\n\t\t\t} else if (this.meansNo(target)) {\r\n\t\t\t\tif (!game.forceLynch) return this.errorReply(`Forcelynching is already disabled.`);\r\n\t\t\t\tgame.forceLynch = false;\r\n\t\t\t\tgame.sendDeclare(`Forcelynching has been disabled. You can lynch normally now!`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.parse('/help mafia forcelynch');\r\n\t\t\t}\r\n\t\t},\r\n\t\tforcelynchhelp: [`/mafia forcelynch [yes/no] - Forces player's lynches onto themselves, and prevents unlynching. Requires host % @ # & ~`],\r\n\r\n\t\tlynches(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (!game.started) return this.errorReply(`The game of mafia has not started yet.`);\r\n\r\n\t\t\t// hack to let hosts broadcast\r\n\t\t\tif (game.hostid === user.id || game.cohosts.includes(user.id)) {\r\n\t\t\t\tthis.broadcastMessage = this.message.toLowerCase().replace(/[^a-z0-9\\s!,]/g, '');\r\n\t\t\t}\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\r\n\t\t\tthis.sendReplyBox(game.lynchBox());\r\n\t\t},\r\n\r\n\t\tpl: 'players',\r\n\t\tplayers(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\r\n\t\t\t// hack to let hosts broadcast\r\n\t\t\tif (game.hostid === user.id || game.cohosts.includes(user.id)) {\r\n\t\t\t\tthis.broadcastMessage = this.message.toLowerCase().replace(/[^a-z0-9\\s!,]/g, '');\r\n\t\t\t}\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\r\n\t\t\tif (this.broadcasting) {\r\n\t\t\t\tgame.sendPlayerList();\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendReplyBox(`Players (${game.playerCount}): ${Object.keys(game.playerTable).map(p => game.playerTable[p].safeName).join(', ')}`);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\toriginalrolelist: 'rolelist',\r\n\t\torl: 'rolelist',\r\n\t\trl: 'rolelist',\r\n\t\trolelist(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.closedSetup) return this.errorReply(`You cannot show roles in a closed setup.`);\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\t\t\tif (game.IDEA.data) {\r\n\t\t\t\tconst buf = `<details><summary>IDEA roles:</summary>${game.IDEA.data.roles.join(`<br />`)}</details>`;\r\n\t\t\t\treturn this.sendReplyBox(buf);\r\n\t\t\t}\r\n\t\t\tconst showOrl = (['orl', 'originalrolelist'].includes(cmd) || game.noReveal);\r\n\t\t\tconst roleString = (showOrl ? game.originalRoles : game.roles).sort((a, b) => {\r\n\t\t\t\tif (a.alignment < b.alignment) return -1;\r\n\t\t\t\tif (b.alignment < a.alignment) return 1;\r\n\t\t\t\treturn 0;\r\n\t\t\t}).map(role => role.safeName).join(', ');\r\n\r\n\t\t\tthis.sendReplyBox(`${showOrl ? `Original Rolelist: ` : `Rolelist: `}${roleString}`);\r\n\t\t},\r\n\r\n\t\tplayerroles(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id)) return this.errorReply(`Only the host can view roles.`);\r\n\t\t\tif (!game.started) return this.errorReply(`The game has not started.`);\r\n\t\t\tconst players = [...Object.values(game.playerTable), ...Object.values(game.dead)];\r\n\t\t\tthis.sendReplyBox(players.map(p => `${p.safeName}: ${p.role ? (p.role.alignment === 'solo' ? 'Solo ' : '') + p.role.safeName : 'No role'}`).join('<br/>'));\r\n\t\t},\r\n\r\n\t\tspectate: 'view',\r\n\t\tview(target, room, user, connection) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\tif (this.broadcasting) return this.sendReplyBox(`<button name=\"joinRoom\" value=\"view-mafia-${room.roomid}\" class=\"button\"><strong>Spectate the game</strong></button>`);\r\n\t\t\treturn this.parse(`/join view-mafia-${room.roomid}`);\r\n\t\t},\r\n\r\n\t\t'!refreshlynches': true,\r\n\t\trefreshlynches(target, room, user, connection) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tconst lynches = game.lynchBoxFor(user.id);\r\n\t\t\tuser.send(`>view-mafia-${game.room.roomid}\\n|selectorhtml|#mafia-lynches|` + lynches);\r\n\t\t},\r\n\t\t'!sub': true,\r\n\t\tforcesub: 'sub',\r\n\t\tsub(target, room, user, connection, cmd) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tconst action = toID(args.shift());\r\n\t\t\tswitch (action) {\r\n\t\t\tcase 'in':\r\n\t\t\t\tif (user.id in game.playerTable) {\r\n\t\t\t\t\t// Check if they have requested to be subbed out.\r\n\t\t\t\t\tif (!game.requestedSub.includes(user.id)) return user.sendTo(targetRoom, `|error|You have not requested to be subbed out.`);\r\n\t\t\t\t\tgame.requestedSub.splice(game.requestedSub.indexOf(user.id), 1);\r\n\t\t\t\t\tuser.sendTo(room, `|error|You have cancelled your request to sub out.`);\r\n\t\t\t\t\tgame.playerTable[user.id].updateHtmlRoom();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!this.canTalk(null, targetRoom)) return;\r\n\t\t\t\t\tif (game.subs.includes(user.id)) return user.sendTo(targetRoom, `|error|You are already on the sub list.`);\r\n\t\t\t\t\tif (game.played.includes(user.id)) return user.sendTo(targetRoom, `|error|You cannot sub back into the game.`);\r\n\t\t\t\t\tconst canJoin = game.canJoin(user, true);\r\n\t\t\t\t\tif (canJoin) return user.sendTo(targetRoom, `|error|${canJoin}`);\r\n\t\t\t\t\tgame.subs.push(user.id);\r\n\t\t\t\t\tgame.nextSub();\r\n\t\t\t\t\t// Update spectator's view\r\n\t\t\t\t\tthis.parse(`/join view-mafia-${targetRoom.roomid}`);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'out':\r\n\t\t\t\tif (user.id in game.playerTable) {\r\n\t\t\t\t\tif (game.requestedSub.includes(user.id)) return user.sendTo(targetRoom, `|error|You have already requested to be subbed out.`);\r\n\t\t\t\t\tgame.requestedSub.push(user.id);\r\n\t\t\t\t\tgame.playerTable[user.id].updateHtmlRoom();\r\n\t\t\t\t\tgame.nextSub();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (game.hostid === user.id || game.cohosts.includes(user.id)) return user.sendTo(targetRoom, `|error|The host cannot sub out of the game.`);\r\n\t\t\t\t\tif (!game.subs.includes(user.id)) return user.sendTo(targetRoom, `|error|You are not on the sub list.`);\r\n\t\t\t\t\tgame.subs.splice(game.subs.indexOf(user.id), 1);\r\n\t\t\t\t\t// Update spectator's view\r\n\t\t\t\t\tthis.parse(`/join view-mafia-${targetRoom.roomid}`);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'next':\r\n\t\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\t\tconst toSub = args.shift();\r\n\t\t\t\tif (!(toID(toSub) in game.playerTable)) return user.sendTo(targetRoom, `|error|${toSub} is not in the game.`);\r\n\t\t\t\tif (!game.subs.length) {\r\n\t\t\t\t\tif (game.hostRequestedSub.indexOf(toID(toSub)) !== -1) return user.sendTo(targetRoom, `|error|${toSub} is already on the list to be subbed out.`);\r\n\t\t\t\t\tuser.sendTo(targetRoom, `|error|There are no subs to replace ${toSub}, they will be subbed if a sub is available before they speak next.`);\r\n\t\t\t\t\tgame.hostRequestedSub.unshift(toID(toSub));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgame.nextSub(toID(toSub));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'remove':\r\n\t\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\t\tconst toRemove = toID(args.shift());\r\n\t\t\t\tconst toRemoveIndex = game.subs.indexOf(toRemove);\r\n\t\t\t\tif (toRemoveIndex === -1) return user.sendTo(room, `|error|${toRemove} is not on the sub list.`);\r\n\t\t\t\tgame.subs.splice(toRemoveIndex, 1);\r\n\t\t\t\tuser.sendTo(room, `${toRemove} has been removed from the sublist`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unrequest':\r\n\t\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\t\tconst toUnrequest = toID(args.shift());\r\n\t\t\t\tconst userIndex = game.requestedSub.indexOf(toUnrequest);\r\n\t\t\t\tconst hostIndex = game.hostRequestedSub.indexOf(toUnrequest);\r\n\t\t\t\tif (userIndex < 0 && hostIndex < 0) return user.sendTo(room, `|error|${toUnrequest} is not requesting a sub.`);\r\n\t\t\t\tif (userIndex > -1) {\r\n\t\t\t\t\tgame.requestedSub.splice(userIndex, 1);\r\n\t\t\t\t\tuser.sendTo(room, `${toUnrequest}'s sub request has been removed.`);\r\n\t\t\t\t}\r\n\t\t\t\tif (hostIndex > -1) {\r\n\t\t\t\t\tgame.hostRequestedSub.splice(userIndex, 1);\r\n\t\t\t\t\tuser.sendTo(room, `${toUnrequest} has been removed from the host sublist.`);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\t\tconst toSubOut = action;\r\n\t\t\t\tconst toSubIn = toID(args.shift());\r\n\t\t\t\tif (!(toSubOut in game.playerTable)) return user.sendTo(targetRoom, `|error|${toSubOut} is not in the game.`);\r\n\r\n\t\t\t\tconst targetUser = Users.get(toSubIn);\r\n\t\t\t\tif (!targetUser) return user.sendTo(targetRoom, `|error|The user \"${toSubIn}\" was not found.`);\r\n\t\t\t\tconst canJoin = game.canJoin(targetUser, false, cmd === 'forcesub');\r\n\t\t\t\tif (canJoin) return user.sendTo(targetRoom, `|error|${canJoin}`);\r\n\t\t\t\tif (game.subs.includes(targetUser.id)) {\r\n\t\t\t\t\tgame.subs.splice(game.subs.indexOf(targetUser.id), 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (game.hostRequestedSub.includes(toSubOut)) {\r\n\t\t\t\t\tgame.hostRequestedSub.splice(game.hostRequestedSub.indexOf(toSubOut), 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (game.requestedSub.includes(toSubOut)) {\r\n\t\t\t\t\tgame.requestedSub.splice(game.requestedSub.indexOf(toSubOut), 1);\r\n\t\t\t\t}\r\n\t\t\t\tgame.sub(toSubOut, toSubIn);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubhelp: [\r\n\t\t\t`/mafia sub in - Request to sub into the game, or cancel a request to sub out.`,\r\n\t\t\t`/mafia sub out - Request to sub out of the game, or cancel a request to sub in.`,\r\n\t\t\t`/mafia sub next, [player] - Forcibly sub [player] out of the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia sub remove, [user] - Remove [user] from the sublist. Requres host % @ # & ~`,\r\n\t\t\t`/mafia sub unrequest, [player] - Remove's a player's request to sub out of the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia sub [player], [user] - Forcibly sub [player] for [user]. Requires host % @ # & ~`,\r\n\t\t],\r\n\r\n\t\t\"!autosub\": true,\r\n\t\tautosub(target, room, user) {\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(args[0]));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t} else {\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('mute', null, room)) return;\r\n\t\t\tif (this.meansYes(toID(args.join('')))) {\r\n\t\t\t\tif (game.autoSub) return user.sendTo(targetRoom, `|error|Automatic subbing of players is already enabled.`);\r\n\t\t\t\tgame.autoSub = true;\r\n\t\t\t\tuser.sendTo(targetRoom, `Automatic subbing of players has been enabled.`);\r\n\t\t\t\tgame.nextSub();\r\n\t\t\t} else if (this.meansNo(toID(args.join('')))) {\r\n\t\t\t\tif (!game.autoSub) return user.sendTo(targetRoom, `|error|Automatic subbing of players is already disabled.`);\r\n\t\t\t\tgame.autoSub = false;\r\n\t\t\t\tuser.sendTo(targetRoom, `Automatic subbing of players has been disabled.`);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.parse(`/help mafia autosub`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tautosubhelp: [`/mafia autosub [yes|no] - Sets if players will automatically sub out if a user is on the sublist. Requires host % @ # & ~`],\r\n\r\n\t\tcohost: 'subhost',\r\n\t\tforcecohost: 'subhost',\r\n\t\tforcesubhost: 'subhost',\r\n\t\tsubhost(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (!this.canTalk()) return;\r\n\t\t\tif (!target) return this.parse(`/help mafia ${cmd}`);\r\n\t\t\tif (!this.can('mute', null, room)) return false;\r\n\t\t\tthis.splitTarget(target, false);\r\n\t\t\tconst targetUser = this.targetUser;\r\n\t\t\tif (!targetUser || !targetUser.connected) return this.errorReply(`The user \"${this.targetUsername}\" was not found.`);\r\n\t\t\tif (!room.users[targetUser.id]) return this.errorReply(`${targetUser.name} is not in this room, and cannot be hosted.`);\r\n\t\t\tif (game.hostid === targetUser.id) return this.errorReply(`${targetUser.name} is already the host.`);\r\n\t\t\tif (game.cohosts.includes(targetUser.id)) return this.errorReply(`${targetUser.name} is already a cohost.`);\r\n\t\t\tif (targetUser.id in game.playerTable) return this.errorReply(`The host cannot be ingame.`);\r\n\t\t\tif (targetUser.id in game.dead) {\r\n\t\t\t\tif (!cmd.includes('force')) return this.errorReply(`${targetUser.name} could potentially be revived. To continue anyway, use /mafia force${cmd} ${target}.`);\r\n\t\t\t\tif (game.dead[targetUser.id].lynching) game.unlynch(targetUser.id);\r\n\t\t\t\tgame.dead[targetUser.id].destroy();\r\n\t\t\t\tdelete game.dead[targetUser.id];\r\n\t\t\t}\r\n\t\t\tif (cmd.includes('cohost')) {\r\n\t\t\t\tgame.cohosts.push(targetUser.id);\r\n\t\t\t\tgame.sendDeclare(Chat.html`${targetUser.name} has been added as a cohost by ${user.name}`);\r\n\t\t\t\tfor (const conn of targetUser.connections) {\r\n\t\t\t\t\tvoid Chat.resolvePage(`view-mafia-${room.roomid}`, targetUser, conn);\r\n\t\t\t\t}\r\n\t\t\t\tthis.modlog('MAFIACOHOST', targetUser, null, {noalts: true, noip: true});\r\n\t\t\t} else {\r\n\t\t\t\tconst oldHostid = game.hostid;\r\n\t\t\t\tconst oldHost = Users.get(game.hostid);\r\n\t\t\t\tif (oldHost) oldHost.send(`>view-mafia-${room.roomid}\\n|deinit`);\r\n\t\t\t\tif (game.subs.includes(targetUser.id)) game.subs.splice(game.subs.indexOf(targetUser.id), 1);\r\n\t\t\t\tconst queueIndex = hostQueue.indexOf(targetUser.id);\r\n\t\t\t\tif (queueIndex > -1) hostQueue.splice(queueIndex, 1);\r\n\t\t\t\tgame.host = Chat.escapeHTML(targetUser.name);\r\n\t\t\t\tgame.hostid = targetUser.id;\r\n\t\t\t\tgame.played.push(targetUser.id);\r\n\t\t\t\tfor (const conn of targetUser.connections) {\r\n\t\t\t\t\tvoid Chat.resolvePage(`view-mafia-${room.roomid}`, targetUser, conn);\r\n\t\t\t\t}\r\n\t\t\t\t// tslint:disable-next-line: max-line-length\r\n\t\t\t\tgame.sendDeclare(Chat.html`${targetUser.name} has been substituted as the new host, replacing ${oldHostid}.`);\r\n\t\t\t\tthis.modlog('MAFIASUBHOST', targetUser, `replacing ${oldHostid}`, {noalts: true, noip: true});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubhosthelp: [`/mafia subhost [user] - Substitues the user as the new game host.`],\r\n\t\tcohosthelp: [`/mafia cohost [user] - Adds the user as a cohost. Cohosts can talk during the game, as well as perform host actions.`],\r\n\r\n\t\tuncohost: 'removecohost',\r\n\t\tremovecohost(target, room, user) {\r\n\t\t\tif (!room || !room.game || room.game.gameid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room.`);\r\n\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\tif (!this.canTalk()) return;\r\n\t\t\tif (!target) return this.parse('/help mafia subhost');\r\n\t\t\tif (!this.can('mute', null, room)) return false;\r\n\t\t\tconst targetID = toID(target);\r\n\r\n\t\t\tconst cohostIndex = game.cohosts.indexOf(targetID);\r\n\t\t\tif (cohostIndex < 0) {\r\n\t\t\t\tif (game.hostid === targetID) return this.errorReply(`${target} is the host, not a cohost. Use /mafia subhost to replace them.`);\r\n\t\t\t\treturn this.errorReply(`${target} is not a cohost.`);\r\n\t\t\t}\r\n\t\t\tgame.cohosts.splice(cohostIndex, 1);\r\n\t\t\tgame.sendDeclare(Chat.html`${target} was removed as a cohost by ${user.name}`);\r\n\t\t\tthis.modlog('MAFIAUNCOHOST', target, null, {noalts: true, noip: true});\r\n\t\t},\r\n\r\n\t\t'!end': true,\r\n\t\tend(target, room, user) {\r\n\t\t\tlet targetRoom /** @type {ChatRoom?} */ = (Rooms.get(target));\r\n\t\t\tif (!targetRoom || targetRoom.type !== 'chat' || !targetRoom.users[user.id]) {\r\n\t\t\t\tif (!room || room.type !== 'chat') return this.errorReply(`This command is only meant to be used in chat rooms.`);\r\n\t\t\t\ttargetRoom = room;\r\n\t\t\t}\r\n\t\t\tif (!targetRoom.game || targetRoom.game.gameid !== 'mafia') return user.sendTo(targetRoom, `|error|There is no game of mafia running in this room.`);\r\n\t\t\tconst game = targetRoom.game as MafiaTracker;\r\n\t\t\tif (game.hostid !== user.id && !game.cohosts.includes(user.id) && !this.can('broadcast', null, room)) return;\r\n\t\t\tgame.end();\r\n\t\t\tthis.room = targetRoom;\r\n\t\t\tthis.modlog('MAFIAEND', null);\r\n\t\t},\r\n\t\tendhelp: [`/mafia end - End the current game of mafia. Requires host + % @ # & ~`],\r\n\r\n\t\t'!data': true,\r\n\t\trole: 'data',\r\n\t\tmodifier: 'data',\r\n\t\talignment: 'data',\r\n\t\ttheme: 'data',\r\n\t\tterm: 'data',\r\n\t\tdt: 'data',\r\n\t\tdata(target, room, user, connection, cmd) {\r\n\t\t\tif (room && room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (cmd === 'role' && !target && room) {\r\n\t\t\t\t// Support /mafia role showing your current role if you're in a game\r\n\t\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\t\tif (!game || game.roomid !== 'mafia') return this.errorReply(`There is no game of mafia running in this room. If you meant to display information about a role, use /mafia role [role name]`);\r\n\t\t\t\tif (!(user.id in game.playerTable)) return this.errorReply(`You are not in the game of ${game.title}.`);\r\n\t\t\t\tconst role = game.playerTable[user.id].role;\r\n\t\t\t\tif (!role) return this.errorReply(`You do not have a role yet.`);\r\n\t\t\t\treturn this.sendReplyBox(`Your role is: ${role.safeName}`);\r\n\t\t\t}\r\n\r\n\t\t\t// hack to let hosts broadcast\r\n\t\t\tconst game = room && room.game && room.game.gameid === 'mafia' ? room.game as MafiaTracker : null;\r\n\t\t\tif (game && (game.hostid === user.id || game.cohosts.includes(user.id))) {\r\n\t\t\t\tthis.broadcastMessage = this.message.toLowerCase().replace(/[^a-z0-9\\s!,]/g, '');\r\n\t\t\t}\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\r\n\t\t\tif (!target) return this.parse(`/help mafia data`);\r\n\r\n\t\t\tconst types: {[k: string]: string}\r\n\t\t\t\t= {alignment: 'alignments', role: 'roles', modifier: 'modifiers', theme: 'themes', term: 'terms'};\r\n\t\t\tconst id = target.split(' ').map(toID).join('_');\r\n\t\t\tlet result = null;\r\n\t\t\tlet dataType = cmd;\r\n\t\t\tif (cmd in types) {\r\n\t\t\t\tconst type: 'alignments' | 'roles' | 'modifiers' | 'themes' | 'IDEAs' | 'terms' = types[cmd] as any;\r\n\t\t\t\tconst data = MafiaData[type];\r\n\t\t\t\tif (!data) return this.errorReply(`\"${type}\" is not a valid search area.`); // Should never happen\r\n\t\t\t\tif (!data[id]) return this.errorReply(`\"${target} is not a valid ${cmd}.\"`);\r\n\t\t\t\tresult = data[id];\r\n\t\t\t\tif (typeof result === 'string') result = data[result];\r\n\t\t\t} else {\r\n\t\t\t\t// Search all\r\n\t\t\t\tfor (const i in types) {\r\n\t\t\t\t\tconst type: 'alignments' | 'roles' | 'modifiers' | 'themes' | 'IDEAs' | 'terms' = types[i] as any;\r\n\t\t\t\t\tconst data = MafiaData[type];\r\n\t\t\t\t\tif (!data) continue; // Should never happen\r\n\t\t\t\t\tif (!data[id]) continue;\r\n\t\t\t\t\tresult = data[id];\r\n\t\t\t\t\tif (typeof result === 'string') result = data[result];\r\n\t\t\t\t\tdataType = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (!result) return this.errorReply(`\"${target}\" is not a valid mafia alignment, role, modifier, or theme.`);\r\n\t\t\t}\r\n\t\t\tlet buf = `<h3${result.color ? ' style=\"color: ' + result.color + '\"' : ``}>${result.name}</h3><b>Type</b>: ${dataType}<br/>`;\r\n\t\t\tif (dataType === 'theme') {\r\n\t\t\t\tbuf += `<b>Description</b>: ${result.desc}<br/><details><summary class=\"button\" style=\"font-weight: bold; display: inline-block\">Setups:</summary>`;\r\n\t\t\t\tfor (const i in result) {\r\n\t\t\t\t\tif (isNaN(parseInt(i))) continue;\r\n\t\t\t\t\tbuf += `${i}: `;\r\n\t\t\t\t\tconst count: {[k: string]: number} = {};\r\n\t\t\t\t\tconst roles = [];\r\n\t\t\t\t\tfor (const role of result[i].split(',').map((x: string) => x.trim())) {\r\n\t\t\t\t\t\tcount[role] = count[role] ? count[role] + 1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (const role in count) {\r\n\t\t\t\t\t\troles.push(count[role] > 1 ? `${count[role]}x ${role}` : role);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuf += `${roles.join(', ')}<br/>`;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbuf += `${result.memo.join('<br/>')}`;\r\n\t\t\t}\r\n\t\t\treturn this.sendReplyBox(buf);\r\n\t\t},\r\n\t\tdatahelp: [`/mafia data [alignment|role|modifier|theme|term] - Get information on a mafia alignment, role, modifier, theme, or term.`],\r\n\r\n\t\twinfaction: 'win',\r\n\t\twin(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (room.roomid !== 'mafia') return this.errorReply(`This command can only be used in the Mafia room.`);\r\n\t\t\tif (cmd === 'winfaction' && (!room.game || room.game.gameid !== 'mafia')) return this.errorReply(`There is no game of mafia running in the room`);\r\n\t\t\tif (!this.can('mute', null, room)) return;\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tlet points = parseInt(args[0]);\r\n\t\t\tif (isNaN(points)) {\r\n\t\t\t\tpoints = 10;\r\n\t\t\t} else {\r\n\t\t\t\tif (points > 100 || points < -100) {\r\n\t\t\t\t\treturn this.errorReply(`You cannot give or take more than 100 points at a time.`);\r\n\t\t\t\t}\r\n\t\t\t\t// shift out the point count\r\n\t\t\t\targs.shift();\r\n\t\t\t}\r\n\t\t\tif (!args.length) return this.parse('/help mafia win');\r\n\t\t\tconst month = new Date().toLocaleString(\"en-us\", {month: \"numeric\", year: \"numeric\"});\r\n\t\t\tif (!logs.leaderboard[month]) logs.leaderboard[month] = {};\r\n\r\n\t\t\tlet toGiveTo = [];\r\n\t\t\tlet buf = `${points} were awarded to: `;\r\n\t\t\tif (cmd === 'winfaction') {\r\n\t\t\t\tconst game = room.game as MafiaTracker;\r\n\t\t\t\tfor (let faction of args) {\r\n\t\t\t\t\tfaction = toID(faction);\r\n\t\t\t\t\tconst inFaction = [];\r\n\t\t\t\t\tfor (const player of [...Object.values(game.playerTable), ...Object.values(game.dead)]) {\r\n\t\t\t\t\t\tif (player.role && toID(player.role.alignment) === faction) {\r\n\t\t\t\t\t\t\ttoGiveTo.push(player.id);\r\n\t\t\t\t\t\t\tinFaction.push(player.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (inFaction.length) buf += ` the ${faction} faction: ${inFaction.join(', ')};`;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttoGiveTo = args;\r\n\t\t\t\tbuf += toGiveTo.join(', ');\r\n\t\t\t}\r\n\t\t\tif (!toGiveTo.length) return this.parse('/help mafia win');\r\n\t\t\tlet gavePoints = false;\r\n\t\t\tfor (let u of toGiveTo) {\r\n\t\t\t\tu = toID(u);\r\n\t\t\t\tif (!u) continue;\r\n\t\t\t\tif (!gavePoints) gavePoints = true;\r\n\t\t\t\tif (!logs.leaderboard[month][u]) logs.leaderboard[month][u] = 0;\r\n\t\t\t\tlogs.leaderboard[month][u] += points;\r\n\t\t\t\tif (logs.leaderboard[month][u] === 0) delete logs.leaderboard[month][u];\r\n\t\t\t}\r\n\t\t\tif (!gavePoints) return this.parse('/help mafia win');\r\n\t\t\twriteFile(LOGS_FILE, logs);\r\n\t\t\tthis.modlog(`MAFIAPOINTS`, null, `${points} points were awarded to ${Chat.toListString(toGiveTo)}`);\r\n\t\t\troom.add(buf).update();\r\n\t\t},\r\n\t\twinhelp: [\r\n\t\t\t`/mafia win (points), [user1], [user2], [user3], ... - Award the specified users points to the mafia leaderboard for this month. The amount of points can be negative to take points. Defaults to 10 points.`,\r\n\t\t\t`/mafia winfaction (points), [faction] - Award the specified points to all the players in the given faction.`,\r\n\t\t],\r\n\r\n\t\tunmvp: 'mvp',\r\n\t\tmvp(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (room.roomid !== 'mafia') return this.errorReply(`This command can only be used in the Mafia room.`);\r\n\t\t\tif (!this.can('mute', null, room)) return;\r\n\t\t\tconst args = target.split(',');\r\n\t\t\tif (!args.length) return this.parse('/help mafia mvp');\r\n\t\t\tconst month = new Date().toLocaleString(\"en-us\", {month: \"numeric\", year: \"numeric\"});\r\n\t\t\tif (!logs.mvps[month]) logs.mvps[month] = {};\r\n\t\t\tif (!logs.leaderboard[month]) logs.leaderboard[month] = {};\r\n\t\t\tlet gavePoints = false;\r\n\t\t\tfor (let u of args) {\r\n\t\t\t\tu = toID(u);\r\n\t\t\t\tif (!u) continue;\r\n\t\t\t\tif (!gavePoints) gavePoints = true;\r\n\t\t\t\tif (!logs.leaderboard[month][u]) logs.leaderboard[month][u] = 0;\r\n\t\t\t\tif (!logs.mvps[month][u]) logs.mvps[month][u] = 0;\r\n\t\t\t\tif (cmd === 'unmvp') {\r\n\t\t\t\t\tlogs.mvps[month][u]--;\r\n\t\t\t\t\tlogs.leaderboard[month][u] -= 10;\r\n\t\t\t\t\tif (logs.mvps[month][u] === 0) delete logs.mvps[month][u];\r\n\t\t\t\t\tif (logs.leaderboard[month][u] === 0) delete logs.leaderboard[month][u];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlogs.mvps[month][u]++;\r\n\t\t\t\t\tlogs.leaderboard[month][u] += 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!gavePoints) return this.parse('/help mafia mvp');\r\n\t\t\twriteFile(LOGS_FILE, logs);\r\n\t\t\tthis.modlog(`MAFIA${cmd.toUpperCase()}`, null, `MVP and 10 points were ${cmd === 'unmvp' ? 'taken from' : 'awarded to'} ${Chat.toListString(args)}`);\r\n\t\t\troom.add(`MVP and 10 points were ${cmd === 'unmvp' ? 'taken from' : 'awarded to'}: ${Chat.toListString(args)}`).update();\r\n\t\t},\r\n\t\tmvphelp: [\r\n\t\t\t`/mafia mvp [user1], [user2], ... - Gives a MVP point and 10 leaderboard points to the users specified.`,\r\n\t\t\t`/mafia unmvp [user1], [user2], ... - Takes away a MVP point and 10 leaderboard points from the users specified.`,\r\n\t\t],\r\n\r\n\t\thostlogs: 'leaderboard',\r\n\t\tplaylogs: 'leaderboard',\r\n\t\tleaverlogs: 'leaderboard',\r\n\t\tmvpladder: 'leaderboard',\r\n\t\tlb: 'leaderboard',\r\n\t\tleaderboard(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (room.roomid !== 'mafia') return this.errorReply(`This command can only be used in the Mafia room.`);\r\n\t\t\tif (['hostlogs', 'playlogs', 'leaverlogs'].includes(cmd)) {\r\n\t\t\t\tif (!this.can('mute', null, room)) return;\r\n\t\t\t} else {\r\n\t\t\t\t// Deny broadcasting host/playlogs\r\n\t\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\t}\r\n\t\t\tif (cmd === 'lb') cmd = 'leaderboard';\r\n\t\t\tif (this.broadcasting) return this.sendReplyBox(`<button name=\"joinRoom\" value=\"view-mafialadder-${cmd}\" class=\"button\"><strong>${cmd}</strong></button>`);\r\n\t\t\treturn this.parse(`/join view-mafialadder-${cmd}`);\r\n\t\t},\r\n\t\tleaderboardhelp: [\r\n\t\t\t`/mafia [leaderboard|mvpladder] - View the leaderboard or MVP ladder for the current or last month.`,\r\n\t\t\t`/mafia [hostlogs|playlogs|leaverlogs] - View the host, play, or leaver logs for the current or last month. Requires % @ # & ~`,\r\n\t\t],\r\n\r\n\t\tunhostban: 'hostban',\r\n\t\thostban(target, room, user, connection, cmd) {\r\n\t\t\tif (!room || room.mafiaDisabled) return this.errorReply(`Mafia is disabled for this room.`);\r\n\t\t\tif (room.roomid !== 'mafia') return this.errorReply(`This command can only be used in the Mafia room.`);\r\n\r\n\t\t\tconst [targetUser, durationString] = this.splitOne(target);\r\n\t\t\tconst targetUserID = toID(targetUser);\r\n\t\t\tconst duration = parseInt(durationString);\r\n\r\n\t\t\tif (!targetUserID) return this.errorReply(`User not found.`);\r\n\t\t\tif (!this.can('mute', null, room)) return false;\r\n\r\n\t\t\tconst isUnban = (cmd.startsWith('un'));\r\n\t\t\tif (isHostBanned(targetUserID) === !isUnban) return this.errorReply(`${targetUser} is ${isUnban ? 'not' : 'already'} banned from hosting games.`);\r\n\r\n\t\t\tif (isUnban) {\r\n\t\t\t\tdelete hostBans[targetUserID];\r\n\t\t\t\tthis.modlog(`MAFIAUNHOSTBAN`, null, `${targetUserID}`);\r\n\t\t\t} else {\r\n\t\t\t\tif (isNaN(duration) || duration < 1) return this.parse('/help mafia hostban');\r\n\t\t\t\tif (duration > 7) return this.errorReply(`Bans cannot be longer than 7 days.`);\r\n\r\n\t\t\t\thostBans[targetUserID] = Date.now() + 1000 * 60 * 60 * 24 * duration;\r\n\t\t\t\tthis.modlog(`MAFIAHOSTBAN`, null, `${targetUserID}, for ${duration} days.`);\r\n\t\t\t\tconst queueIndex = hostQueue.indexOf(targetUserID);\r\n\t\t\t\tif (queueIndex > -1) hostQueue.splice(queueIndex, 1);\r\n\t\t\t}\r\n\t\t\twriteFile(BANS_FILE, hostBans);\r\n\t\t\troom.add(`${targetUser} was ${isUnban ? 'un' : ''}banned from hosting games${!isUnban ? ` for ${duration} days` : ''} by ${user.name}.`).update();\r\n\t\t},\r\n\t\thostbanhelp: [\r\n\t\t\t`/mafia hostban [user], [duration] - Ban a user from hosting games for [duration] days. Requires % @ # & ~`,\r\n\t\t\t`/mafia unhostban [user] - Unbans a user from hosting games. Requires % @ # & ~`,\r\n\t\t\t`/mafia hostbans - Checks current hostbans. Requires % @ # & ~`,\r\n\t\t],\r\n\r\n\t\thostbans(target, room) {\r\n\t\t\tif (!room || room.roomid !== 'mafia') return this.errorReply(`This command can only be used in the Mafia room.`);\r\n\t\t\tif (!this.can('mute', null, room)) return;\r\n\t\t\tlet buf = 'Hostbanned users:';\r\n\t\t\tfor (const [id, date] of Object.entries(hostBans)) {\r\n\t\t\t\tbuf += `<br/>${id}: for ${Chat.toDurationString(date - Date.now())}`;\r\n\t\t\t}\r\n\t\t\treturn this.sendReplyBox(buf);\r\n\t\t},\r\n\r\n\t\tdisable(target, room, user) {\r\n\t\t\tif (!room || !this.can('gamemanagement', null, room)) return;\r\n\t\t\tif (room.mafiaDisabled) {\r\n\t\t\t\treturn this.errorReply(\"Mafia is already disabled.\");\r\n\t\t\t}\r\n\t\t\troom.mafiaDisabled = true;\r\n\t\t\tif (room.chatRoomData) {\r\n\t\t\t\troom.chatRoomData.mafiaDisabled = true;\r\n\t\t\t\tRooms.global.writeChatRoomData();\r\n\t\t\t}\r\n\t\t\tthis.modlog('MAFIADISABLE', null);\r\n\t\t\treturn this.sendReply(\"Mafia has been disabled for this room.\");\r\n\t\t},\r\n\t\tdisablehelp: [`/mafia disable - Disables mafia in this room. Requires # & ~`],\r\n\r\n\t\tenable(target, room, user) {\r\n\t\t\tif (!room || !this.can('gamemanagement', null, room)) return;\r\n\t\t\tif (!room.mafiaDisabled) {\r\n\t\t\t\treturn this.errorReply(\"Mafia is already enabled.\");\r\n\t\t\t}\r\n\t\t\troom.mafiaDisabled = false;\r\n\t\t\tif (room.chatRoomData) {\r\n\t\t\t\troom.chatRoomData.mafiaDisabled = false;\r\n\t\t\t\tRooms.global.writeChatRoomData();\r\n\t\t\t}\r\n\t\t\tthis.modlog('MAFIAENABLE', null);\r\n\t\t\treturn this.sendReply(\"Mafia has been enabled for this room.\");\r\n\t\t},\r\n\t\tenablehelp: [`/mafia enable - Enables mafia in this room. Requires # & ~`],\r\n\t},\r\n\tmafiahelp(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tlet buf = `<strong>Commands for the Mafia Plugin</strong><br/>Most commands are used through buttons in the game screen.<br/><br/>`;\r\n\t\tbuf += `<details><summary class=\"button\">General Commands</summary>`;\r\n\t\tbuf += [\r\n\t\t\t`<br/><strong>General Commands for the Mafia Plugin</strong>:<br/>`,\r\n\t\t\t`/mafia host [user] - Create a game of Mafia with [user] as the host. Roomvoices can only host themselves. Requires + % @ # & ~`,\r\n\t\t\t`/mafia nexthost - Host the next user in the host queue. Only works in the Mafia Room. Requires + % @ # & ~`,\r\n\t\t\t`/mafia forcehost [user] - Bypass the host queue and host [user]. Only works in the Mafia Room. Requires % @ # & ~`,\r\n\t\t\t`/mafia sub in - Request to sub into the game, or cancel a request to sub out.`,\r\n\t\t\t`/mafia sub out - Request to sub out of the game, or cancel a request to sub in.`,\r\n\t\t\t`/mafia spectate - Spectate the game of mafia.`,\r\n\t\t\t`/mafia lynches - Display the current lynch count, and whos lynching who.`,\r\n\t\t\t`/mafia players - Display the current list of players, will highlight players.`,\r\n\t\t\t`/mafia [rl|orl] - Display the role list or the original role list for the current game.`,\r\n\t\t\t`/mafia data [alignment|role|modifier|theme|term] - Get information on a mafia alignment, role, modifier, theme, or term.`,\r\n\t\t\t`/mafia subhost [user] - Substitues the user as the new game host. Requires % @ # & ~`,\r\n\t\t\t`/mafia cohost [user] - Adds the user as a cohost. Cohosts can talk during the game, as well as perform host actions. Requires % @ # & ~`,\r\n\t\t\t`/mafia uncohost [user] - Remove [user]'s cohost status. Requires % @ # & ~`,\r\n\t\t\t`/mafia disable - Disables mafia in this room. Requires # & ~`,\r\n\t\t\t`/mafia enable - Enables mafia in this room. Requires # & ~`,\r\n\t\t].join('<br/>');\r\n\t\tbuf += `</details><details><summary class=\"button\">Player Commands</summary>`;\r\n\t\tbuf += [\r\n\t\t\t`<br/><strong>Commands that players can use</strong>:<br/>`,\r\n\t\t\t`/mafia join - Join the game.`,\r\n\t\t\t`/mafia leave - Leave the game. Can only be done while signups are open.`,\r\n\t\t\t`/mafia lynch [player|nolynch] - Vote to lynch the specified player or to not lynch anyone.`,\r\n\t\t\t`/mafia unlynch - Withdraw your lynch vote. Fails if you're not voting to lynch anyone`,\r\n\t\t\t`/mafia deadline - View the deadline for the current game.`,\r\n\t\t\t`/mafia sub in - Request to sub into the game, or cancel a request to sub out.`,\r\n\t\t\t`/mafia sub out - Request to sub out of the game, or cancel a request to sub in.`,\r\n\t\t].join('<br/>');\r\n\t\tbuf += `</details><details><summary class=\"button\">Host Commands</summary>`;\r\n\t\tbuf += [\r\n\t\t\t`<br/><strong>Commands for game hosts and Cohosts to use</strong>:<br/>`,\r\n\t\t\t`/mafia playercap [cap|none]- Limit the number of players able to join the game. Player cap cannot be more than 20 or less than 2. Requires: host % @ # & ~`,\r\n\t\t\t`/mafia close - Closes signups for the current game. Requires: host % @ # & ~`,\r\n\t\t\t`/mafia closedsetup [on|off] - Sets if the game is a closed setup. Closed setups don't show the role list to players. Requires host % @ # & ~`,\r\n\t\t\t`/mafia reveal [on|off] - Sets if roles reveal on death or not. Requires host % @ # & ~`,\r\n\t\t\t`/mafia selflynch [on|hammer|off] - Allows players to self lynch themselves either at hammer or anytime. Requires host % @ # & ~`,\r\n\t\t\t`/mafia [enablenl|disablenl] - Allows or disallows players abstain from lynching. Requires host % @ # & ~`,\r\n\t\t\t`/mafia forcelynch [yes/no] - Forces player's lynches onto themselves, and prevents unlynching. Requires host % @ # & ~`,\r\n\t\t\t`/mafia setroles [comma seperated roles] - Set the roles for a game of mafia. You need to provide one role per player. Requires host % @ # & ~`,\r\n\t\t\t`/mafia forcesetroles [comma seperated roles] - Forcibly set the roles for a game of mafia. No role PM information or alignment will be set. Requires host % @ # & ~`,\r\n\t\t\t`/mafia start - Start the game of mafia. Signups must be closed. Requires host % @ # & ~`,\r\n\t\t\t`/mafia day - Move to the next game day. Requires host % @ # & ~`,\r\n\t\t\t`/mafia night - Move to the next game night. Requires host % @ # & ~`,\r\n\t\t\t`/mafia extend (minutes) - Return to the previous game day. If (minutes) is provided, set the deadline for (minutes) minutes. Requires host % @ # & ~`,\r\n\t\t\t`/mafia kill [player] - Kill a player, eliminating them from the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia treestump [player] - Kills a player, but allows them to talk during the day still. Requires host % @ # & ~`,\r\n\t\t\t`/mafia spirit [player] - Kills a player, but allows them to vote on the lynch still. Requires host % @ # & ~`,\r\n\t\t\t`/mafia spiritstump [player] - Kills a player, but allows them to talk during the day, and vote on the lynch. Requires host % @ # & ~`,\r\n\t\t\t`/mafia kick [player] - Kicks a player from the game without revealing their role. Requires host % @ # & ~`,\r\n\t\t\t`/mafia silence [player] - Silences [player], preventing them from talking at all. Requires host % @ # & ~`,\r\n\t\t\t`/mafia unsilence [player] - Removes a silence on [player], allowing them to talk again. Requires host % @ # & ~`,\r\n\t\t\t`/mafia revive [player] - Revive a player who died or add a new player to the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia deadline [minutes|off] - Sets or removes the deadline for the game. Cannot be more than 20 minutes.`,\r\n\t\t\t`/mafia sub next, [player] - Forcibly sub [player] out of the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia sub remove, [user] - Forcibly remove [user] from the sublist. Requres host % @ # & ~`,\r\n\t\t\t`/mafia sub unrequest, [player] - Remove's a player's request to sub out of the game. Requires host % @ # & ~`,\r\n\t\t\t`/mafia sub [player], [user] - Forcibly sub [player] for [user]. Requires host % @ # & ~`,\r\n\t\t\t`/mafia autosub [yes|no] - Sets if players will automatically sub out if a user is on the sublist. Defaults to yes. Requires host % @ # & ~`,\r\n\t\t\t`/mafia [love|hate] [player] - Makes it take 1 more (love) or less (hate) lynch to hammer [player]. Requires host % @ # & ~`,\r\n\t\t\t`/mafia [unlove|unhate] [player] - Removes loved or hated status from [player]. Requires host % @ # & ~`,\r\n\t\t\t`/mafia [mayor|voteless] [player] - Makes [player]'s' lynch worth 2 votes (mayor) or makes [player]'s lynch worth 0 votes (voteless). Requires host % @ # & ~`,\r\n\t\t\t`/mafia [unmayor|unvoteless] [player] - Removes mayor or voteless status from [player]. Requires host % @ # & ~`,\r\n\t\t\t`/mafia hammer [hammer] - sets the hammer count to [hammer] and resets lynches`,\r\n\t\t\t`/mafia hammer off - disables hammering`,\r\n\t\t\t`/mafia shifthammer [hammer] - sets the hammer count to [hammer] without resetting lynches`,\r\n\t\t\t`/mafia resethammer - sets the hammer to the default, resetting lynches`,\r\n\t\t\t`/mafia playerroles - View all the player's roles in chat. Requires host`,\r\n\t\t\t`/mafia end - End the current game of mafia. Requires host % @ # & ~`,\r\n\t\t].join('<br/>');\r\n\t\tbuf += `</details><details><summary class=\"button\">IDEA Module Commands</summary>`;\r\n\t\tbuf += [\r\n\t\t\t`<br/><strong>Commands for using IDEA modules</strong><br/>`,\r\n\t\t\t`/mafia idea [idea] - starts the IDEA module [idea]. Requires + % @ # & ~, voices can only start for themselves`,\r\n\t\t\t`/mafia ideareroll - rerolls the IDEA module. Requires host % @ # & ~`,\r\n\t\t\t`/mafia ideapick [selection], [role] - selects a role`,\r\n\t\t\t`/mafia ideadiscards - shows the discarded roles`,\r\n\t\t\t`/mafia ideadiscards off - hides discards from the players. Requires host % @ # & ~`,\r\n\t\t\t`/mafia ideadiscards on - shows discards to the players. Requires host % @ # & ~`,\r\n\t\t\t`/mafia customidea choices, picks (new line here, shift+enter)`,\r\n\t\t\t`(comma or newline separated rolelist) - Starts an IDEA module with custom roles. Requires % @ # & ~`,\r\n\t\t].join('<br/>');\r\n\t\tbuf += `</details>`;\r\n\t\tbuf += `</details><details><summary class=\"button\">Mafia Room Specific Commands</summary>`;\r\n\t\tbuf += [\r\n\t\t\t`<br/><strong>Commands that are only useable in the Mafia Room</strong>:<br/>`,\r\n\t\t\t`/mafia queue add, [user] - Adds the user to the host queue. Requires % @ # & ~.`,\r\n\t\t\t`/mafia queue remove, [user] - Removes the user from the queue. You can remove yourself regardless of rank. Requires % @ # & ~.`,\r\n\t\t\t`/mafia queue - Shows the list of users who are in queue to host.`,\r\n\t\t\t`/mafia win (points) [user1], [user2], [user3], ... - Award the specified users points to the mafia leaderboard for this month. The amount of points can be negative to take points. Defaults to 10 points.`,\r\n\t\t\t`/mafia winfaction (points), [faction] - Award the specified points to all the players in the given faction. Requires % @ # & ~`,\r\n\t\t\t`/mafia mvp [user1], [user2], ... - Gives a MVP point and 10 leaderboard points to the users specified.`,\r\n\t\t\t`/mafia unmvp [user1], [user2], ... - Takes away a MVP point and 10 leaderboard points from the users specified.`,\r\n\t\t\t`/mafia [leaderboard|mvpladder] - View the leaderboard or MVP ladder for the current or last month.`,\r\n\t\t\t`/mafia [hostlogs|playlogs] - View the host logs or play logs for the current or last month. Requires % @ # & ~`,\r\n\t\t\t`/mafia hostban [user], [duration] - Ban a user from hosting games for [duration] days. Requires % @ # & ~`,\r\n\t\t\t`/mafia unhostban [user] - Unbans a user from hosting games. Requires % @ # & ~`,\r\n\t\t\t`/mafia hostbans - Checks current hostbans. Requires % @ # & ~`,\r\n\t\t].join('<br/>');\r\n\t\tbuf += `</details>`;\r\n\r\n\t\treturn this.sendReplyBox(buf);\r\n\t},\r\n};\r\n\r\nexport const roomSettings: SettingsHandler = room => ({\r\n\tlabel: \"Mafia\",\r\n\tpermission: 'editroom',\r\n\toptions: [\r\n\t\t[`disabled`, room.mafiaDisabled || 'mafia disable'],\r\n\t\t[`enabled`, !room.mafiaDisabled || 'mafia enable'],\r\n\t],\r\n});\r\n\r\nprocess.nextTick(() => {\r\n\tChat.multiLinePattern.register('/mafia customidea');\r\n});\r\n"],
  "mappings": "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",
  "names": ["canJoin", "game"]
}
