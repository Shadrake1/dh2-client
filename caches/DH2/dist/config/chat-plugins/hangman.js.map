{
  "version": 3,
  "sources": ["../../../config/chat-plugins/hangman.ts"],
  "sourcesContent": ["/*\r\n* Hangman chat plugin\r\n* By bumbadadabum and Zarel. Art by crobat.\r\n*/\r\n\r\n'use strict';\r\n\r\nconst maxMistakes = 6;\r\n\r\nclass Hangman extends Rooms.RoomGame {\r\n\tgameNumber: number;\r\n\tcreator: ID;\r\n\tword: string;\r\n\thint: string;\r\n\tincorrectGuesses: number;\r\n\r\n\tguesses: string[];\r\n\tletterGuesses: string[];\r\n\tlastGuesser: string;\r\n\twordSoFar: string[];\r\n\r\n\tconstructor(room: ChatRoom | GameRoom, user: User, word: string, hint = '') {\r\n\t\tsuper(room);\r\n\r\n\t\tthis.gameNumber = ++room.gameNumber;\r\n\r\n\t\tthis.gameid = 'hangman' as ID;\r\n\t\tthis.title = 'Hangman';\r\n\t\tthis.creator = user.id;\r\n\t\tthis.word = word;\r\n\t\tthis.hint = hint;\r\n\t\tthis.incorrectGuesses = 0;\r\n\r\n\t\tthis.guesses = [];\r\n\t\tthis.letterGuesses = [];\r\n\t\tthis.lastGuesser = '';\r\n\t\tthis.wordSoFar = [];\r\n\r\n\t\tfor (const letter of word) {\r\n\t\t\tif (/[a-zA-Z]/.test(letter)) {\r\n\t\t\t\tthis.wordSoFar.push('_');\r\n\t\t\t} else {\r\n\t\t\t\tthis.wordSoFar.push(letter);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tguess(word: string, user: User) {\r\n\t\tif (user.id === this.creator) return user.sendTo(this.room, \"You can't guess in your own hangman game.\");\r\n\r\n\t\tconst sanitized = word.replace(/[^A-Za-z ]/g, '');\r\n\t\tconst normalized = toID(sanitized);\r\n\t\tif (normalized.length < 1) return user.sendTo(this.room, \"Guess too short.\");\r\n\t\tif (sanitized.length > 30) return user.sendTo(this.room, \"Guess too long.\");\r\n\r\n\t\tfor (const guessid of this.guesses) {\r\n\t\t\tif (normalized === toID(guessid)) return user.sendTo(this.room, \"Your guess has already been guessed.\");\r\n\t\t}\r\n\r\n\t\tif (sanitized.length > 1) {\r\n\t\t\tif (!this.guessWord(sanitized, user.name)) {\r\n\t\t\t\tuser.sendTo(this.room, \"Invalid guess\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.room.send(`${user.name} guessed \"${sanitized}\"!`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.guessLetter(sanitized, user.name)) {\r\n\t\t\t\tuser.sendTo(this.room, \"Invalid guess\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tguessLetter(letter: string, guesser: string) {\r\n\t\tletter = letter.toUpperCase();\r\n\t\tif (this.guesses.includes(letter)) return false;\r\n\t\tif (this.word.toUpperCase().includes(letter)) {\r\n\t\t\tfor (let i = 0; i < this.word.length; i++) {\r\n\t\t\t\tif (this.word[i].toUpperCase() === letter) {\r\n\t\t\t\t\tthis.wordSoFar[i] = this.word[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.wordSoFar.includes('_')) {\r\n\t\t\t\tthis.incorrectGuesses = -1;\r\n\t\t\t\tthis.guesses.push(letter);\r\n\t\t\t\tthis.letterGuesses.push(`${letter}1`);\r\n\t\t\t\tthis.lastGuesser = guesser;\r\n\t\t\t\tthis.finish();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthis.letterGuesses.push(`${letter}1`);\r\n\t\t} else {\r\n\t\t\tthis.incorrectGuesses++;\r\n\t\t\tthis.letterGuesses.push(`${letter}0`);\r\n\t\t}\r\n\r\n\t\tthis.guesses.push(letter);\r\n\t\tthis.lastGuesser = guesser;\r\n\t\tthis.update();\r\n\t\treturn true;\r\n\t}\r\n\r\n\tguessWord(word: string, guesser: string) {\r\n\t\tconst ourWord = toID(this.word);\r\n\t\tconst guessedWord = toID(word);\r\n\t\tif (ourWord === guessedWord) {\r\n\t\t\tfor (const [i, letter] of this.wordSoFar.entries()) {\r\n\t\t\t\tif (letter === '_') {\r\n\t\t\t\t\tthis.wordSoFar[i] = this.word[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.incorrectGuesses = -1;\r\n\t\t\tthis.guesses.push(word);\r\n\t\t\tthis.lastGuesser = guesser;\r\n\t\t\tthis.finish();\r\n\t\t\treturn true;\r\n\t\t} else if (ourWord.length === guessedWord.length) {\r\n\t\t\tthis.incorrectGuesses++;\r\n\t\t\tthis.guesses.push(word);\r\n\t\t\tthis.lastGuesser = guesser;\r\n\t\t\tthis.update();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\thangingMan() {\r\n\t\treturn `<img width=\"120\" height=\"120\" src=\"//${Config.routes.client}/fx/hangman${this.incorrectGuesses === -1 ? 7 : this.incorrectGuesses}.png\" />`;\r\n\t}\r\n\r\n\tgenerateWindow() {\r\n\t\tlet result = 0;\r\n\r\n\t\tif (this.incorrectGuesses === maxMistakes) {\r\n\t\t\tresult = 1;\r\n\t\t} else if (!this.wordSoFar.includes('_')) {\r\n\t\t\tresult = 2;\r\n\t\t}\r\n\r\n\t\tconst color = result === 1 ? 'red' : (result === 2 ? 'green' : 'blue');\r\n\t\tconst message = result === 1 ? 'Too bad! The mon has been hanged.' : (result === 2 ? 'The word has been guessed. Congratulations!' : 'Hangman');\r\n\t\tlet output = `<div class=\"broadcast-${color}\">`;\r\n\t\toutput += `<p style=\"text-align:left;font-weight:bold;font-size:10pt;margin:5px 0 0 15px\">${message}</p>`;\r\n\t\toutput += `<table><tr><td style=\"text-align:center;\">${this.hangingMan()}</td><td style=\"text-align:center;width:100%;word-wrap:break-word\">`;\r\n\r\n\t\tlet wordString = this.wordSoFar.join('');\r\n\t\tif (result === 1) {\r\n\t\t\tconst word = this.word;\r\n\t\t\twordString = wordString.replace(/_+/g, (match, offset) =>\r\n\t\t\t\t`<font color=\"#7af87a\">${word.substr(offset, match.length)}</font>`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (this.hint) output += Chat.html`<div>(Hint: ${this.hint})</div>`;\r\n\t\toutput += `<p style=\"font-weight:bold;font-size:12pt;letter-spacing:3pt\">${wordString}</p>`;\r\n\t\tif (this.guesses.length) {\r\n\t\t\tif (this.letterGuesses.length) {\r\n\t\t\t\toutput += 'Letters: ' + this.letterGuesses.map(g =>\r\n\t\t\t\t\t`<strong${g[1] === '1' ? '' : ' style=\"color: #DBA\"'}>${Chat.escapeHTML(g[0])}</strong>`\r\n\t\t\t\t).join(', ');\r\n\t\t\t}\r\n\t\t\tif (result === 2) {\r\n\t\t\t\toutput += Chat.html`<br />Winner: ${this.lastGuesser}`;\r\n\t\t\t} else if (this.guesses[this.guesses.length - 1].length === 1) {\r\n\t\t\t\t// last guess was a letter\r\n\t\t\t\toutput += Chat.html` <small>&ndash; ${this.lastGuesser}</small>`;\r\n\t\t\t} else {\r\n\t\t\t\toutput += Chat.html`<br />Guessed: ${this.guesses[this.guesses.length - 1]} <small>&ndash; ${this.lastGuesser}</small>`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toutput += '</td></tr></table></div>';\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tdisplay(user: User, broadcast = false) {\r\n\t\tif (broadcast) {\r\n\t\t\tthis.room.add(`|uhtml|hangman${this.gameNumber}|${this.generateWindow()}`);\r\n\t\t} else {\r\n\t\t\tuser.sendTo(this.room, `|uhtml|hangman${this.gameNumber}|${this.generateWindow()}`);\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.room.add(`|uhtmlchange|hangman${this.gameNumber}|${this.generateWindow()}`);\r\n\r\n\t\tif (this.incorrectGuesses === maxMistakes) {\r\n\t\t\tthis.finish();\r\n\t\t}\r\n\t}\r\n\r\n\tend() {\r\n\t\tthis.room.add(`|uhtmlchange|hangman${this.gameNumber}|<div class=\"infobox\">(The game of hangman was ended.)</div>`);\r\n\t\tthis.room.add(\"The game of hangman was ended.\");\r\n\t\tdelete this.room.game;\r\n\t}\r\n\r\n\tfinish() {\r\n\t\tthis.room.add(`|uhtmlchange|hangman${this.gameNumber}|<div class=\"infobox\">(The game of hangman has ended &ndash; scroll down to see the results)</div>`);\r\n\t\tthis.room.add(`|html|${this.generateWindow()}`);\r\n\t\tdelete this.room.game;\r\n\t}\r\n}\r\n\r\nexport const commands: ChatCommands = {\r\n\thangman: {\r\n\t\tcreate: 'new',\r\n\t\tnew(target, room, user, connection) {\r\n\t\t\tconst text = this.filter(target);\r\n\t\t\tif (target !== text) return this.errorReply(\"You are not allowed to use filtered words in hangmans.\");\r\n\t\t\tconst params = text.split(',');\r\n\r\n\t\t\tif (!this.can('minigame', null, room)) return false;\r\n\t\t\tif (room.hangmanDisabled) return this.errorReply(\"Hangman is disabled for this room.\");\r\n\t\t\tif (!this.canTalk()) return;\r\n\t\t\tif (room.game) return this.errorReply(`There is already a game of ${room.game.title} in progress in this room.`);\r\n\r\n\t\t\tif (!params) return this.errorReply(\"No word entered.\");\r\n\t\t\tconst word = params[0].replace(/[^A-Za-z '-]/g, '');\r\n\t\t\tif (word.replace(/ /g, '').length < 1) return this.errorReply(\"Enter a valid word\");\r\n\t\t\tif (word.length > 30) return this.errorReply(\"Phrase must be less than 30 characters.\");\r\n\t\t\tif (word.split(' ').some(w => w.length > 20)) return this.errorReply(\"Each word in the phrase must be less than 20 characters.\");\r\n\t\t\tif (!/[a-zA-Z]/.test(word)) return this.errorReply(\"Word must contain at least one letter.\");\r\n\r\n\t\t\tlet hint;\r\n\t\t\tif (params.length > 1) {\r\n\t\t\t\thint = params.slice(1).join(',').trim();\r\n\t\t\t\tif (hint.length > 150) return this.errorReply(\"Hint too long.\");\r\n\t\t\t}\r\n\r\n\t\t\tconst game = new Hangman(room, user, word, hint);\r\n\t\t\troom.game = game;\r\n\t\t\tgame.display(user, true);\r\n\r\n\t\t\tthis.modlog('HANGMAN');\r\n\t\t\treturn this.addModAction(`A game of hangman was started by ${user.name}.`);\r\n\t\t},\r\n\t\tcreatehelp: [\"/hangman create [word], [hint] - Makes a new hangman game. Requires: % @ # & ~\"],\r\n\r\n\t\tguess(target, room, user) {\r\n\t\t\tif (!target) return this.parse('/help guess');\r\n\t\t\tif (!room.game || room.game.gameid !== 'hangman') return this.errorReply(\"There is no game of hangman running in this room.\");\r\n\t\t\tif (!this.canTalk()) return;\r\n\r\n\t\t\tconst game = room.game as Hangman;\r\n\t\t\tgame.guess(target, user);\r\n\t\t},\r\n\t\tguesshelp: [\r\n\t\t\t`/hangman guess [letter] - Makes a guess for the letter entered.`,\r\n\t\t\t`/hangman guess [word] - Same as a letter, but guesses an entire word.`,\r\n\t\t],\r\n\r\n\t\tstop: 'end',\r\n\t\tend(target, room, user) {\r\n\t\t\tif (!this.can('minigame', null, room)) return false;\r\n\t\t\tif (!this.canTalk()) return;\r\n\t\t\tif (!room.game || room.game.gameid !== 'hangman') return this.errorReply(\"There is no game of hangman running in this room.\");\r\n\r\n\t\t\tconst game = room.game as Hangman;\r\n\t\t\tgame.end();\r\n\t\t\tthis.modlog('ENDHANGMAN');\r\n\t\t\treturn this.privateModAction(`(The game of hangman was ended by ${user.name}.)`);\r\n\t\t},\r\n\t\tendhelp: [\"/hangman end - Ends the game of hangman before the man is hanged or word is guessed. Requires: % @ # & ~\"],\r\n\r\n\t\tdisable(target, room, user) {\r\n\t\t\tif (!this.can('gamemanagement', null, room)) return;\r\n\t\t\tif (room.hangmanDisabled) {\r\n\t\t\t\treturn this.errorReply(\"Hangman is already disabled.\");\r\n\t\t\t}\r\n\t\t\troom.hangmanDisabled = true;\r\n\t\t\tif (room.chatRoomData) {\r\n\t\t\t\troom.chatRoomData.hangmanDisabled = true;\r\n\t\t\t\tRooms.global.writeChatRoomData();\r\n\t\t\t}\r\n\t\t\treturn this.sendReply(\"Hangman has been disabled for this room.\");\r\n\t\t},\r\n\r\n\t\tenable(target, room, user) {\r\n\t\t\tif (!this.can('gamemanagement', null, room)) return;\r\n\t\t\tif (!room.hangmanDisabled) {\r\n\t\t\t\treturn this.errorReply(\"Hangman is already enabled.\");\r\n\t\t\t}\r\n\t\t\tdelete room.hangmanDisabled;\r\n\t\t\tif (room.chatRoomData) {\r\n\t\t\t\tdelete room.chatRoomData.hangmanDisabled;\r\n\t\t\t\tRooms.global.writeChatRoomData();\r\n\t\t\t}\r\n\t\t\treturn this.sendReply(\"Hangman has been enabled for this room.\");\r\n\t\t},\r\n\r\n\t\tdisplay(target, room, user) {\r\n\t\t\tif (!room.game || room.game.title !== 'Hangman') return this.errorReply(\"There is no game of hangman running in this room.\");\r\n\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\troom.update();\r\n\r\n\t\t\tconst game = room.game as Hangman;\r\n\t\t\tgame.display(user, this.broadcasting);\r\n\t\t},\r\n\r\n\t\t''(target, room, user) {\r\n\t\t\treturn this.parse('/help hangman');\r\n\t\t},\r\n\t},\r\n\r\n\thangmanhelp: [\r\n\t\t`/hangman allows users to play the popular game hangman in PS rooms.`,\r\n\t\t`Accepts the following commands:`,\r\n\t\t`/hangman create [word], [hint] - Makes a new hangman game. Requires: % @ # & ~`,\r\n\t\t`/hangman guess [letter] - Makes a guess for the letter entered.`,\r\n\t\t`/hangman guess [word] - Same as a letter, but guesses an entire word.`,\r\n\t\t`/hangman display - Displays the game.`,\r\n\t\t`/hangman end - Ends the game of hangman before the man is hanged or word is guessed. Requires: % @ # & ~`,\r\n\t\t`/hangman [enable/disable] - Enables or disables hangman from being started in a room. Requires: # & ~`,\r\n\t],\r\n\r\n\tguess(target, room, user) {\r\n\t\tif (!room.game) return this.errorReply(\"There is no game running in this room.\");\r\n\t\tif (!this.canTalk()) return;\r\n\t\tif (!(room.game as Hangman).guess) return this.errorReply(\"You can't guess anything in this game.\");\r\n\r\n\t\t(room.game as Hangman).guess(target, user);\r\n\t},\r\n\tguesshelp: [\r\n\t\t`/guess - Shortcut for /hangman guess.`,\r\n\t\t`/hangman guess [letter] - Makes a guess for the letter entered.`,\r\n\t\t`/hangman guess [word] - Same as a letter, but guesses an entire word.`,\r\n\t],\r\n};\r\n\r\nexport const roomSettings: SettingsHandler = room => ({\r\n\tlabel: \"Hangman\",\r\n\tpermission: 'editroom',\r\n\toptions: [\r\n\t\t[`disabled`, room.hangmanDisabled || 'hangman disable'],\r\n\t\t[`enabled`, !room.hangmanDisabled || 'hangman enable'],\r\n\t],\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
