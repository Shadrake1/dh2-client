{
  "version": 3,
  "sources": ["../../../config/chat-plugins/othermetas.ts"],
  "sourcesContent": ["// Other Metas plugin by Spandan\r\n'use strict';\r\n\r\ninterface StoneDeltas {\r\n\tbaseStats: {[stat in StatName]: number};\r\n\tweighthg: number;\r\n\ttype?: string;\r\n}\r\n\r\ntype TierShiftTiers = 'UU' | 'RUBL' | 'RU' | 'NUBL' | 'NU' | 'PUBL' | 'PU' | 'NFE' | 'LC Uber' | 'LC';\r\n\r\nfunction getMegaStone(stone: string, mod = 'gen8'): Item | null {\r\n\tlet dex = Dex;\r\n\tif (mod && toID(mod) in Dex.dexes) dex = Dex.mod(toID(mod));\r\n\tconst item = dex.getItem(stone);\r\n\tif (!item.exists) {\r\n\t\tif (toID(stone) === 'dragonascent') {\r\n\t\t\tconst move = dex.getMove(stone);\r\n\t\t\treturn {\r\n\t\t\t\tid: move.id,\r\n\t\t\t\tname: move.name,\r\n\t\t\t\tfullname: move.name,\r\n\t\t\t\tmegaEvolves: 'Rayquaza',\r\n\t\t\t\tmegaStone: 'Rayquaza-Mega',\r\n\t\t\t\texists: true,\r\n\t\t\t\t// Adding extra values to appease typescript\r\n\t\t\t\tgen: 6,\r\n\t\t\t\tnum: -1,\r\n\t\t\t\teffectType: 'Item',\r\n\t\t\t\tsourceEffect: '',\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tif (!item.megaStone && !item.onPrimal) return null;\r\n\treturn item;\r\n}\r\n\r\nexport const commands: ChatCommands = {\r\n\t'!othermetas': true,\r\n\tom: 'othermetas',\r\n\tothermetas(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\ttarget = toID(target);\r\n\t\tlet buffer = ``;\r\n\r\n\t\tif (target === 'all' && this.broadcasting) {\r\n\t\t\treturn this.sendReplyBox(`You cannot broadcast information about all Other Metagames at once.`);\r\n\t\t}\r\n\r\n\t\tif (!target || target === 'all') {\r\n\t\t\tbuffer += `- <a href=\"https://www.smogon.com/forums/forums/394/\">Other Metagames Forum</a><br />`;\r\n\t\t\tif (!target) return this.sendReplyBox(buffer);\r\n\t\t}\r\n\t\tconst showMonthly = (target === 'all' || target === 'omofthemonth' || target === 'omotm' || target === 'month');\r\n\r\n\t\tif (target === 'all') {\r\n\t\t\t// Display OMotM formats, with forum thread links as caption\r\n\t\t\tthis.parse(`/formathelp omofthemonth`);\r\n\r\n\t\t\t// Display the rest of OM formats, with OM hub/index forum links as caption\r\n\t\t\tthis.parse(`/formathelp othermetagames`);\r\n\t\t\treturn this.sendReply(`|raw|<center>${buffer}</center>`);\r\n\t\t}\r\n\t\tif (showMonthly) {\r\n\t\t\tthis.target = 'omofthemonth';\r\n\t\t\tthis.run('formathelp');\r\n\t\t} else {\r\n\t\t\tthis.run('formathelp');\r\n\t\t}\r\n\t},\r\n\tothermetashelp: [\r\n\t\t`/om - Provides links to information on the Other Metagames.`,\r\n\t\t`!om - Show everyone that information. Requires: + % @ # & ~`,\r\n\t],\r\n\r\n\t'!mixandmega': true,\r\n\tmnm: 'mixandmega',\r\n\tmixandmega(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!toID(target) || !target.includes('@')) return this.parse('/help mixandmega');\r\n\t\tlet dex = Dex;\r\n\t\tconst sep = target.split('@');\r\n\t\tconst stoneName = sep.slice(1).join('@').trim().split(',');\r\n\t\tconst mod = stoneName[1];\r\n\t\tif (mod && toID(mod) in Dex.dexes) dex = Dex.mod(toID(mod));\r\n\t\tconst stone = getMegaStone(stoneName[0], mod);\r\n\t\tconst template = dex.getTemplate(sep[0]);\r\n\t\tif (!stone || (dex.gen >= 8 && ['redorb', 'blueorb'].includes(stone.id))) return this.errorReply(`Error: Mega Stone not found.`);\r\n\t\tif (!template.exists) return this.errorReply(`Error: Pokemon not found.`);\r\n\t\tconst banlist = Dex.getFormat('gen8mixandmega').banlist;\r\n\t\tif (banlist.includes(stone.name)) {\r\n\t\t\tthis.errorReply(`Warning: ${stone.name} is banned from Mix and Mega.`);\r\n\t\t}\r\n\t\t// Fake Pokemon and Mega Stones\r\n\t\tif (template.isNonstandard === \"CAP\") {\r\n\t\t\tthis.errorReply(`Warning: ${template.name} is not a real Pokemon and is therefore not usable in Mix and Mega.`);\r\n\t\t}\r\n\t\tif (stone.isNonstandard === \"CAP\") {\r\n\t\t\tthis.errorReply(`Warning: ${stone.name} is a fake mega stone created by the CAP Project and is restricted to the CAP ${stone.megaEvolves}.`);\r\n\t\t}\r\n\t\tlet baseTemplate = dex.getTemplate(stone.megaEvolves);\r\n\t\tlet megaTemplate = dex.getTemplate(stone.megaStone);\r\n\t\tif (stone.id === 'redorb') { // Orbs do not have 'Item.megaStone' or 'Item.megaEvolves' properties.\r\n\t\t\tmegaTemplate = dex.getTemplate(\"Groudon-Primal\");\r\n\t\t\tbaseTemplate = dex.getTemplate(\"Groudon\");\r\n\t\t} else if (stone.id === 'blueorb') {\r\n\t\t\tmegaTemplate = dex.getTemplate(\"Kyogre-Primal\");\r\n\t\t\tbaseTemplate = dex.getTemplate(\"Kyogre\");\r\n\t\t}\r\n\t\tconst deltas: StoneDeltas = {\r\n\t\t\tbaseStats: Object.create(null),\r\n\t\t\tweighthg: megaTemplate.weighthg - baseTemplate.weighthg,\r\n\t\t};\r\n\t\tlet statId: StatName;\r\n\t\tfor (statId in megaTemplate.baseStats) {\r\n\t\t\tdeltas.baseStats[statId] = megaTemplate.baseStats[statId as StatName] - baseTemplate.baseStats[statId];\r\n\t\t}\r\n\t\tif (megaTemplate.types.length > baseTemplate.types.length) {\r\n\t\t\tdeltas.type = megaTemplate.types[1];\r\n\t\t} else if (megaTemplate.types.length < baseTemplate.types.length) {\r\n\t\t\tdeltas.type = dex.gen >= 8 ? 'mono' : megaTemplate.types[0];\r\n\t\t} else if (megaTemplate.types[1] !== baseTemplate.types[1]) {\r\n\t\t\tdeltas.type = megaTemplate.types[1];\r\n\t\t}\r\n\t\t//////////////////////////////////////////\r\n\t\tconst mixedTemplate = Dex.deepClone(template);\r\n\t\tmixedTemplate.abilities = Dex.deepClone(megaTemplate.abilities);\r\n\t\tif (mixedTemplate.types[0] === deltas.type) { // Add any type gains\r\n\t\t\tmixedTemplate.types = [deltas.type];\r\n\t\t} else if (deltas.type === 'mono') {\r\n\t\t\tmixedTemplate.types = [mixedTemplate.types[0]];\r\n\t\t} else if (deltas.type) {\r\n\t\t\tmixedTemplate.types = [mixedTemplate.types[0], deltas.type];\r\n\t\t}\r\n\t\tlet statName: StatName;\r\n\t\tfor (statName in template.baseStats) { // Add the changed stats and weight\r\n\t\t\tmixedTemplate.baseStats[statName] = Dex.clampIntRange(\r\n\t\t\t\tmixedTemplate.baseStats[statName] + deltas.baseStats[statName], 1, 255\r\n\t\t\t);\r\n\t\t}\r\n\t\tmixedTemplate.weighthg = Math.max(1, template.weighthg + deltas.weighthg);\r\n\t\tmixedTemplate.tier = \"MnM\";\r\n\t\tlet weighthit = 20;\r\n\t\tif (mixedTemplate.weighthg >= 2000) {\r\n\t\t\tweighthit = 120;\r\n\t\t} else if (mixedTemplate.weighthg >= 1000) {\r\n\t\t\tweighthit = 100;\r\n\t\t} else if (mixedTemplate.weighthg >= 500) {\r\n\t\t\tweighthit = 80;\r\n\t\t} else if (mixedTemplate.weighthg >= 250) {\r\n\t\t\tweighthit = 60;\r\n\t\t} else if (mixedTemplate.weighthg >= 100) {\r\n\t\t\tweighthit = 40;\r\n\t\t}\r\n\t\tconst details: {[k: string]: string} = {\r\n\t\t\t\"Dex#\": '' + mixedTemplate.num,\r\n\t\t\tGen: '' + mixedTemplate.gen,\r\n\t\t\tHeight: mixedTemplate.heightm + \" m\",\r\n\t\t\tWeight: mixedTemplate.weighthg / 10 + \" kg <em>(\" + weighthit + \" BP)</em>\",\r\n\t\t\t\"Dex Colour\": mixedTemplate.color,\r\n\t\t};\r\n\t\tif (mixedTemplate.eggGroups) details[\"Egg Group(s)\"] = mixedTemplate.eggGroups.join(\", \");\r\n\t\tdetails['<font color=\"#686868\">Does Not Evolve</font>'] = \"\";\r\n\t\tthis.sendReply(`|raw|${Chat.getDataPokemonHTML(mixedTemplate)}`);\r\n\t\tthis.sendReply('|raw|<font size=\"1\">' + Object.keys(details).map(detail => {\r\n\t\t\tif (details[detail] === '') return detail;\r\n\t\t\treturn '<font color=\"#686868\">' + detail + ':</font> ' + details[detail];\r\n\t\t}).join(\"&nbsp;|&ThickSpace;\") + '</font>');\r\n\t},\r\n\tmixandmegahelp: [`/mnm <pokemon> @ <mega stone>[, generation] - Shows the Mix and Mega evolved Pokemon's type and stats.`],\r\n\r\n\t'!stone': true,\r\n\torb: 'stone',\r\n\tmegastone: 'stone',\r\n\tstone(target) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst sep = target.split(',');\r\n\t\tlet dex = Dex;\r\n\t\tif (sep[1] && toID(sep[1]) in Dex.dexes) dex = Dex.mod(toID(sep[1]));\r\n\t\tconst targetid = toID(sep[0]);\r\n\t\tif (!targetid) return this.parse('/help stone');\r\n\t\tconst stone = getMegaStone(targetid, sep[1]);\r\n\t\tif (!stone || (dex.gen >= 8 && ['redorb', 'blueorb'].includes(stone.id))) return this.errorReply(`Error: Mega Stone not found.`);\r\n\t\tconst banlist = Dex.getFormat('gen8mixandmega').banlist;\r\n\t\tif (banlist.includes(stone.name)) {\r\n\t\t\tthis.errorReply(`Warning: ${stone.name} is banned from Mix and Mega.`);\r\n\t\t}\r\n\t\tconst restrictedStones = Dex.getFormat('gen8mixandmega').restrictedStones || [];\r\n\t\tif (restrictedStones.includes(stone.name)) {\r\n\t\t\tif (dex.getTemplate(stone.megaEvolves).isNonstandard === \"Past\") {\r\n\t\t\t\tthis.errorReply(`Warning: ${stone.name} is restricted in Mix and Mega.`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.errorReply(`Warning: ${stone.name} is restricted to ${stone.megaEvolves} in Mix and Mega.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (stone.isUnreleased) {\r\n\t\t\tthis.errorReply(`Warning: ${stone.name} is unreleased and is not usable in current Mix and Mega.`);\r\n\t\t}\r\n\t\tif (targetid === 'dragonascent') {\r\n\t\t\tthis.errorReply(`Warning: Only Pokemon with access to Dragon Ascent can mega evolve with Mega Rayquaza's traits.`);\r\n\t\t}\r\n\t\t// Fake Mega Stones\r\n\t\tif (stone.isNonstandard === 'CAP') {\r\n\t\t\tthis.errorReply(`Warning: ${stone.name} is a fake mega stone created by the CAP Project and is restricted to the CAP ${stone.megaEvolves}.`);\r\n\t\t}\r\n\t\tlet baseTemplate = dex.getTemplate(stone.megaEvolves);\r\n\t\tlet megaTemplate = dex.getTemplate(stone.megaStone);\r\n\t\tif (dex.gen >= 8 && ['redorb', 'blueorb'].includes(stone.id)) return this.parse('/help stone');\r\n\t\tif (stone.id === 'redorb') { // Orbs do not have 'Item.megaStone' or 'Item.megaEvolves' properties.\r\n\t\t\tmegaTemplate = dex.getTemplate(\"Groudon-Primal\");\r\n\t\t\tbaseTemplate = dex.getTemplate(\"Groudon\");\r\n\t\t} else if (stone.id === 'blueorb') {\r\n\t\t\tmegaTemplate = dex.getTemplate(\"Kyogre-Primal\");\r\n\t\t\tbaseTemplate = dex.getTemplate(\"Kyogre\");\r\n\t\t}\r\n\t\tconst deltas: StoneDeltas = {\r\n\t\t\tbaseStats: Object.create(null),\r\n\t\t\tweighthg: megaTemplate.weighthg - baseTemplate.weighthg,\r\n\t\t};\r\n\t\tlet statId: StatName;\r\n\t\tfor (statId in megaTemplate.baseStats) {\r\n\t\t\tdeltas.baseStats[statId] = megaTemplate.baseStats[statId] - baseTemplate.baseStats[statId];\r\n\t\t}\r\n\t\tif (megaTemplate.types.length > baseTemplate.types.length) {\r\n\t\t\tdeltas.type = megaTemplate.types[1];\r\n\t\t} else if (megaTemplate.types.length < baseTemplate.types.length) {\r\n\t\t\tdeltas.type = dex.gen >= 8 ? 'mono' : megaTemplate.types[0];\r\n\t\t} else if (megaTemplate.types[1] !== baseTemplate.types[1]) {\r\n\t\t\tdeltas.type = megaTemplate.types[1];\r\n\t\t}\r\n\t\tconst details = {\r\n\t\t\tGen: stone.gen,\r\n\t\t\tWeight: (deltas.weighthg < 0 ? \"\" : \"+\") + deltas.weighthg / 10 + \" kg\",\r\n\t\t};\r\n\t\tlet tier;\r\n\t\tif (['redorb', 'blueorb'].includes(stone.id)) {\r\n\t\t\ttier = \"Orb\";\r\n\t\t} else if (targetid === \"dragonascent\") {\r\n\t\t\ttier = \"Move\";\r\n\t\t} else {\r\n\t\t\ttier = \"Stone\";\r\n\t\t}\r\n\t\tlet buf = `<li class=\"result\">`;\r\n\t\tbuf += `<span class=\"col numcol\">${tier}</span> `;\r\n\t\tif (targetid === \"dragonascent\") {\r\n\t\t\tbuf += `<span class=\"col itemiconcol\"></span>`;\r\n\t\t} else {\r\n\t\t\tbuf += `<span class=\"col itemiconcol\"><psicon item=\"${targetid}\"/></span> `;\r\n\t\t}\r\n\t\tif (targetid === \"dragonascent\") {\r\n\t\t\tbuf += `<span class=\"col movenamecol\" style=\"white-space:nowrap\"><a href=\"https://${Config.routes.dex}/moves/${targetid}\" target=\"_blank\">Dragon Ascent</a></span> `;\r\n\t\t} else {\r\n\t\t\tbuf += `<span class=\"col pokemonnamecol\" style=\"white-space:nowrap\"><a href=\"https://${Config.routes.dex}/items/${stone.id}\" target=\"_blank\">${stone.name}</a></span> `;\r\n\t\t}\r\n\t\tif (deltas.type && deltas.type !== 'mono') {\r\n\t\t\tbuf += `<span class=\"col typecol\"><img src=\"https://${Config.routes.client}/sprites/types/${deltas.type}.png\" alt=\"${deltas.type}\" height=\"14\" width=\"32\"></span> `;\r\n\t\t} else {\r\n\t\t\tbuf += `<span class=\"col typecol\"></span>`;\r\n\t\t}\r\n\t\tbuf += `<span style=\"float:left;min-height:26px\">`;\r\n\t\tbuf += `<span class=\"col abilitycol\">${megaTemplate.abilities['0']}</span>`;\r\n\t\tbuf += `<span class=\"col abilitycol\"></span>`;\r\n\t\tbuf += `</span>`;\r\n\t\tbuf += `<span style=\"float:left;min-height:26px\">`;\r\n\t\tbuf += `<span class=\"col statcol\"><em>HP</em><br />0</span> `;\r\n\t\tbuf += `<span class=\"col statcol\"><em>Atk</em><br />${deltas.baseStats.atk}</span> `;\r\n\t\tbuf += `<span class=\"col statcol\"><em>Def</em><br />${deltas.baseStats.def}</span> `;\r\n\t\tbuf += `<span class=\"col statcol\"><em>SpA</em><br />${deltas.baseStats.spa}</span> `;\r\n\t\tbuf += `<span class=\"col statcol\"><em>SpD</em><br />${deltas.baseStats.spd}</span> `;\r\n\t\tbuf += `<span class=\"col statcol\"><em>Spe</em><br />${deltas.baseStats.spe}</span> `;\r\n\t\tlet bst = 0;\r\n\t\tfor (const stat of Object.values(deltas.baseStats)) {\r\n\t\t\tbst += stat;\r\n\t\t}\r\n\t\tbuf += `<span class=\"col bstcol\"><em>BST<br />${bst}</em></span> `;\r\n\t\tbuf += `</span>`;\r\n\t\tbuf += `</li>`;\r\n\t\tthis.sendReply(`|raw|<div class=\"message\"><ul class=\"utilichart\">${buf}<li style=\"clear:both\"></li></ul></div>`);\r\n\t\tthis.sendReply(`|raw|<font size=\"1\"><font color=\"#686868\">Gen:</font> ${details[\"Gen\"]}&nbsp;|&ThickSpace;<font color=\"#686868\">Weight:</font> ${details[\"Weight\"]}</font>`);\r\n\t},\r\n\tstonehelp: [`/stone <mega stone>[, generation] - Shows the changes that a mega stone/orb applies to a Pokemon.`],\r\n\r\n\t'!350cup': true,\r\n\t350: '350cup',\r\n\t'350cup'(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!toID(target)) return this.parse('/help 350cup');\r\n\t\tconst template = Dex.deepClone(Dex.getTemplate(target));\r\n\t\tif (!template.exists) return this.errorReply(\"Error: Pokemon not found.\");\r\n\t\tlet bst = 0;\r\n\t\tfor (const i in template.baseStats) {\r\n\t\t\tbst += template.baseStats[i];\r\n\t\t}\r\n\t\tfor (const i in template.baseStats) {\r\n\t\t\ttemplate.baseStats[i] = template.baseStats[i] * (bst <= 350 ? 2 : 1);\r\n\t\t}\r\n\t\tthis.sendReply(`|html|${Chat.getDataPokemonHTML(template)}`);\r\n\t},\r\n\t'350cuphelp': [`/350 OR /350cup <pokemon> - Shows the base stats that a Pokemon would have in 350 Cup.`],\r\n\r\n\t'!tiershift': true,\r\n\tts: 'tiershift',\r\n\ttiershift(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!toID(target)) return this.parse('/help tiershift');\r\n\t\tconst template = Dex.deepClone(Dex.mod('gen7').getTemplate(target));\r\n\t\tif (!template.exists) return this.errorReply(\"Error: Pokemon not found.\");\r\n\t\tconst boosts: {[tier in TierShiftTiers]: number} = {\r\n\t\t\tUU: 10,\r\n\t\t\tRUBL: 10,\r\n\t\t\tRU: 20,\r\n\t\t\tNUBL: 20,\r\n\t\t\tNU: 30,\r\n\t\t\tPUBL: 30,\r\n\t\t\tPU: 40,\r\n\t\t\tNFE: 40,\r\n\t\t\t'LC Uber': 40,\r\n\t\t\tLC: 40,\r\n\t\t};\r\n\t\tlet tier = template.tier;\r\n\t\tif (tier[0] === '(') tier = tier.slice(1, -1);\r\n\t\tif (!(tier in boosts)) return this.sendReply(`|html|${Chat.getDataPokemonHTML(template)}`);\r\n\t\tconst boost = boosts[tier as TierShiftTiers];\r\n\t\tfor (const statName in template.baseStats) {\r\n\t\t\tif (statName === 'hp') continue;\r\n\t\t\ttemplate.baseStats[statName] = Dex.clampIntRange(template.baseStats[statName] + boost, 1, 255);\r\n\t\t}\r\n\t\tthis.sendReply(`|raw|${Chat.getDataPokemonHTML(template)}`);\r\n\t},\r\n\ttiershifthelp: [`/ts OR /tiershift <pokemon> - Shows the base stats that a Pokemon would have in Tier Shift.`],\r\n\r\n\t'!scalemons': true,\r\n\tscale: 'scalemons',\r\n\tscalemons(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!toID(target)) return this.parse(`/help scalemons`);\r\n\t\tconst template = Dex.deepClone(Dex.getTemplate(target));\r\n\t\tif (!template.exists) return this.errorReply(`Error: Pokemon ${target} not found.`);\r\n\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\t\tconst pst = stats.map(stat => template.baseStats[stat]).reduce((x, y) => x + y);\r\n\t\tconst scale = 600 - template.baseStats['hp'];\r\n\t\tfor (const stat of stats) {\r\n\t\t\ttemplate.baseStats[stat] = Dex.clampIntRange(template.baseStats[stat] * scale / pst, 1, 255);\r\n\t\t}\r\n\t\tthis.sendReply(`|raw|${Chat.getDataPokemonHTML(template)}`);\r\n\t},\r\n\tscalemonshelp: [`/scale OR /scalemons <pokemon> - Shows the base stats that a Pokemon would have in Scalemons.`],\r\n\r\n\t'!natureswap': true,\r\n\tns: 'natureswap',\r\n\tnatureswap(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst nature = target.trim().split(' ')[0];\r\n\t\tconst pokemon = target.trim().split(' ')[1];\r\n\t\tif (!toID(nature) || !toID(pokemon)) return this.parse(`/help natureswap`);\r\n\t\tconst natureObj: {\r\n\t\t\tname: string, plus?: string | undefined, minus?: string | undefined, exists?: boolean,\r\n\t\t} = Dex.getNature(nature);\r\n\t\tif (!natureObj.exists) return this.errorReply(`Error: Nature ${nature} not found.`);\r\n\t\tconst template = Dex.deepClone(Dex.getTemplate(pokemon));\r\n\t\tif (!template.exists) return this.errorReply(`Error: Pokemon ${pokemon} not found.`);\r\n\t\tif (natureObj.minus && natureObj.plus) {\r\n\t\t\tconst swap = template.baseStats[natureObj.minus];\r\n\t\t\ttemplate.baseStats[natureObj.minus] = template.baseStats[natureObj.plus];\r\n\t\t\ttemplate.baseStats[natureObj.plus] = swap;\r\n\t\t\ttemplate.tier = 'NS';\r\n\t\t}\r\n\t\tthis.sendReply(`|raw|${Chat.getDataPokemonHTML(template)}`);\r\n\t},\r\n\tnatureswapshelp: [`/ns OR /natureswap <pokemon> - Shows the base stats that a Pokemon would have in Nature Swap. Usage: /ns <Nature> <Pokemon>.`],\r\n\r\n\t'!crossevolve': true,\r\n\tce: 'crossevolve',\r\n\tcrossevo: 'crossevolve',\r\n\tcrossevolve(target, user, room) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!target || !target.includes(',')) return this.parse(`/help crossevo`);\r\n\r\n\t\tconst pokes = target.split(',');\r\n\t\tconst template = Dex.getTemplate(pokes[0]);\r\n\t\tconst crossTemplate = Dex.getTemplate(pokes[1]);\r\n\r\n\t\tif (!template.exists) return this.errorReply(`Error: Pokemon '${pokes[0]}' not found.`);\r\n\t\tif (!crossTemplate.exists) return this.errorReply(`Error: Pokemon '${pokes[1]}' not found.`);\r\n\r\n\t\tif (!template.evos.length) return this.errorReply(`Error: ${template.species} does not evolve.`);\r\n\t\tif (!crossTemplate.prevo) return this.errorReply(`Error: ${crossTemplate.species} does not have a prevolution.`);\r\n\r\n\t\tlet setStage = 1;\r\n\t\tlet crossStage = 1;\r\n\t\tif (template.prevo) {\r\n\t\t\tsetStage++;\r\n\t\t\tif (Dex.getTemplate(template.prevo).prevo) {\r\n\t\t\t\tsetStage++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst prevo = Dex.getTemplate(crossTemplate.prevo);\r\n\t\tif (crossTemplate.prevo) {\r\n\t\t\tcrossStage++;\r\n\t\t\tif (prevo.prevo) {\r\n\t\t\t\tcrossStage++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (setStage + 1 !== crossStage) {\r\n\t\t\treturn this.errorReply(`Error: Cross evolution must follow evolutionary stages. (${template.species} is Stage ${setStage} and can only cross evolve to Stage ${setStage + 1})`);\r\n\t\t}\r\n\t\tconst mixedTemplate = Dex.deepClone(template);\r\n\t\tmixedTemplate.abilities = Dex.deepClone(crossTemplate.abilities);\r\n\t\tmixedTemplate.baseStats = Dex.deepClone(mixedTemplate.baseStats);\r\n\t\tlet statName: StatName;\r\n\t\tfor (statName in template.baseStats) {\r\n\t\t\tmixedTemplate.baseStats[statName] += crossTemplate.baseStats[statName] - prevo.baseStats[statName];\r\n\t\t}\r\n\t\tmixedTemplate.types = [template.types[0]];\r\n\t\tif (template.types[1]) mixedTemplate.types.push(template.types[1]);\r\n\t\tif (crossTemplate.types[0] !== prevo.types[0]) mixedTemplate.types[0] = crossTemplate.types[0];\r\n\t\tif (crossTemplate.types[1] !== prevo.types[1]) {\r\n\t\t\tmixedTemplate.types[1] = crossTemplate.types[1] || crossTemplate.types[0];\r\n\t\t}\r\n\t\tif (mixedTemplate.types[0] === mixedTemplate.types[1]) mixedTemplate.types = [mixedTemplate.types[0]];\r\n\t\tmixedTemplate.weighthg += crossTemplate.weighthg - prevo.weighthg;\r\n\t\tif (mixedTemplate.weighthg < 1) {\r\n\t\t\tmixedTemplate.weighthg = 1;\r\n\t\t}\r\n\t\tfor (const stat in mixedTemplate.baseStats) {\r\n\t\t\tif (mixedTemplate.baseStats[stat] < 1 || mixedTemplate.baseStats[stat] > 255) {\r\n\t\t\t\tthis.errorReply(`Warning: This Cross Evolution cannot happen since a stat goes below 0 or above 255.`);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tmixedTemplate.tier = \"CE\";\r\n\t\tlet weighthit = 20;\r\n\t\tif (mixedTemplate.weighthg >= 2000) {\r\n\t\t\tweighthit = 120;\r\n\t\t} else if (mixedTemplate.weighthg >= 1000) {\r\n\t\t\tweighthit = 100;\r\n\t\t} else if (mixedTemplate.weighthg >= 500) {\r\n\t\t\tweighthit = 80;\r\n\t\t} else if (mixedTemplate.weighthg >= 250) {\r\n\t\t\tweighthit = 60;\r\n\t\t} else if (mixedTemplate.weighthg >= 100) {\r\n\t\t\tweighthit = 40;\r\n\t\t}\r\n\t\tconst details: {[k: string]: string} = {\r\n\t\t\t\"Dex#\": mixedTemplate.num,\r\n\t\t\tGen: mixedTemplate.gen,\r\n\t\t\tHeight: mixedTemplate.heightm + \" m\",\r\n\t\t\tWeight: mixedTemplate.weighthg / 10 + \" kg <em>(\" + weighthit + \" BP)</em>\",\r\n\t\t\t\"Dex Colour\": mixedTemplate.color,\r\n\t\t};\r\n\t\tif (mixedTemplate.eggGroups) details[\"Egg Group(s)\"] = mixedTemplate.eggGroups.join(\", \");\r\n\t\tdetails['<font color=\"#686868\">Does Not Evolve</font>'] = \"\";\r\n\t\tthis.sendReply(`|raw|${Chat.getDataPokemonHTML(mixedTemplate)}`);\r\n\t\tthis.sendReply('|raw|<font size=\"1\">' + Object.keys(details).map(detail => {\r\n\t\t\tif (details[detail] === '') return detail;\r\n\t\t\treturn '<font color=\"#686868\">' + detail + ':</font> ' + details[detail];\r\n\t\t}).join(\"&nbsp;|&ThickSpace;\") + '</font>');\r\n\t},\r\n\tcrossevolvehelp: [\"/crossevo <base pokemon>, <evolved pokemon> - Shows the type and stats for the Cross Evolved Pokemon.\"],\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
